/***************************************************************************//**
* \file cyip_videoss.h
*
* \brief
* VIDEOSS IP definitions
*
* \note
* Generator version: 1.6.0.453
* Database revision: TVIIC2D6M_B0CFR_MTO
*
********************************************************************************
* \copyright
* Copyright 2016-2021, Cypress Semiconductor Corporation. All rights reserved.
* You may use this file only in accordance with the license, terms, conditions,
* disclaimers, and limitations in the end user license agreement accompanying
* the software package with which this file was provided.
*******************************************************************************/

#ifndef _CYIP_VIDEOSS_H_
#define _CYIP_VIDEOSS_H_

#include "cyip_headers.h"

/*******************************************************************************
*                                   VIDEOSS
*******************************************************************************/

#define VIDEOSS_SUBSS_VIDEOSSCFG_SECTION_SIZE   0x00000400UL
#define VIDEOSS_SUBSS_VRAM_SECTION_SIZE         0x00000400UL
#define VIDEOSS_SUBSS_GFX2D_GFX2DCFG_SECTION_SIZE 0x00000400UL
#define VIDEOSS_SUBSS_GFX2D_CMDSEQ_SECTION_SIZE 0x00000400UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_BLITENGCFG_SECTION_SIZE 0x00004000UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHSRC_SECTION_SIZE 0x00000400UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHDST_SECTION_SIZE 0x00000400UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHMASK_SECTION_SIZE 0x00000400UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_ROP_SECTION_SIZE 0x00000400UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_CLUT_SECTION_SIZE 0x00000800UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_MATRIX_SECTION_SIZE 0x00000400UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_GPSCALER_SECTION_SIZE 0x00000400UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_BLITBLEND_SECTION_SIZE 0x00000400UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_STORE_SECTION_SIZE 0x00000400UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_SECTION_SIZE 0x00010000UL
#define VIDEOSS_SUBSS_GFX2D_DRAWENG_SECTION_SIZE 0x00000400UL
#define VIDEOSS_SUBSS_GFX2D_SECTION_SIZE        0x00040000UL
#define VIDEOSS_SUBSS_SECTION_SIZE              0x00080000UL
#define VIDEOSS_VIDEOIO_SUBIO_VIDEOIOCFG_SECTION_SIZE 0x00000400UL
#define VIDEOSS_VIDEOIO_SUBIO_FRAMEDUMP_SECTION_SIZE 0x00000400UL
#define VIDEOSS_VIDEOIO_SUBIO_CAPENG0_FRAMECAP_SECTION_SIZE 0x00000400UL
#define VIDEOSS_VIDEOIO_SUBIO_CAPENG0_SECTION_SIZE 0x00001000UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_COMPENGCFG_SECTION_SIZE 0x00002000UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_CONSTFRAME0_SECTION_SIZE 0x00000400UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_EXTDST0_SECTION_SIZE 0x00000400UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_CONSTFRAME4_SECTION_SIZE 0x00000400UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_EXTDST4_SECTION_SIZE 0x00000400UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_CONSTFRAME1_SECTION_SIZE 0x00000400UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_EXTDST1_SECTION_SIZE 0x00000400UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_CONSTFRAME5_SECTION_SIZE 0x00000400UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_EXTDST5_SECTION_SIZE 0x00000400UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_EXTSRC4_SECTION_SIZE 0x00000400UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_STORE4_SECTION_SIZE 0x00000400UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_SECTION_SIZE 0x00000400UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHDECODE4_SECTION_SIZE 0x00000400UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHECO4_SECTION_SIZE 0x00000400UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_SECTION_SIZE 0x00000400UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHECO1_SECTION_SIZE 0x00000400UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_SECTION_SIZE 0x00000400UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHDECODE0_SECTION_SIZE 0x00000400UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_GAMMACOR4_SECTION_SIZE 0x00000400UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_MATRIX4_SECTION_SIZE 0x00000400UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_GPSCALER4_SECTION_SIZE 0x00000400UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_HISTOGRAM4_SECTION_SIZE 0x00000400UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_LAYERBLEND1_SECTION_SIZE 0x00000400UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_LAYERBLEND2_SECTION_SIZE 0x00000400UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_LAYERBLEND3_SECTION_SIZE 0x00000400UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_LAYERBLEND4_SECTION_SIZE 0x00000400UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_LAYERBLEND5_SECTION_SIZE 0x00000400UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_EXTSRC8_SECTION_SIZE 0x00000400UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_SECTION_SIZE 0x00010000UL
#define VIDEOSS_VIDEOIO_SUBIO_SECTION_SIZE      0x00020000UL
#define VIDEOSS_VIDEOIO_DISENG0_DISENGCFG0_SECTION_SIZE 0x00000400UL
#define VIDEOSS_VIDEOIO_DISENG0_SIG0_SECTION_SIZE 0x00000400UL
#define VIDEOSS_VIDEOIO_DISENG0_FRAMEGEN0_SECTION_SIZE 0x00000400UL
#define VIDEOSS_VIDEOIO_DISENG0_GAMMACOR0_SECTION_SIZE 0x00000400UL
#define VIDEOSS_VIDEOIO_DISENG0_DITHER0_SECTION_SIZE 0x00000400UL
#define VIDEOSS_VIDEOIO_DISENG0_TCON0_SECTION_SIZE 0x00000800UL
#define VIDEOSS_VIDEOIO_DISENG0_SECTION_SIZE    0x00004000UL
#define VIDEOSS_VIDEOIO_DISENG1_DISENGCFG1_SECTION_SIZE 0x00000400UL
#define VIDEOSS_VIDEOIO_DISENG1_SIG1_SECTION_SIZE 0x00000400UL
#define VIDEOSS_VIDEOIO_DISENG1_FRAMEGEN1_SECTION_SIZE 0x00000400UL
#define VIDEOSS_VIDEOIO_DISENG1_GAMMACOR1_SECTION_SIZE 0x00000400UL
#define VIDEOSS_VIDEOIO_DISENG1_DITHER1_SECTION_SIZE 0x00000400UL
#define VIDEOSS_VIDEOIO_DISENG1_TCON1_SECTION_SIZE 0x00000800UL
#define VIDEOSS_VIDEOIO_DISENG1_SECTION_SIZE    0x00004000UL
#define VIDEOSS_VIDEOIO_SECTION_SIZE            0x00040000UL
#define VIDEOSS_FPDLINK0_SECTION_SIZE           0x00000400UL
#define VIDEOSS_FPDLINK1_SECTION_SIZE           0x00000400UL
#define VIDEOSS_MIPICSI_MIPICSI_STRUCT_MIPICSI_WRAP_SECTION_SIZE 0x00000100UL
#define VIDEOSS_MIPICSI_MIPICSI_STRUCT_MIPICSI_CORE_SECTION_SIZE 0x00000200UL
#define VIDEOSS_MIPICSI_MIPICSI_STRUCT_SECTION_SIZE 0x00000400UL
#define VIDEOSS_MIPICSI_SECTION_SIZE            0x00000400UL
#define VIDEOSS_INFRA_VRPU_VRPU_STRUCT_SECTION_SIZE 0x00000040UL
#define VIDEOSS_INFRA_VRPU_SECTION_SIZE         0x00004000UL
#define VIDEOSS_INFRA_GFX_MPU_RD_SECTION_SIZE   0x00000400UL
#define VIDEOSS_INFRA_GFX_MPU_WR_SECTION_SIZE   0x00000400UL
#define VIDEOSS_INFRA_SECTION_SIZE              0x00010000UL
#define VIDEOSS_SECTION_SIZE                    0x00100000UL

/**
  * \brief IP Control Register (VIDEOSS_VIDEOSSCFG_CTL)
  */
typedef struct stc_VIDEOSS_VIDEOSSCFG_CTL_field {
  uint32_t                         :31;
  uint32_t                         u1ENABLED:1;
} stc_VIDEOSS_VIDEOSSCFG_CTL_field_t;

typedef union un_VIDEOSS_VIDEOSSCFG_CTL {
  uint32_t                         u32Register;
  stc_VIDEOSS_VIDEOSSCFG_CTL_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_VIDEOSSCFG_CTL_t;

/**
  * \brief IP Control Register for Graphics 2D Core (VIDEOSS_VIDEOSSCFG_GFX2D_CTL)
  */
typedef struct stc_VIDEOSS_VIDEOSSCFG_GFX2D_CTL_field {
  uint32_t                         :31;
  uint32_t                         u1GFX2D_ENABLED:1;
} stc_VIDEOSS_VIDEOSSCFG_GFX2D_CTL_field_t;

typedef union un_VIDEOSS_VIDEOSSCFG_GFX2D_CTL {
  uint32_t                         u32Register;
  stc_VIDEOSS_VIDEOSSCFG_GFX2D_CTL_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_VIDEOSSCFG_GFX2D_CTL_t;

/**
  * \brief IP and Design Release Identification (VIDEOSS_VIDEOSSCFG_IPIDENTIFIER)
  */
typedef struct stc_VIDEOSS_VIDEOSSCFG_IPIDENTIFIER_field {
  uint32_t                         u1IPPLATFORM:1;
  uint32_t                         :3;
  uint32_t                         u2IPNAME:2;
  uint32_t                         :2;
  uint32_t                         u2IPVERSION:2;
  uint32_t                         :2;
  uint32_t                         u2IPPHASE:2;
  uint32_t                         :2;
  uint32_t                         u2IPMATURITY:2;
  uint32_t                         :2;
  uint32_t                         u8IPRELEASE:8;
  uint32_t                         :4;
} stc_VIDEOSS_VIDEOSSCFG_IPIDENTIFIER_field_t;

typedef union un_VIDEOSS_VIDEOSSCFG_IPIDENTIFIER {
  uint32_t                         u32Register;
  stc_VIDEOSS_VIDEOSSCFG_IPIDENTIFIER_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_VIDEOSSCFG_IPIDENTIFIER_t;

/**
  * \brief IP Design Configuration (VIDEOSS_VIDEOSSCFG_IPCONFIGURATION)
  */
typedef struct stc_VIDEOSS_VIDEOSSCFG_IPCONFIGURATION_field {
  uint32_t                         u1GFX2D:1;
  uint32_t                         u1MIPICSI:1;
  uint32_t                         u1FPDLINK0:1;
  uint32_t                         u1FPDLINK1:1;
  uint32_t                         u1LCDBUSIF:1;
  uint32_t                         u1DISPLAY1:1;
  uint32_t                         u1CAPTURE0:1;
  uint32_t                         u1WARPING:1;
  uint32_t                         u1TCON:1;
  uint32_t                         u1VRAM:1;
  uint32_t                         :6;
  uint32_t                         u4VRAMSIZE:4;
  uint32_t                         :12;
} stc_VIDEOSS_VIDEOSSCFG_IPCONFIGURATION_field_t;

typedef union un_VIDEOSS_VIDEOSSCFG_IPCONFIGURATION {
  uint32_t                         u32Register;
  stc_VIDEOSS_VIDEOSSCFG_IPCONFIGURATION_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_VIDEOSSCFG_IPCONFIGURATION_t;

/**
  * \brief Display 0 Clock Configuration Register (VIDEOSS_VIDEOSSCFG_CLKDSP0CFG)
  */
typedef struct stc_VIDEOSS_VIDEOSSCFG_CLKDSP0CFG_field {
  uint32_t                         u2DIVVAL0:2;
  uint32_t                         :2;
  uint32_t                         u1TTLCLKINV0:1;
  uint32_t                         :27;
} stc_VIDEOSS_VIDEOSSCFG_CLKDSP0CFG_field_t;

typedef union un_VIDEOSS_VIDEOSSCFG_CLKDSP0CFG {
  uint32_t                         u32Register;
  stc_VIDEOSS_VIDEOSSCFG_CLKDSP0CFG_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_VIDEOSSCFG_CLKDSP0CFG_t;

/**
  * \brief Display 1 Clock Configuration Register (VIDEOSS_VIDEOSSCFG_CLKDSP1CFG)
  */
typedef struct stc_VIDEOSS_VIDEOSSCFG_CLKDSP1CFG_field {
  uint32_t                         u2DIVVAL1:2;
  uint32_t                         :2;
  uint32_t                         u1TTLCLKINV1:1;
  uint32_t                         :27;
} stc_VIDEOSS_VIDEOSSCFG_CLKDSP1CFG_field_t;

typedef union un_VIDEOSS_VIDEOSSCFG_CLKDSP1CFG {
  uint32_t                         u32Register;
  stc_VIDEOSS_VIDEOSSCFG_CLKDSP1CFG_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_VIDEOSSCFG_CLKDSP1CFG_t;

/**
  * \brief Capture 0 Configuration (VIDEOSS_VIDEOSSCFG_CAP0CFG)
  */
typedef struct stc_VIDEOSS_VIDEOSSCFG_CAP0CFG_field {
  uint32_t                         u2CAP0SRC:2;
  uint32_t                         :30;
} stc_VIDEOSS_VIDEOSSCFG_CAP0CFG_field_t;

typedef union un_VIDEOSS_VIDEOSSCFG_CAP0CFG {
  uint32_t                         u32Register;
  stc_VIDEOSS_VIDEOSSCFG_CAP0CFG_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_VIDEOSSCFG_CAP0CFG_t;

/**
  * \brief FPDLink Configuration (VIDEOSS_VIDEOSSCFG_FPDLINKCFG)
  */
typedef struct stc_VIDEOSS_VIDEOSSCFG_FPDLINKCFG_field {
  uint32_t                         u1FPDLINKSEL:1;
  uint32_t                         :31;
} stc_VIDEOSS_VIDEOSSCFG_FPDLINKCFG_field_t;

typedef union un_VIDEOSS_VIDEOSSCFG_FPDLINKCFG {
  uint32_t                         u32Register;
  stc_VIDEOSS_VIDEOSSCFG_FPDLINKCFG_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_VIDEOSSCFG_FPDLINKCFG_t;

/**
  * \brief Enable for Display Engine 0 (VIDEOSS_VIDEOSSCFG_DSP0_CTL)
  */
typedef struct stc_VIDEOSS_VIDEOSSCFG_DSP0_CTL_field {
  uint32_t                         :31;
  uint32_t                         u1DSP0_ENABLED:1;
} stc_VIDEOSS_VIDEOSSCFG_DSP0_CTL_field_t;

typedef union un_VIDEOSS_VIDEOSSCFG_DSP0_CTL {
  uint32_t                         u32Register;
  stc_VIDEOSS_VIDEOSSCFG_DSP0_CTL_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_VIDEOSSCFG_DSP0_CTL_t;

/**
  * \brief Enable for Display Engine 1 (VIDEOSS_VIDEOSSCFG_DSP1_CTL)
  */
typedef struct stc_VIDEOSS_VIDEOSSCFG_DSP1_CTL_field {
  uint32_t                         :31;
  uint32_t                         u1DSP1_ENABLED:1;
} stc_VIDEOSS_VIDEOSSCFG_DSP1_CTL_field_t;

typedef union un_VIDEOSS_VIDEOSSCFG_DSP1_CTL {
  uint32_t                         u32Register;
  stc_VIDEOSS_VIDEOSSCFG_DSP1_CTL_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_VIDEOSSCFG_DSP1_CTL_t;



/**
  * \brief N/A (VIDEOSS_VRAM_ARBITER_PRIORITY)
  */
typedef struct stc_VIDEOSS_VRAM_ARBITER_PRIORITY_field {
  uint32_t                         u2PRIORITY_WR0:2;
  uint32_t                         u2PRIORITY_WR1:2;
  uint32_t                         :4;
  uint32_t                         u2PRIORITY_RD0:2;
  uint32_t                         :2;
  uint32_t                         u2PRIORITY_RD1:2;
  uint32_t                         :2;
  uint32_t                         u2PRIORITY_RD2:2;
  uint32_t                         :2;
  uint32_t                         u2PRIORITY_RD3:2;
  uint32_t                         :2;
  uint32_t                         u2PRIORITY_RD4:2;
  uint32_t                         :6;
} stc_VIDEOSS_VRAM_ARBITER_PRIORITY_field_t;

typedef union un_VIDEOSS_VRAM_ARBITER_PRIORITY {
  uint32_t                         u32Register;
  stc_VIDEOSS_VRAM_ARBITER_PRIORITY_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_VRAM_ARBITER_PRIORITY_t;



/**
  * \brief Interrupt cause register (VIDEOSS_GFX2DCFG_INTR_GFX2D)
  */
typedef struct stc_VIDEOSS_GFX2DCFG_INTR_GFX2D_field {
  uint32_t                         u24INTR_GFX2D:24;
  uint32_t                         :8;
} stc_VIDEOSS_GFX2DCFG_INTR_GFX2D_field_t;

typedef union un_VIDEOSS_GFX2DCFG_INTR_GFX2D {
  uint32_t                         u32Register;
  stc_VIDEOSS_GFX2DCFG_INTR_GFX2D_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_GFX2DCFG_INTR_GFX2D_t;

/**
  * \brief Interrupt set register (VIDEOSS_GFX2DCFG_INTR_GFX2D_SET)
  */
typedef struct stc_VIDEOSS_GFX2DCFG_INTR_GFX2D_SET_field {
  uint32_t                         u24INTR_GFX2D_SET:24;
  uint32_t                         :8;
} stc_VIDEOSS_GFX2DCFG_INTR_GFX2D_SET_field_t;

typedef union un_VIDEOSS_GFX2DCFG_INTR_GFX2D_SET {
  uint32_t                         u32Register;
  stc_VIDEOSS_GFX2DCFG_INTR_GFX2D_SET_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_GFX2DCFG_INTR_GFX2D_SET_t;

/**
  * \brief Interrupt mask register (VIDEOSS_GFX2DCFG_INTR_GFX2D_MASK)
  */
typedef struct stc_VIDEOSS_GFX2DCFG_INTR_GFX2D_MASK_field {
  uint32_t                         u24INTR_GFX2D_MASK:24;
  uint32_t                         :8;
} stc_VIDEOSS_GFX2DCFG_INTR_GFX2D_MASK_field_t;

typedef union un_VIDEOSS_GFX2DCFG_INTR_GFX2D_MASK {
  uint32_t                         u32Register;
  stc_VIDEOSS_GFX2DCFG_INTR_GFX2D_MASK_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_GFX2DCFG_INTR_GFX2D_MASK_t;

/**
  * \brief Interrupt masked register (VIDEOSS_GFX2DCFG_INTR_GFX2D_MASKED)
  */
typedef struct stc_VIDEOSS_GFX2DCFG_INTR_GFX2D_MASKED_field {
  uint32_t                         u24INTR_GFX2D_MASKED:24;
  uint32_t                         :8;
} stc_VIDEOSS_GFX2DCFG_INTR_GFX2D_MASKED_field_t;

typedef union un_VIDEOSS_GFX2DCFG_INTR_GFX2D_MASKED {
  uint32_t                         u32Register;
  stc_VIDEOSS_GFX2DCFG_INTR_GFX2D_MASKED_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_GFX2DCFG_INTR_GFX2D_MASKED_t;

/**
  * \brief Interrupt cause register for CmdSeq (VIDEOSS_GFX2DCFG_INTR_CMDSEQ)
  */
typedef struct stc_VIDEOSS_GFX2DCFG_INTR_CMDSEQ_field {
  uint32_t                         u22INTR_CMDSEQ:22;
  uint32_t                         :10;
} stc_VIDEOSS_GFX2DCFG_INTR_CMDSEQ_field_t;

typedef union un_VIDEOSS_GFX2DCFG_INTR_CMDSEQ {
  uint32_t                         u32Register;
  stc_VIDEOSS_GFX2DCFG_INTR_CMDSEQ_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_GFX2DCFG_INTR_CMDSEQ_t;

/**
  * \brief Interrupt set register (VIDEOSS_GFX2DCFG_INTR_CMDSEQ_SET)
  */
typedef struct stc_VIDEOSS_GFX2DCFG_INTR_CMDSEQ_SET_field {
  uint32_t                         u22INTR_CMDSEQ_SET:22;
  uint32_t                         :10;
} stc_VIDEOSS_GFX2DCFG_INTR_CMDSEQ_SET_field_t;

typedef union un_VIDEOSS_GFX2DCFG_INTR_CMDSEQ_SET {
  uint32_t                         u32Register;
  stc_VIDEOSS_GFX2DCFG_INTR_CMDSEQ_SET_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_GFX2DCFG_INTR_CMDSEQ_SET_t;

/**
  * \brief General purpose config memory (VIDEOSS_GFX2DCFG_GENERALPURPOSE)
  */
typedef struct stc_VIDEOSS_GFX2DCFG_GENERALPURPOSE_field {
  uint32_t                         u32GENERALPURPOSE:32;
} stc_VIDEOSS_GFX2DCFG_GENERALPURPOSE_field_t;

typedef union un_VIDEOSS_GFX2DCFG_GENERALPURPOSE {
  uint32_t                         u32Register;
  stc_VIDEOSS_GFX2DCFG_GENERALPURPOSE_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_GFX2DCFG_GENERALPURPOSE_t;



/**
  * \brief Task buffer 0 address register (VIDEOSS_CMDSEQ_TASKBUFFERADDRESS0)
  */
typedef struct stc_VIDEOSS_CMDSEQ_TASKBUFFERADDRESS0_field {
  uint32_t                         :3;
  uint32_t                         u29ADDRESSTB0:29;
} stc_VIDEOSS_CMDSEQ_TASKBUFFERADDRESS0_field_t;

typedef union un_VIDEOSS_CMDSEQ_TASKBUFFERADDRESS0 {
  uint32_t                         u32Register;
  stc_VIDEOSS_CMDSEQ_TASKBUFFERADDRESS0_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_CMDSEQ_TASKBUFFERADDRESS0_t;

/**
  * \brief Task buffer 0 size register (VIDEOSS_CMDSEQ_TASKBUFFERSIZE0)
  */
typedef struct stc_VIDEOSS_CMDSEQ_TASKBUFFERSIZE0_field {
  uint32_t                         u16SIZETB0:16;
  uint32_t                         :16;
} stc_VIDEOSS_CMDSEQ_TASKBUFFERSIZE0_field_t;

typedef union un_VIDEOSS_CMDSEQ_TASKBUFFERSIZE0 {
  uint32_t                         u32Register;
  stc_VIDEOSS_CMDSEQ_TASKBUFFERSIZE0_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_CMDSEQ_TASKBUFFERSIZE0_t;

/**
  * \brief Task buffer 0 stop offset register (VIDEOSS_CMDSEQ_TASKBUFFERSTOPOFFSET0)
  */
typedef struct stc_VIDEOSS_CMDSEQ_TASKBUFFERSTOPOFFSET0_field {
  uint32_t                         u16STOPOFFSETTB0:16;
  uint32_t                         :16;
} stc_VIDEOSS_CMDSEQ_TASKBUFFERSTOPOFFSET0_field_t;

typedef union un_VIDEOSS_CMDSEQ_TASKBUFFERSTOPOFFSET0 {
  uint32_t                         u32Register;
  stc_VIDEOSS_CMDSEQ_TASKBUFFERSTOPOFFSET0_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_CMDSEQ_TASKBUFFERSTOPOFFSET0_t;

/**
  * \brief Task buffer 1 address register (VIDEOSS_CMDSEQ_TASKBUFFERADDRESS1)
  */
typedef struct stc_VIDEOSS_CMDSEQ_TASKBUFFERADDRESS1_field {
  uint32_t                         :3;
  uint32_t                         u29ADDRESSTB1:29;
} stc_VIDEOSS_CMDSEQ_TASKBUFFERADDRESS1_field_t;

typedef union un_VIDEOSS_CMDSEQ_TASKBUFFERADDRESS1 {
  uint32_t                         u32Register;
  stc_VIDEOSS_CMDSEQ_TASKBUFFERADDRESS1_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_CMDSEQ_TASKBUFFERADDRESS1_t;

/**
  * \brief Task buffer 1 size register (VIDEOSS_CMDSEQ_TASKBUFFERSIZE1)
  */
typedef struct stc_VIDEOSS_CMDSEQ_TASKBUFFERSIZE1_field {
  uint32_t                         u16SIZETB1:16;
  uint32_t                         :16;
} stc_VIDEOSS_CMDSEQ_TASKBUFFERSIZE1_field_t;

typedef union un_VIDEOSS_CMDSEQ_TASKBUFFERSIZE1 {
  uint32_t                         u32Register;
  stc_VIDEOSS_CMDSEQ_TASKBUFFERSIZE1_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_CMDSEQ_TASKBUFFERSIZE1_t;

/**
  * \brief Task buffer 1 stop offset register (VIDEOSS_CMDSEQ_TASKBUFFERSTOPOFFSET1)
  */
typedef struct stc_VIDEOSS_CMDSEQ_TASKBUFFERSTOPOFFSET1_field {
  uint32_t                         u16STOPOFFSETTB1:16;
  uint32_t                         :16;
} stc_VIDEOSS_CMDSEQ_TASKBUFFERSTOPOFFSET1_field_t;

typedef union un_VIDEOSS_CMDSEQ_TASKBUFFERSTOPOFFSET1 {
  uint32_t                         u32Register;
  stc_VIDEOSS_CMDSEQ_TASKBUFFERSTOPOFFSET1_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_CMDSEQ_TASKBUFFERSTOPOFFSET1_t;

/**
  * \brief Task buffer 2 address register (VIDEOSS_CMDSEQ_TASKBUFFERADDRESS2)
  */
typedef struct stc_VIDEOSS_CMDSEQ_TASKBUFFERADDRESS2_field {
  uint32_t                         :3;
  uint32_t                         u29ADDRESSTB2:29;
} stc_VIDEOSS_CMDSEQ_TASKBUFFERADDRESS2_field_t;

typedef union un_VIDEOSS_CMDSEQ_TASKBUFFERADDRESS2 {
  uint32_t                         u32Register;
  stc_VIDEOSS_CMDSEQ_TASKBUFFERADDRESS2_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_CMDSEQ_TASKBUFFERADDRESS2_t;

/**
  * \brief Task buffer 2 size register (VIDEOSS_CMDSEQ_TASKBUFFERSIZE2)
  */
typedef struct stc_VIDEOSS_CMDSEQ_TASKBUFFERSIZE2_field {
  uint32_t                         u16SIZETB2:16;
  uint32_t                         :16;
} stc_VIDEOSS_CMDSEQ_TASKBUFFERSIZE2_field_t;

typedef union un_VIDEOSS_CMDSEQ_TASKBUFFERSIZE2 {
  uint32_t                         u32Register;
  stc_VIDEOSS_CMDSEQ_TASKBUFFERSIZE2_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_CMDSEQ_TASKBUFFERSIZE2_t;

/**
  * \brief Task buffer 2 stop offset register (VIDEOSS_CMDSEQ_TASKBUFFERSTOPOFFSET2)
  */
typedef struct stc_VIDEOSS_CMDSEQ_TASKBUFFERSTOPOFFSET2_field {
  uint32_t                         u16STOPOFFSETTB2:16;
  uint32_t                         :16;
} stc_VIDEOSS_CMDSEQ_TASKBUFFERSTOPOFFSET2_field_t;

typedef union un_VIDEOSS_CMDSEQ_TASKBUFFERSTOPOFFSET2 {
  uint32_t                         u32Register;
  stc_VIDEOSS_CMDSEQ_TASKBUFFERSTOPOFFSET2_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_CMDSEQ_TASKBUFFERSTOPOFFSET2_t;

/**
  * \brief Task buffer 3 address register (VIDEOSS_CMDSEQ_TASKBUFFERADDRESS3)
  */
typedef struct stc_VIDEOSS_CMDSEQ_TASKBUFFERADDRESS3_field {
  uint32_t                         :3;
  uint32_t                         u29ADDRESSTB3:29;
} stc_VIDEOSS_CMDSEQ_TASKBUFFERADDRESS3_field_t;

typedef union un_VIDEOSS_CMDSEQ_TASKBUFFERADDRESS3 {
  uint32_t                         u32Register;
  stc_VIDEOSS_CMDSEQ_TASKBUFFERADDRESS3_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_CMDSEQ_TASKBUFFERADDRESS3_t;

/**
  * \brief Task buffer 3 size register (VIDEOSS_CMDSEQ_TASKBUFFERSIZE3)
  */
typedef struct stc_VIDEOSS_CMDSEQ_TASKBUFFERSIZE3_field {
  uint32_t                         u16SIZETB3:16;
  uint32_t                         :16;
} stc_VIDEOSS_CMDSEQ_TASKBUFFERSIZE3_field_t;

typedef union un_VIDEOSS_CMDSEQ_TASKBUFFERSIZE3 {
  uint32_t                         u32Register;
  stc_VIDEOSS_CMDSEQ_TASKBUFFERSIZE3_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_CMDSEQ_TASKBUFFERSIZE3_t;

/**
  * \brief Task buffer 3 stop offset register (VIDEOSS_CMDSEQ_TASKBUFFERSTOPOFFSET3)
  */
typedef struct stc_VIDEOSS_CMDSEQ_TASKBUFFERSTOPOFFSET3_field {
  uint32_t                         u16STOPOFFSETTB3:16;
  uint32_t                         :16;
} stc_VIDEOSS_CMDSEQ_TASKBUFFERSTOPOFFSET3_field_t;

typedef union un_VIDEOSS_CMDSEQ_TASKBUFFERSTOPOFFSET3 {
  uint32_t                         u32Register;
  stc_VIDEOSS_CMDSEQ_TASKBUFFERSTOPOFFSET3_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_CMDSEQ_TASKBUFFERSTOPOFFSET3_t;

/**
  * \brief Task buffer 4 address register (VIDEOSS_CMDSEQ_TASKBUFFERADDRESS4)
  */
typedef struct stc_VIDEOSS_CMDSEQ_TASKBUFFERADDRESS4_field {
  uint32_t                         :3;
  uint32_t                         u29ADDRESSTB4:29;
} stc_VIDEOSS_CMDSEQ_TASKBUFFERADDRESS4_field_t;

typedef union un_VIDEOSS_CMDSEQ_TASKBUFFERADDRESS4 {
  uint32_t                         u32Register;
  stc_VIDEOSS_CMDSEQ_TASKBUFFERADDRESS4_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_CMDSEQ_TASKBUFFERADDRESS4_t;

/**
  * \brief Task buffer 4 size register (VIDEOSS_CMDSEQ_TASKBUFFERSIZE4)
  */
typedef struct stc_VIDEOSS_CMDSEQ_TASKBUFFERSIZE4_field {
  uint32_t                         u16SIZETB4:16;
  uint32_t                         :16;
} stc_VIDEOSS_CMDSEQ_TASKBUFFERSIZE4_field_t;

typedef union un_VIDEOSS_CMDSEQ_TASKBUFFERSIZE4 {
  uint32_t                         u32Register;
  stc_VIDEOSS_CMDSEQ_TASKBUFFERSIZE4_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_CMDSEQ_TASKBUFFERSIZE4_t;

/**
  * \brief Task buffer 4 stop offset register (VIDEOSS_CMDSEQ_TASKBUFFERSTOPOFFSET4)
  */
typedef struct stc_VIDEOSS_CMDSEQ_TASKBUFFERSTOPOFFSET4_field {
  uint32_t                         u16STOPOFFSETTB4:16;
  uint32_t                         :16;
} stc_VIDEOSS_CMDSEQ_TASKBUFFERSTOPOFFSET4_field_t;

typedef union un_VIDEOSS_CMDSEQ_TASKBUFFERSTOPOFFSET4 {
  uint32_t                         u32Register;
  stc_VIDEOSS_CMDSEQ_TASKBUFFERSTOPOFFSET4_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_CMDSEQ_TASKBUFFERSTOPOFFSET4_t;

/**
  * \brief Task buffer 5 address register (VIDEOSS_CMDSEQ_TASKBUFFERADDRESS5)
  */
typedef struct stc_VIDEOSS_CMDSEQ_TASKBUFFERADDRESS5_field {
  uint32_t                         :3;
  uint32_t                         u29ADDRESSTB5:29;
} stc_VIDEOSS_CMDSEQ_TASKBUFFERADDRESS5_field_t;

typedef union un_VIDEOSS_CMDSEQ_TASKBUFFERADDRESS5 {
  uint32_t                         u32Register;
  stc_VIDEOSS_CMDSEQ_TASKBUFFERADDRESS5_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_CMDSEQ_TASKBUFFERADDRESS5_t;

/**
  * \brief Task buffer 5 size register (VIDEOSS_CMDSEQ_TASKBUFFERSIZE5)
  */
typedef struct stc_VIDEOSS_CMDSEQ_TASKBUFFERSIZE5_field {
  uint32_t                         u16SIZETB5:16;
  uint32_t                         :16;
} stc_VIDEOSS_CMDSEQ_TASKBUFFERSIZE5_field_t;

typedef union un_VIDEOSS_CMDSEQ_TASKBUFFERSIZE5 {
  uint32_t                         u32Register;
  stc_VIDEOSS_CMDSEQ_TASKBUFFERSIZE5_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_CMDSEQ_TASKBUFFERSIZE5_t;

/**
  * \brief Task buffer 5 stop offset register (VIDEOSS_CMDSEQ_TASKBUFFERSTOPOFFSET5)
  */
typedef struct stc_VIDEOSS_CMDSEQ_TASKBUFFERSTOPOFFSET5_field {
  uint32_t                         u16STOPOFFSETTB5:16;
  uint32_t                         :16;
} stc_VIDEOSS_CMDSEQ_TASKBUFFERSTOPOFFSET5_field_t;

typedef union un_VIDEOSS_CMDSEQ_TASKBUFFERSTOPOFFSET5 {
  uint32_t                         u32Register;
  stc_VIDEOSS_CMDSEQ_TASKBUFFERSTOPOFFSET5_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_CMDSEQ_TASKBUFFERSTOPOFFSET5_t;

/**
  * \brief Task buffer 6 address register (VIDEOSS_CMDSEQ_TASKBUFFERADDRESS6)
  */
typedef struct stc_VIDEOSS_CMDSEQ_TASKBUFFERADDRESS6_field {
  uint32_t                         :3;
  uint32_t                         u29ADDRESSTB6:29;
} stc_VIDEOSS_CMDSEQ_TASKBUFFERADDRESS6_field_t;

typedef union un_VIDEOSS_CMDSEQ_TASKBUFFERADDRESS6 {
  uint32_t                         u32Register;
  stc_VIDEOSS_CMDSEQ_TASKBUFFERADDRESS6_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_CMDSEQ_TASKBUFFERADDRESS6_t;

/**
  * \brief Task buffer 6 size register (VIDEOSS_CMDSEQ_TASKBUFFERSIZE6)
  */
typedef struct stc_VIDEOSS_CMDSEQ_TASKBUFFERSIZE6_field {
  uint32_t                         u16SIZETB6:16;
  uint32_t                         :16;
} stc_VIDEOSS_CMDSEQ_TASKBUFFERSIZE6_field_t;

typedef union un_VIDEOSS_CMDSEQ_TASKBUFFERSIZE6 {
  uint32_t                         u32Register;
  stc_VIDEOSS_CMDSEQ_TASKBUFFERSIZE6_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_CMDSEQ_TASKBUFFERSIZE6_t;

/**
  * \brief Task buffer 6 stop offset register (VIDEOSS_CMDSEQ_TASKBUFFERSTOPOFFSET6)
  */
typedef struct stc_VIDEOSS_CMDSEQ_TASKBUFFERSTOPOFFSET6_field {
  uint32_t                         u16STOPOFFSETTB6:16;
  uint32_t                         :16;
} stc_VIDEOSS_CMDSEQ_TASKBUFFERSTOPOFFSET6_field_t;

typedef union un_VIDEOSS_CMDSEQ_TASKBUFFERSTOPOFFSET6 {
  uint32_t                         u32Register;
  stc_VIDEOSS_CMDSEQ_TASKBUFFERSTOPOFFSET6_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_CMDSEQ_TASKBUFFERSTOPOFFSET6_t;

/**
  * \brief Task buffer 7 address register (VIDEOSS_CMDSEQ_TASKBUFFERADDRESS7)
  */
typedef struct stc_VIDEOSS_CMDSEQ_TASKBUFFERADDRESS7_field {
  uint32_t                         :3;
  uint32_t                         u29ADDRESSTB7:29;
} stc_VIDEOSS_CMDSEQ_TASKBUFFERADDRESS7_field_t;

typedef union un_VIDEOSS_CMDSEQ_TASKBUFFERADDRESS7 {
  uint32_t                         u32Register;
  stc_VIDEOSS_CMDSEQ_TASKBUFFERADDRESS7_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_CMDSEQ_TASKBUFFERADDRESS7_t;

/**
  * \brief Task buffer 7 size register (VIDEOSS_CMDSEQ_TASKBUFFERSIZE7)
  */
typedef struct stc_VIDEOSS_CMDSEQ_TASKBUFFERSIZE7_field {
  uint32_t                         u16SIZETB7:16;
  uint32_t                         :16;
} stc_VIDEOSS_CMDSEQ_TASKBUFFERSIZE7_field_t;

typedef union un_VIDEOSS_CMDSEQ_TASKBUFFERSIZE7 {
  uint32_t                         u32Register;
  stc_VIDEOSS_CMDSEQ_TASKBUFFERSIZE7_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_CMDSEQ_TASKBUFFERSIZE7_t;

/**
  * \brief Task buffer 7 stop offset register (VIDEOSS_CMDSEQ_TASKBUFFERSTOPOFFSET7)
  */
typedef struct stc_VIDEOSS_CMDSEQ_TASKBUFFERSTOPOFFSET7_field {
  uint32_t                         u16STOPOFFSETTB7:16;
  uint32_t                         :16;
} stc_VIDEOSS_CMDSEQ_TASKBUFFERSTOPOFFSET7_field_t;

typedef union un_VIDEOSS_CMDSEQ_TASKBUFFERSTOPOFFSET7 {
  uint32_t                         u32Register;
  stc_VIDEOSS_CMDSEQ_TASKBUFFERSTOPOFFSET7_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_CMDSEQ_TASKBUFFERSTOPOFFSET7_t;

/**
  * \brief Task buffer 0 execute offset register (VIDEOSS_CMDSEQ_TASKBUFFEREXECOFFSET0)
  */
typedef struct stc_VIDEOSS_CMDSEQ_TASKBUFFEREXECOFFSET0_field {
  uint32_t                         u16EXECOFFSETTB0:16;
  uint32_t                         :16;
} stc_VIDEOSS_CMDSEQ_TASKBUFFEREXECOFFSET0_field_t;

typedef union un_VIDEOSS_CMDSEQ_TASKBUFFEREXECOFFSET0 {
  uint32_t                         u32Register;
  stc_VIDEOSS_CMDSEQ_TASKBUFFEREXECOFFSET0_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_CMDSEQ_TASKBUFFEREXECOFFSET0_t;

/**
  * \brief Task buffer 1 execute offset register (VIDEOSS_CMDSEQ_TASKBUFFEREXECOFFSET1)
  */
typedef struct stc_VIDEOSS_CMDSEQ_TASKBUFFEREXECOFFSET1_field {
  uint32_t                         u16EXECOFFSETTB1:16;
  uint32_t                         :16;
} stc_VIDEOSS_CMDSEQ_TASKBUFFEREXECOFFSET1_field_t;

typedef union un_VIDEOSS_CMDSEQ_TASKBUFFEREXECOFFSET1 {
  uint32_t                         u32Register;
  stc_VIDEOSS_CMDSEQ_TASKBUFFEREXECOFFSET1_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_CMDSEQ_TASKBUFFEREXECOFFSET1_t;

/**
  * \brief Task buffer 2 execute offset register (VIDEOSS_CMDSEQ_TASKBUFFEREXECOFFSET2)
  */
typedef struct stc_VIDEOSS_CMDSEQ_TASKBUFFEREXECOFFSET2_field {
  uint32_t                         u16EXECOFFSETTB2:16;
  uint32_t                         :16;
} stc_VIDEOSS_CMDSEQ_TASKBUFFEREXECOFFSET2_field_t;

typedef union un_VIDEOSS_CMDSEQ_TASKBUFFEREXECOFFSET2 {
  uint32_t                         u32Register;
  stc_VIDEOSS_CMDSEQ_TASKBUFFEREXECOFFSET2_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_CMDSEQ_TASKBUFFEREXECOFFSET2_t;

/**
  * \brief Task buffer 3 execute offset register (VIDEOSS_CMDSEQ_TASKBUFFEREXECOFFSET3)
  */
typedef struct stc_VIDEOSS_CMDSEQ_TASKBUFFEREXECOFFSET3_field {
  uint32_t                         u16EXECOFFSETTB3:16;
  uint32_t                         :16;
} stc_VIDEOSS_CMDSEQ_TASKBUFFEREXECOFFSET3_field_t;

typedef union un_VIDEOSS_CMDSEQ_TASKBUFFEREXECOFFSET3 {
  uint32_t                         u32Register;
  stc_VIDEOSS_CMDSEQ_TASKBUFFEREXECOFFSET3_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_CMDSEQ_TASKBUFFEREXECOFFSET3_t;

/**
  * \brief Task buffer 4 execute offset register (VIDEOSS_CMDSEQ_TASKBUFFEREXECOFFSET4)
  */
typedef struct stc_VIDEOSS_CMDSEQ_TASKBUFFEREXECOFFSET4_field {
  uint32_t                         u16EXECOFFSETTB4:16;
  uint32_t                         :16;
} stc_VIDEOSS_CMDSEQ_TASKBUFFEREXECOFFSET4_field_t;

typedef union un_VIDEOSS_CMDSEQ_TASKBUFFEREXECOFFSET4 {
  uint32_t                         u32Register;
  stc_VIDEOSS_CMDSEQ_TASKBUFFEREXECOFFSET4_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_CMDSEQ_TASKBUFFEREXECOFFSET4_t;

/**
  * \brief Task buffer 5 execute offset register (VIDEOSS_CMDSEQ_TASKBUFFEREXECOFFSET5)
  */
typedef struct stc_VIDEOSS_CMDSEQ_TASKBUFFEREXECOFFSET5_field {
  uint32_t                         u16EXECOFFSETTB5:16;
  uint32_t                         :16;
} stc_VIDEOSS_CMDSEQ_TASKBUFFEREXECOFFSET5_field_t;

typedef union un_VIDEOSS_CMDSEQ_TASKBUFFEREXECOFFSET5 {
  uint32_t                         u32Register;
  stc_VIDEOSS_CMDSEQ_TASKBUFFEREXECOFFSET5_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_CMDSEQ_TASKBUFFEREXECOFFSET5_t;

/**
  * \brief Task buffer 6 execute offset register (VIDEOSS_CMDSEQ_TASKBUFFEREXECOFFSET6)
  */
typedef struct stc_VIDEOSS_CMDSEQ_TASKBUFFEREXECOFFSET6_field {
  uint32_t                         u16EXECOFFSETTB6:16;
  uint32_t                         :16;
} stc_VIDEOSS_CMDSEQ_TASKBUFFEREXECOFFSET6_field_t;

typedef union un_VIDEOSS_CMDSEQ_TASKBUFFEREXECOFFSET6 {
  uint32_t                         u32Register;
  stc_VIDEOSS_CMDSEQ_TASKBUFFEREXECOFFSET6_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_CMDSEQ_TASKBUFFEREXECOFFSET6_t;

/**
  * \brief Task buffer 7 execute offset register (VIDEOSS_CMDSEQ_TASKBUFFEREXECOFFSET7)
  */
typedef struct stc_VIDEOSS_CMDSEQ_TASKBUFFEREXECOFFSET7_field {
  uint32_t                         u16EXECOFFSETTB7:16;
  uint32_t                         :16;
} stc_VIDEOSS_CMDSEQ_TASKBUFFEREXECOFFSET7_field_t;

typedef union un_VIDEOSS_CMDSEQ_TASKBUFFEREXECOFFSET7 {
  uint32_t                         u32Register;
  stc_VIDEOSS_CMDSEQ_TASKBUFFEREXECOFFSET7_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_CMDSEQ_TASKBUFFEREXECOFFSET7_t;

/**
  * \brief Status register (VIDEOSS_CMDSEQ_STATUS)
  */
typedef struct stc_VIDEOSS_CMDSEQ_STATUS_field {
  uint32_t                         u8TASKBUFFERDONE:8;
  uint32_t                         u8TASKBUFFERSYNC:8;
  uint32_t                         u3SCHEDULERACTIVETB:3;
  uint32_t                         u1SCHEDULERIDLE:1;
  uint32_t                         u3FETCHEDACTIVETB:3;
  uint32_t                         u1REQUESTEDAXITRANSACTIONS:1;
  uint32_t                         u2PROGRAMMERSTATE:2;
  uint32_t                         u1CMDSEQIDLE:1;
  uint32_t                         :5;
} stc_VIDEOSS_CMDSEQ_STATUS_field_t;

typedef union un_VIDEOSS_CMDSEQ_STATUS {
  uint32_t                         u32Register;
  stc_VIDEOSS_CMDSEQ_STATUS_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_CMDSEQ_STATUS_t;

/**
  * \brief Error code register, each field of this register is one bit wide and corresponds to an error event. If the value of this register is zero, than there are no errors. (VIDEOSS_CMDSEQ_ERRORCODE)
  */
typedef struct stc_VIDEOSS_CMDSEQ_ERRORCODE_field {
  uint32_t                         u1ERRORSCHEDULEROPCODE:1;
  uint32_t                         u1ERRORPROGRAMMEROPCODE:1;
  uint32_t                         u1ERROREXECUTIONOFFSET:1;
  uint32_t                         u1ERRORSTOPOFFSETWITHININSTRUCTION:1;
  uint32_t                         u1ERRORAXISLV:1;
  uint32_t                         u1ERRORAXIDEC:1;
  uint32_t                         u1ERRORREGID:1;
  uint32_t                         u1ERRORDELAYEDSYNC:1;
  uint32_t                         u1ERRORSTOPOFFSETOUTSIDETB:1;
  uint32_t                         u1ERRORFUNCTIONOFFSET:1;
  uint32_t                         :22;
} stc_VIDEOSS_CMDSEQ_ERRORCODE_field_t;

typedef union un_VIDEOSS_CMDSEQ_ERRORCODE {
  uint32_t                         u32Register;
  stc_VIDEOSS_CMDSEQ_ERRORCODE_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_CMDSEQ_ERRORCODE_t;

/**
  * \brief Provides HW specific information. (VIDEOSS_CMDSEQ_DESIGNCONFIGURATION)
  */
typedef struct stc_VIDEOSS_CMDSEQ_DESIGNCONFIGURATION_field {
  uint32_t                         u4BUFFERDEPTH:4;
  uint32_t                         :4;
  uint32_t                         u8BUFFERDEPTHSCHEDULER:8;
  uint32_t                         u8BUFFERDEPTHPROGRAMMER:8;
  uint32_t                         :8;
} stc_VIDEOSS_CMDSEQ_DESIGNCONFIGURATION_field_t;

typedef union un_VIDEOSS_CMDSEQ_DESIGNCONFIGURATION {
  uint32_t                         u32Register;
  stc_VIDEOSS_CMDSEQ_DESIGNCONFIGURATION_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_CMDSEQ_DESIGNCONFIGURATION_t;

/**
  * \brief Last fetched address of scheduler. (VIDEOSS_CMDSEQ_SCHEDULERADDRESS)
  */
typedef struct stc_VIDEOSS_CMDSEQ_SCHEDULERADDRESS_field {
  uint32_t                         u32SCHEDULERADDRESS:32;
} stc_VIDEOSS_CMDSEQ_SCHEDULERADDRESS_field_t;

typedef union un_VIDEOSS_CMDSEQ_SCHEDULERADDRESS {
  uint32_t                         u32Register;
  stc_VIDEOSS_CMDSEQ_SCHEDULERADDRESS_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_CMDSEQ_SCHEDULERADDRESS_t;

/**
  * \brief Last fetched address of programmer. (VIDEOSS_CMDSEQ_PROGRAMMERADDRESS)
  */
typedef struct stc_VIDEOSS_CMDSEQ_PROGRAMMERADDRESS_field {
  uint32_t                         u32PROGRAMMERADDRESS:32;
} stc_VIDEOSS_CMDSEQ_PROGRAMMERADDRESS_field_t;

typedef union un_VIDEOSS_CMDSEQ_PROGRAMMERADDRESS {
  uint32_t                         u32Register;
  stc_VIDEOSS_CMDSEQ_PROGRAMMERADDRESS_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_CMDSEQ_PROGRAMMERADDRESS_t;

/**
  * \brief General purpose Register. (Internal register with id = 0) (VIDEOSS_CMDSEQ_GPR0)
  */
typedef struct stc_VIDEOSS_CMDSEQ_GPR0_field {
  uint32_t                         u32GENERALPURPOSEREGISTER0:32;
} stc_VIDEOSS_CMDSEQ_GPR0_field_t;

typedef union un_VIDEOSS_CMDSEQ_GPR0 {
  uint32_t                         u32Register;
  stc_VIDEOSS_CMDSEQ_GPR0_field_t  stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_CMDSEQ_GPR0_t;

/**
  * \brief General purpose Register. (Internal register with id = 1) (VIDEOSS_CMDSEQ_GPR1)
  */
typedef struct stc_VIDEOSS_CMDSEQ_GPR1_field {
  uint32_t                         u32GENERALPURPOSEREGISTER1:32;
} stc_VIDEOSS_CMDSEQ_GPR1_field_t;

typedef union un_VIDEOSS_CMDSEQ_GPR1 {
  uint32_t                         u32Register;
  stc_VIDEOSS_CMDSEQ_GPR1_field_t  stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_CMDSEQ_GPR1_t;

/**
  * \brief General purpose Register. (Internal register with id = 2) (VIDEOSS_CMDSEQ_GPR2)
  */
typedef struct stc_VIDEOSS_CMDSEQ_GPR2_field {
  uint32_t                         u32GENERALPURPOSEREGISTER2:32;
} stc_VIDEOSS_CMDSEQ_GPR2_field_t;

typedef union un_VIDEOSS_CMDSEQ_GPR2 {
  uint32_t                         u32Register;
  stc_VIDEOSS_CMDSEQ_GPR2_field_t  stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_CMDSEQ_GPR2_t;

/**
  * \brief General purpose Register. (Internal register with id = 3) (VIDEOSS_CMDSEQ_GPR3)
  */
typedef struct stc_VIDEOSS_CMDSEQ_GPR3_field {
  uint32_t                         u32GENERALPURPOSEREGISTER3:32;
} stc_VIDEOSS_CMDSEQ_GPR3_field_t;

typedef union un_VIDEOSS_CMDSEQ_GPR3 {
  uint32_t                         u32Register;
  stc_VIDEOSS_CMDSEQ_GPR3_field_t  stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_CMDSEQ_GPR3_t;

/**
  * \brief General purpose Register. (Internal register with id = 4) (VIDEOSS_CMDSEQ_GPR4)
  */
typedef struct stc_VIDEOSS_CMDSEQ_GPR4_field {
  uint32_t                         u32GENERALPURPOSEREGISTER4:32;
} stc_VIDEOSS_CMDSEQ_GPR4_field_t;

typedef union un_VIDEOSS_CMDSEQ_GPR4 {
  uint32_t                         u32Register;
  stc_VIDEOSS_CMDSEQ_GPR4_field_t  stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_CMDSEQ_GPR4_t;

/**
  * \brief General purpose Register. (Internal register with id = 5) (VIDEOSS_CMDSEQ_GPR5)
  */
typedef struct stc_VIDEOSS_CMDSEQ_GPR5_field {
  uint32_t                         u32GENERALPURPOSEREGISTER5:32;
} stc_VIDEOSS_CMDSEQ_GPR5_field_t;

typedef union un_VIDEOSS_CMDSEQ_GPR5 {
  uint32_t                         u32Register;
  stc_VIDEOSS_CMDSEQ_GPR5_field_t  stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_CMDSEQ_GPR5_t;

/**
  * \brief General purpose Register. (Internal register with id = 6) (VIDEOSS_CMDSEQ_GPR6)
  */
typedef struct stc_VIDEOSS_CMDSEQ_GPR6_field {
  uint32_t                         u32GENERALPURPOSEREGISTER6:32;
} stc_VIDEOSS_CMDSEQ_GPR6_field_t;

typedef union un_VIDEOSS_CMDSEQ_GPR6 {
  uint32_t                         u32Register;
  stc_VIDEOSS_CMDSEQ_GPR6_field_t  stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_CMDSEQ_GPR6_t;

/**
  * \brief General purpose Register. (Internal register with id = 7) (VIDEOSS_CMDSEQ_GPR7)
  */
typedef struct stc_VIDEOSS_CMDSEQ_GPR7_field {
  uint32_t                         u32GENERALPURPOSEREGISTER7:32;
} stc_VIDEOSS_CMDSEQ_GPR7_field_t;

typedef union un_VIDEOSS_CMDSEQ_GPR7 {
  uint32_t                         u32Register;
  stc_VIDEOSS_CMDSEQ_GPR7_field_t  stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_CMDSEQ_GPR7_t;

/**
  * \brief General purpose Register. (Internal register with id = 8) (VIDEOSS_CMDSEQ_GPR8)
  */
typedef struct stc_VIDEOSS_CMDSEQ_GPR8_field {
  uint32_t                         u32GENERALPURPOSEREGISTER8:32;
} stc_VIDEOSS_CMDSEQ_GPR8_field_t;

typedef union un_VIDEOSS_CMDSEQ_GPR8 {
  uint32_t                         u32Register;
  stc_VIDEOSS_CMDSEQ_GPR8_field_t  stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_CMDSEQ_GPR8_t;

/**
  * \brief General purpose Register. (Internal register with id = 9) (VIDEOSS_CMDSEQ_GPR9)
  */
typedef struct stc_VIDEOSS_CMDSEQ_GPR9_field {
  uint32_t                         u32GENERALPURPOSEREGISTER9:32;
} stc_VIDEOSS_CMDSEQ_GPR9_field_t;

typedef union un_VIDEOSS_CMDSEQ_GPR9 {
  uint32_t                         u32Register;
  stc_VIDEOSS_CMDSEQ_GPR9_field_t  stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_CMDSEQ_GPR9_t;

/**
  * \brief General purpose Register. (Internal register with id = 10) (VIDEOSS_CMDSEQ_GPR10)
  */
typedef struct stc_VIDEOSS_CMDSEQ_GPR10_field {
  uint32_t                         u32GENERALPURPOSEREGISTER10:32;
} stc_VIDEOSS_CMDSEQ_GPR10_field_t;

typedef union un_VIDEOSS_CMDSEQ_GPR10 {
  uint32_t                         u32Register;
  stc_VIDEOSS_CMDSEQ_GPR10_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_CMDSEQ_GPR10_t;

/**
  * \brief General purpose Register. (Internal register with id = 11) (VIDEOSS_CMDSEQ_GPR11)
  */
typedef struct stc_VIDEOSS_CMDSEQ_GPR11_field {
  uint32_t                         u32GENERALPURPOSEREGISTER11:32;
} stc_VIDEOSS_CMDSEQ_GPR11_field_t;

typedef union un_VIDEOSS_CMDSEQ_GPR11 {
  uint32_t                         u32Register;
  stc_VIDEOSS_CMDSEQ_GPR11_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_CMDSEQ_GPR11_t;

/**
  * \brief General purpose Register. (Internal register with id = 12) (VIDEOSS_CMDSEQ_GPR12)
  */
typedef struct stc_VIDEOSS_CMDSEQ_GPR12_field {
  uint32_t                         u32GENERALPURPOSEREGISTER12:32;
} stc_VIDEOSS_CMDSEQ_GPR12_field_t;

typedef union un_VIDEOSS_CMDSEQ_GPR12 {
  uint32_t                         u32Register;
  stc_VIDEOSS_CMDSEQ_GPR12_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_CMDSEQ_GPR12_t;

/**
  * \brief General purpose Register. (Internal register with id = 13) (VIDEOSS_CMDSEQ_GPR13)
  */
typedef struct stc_VIDEOSS_CMDSEQ_GPR13_field {
  uint32_t                         u32GENERALPURPOSEREGISTER13:32;
} stc_VIDEOSS_CMDSEQ_GPR13_field_t;

typedef union un_VIDEOSS_CMDSEQ_GPR13 {
  uint32_t                         u32Register;
  stc_VIDEOSS_CMDSEQ_GPR13_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_CMDSEQ_GPR13_t;

/**
  * \brief General purpose Register. (Internal register with id = 14) (VIDEOSS_CMDSEQ_GPR14)
  */
typedef struct stc_VIDEOSS_CMDSEQ_GPR14_field {
  uint32_t                         u32GENERALPURPOSEREGISTER14:32;
} stc_VIDEOSS_CMDSEQ_GPR14_field_t;

typedef union un_VIDEOSS_CMDSEQ_GPR14 {
  uint32_t                         u32Register;
  stc_VIDEOSS_CMDSEQ_GPR14_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_CMDSEQ_GPR14_t;

/**
  * \brief General purpose Register. (Internal register with id = 15) (VIDEOSS_CMDSEQ_GPR15)
  */
typedef struct stc_VIDEOSS_CMDSEQ_GPR15_field {
  uint32_t                         u32GENERALPURPOSEREGISTER15:32;
} stc_VIDEOSS_CMDSEQ_GPR15_field_t;

typedef union un_VIDEOSS_CMDSEQ_GPR15 {
  uint32_t                         u32Register;
  stc_VIDEOSS_CMDSEQ_GPR15_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_CMDSEQ_GPR15_t;

/**
  * \brief Special Purpose Register. (Internal register with id = 16) (VIDEOSS_CMDSEQ_SPR0)
  */
typedef struct stc_VIDEOSS_CMDSEQ_SPR0_field {
  uint32_t                         u16LINECOUNTERTB0:16;
  uint32_t                         :16;
} stc_VIDEOSS_CMDSEQ_SPR0_field_t;

typedef union un_VIDEOSS_CMDSEQ_SPR0 {
  uint32_t                         u32Register;
  stc_VIDEOSS_CMDSEQ_SPR0_field_t  stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_CMDSEQ_SPR0_t;

/**
  * \brief Special Purpose Register (internal register with id = 17) (VIDEOSS_CMDSEQ_SPR1)
  */
typedef struct stc_VIDEOSS_CMDSEQ_SPR1_field {
  uint32_t                         u16LINECOUNTERTB1:16;
  uint32_t                         :16;
} stc_VIDEOSS_CMDSEQ_SPR1_field_t;

typedef union un_VIDEOSS_CMDSEQ_SPR1 {
  uint32_t                         u32Register;
  stc_VIDEOSS_CMDSEQ_SPR1_field_t  stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_CMDSEQ_SPR1_t;

/**
  * \brief Special Purpose Register (internal register with id = 18) (VIDEOSS_CMDSEQ_SPR2)
  */
typedef struct stc_VIDEOSS_CMDSEQ_SPR2_field {
  uint32_t                         u16LINECOUNTERTB2:16;
  uint32_t                         :16;
} stc_VIDEOSS_CMDSEQ_SPR2_field_t;

typedef union un_VIDEOSS_CMDSEQ_SPR2 {
  uint32_t                         u32Register;
  stc_VIDEOSS_CMDSEQ_SPR2_field_t  stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_CMDSEQ_SPR2_t;

/**
  * \brief Special Purpose Register (internal register with id = 19) (VIDEOSS_CMDSEQ_SPR3)
  */
typedef struct stc_VIDEOSS_CMDSEQ_SPR3_field {
  uint32_t                         u16LINECOUNTERTB3:16;
  uint32_t                         :16;
} stc_VIDEOSS_CMDSEQ_SPR3_field_t;

typedef union un_VIDEOSS_CMDSEQ_SPR3 {
  uint32_t                         u32Register;
  stc_VIDEOSS_CMDSEQ_SPR3_field_t  stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_CMDSEQ_SPR3_t;

/**
  * \brief Special Purpose Register (internal register with id = 20) (VIDEOSS_CMDSEQ_SPR4)
  */
typedef struct stc_VIDEOSS_CMDSEQ_SPR4_field {
  uint32_t                         u16LINECOUNTERTB4:16;
  uint32_t                         :16;
} stc_VIDEOSS_CMDSEQ_SPR4_field_t;

typedef union un_VIDEOSS_CMDSEQ_SPR4 {
  uint32_t                         u32Register;
  stc_VIDEOSS_CMDSEQ_SPR4_field_t  stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_CMDSEQ_SPR4_t;

/**
  * \brief Special Purpose Register (internal register with id = 21) (VIDEOSS_CMDSEQ_SPR5)
  */
typedef struct stc_VIDEOSS_CMDSEQ_SPR5_field {
  uint32_t                         u16LINECOUNTERTB5:16;
  uint32_t                         :16;
} stc_VIDEOSS_CMDSEQ_SPR5_field_t;

typedef union un_VIDEOSS_CMDSEQ_SPR5 {
  uint32_t                         u32Register;
  stc_VIDEOSS_CMDSEQ_SPR5_field_t  stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_CMDSEQ_SPR5_t;

/**
  * \brief Special Purpose Register (internal register with id = 22) (VIDEOSS_CMDSEQ_SPR6)
  */
typedef struct stc_VIDEOSS_CMDSEQ_SPR6_field {
  uint32_t                         u16LINECOUNTERTB6:16;
  uint32_t                         :16;
} stc_VIDEOSS_CMDSEQ_SPR6_field_t;

typedef union un_VIDEOSS_CMDSEQ_SPR6 {
  uint32_t                         u32Register;
  stc_VIDEOSS_CMDSEQ_SPR6_field_t  stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_CMDSEQ_SPR6_t;

/**
  * \brief Special Purpose Register (internal register with id = 23) (VIDEOSS_CMDSEQ_SPR7)
  */
typedef struct stc_VIDEOSS_CMDSEQ_SPR7_field {
  uint32_t                         u16LINECOUNTERTB7:16;
  uint32_t                         :16;
} stc_VIDEOSS_CMDSEQ_SPR7_field_t;

typedef union un_VIDEOSS_CMDSEQ_SPR7 {
  uint32_t                         u32Register;
  stc_VIDEOSS_CMDSEQ_SPR7_field_t  stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_CMDSEQ_SPR7_t;



/**
  * \brief Static control register. (VIDEOSS_BLITENGCFG_STATICCONTROL)
  */
typedef struct stc_VIDEOSS_BLITENGCFG_STATICCONTROL_field {
  uint32_t                         u1SHDEN:1;
  uint32_t                         :3;
  uint32_t                         u2LRSTATUSSELECT:2;
  uint32_t                         :2;
  uint32_t                         u1BLITENGUTILIZATIONMEASUREMENTEN:1;
  uint32_t                         u1LBOUTILIZATIONMEASUREMENTEN:1;
  uint32_t                         u1TBUTILIZATIONMEASUREMENTEN:1;
  uint32_t                         u1LBOSOURCEPIXELMEASUREMENTEN:1;
  uint32_t                         u1DESTINATIONPIXELMEASUREMENTEN:1;
  uint32_t                         :19;
} stc_VIDEOSS_BLITENGCFG_STATICCONTROL_field_t;

typedef union un_VIDEOSS_BLITENGCFG_STATICCONTROL {
  uint32_t                         u32Register;
  stc_VIDEOSS_BLITENGCFG_STATICCONTROL_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_BLITENGCFG_STATICCONTROL_t;

/**
  * \brief Task configuration register. (VIDEOSS_BLITENGCFG_TASKSETUP)
  */
typedef struct stc_VIDEOSS_BLITENGCFG_TASKSETUP_field {
  uint32_t                         u3TASKSELECT:3;
  uint32_t                         :1;
  uint32_t                         u1RENDERMODE:1;
  uint32_t                         :3;
  uint32_t                         u3PROXYSELECT:3;
  uint32_t                         :21;
} stc_VIDEOSS_BLITENGCFG_TASKSETUP_field_t;

typedef union un_VIDEOSS_BLITENGCFG_TASKSETUP {
  uint32_t                         u32Register;
  stc_VIDEOSS_BLITENGCFG_TASKSETUP_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_BLITENGCFG_TASKSETUP_t;

/**
  * \brief Dimension of final frame in memory. (VIDEOSS_BLITENGCFG_LRFRAMEDIMENSION)
  */
typedef struct stc_VIDEOSS_BLITENGCFG_LRFRAMEDIMENSION_field {
  uint32_t                         u14TOTALWIDTH:14;
  uint32_t                         :2;
  uint32_t                         u14TOTALHEIGHT:14;
  uint32_t                         :2;
} stc_VIDEOSS_BLITENGCFG_LRFRAMEDIMENSION_field_t;

typedef union un_VIDEOSS_BLITENGCFG_LRFRAMEDIMENSION {
  uint32_t                         u32Register;
  stc_VIDEOSS_BLITENGCFG_LRFRAMEDIMENSION_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_BLITENGCFG_LRFRAMEDIMENSION_t;

/**
  * \brief Setup for rendering operation. (VIDEOSS_BLITENGCFG_OPERATIONSETUP)
  */
typedef struct stc_VIDEOSS_BLITENGCFG_OPERATIONSETUP_field {
  uint32_t                         u2DESTINATIONSELECT:2;
  uint32_t                         :2;
  uint32_t                         u2MASKSELECT:2;
  uint32_t                         :2;
  uint32_t                         u1BUFFERSELECT:1;
  uint32_t                         u1ENABLEROP:1;
  uint32_t                         u1ENABLECLUT:1;
  uint32_t                         u1ENABLEMATRIX:1;
  uint32_t                         u1ENABLEGPSCALER:1;
  uint32_t                         u1ENABLEBLITBLEND:1;
  uint32_t                         u1CONSTANTCOLORFILL:1;
  uint32_t                         u1USECOPS:1;
  uint32_t                         u8COPSADDRESS:8;
  uint32_t                         :8;
} stc_VIDEOSS_BLITENGCFG_OPERATIONSETUP_field_t;

typedef union un_VIDEOSS_BLITENGCFG_OPERATIONSETUP {
  uint32_t                         u32Register;
  stc_VIDEOSS_BLITENGCFG_OPERATIONSETUP_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_BLITENGCFG_OPERATIONSETUP_t;

/**
  * \brief Dimension of object. Only possible in LBO mode (VIDEOSS_BLITENGCFG_LROBJECTDIMENSION)
  */
typedef struct stc_VIDEOSS_BLITENGCFG_LROBJECTDIMENSION_field {
  uint32_t                         u14OBJECTWIDTH:14;
  uint32_t                         :2;
  uint32_t                         u14OBJECTHEIGHT:14;
  uint32_t                         :2;
} stc_VIDEOSS_BLITENGCFG_LROBJECTDIMENSION_field_t;

typedef union un_VIDEOSS_BLITENGCFG_LROBJECTDIMENSION {
  uint32_t                         u32Register;
  stc_VIDEOSS_BLITENGCFG_LROBJECTDIMENSION_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_BLITENGCFG_LROBJECTDIMENSION_t;

/**
  * \brief Position of current object in frame coordinate system. Only possible in LBO mode (VIDEOSS_BLITENGCFG_LROBJECTPOSITION)
  */
typedef struct stc_VIDEOSS_BLITENGCFG_LROBJECTPOSITION_field {
  uint32_t                         u14OBJECTOFFSETX:14;
  uint32_t                         :2;
  uint32_t                         u14OBJECTOFFSETY:14;
  uint32_t                         :2;
} stc_VIDEOSS_BLITENGCFG_LROBJECTPOSITION_field_t;

typedef union un_VIDEOSS_BLITENGCFG_LROBJECTPOSITION {
  uint32_t                         u32Register;
  stc_VIDEOSS_BLITENGCFG_LROBJECTPOSITION_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_BLITENGCFG_LROBJECTPOSITION_t;

/**
  * \brief Constant alpha used to fill buffer w/o fetch unit. Has affect only if ConstantColorFill is set. Only possible in LBO mode. (VIDEOSS_BLITENGCFG_LRCONSTALPHA)
  */
typedef struct stc_VIDEOSS_BLITENGCFG_LRCONSTALPHA_field {
  uint32_t                         u8CONSTANTALPHA:8;
  uint32_t                         :24;
} stc_VIDEOSS_BLITENGCFG_LRCONSTALPHA_field_t;

typedef union un_VIDEOSS_BLITENGCFG_LRCONSTALPHA {
  uint32_t                         u32Register;
  stc_VIDEOSS_BLITENGCFG_LRCONSTALPHA_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_BLITENGCFG_LRCONSTALPHA_t;

/**
  * \brief Constant color used to fill buffer w/o fetch unit. Has affect only if ConstantColorFill is set and BufferSelect==RGBA. Only possible in LBO mode (VIDEOSS_BLITENGCFG_LRCONSTRGB)
  */
typedef struct stc_VIDEOSS_BLITENGCFG_LRCONSTRGB_field {
  uint32_t                         u10CONSTANTCOLORRED:10;
  uint32_t                         u10CONSTANTCOLORGREEN:10;
  uint32_t                         u10CONSTANTCOLORBLUE:10;
  uint32_t                         :2;
} stc_VIDEOSS_BLITENGCFG_LRCONSTRGB_field_t;

typedef union un_VIDEOSS_BLITENGCFG_LRCONSTRGB {
  uint32_t                         u32Register;
  stc_VIDEOSS_BLITENGCFG_LRCONSTRGB_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_BLITENGCFG_LRCONSTRGB_t;

/**
  * \brief Sync ID request register. (VIDEOSS_BLITENGCFG_SYNCIDREQUEST0)
  */
typedef struct stc_VIDEOSS_BLITENGCFG_SYNCIDREQUEST0_field {
  uint32_t                         u32SYNCIDREQUEST0:32;
} stc_VIDEOSS_BLITENGCFG_SYNCIDREQUEST0_field_t;

typedef union un_VIDEOSS_BLITENGCFG_SYNCIDREQUEST0 {
  uint32_t                         u32Register;
  stc_VIDEOSS_BLITENGCFG_SYNCIDREQUEST0_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_BLITENGCFG_SYNCIDREQUEST0_t;

/**
  * \brief Sync ID request register. (VIDEOSS_BLITENGCFG_SYNCIDREQUEST1)
  */
typedef struct stc_VIDEOSS_BLITENGCFG_SYNCIDREQUEST1_field {
  uint32_t                         u32SYNCIDREQUEST1:32;
} stc_VIDEOSS_BLITENGCFG_SYNCIDREQUEST1_field_t;

typedef union un_VIDEOSS_BLITENGCFG_SYNCIDREQUEST1 {
  uint32_t                         u32Register;
  stc_VIDEOSS_BLITENGCFG_SYNCIDREQUEST1_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_BLITENGCFG_SYNCIDREQUEST1_t;

/**
  * \brief Sync ID request register. (VIDEOSS_BLITENGCFG_SYNCIDREQUEST2)
  */
typedef struct stc_VIDEOSS_BLITENGCFG_SYNCIDREQUEST2_field {
  uint32_t                         u32SYNCIDREQUEST2:32;
} stc_VIDEOSS_BLITENGCFG_SYNCIDREQUEST2_field_t;

typedef union un_VIDEOSS_BLITENGCFG_SYNCIDREQUEST2 {
  uint32_t                         u32Register;
  stc_VIDEOSS_BLITENGCFG_SYNCIDREQUEST2_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_BLITENGCFG_SYNCIDREQUEST2_t;

/**
  * \brief Sync ID request register. (VIDEOSS_BLITENGCFG_SYNCIDREQUEST3)
  */
typedef struct stc_VIDEOSS_BLITENGCFG_SYNCIDREQUEST3_field {
  uint32_t                         u32SYNCIDREQUEST3:32;
} stc_VIDEOSS_BLITENGCFG_SYNCIDREQUEST3_field_t;

typedef union un_VIDEOSS_BLITENGCFG_SYNCIDREQUEST3 {
  uint32_t                         u32Register;
  stc_VIDEOSS_BLITENGCFG_SYNCIDREQUEST3_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_BLITENGCFG_SYNCIDREQUEST3_t;

/**
  * \brief Sync ID request register. (VIDEOSS_BLITENGCFG_SYNCIDREQUEST4)
  */
typedef struct stc_VIDEOSS_BLITENGCFG_SYNCIDREQUEST4_field {
  uint32_t                         u32SYNCIDREQUEST4:32;
} stc_VIDEOSS_BLITENGCFG_SYNCIDREQUEST4_field_t;

typedef union un_VIDEOSS_BLITENGCFG_SYNCIDREQUEST4 {
  uint32_t                         u32Register;
  stc_VIDEOSS_BLITENGCFG_SYNCIDREQUEST4_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_BLITENGCFG_SYNCIDREQUEST4_t;

/**
  * \brief Sync ID request register. (VIDEOSS_BLITENGCFG_SYNCIDREQUEST5)
  */
typedef struct stc_VIDEOSS_BLITENGCFG_SYNCIDREQUEST5_field {
  uint32_t                         u32SYNCIDREQUEST5:32;
} stc_VIDEOSS_BLITENGCFG_SYNCIDREQUEST5_field_t;

typedef union un_VIDEOSS_BLITENGCFG_SYNCIDREQUEST5 {
  uint32_t                         u32Register;
  stc_VIDEOSS_BLITENGCFG_SYNCIDREQUEST5_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_BLITENGCFG_SYNCIDREQUEST5_t;

/**
  * \brief Sync ID request register. (VIDEOSS_BLITENGCFG_SYNCIDREQUEST6)
  */
typedef struct stc_VIDEOSS_BLITENGCFG_SYNCIDREQUEST6_field {
  uint32_t                         u32SYNCIDREQUEST6:32;
} stc_VIDEOSS_BLITENGCFG_SYNCIDREQUEST6_field_t;

typedef union un_VIDEOSS_BLITENGCFG_SYNCIDREQUEST6 {
  uint32_t                         u32Register;
  stc_VIDEOSS_BLITENGCFG_SYNCIDREQUEST6_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_BLITENGCFG_SYNCIDREQUEST6_t;

/**
  * \brief Sync ID request register. (VIDEOSS_BLITENGCFG_SYNCIDREQUEST7)
  */
typedef struct stc_VIDEOSS_BLITENGCFG_SYNCIDREQUEST7_field {
  uint32_t                         u32SYNCIDREQUEST7:32;
} stc_VIDEOSS_BLITENGCFG_SYNCIDREQUEST7_field_t;

typedef union un_VIDEOSS_BLITENGCFG_SYNCIDREQUEST7 {
  uint32_t                         u32Register;
  stc_VIDEOSS_BLITENGCFG_SYNCIDREQUEST7_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_BLITENGCFG_SYNCIDREQUEST7_t;

/**
  * \brief Triggers interrupts for sequence complete of specific TB of global sequence complete interrupt. (VIDEOSS_BLITENGCFG_SYNCCONTROL)
  */
typedef struct stc_VIDEOSS_BLITENGCFG_SYNCCONTROL_field {
  uint32_t                         u8SYNCIDTRIGGER:8;
  uint32_t                         u1SEQUENCECOMPLETE:1;
  uint32_t                         :23;
} stc_VIDEOSS_BLITENGCFG_SYNCCONTROL_field_t;

typedef union un_VIDEOSS_BLITENGCFG_SYNCCONTROL {
  uint32_t                         u32Register;
  stc_VIDEOSS_BLITENGCFG_SYNCCONTROL_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_BLITENGCFG_SYNCCONTROL_t;

/**
  * \brief Line rendering operation control register. (VIDEOSS_BLITENGCFG_LINERENDERINGCONTROL)
  */
typedef struct stc_VIDEOSS_BLITENGCFG_LINERENDERINGCONTROL_field {
  uint32_t                         u1LRSTART:1;
  uint32_t                         :7;
  uint32_t                         u8CLEARTASK:8;
  uint32_t                         :16;
} stc_VIDEOSS_BLITENGCFG_LINERENDERINGCONTROL_field_t;

typedef union un_VIDEOSS_BLITENGCFG_LINERENDERINGCONTROL {
  uint32_t                         u32Register;
  stc_VIDEOSS_BLITENGCFG_LINERENDERINGCONTROL_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_BLITENGCFG_LINERENDERINGCONTROL_t;

/**
  * \brief Control of the performance and utilitzation measurements. (VIDEOSS_BLITENGCFG_PERFORMANCEMEASUREMENTCONTROL)
  */
typedef struct stc_VIDEOSS_BLITENGCFG_PERFORMANCEMEASUREMENTCONTROL_field {
  uint32_t                         u1SAVEANDRESETMEASUREMENTS:1;
  uint32_t                         :31;
} stc_VIDEOSS_BLITENGCFG_PERFORMANCEMEASUREMENTCONTROL_field_t;

typedef union un_VIDEOSS_BLITENGCFG_PERFORMANCEMEASUREMENTCONTROL {
  uint32_t                         u32Register;
  stc_VIDEOSS_BLITENGCFG_PERFORMANCEMEASUREMENTCONTROL_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_BLITENGCFG_PERFORMANCEMEASUREMENTCONTROL_t;

/**
  * \brief Sync ID Status register for task 0. (VIDEOSS_BLITENGCFG_SYNCIDSTATUS0)
  */
typedef struct stc_VIDEOSS_BLITENGCFG_SYNCIDSTATUS0_field {
  uint32_t                         u32SYNCIDCOMPLETE0:32;
} stc_VIDEOSS_BLITENGCFG_SYNCIDSTATUS0_field_t;

typedef union un_VIDEOSS_BLITENGCFG_SYNCIDSTATUS0 {
  uint32_t                         u32Register;
  stc_VIDEOSS_BLITENGCFG_SYNCIDSTATUS0_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_BLITENGCFG_SYNCIDSTATUS0_t;

/**
  * \brief Sync ID Status register for task 1. (VIDEOSS_BLITENGCFG_SYNCIDSTATUS1)
  */
typedef struct stc_VIDEOSS_BLITENGCFG_SYNCIDSTATUS1_field {
  uint32_t                         u32SYNCIDCOMPLETE1:32;
} stc_VIDEOSS_BLITENGCFG_SYNCIDSTATUS1_field_t;

typedef union un_VIDEOSS_BLITENGCFG_SYNCIDSTATUS1 {
  uint32_t                         u32Register;
  stc_VIDEOSS_BLITENGCFG_SYNCIDSTATUS1_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_BLITENGCFG_SYNCIDSTATUS1_t;

/**
  * \brief Sync ID Status register for task 2. (VIDEOSS_BLITENGCFG_SYNCIDSTATUS2)
  */
typedef struct stc_VIDEOSS_BLITENGCFG_SYNCIDSTATUS2_field {
  uint32_t                         u32SYNCIDCOMPLETE2:32;
} stc_VIDEOSS_BLITENGCFG_SYNCIDSTATUS2_field_t;

typedef union un_VIDEOSS_BLITENGCFG_SYNCIDSTATUS2 {
  uint32_t                         u32Register;
  stc_VIDEOSS_BLITENGCFG_SYNCIDSTATUS2_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_BLITENGCFG_SYNCIDSTATUS2_t;

/**
  * \brief Sync ID Status register for task 3. (VIDEOSS_BLITENGCFG_SYNCIDSTATUS3)
  */
typedef struct stc_VIDEOSS_BLITENGCFG_SYNCIDSTATUS3_field {
  uint32_t                         u32SYNCIDCOMPLETE3:32;
} stc_VIDEOSS_BLITENGCFG_SYNCIDSTATUS3_field_t;

typedef union un_VIDEOSS_BLITENGCFG_SYNCIDSTATUS3 {
  uint32_t                         u32Register;
  stc_VIDEOSS_BLITENGCFG_SYNCIDSTATUS3_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_BLITENGCFG_SYNCIDSTATUS3_t;

/**
  * \brief Sync ID Status register for task 4. (VIDEOSS_BLITENGCFG_SYNCIDSTATUS4)
  */
typedef struct stc_VIDEOSS_BLITENGCFG_SYNCIDSTATUS4_field {
  uint32_t                         u32SYNCIDCOMPLETE4:32;
} stc_VIDEOSS_BLITENGCFG_SYNCIDSTATUS4_field_t;

typedef union un_VIDEOSS_BLITENGCFG_SYNCIDSTATUS4 {
  uint32_t                         u32Register;
  stc_VIDEOSS_BLITENGCFG_SYNCIDSTATUS4_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_BLITENGCFG_SYNCIDSTATUS4_t;

/**
  * \brief Sync ID Status register for task 5. (VIDEOSS_BLITENGCFG_SYNCIDSTATUS5)
  */
typedef struct stc_VIDEOSS_BLITENGCFG_SYNCIDSTATUS5_field {
  uint32_t                         u32SYNCIDCOMPLETE5:32;
} stc_VIDEOSS_BLITENGCFG_SYNCIDSTATUS5_field_t;

typedef union un_VIDEOSS_BLITENGCFG_SYNCIDSTATUS5 {
  uint32_t                         u32Register;
  stc_VIDEOSS_BLITENGCFG_SYNCIDSTATUS5_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_BLITENGCFG_SYNCIDSTATUS5_t;

/**
  * \brief Sync ID Status register for task 6. (VIDEOSS_BLITENGCFG_SYNCIDSTATUS6)
  */
typedef struct stc_VIDEOSS_BLITENGCFG_SYNCIDSTATUS6_field {
  uint32_t                         u32SYNCIDCOMPLETE6:32;
} stc_VIDEOSS_BLITENGCFG_SYNCIDSTATUS6_field_t;

typedef union un_VIDEOSS_BLITENGCFG_SYNCIDSTATUS6 {
  uint32_t                         u32Register;
  stc_VIDEOSS_BLITENGCFG_SYNCIDSTATUS6_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_BLITENGCFG_SYNCIDSTATUS6_t;

/**
  * \brief Sync ID Status register for task 7. (VIDEOSS_BLITENGCFG_SYNCIDSTATUS7)
  */
typedef struct stc_VIDEOSS_BLITENGCFG_SYNCIDSTATUS7_field {
  uint32_t                         u32SYNCIDCOMPLETE7:32;
} stc_VIDEOSS_BLITENGCFG_SYNCIDSTATUS7_field_t;

typedef union un_VIDEOSS_BLITENGCFG_SYNCIDSTATUS7 {
  uint32_t                         u32Register;
  stc_VIDEOSS_BLITENGCFG_SYNCIDSTATUS7_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_BLITENGCFG_SYNCIDSTATUS7_t;

/**
  * \brief This register contains attributes of Bliteng. They are not parameters since they cannot be easily changed, however here we still have them to provide some static status on design. (VIDEOSS_BLITENGCFG_DESIGNATTRIBUTES0)
  */
typedef struct stc_VIDEOSS_BLITENGCFG_DESIGNATTRIBUTES0_field {
  uint32_t                         u4SLICEHEIGHT:4;
  uint32_t                         :4;
  uint32_t                         u3PROCESSINGPIPELINES:3;
  uint32_t                         :5;
  uint32_t                         u14SLICEWIDTH:14;
  uint32_t                         :2;
} stc_VIDEOSS_BLITENGCFG_DESIGNATTRIBUTES0_field_t;

typedef union un_VIDEOSS_BLITENGCFG_DESIGNATTRIBUTES0 {
  uint32_t                         u32Register;
  stc_VIDEOSS_BLITENGCFG_DESIGNATTRIBUTES0_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_BLITENGCFG_DESIGNATTRIBUTES0_t;

/**
  * \brief This register contains attributes of Bliteng. They are not parameters since they cannot be easily changed, however here we still have them to provide some static status on design. (VIDEOSS_BLITENGCFG_DESIGNATTRIBUTES1)
  */
typedef struct stc_VIDEOSS_BLITENGCFG_DESIGNATTRIBUTES1_field {
  uint32_t                         u14GPSCALERWIDTH:14;
  uint32_t                         :18;
} stc_VIDEOSS_BLITENGCFG_DESIGNATTRIBUTES1_field_t;

typedef union un_VIDEOSS_BLITENGCFG_DESIGNATTRIBUTES1 {
  uint32_t                         u32Register;
  stc_VIDEOSS_BLITENGCFG_DESIGNATTRIBUTES1_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_BLITENGCFG_DESIGNATTRIBUTES1_t;

/**
  * \brief One of Clock Counter registers. (VIDEOSS_BLITENGCFG_CLOCKCOUNTER)
  */
typedef struct stc_VIDEOSS_BLITENGCFG_CLOCKCOUNTER_field {
  uint32_t                         u32CLOCKCOUNTER:32;
} stc_VIDEOSS_BLITENGCFG_CLOCKCOUNTER_field_t;

typedef union un_VIDEOSS_BLITENGCFG_CLOCKCOUNTER {
  uint32_t                         u32Register;
  stc_VIDEOSS_BLITENGCFG_CLOCKCOUNTER_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_BLITENGCFG_CLOCKCOUNTER_t;

/**
  * \brief One of Clock Counter registers. (VIDEOSS_BLITENGCFG_CLOCKCOUNTEROVERFLOW)
  */
typedef struct stc_VIDEOSS_BLITENGCFG_CLOCKCOUNTEROVERFLOW_field {
  uint32_t                         u1CLOCKCOUNTEROVERFLOW:1;
  uint32_t                         :31;
} stc_VIDEOSS_BLITENGCFG_CLOCKCOUNTEROVERFLOW_field_t;

typedef union un_VIDEOSS_BLITENGCFG_CLOCKCOUNTEROVERFLOW {
  uint32_t                         u32Register;
  stc_VIDEOSS_BLITENGCFG_CLOCKCOUNTEROVERFLOW_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_BLITENGCFG_CLOCKCOUNTEROVERFLOW_t;

/**
  * \brief One of BlitEng Utilization Measurement registers. (VIDEOSS_BLITENGCFG_IBOACTIVECOUNTER)
  */
typedef struct stc_VIDEOSS_BLITENGCFG_IBOACTIVECOUNTER_field {
  uint32_t                         u32IBOACTIVECOUNTER:32;
} stc_VIDEOSS_BLITENGCFG_IBOACTIVECOUNTER_field_t;

typedef union un_VIDEOSS_BLITENGCFG_IBOACTIVECOUNTER {
  uint32_t                         u32Register;
  stc_VIDEOSS_BLITENGCFG_IBOACTIVECOUNTER_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_BLITENGCFG_IBOACTIVECOUNTER_t;

/**
  * \brief One of BlitEng Utilization Measurement registers. (VIDEOSS_BLITENGCFG_LBOACTIVECOUNTER)
  */
typedef struct stc_VIDEOSS_BLITENGCFG_LBOACTIVECOUNTER_field {
  uint32_t                         u32LBOACTIVECOUNTER:32;
} stc_VIDEOSS_BLITENGCFG_LBOACTIVECOUNTER_field_t;

typedef union un_VIDEOSS_BLITENGCFG_LBOACTIVECOUNTER {
  uint32_t                         u32Register;
  stc_VIDEOSS_BLITENGCFG_LBOACTIVECOUNTER_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_BLITENGCFG_LBOACTIVECOUNTER_t;

/**
  * \brief One of the LBO utilization measurement registers. (VIDEOSS_BLITENGCFG_LBOALLFETCHESACTIVECOUNTER)
  */
typedef struct stc_VIDEOSS_BLITENGCFG_LBOALLFETCHESACTIVECOUNTER_field {
  uint32_t                         u32LBOALLFETCHESACTIVECOUNTER:32;
} stc_VIDEOSS_BLITENGCFG_LBOALLFETCHESACTIVECOUNTER_field_t;

typedef union un_VIDEOSS_BLITENGCFG_LBOALLFETCHESACTIVECOUNTER {
  uint32_t                         u32Register;
  stc_VIDEOSS_BLITENGCFG_LBOALLFETCHESACTIVECOUNTER_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_BLITENGCFG_LBOALLFETCHESACTIVECOUNTER_t;

/**
  * \brief One of the LBO utilization measurement registers. (VIDEOSS_BLITENGCFG_LBOWAITBLITENGRESSOURCESCOUNTER)
  */
typedef struct stc_VIDEOSS_BLITENGCFG_LBOWAITBLITENGRESSOURCESCOUNTER_field {
  uint32_t                         u32LBOWAITBLITENGRESSOURCESCOUNTER:32;
} stc_VIDEOSS_BLITENGCFG_LBOWAITBLITENGRESSOURCESCOUNTER_field_t;

typedef union un_VIDEOSS_BLITENGCFG_LBOWAITBLITENGRESSOURCESCOUNTER {
  uint32_t                         u32Register;
  stc_VIDEOSS_BLITENGCFG_LBOWAITBLITENGRESSOURCESCOUNTER_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_BLITENGCFG_LBOWAITBLITENGRESSOURCESCOUNTER_t;

/**
  * \brief One of the TB utilization measurement registers. Since TB operations may be overlapping the sum of all TB utilization measurement registers may be higher than clock counter (VIDEOSS_BLITENGCFG_TB0ACTIVECOUNTER)
  */
typedef struct stc_VIDEOSS_BLITENGCFG_TB0ACTIVECOUNTER_field {
  uint32_t                         u32TB0ACTIVECOUNTER:32;
} stc_VIDEOSS_BLITENGCFG_TB0ACTIVECOUNTER_field_t;

typedef union un_VIDEOSS_BLITENGCFG_TB0ACTIVECOUNTER {
  uint32_t                         u32Register;
  stc_VIDEOSS_BLITENGCFG_TB0ACTIVECOUNTER_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_BLITENGCFG_TB0ACTIVECOUNTER_t;

/**
  * \brief One of the TB utilization measurement registers. Since TB operations may be overlapping the sum of all TB utilization measurement registers may be higher than clock counter (VIDEOSS_BLITENGCFG_TB1ACTIVECOUNTER)
  */
typedef struct stc_VIDEOSS_BLITENGCFG_TB1ACTIVECOUNTER_field {
  uint32_t                         u32TB1ACTIVECOUNTER:32;
} stc_VIDEOSS_BLITENGCFG_TB1ACTIVECOUNTER_field_t;

typedef union un_VIDEOSS_BLITENGCFG_TB1ACTIVECOUNTER {
  uint32_t                         u32Register;
  stc_VIDEOSS_BLITENGCFG_TB1ACTIVECOUNTER_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_BLITENGCFG_TB1ACTIVECOUNTER_t;

/**
  * \brief One of the TB utilization measurement registers. Since TB operations may be overlapping the sum of all TB utilization measurement registers may be higher than clock counter (VIDEOSS_BLITENGCFG_TB2ACTIVECOUNTER)
  */
typedef struct stc_VIDEOSS_BLITENGCFG_TB2ACTIVECOUNTER_field {
  uint32_t                         u32TB2ACTIVECOUNTER:32;
} stc_VIDEOSS_BLITENGCFG_TB2ACTIVECOUNTER_field_t;

typedef union un_VIDEOSS_BLITENGCFG_TB2ACTIVECOUNTER {
  uint32_t                         u32Register;
  stc_VIDEOSS_BLITENGCFG_TB2ACTIVECOUNTER_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_BLITENGCFG_TB2ACTIVECOUNTER_t;

/**
  * \brief One of the TB utilization measurement registers. Since TB operations may be overlapping the sum of all TB utilization measurement registers may be higher than clock counter (VIDEOSS_BLITENGCFG_TB3ACTIVECOUNTER)
  */
typedef struct stc_VIDEOSS_BLITENGCFG_TB3ACTIVECOUNTER_field {
  uint32_t                         u32TB3ACTIVECOUNTER:32;
} stc_VIDEOSS_BLITENGCFG_TB3ACTIVECOUNTER_field_t;

typedef union un_VIDEOSS_BLITENGCFG_TB3ACTIVECOUNTER {
  uint32_t                         u32Register;
  stc_VIDEOSS_BLITENGCFG_TB3ACTIVECOUNTER_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_BLITENGCFG_TB3ACTIVECOUNTER_t;

/**
  * \brief One of the TB utilization measurement registers. Since TB operations may be overlapping the sum of all TB utilization measurement registers may be higher than clock counter (VIDEOSS_BLITENGCFG_TB4ACTIVECOUNTER)
  */
typedef struct stc_VIDEOSS_BLITENGCFG_TB4ACTIVECOUNTER_field {
  uint32_t                         u32TB4ACTIVECOUNTER:32;
} stc_VIDEOSS_BLITENGCFG_TB4ACTIVECOUNTER_field_t;

typedef union un_VIDEOSS_BLITENGCFG_TB4ACTIVECOUNTER {
  uint32_t                         u32Register;
  stc_VIDEOSS_BLITENGCFG_TB4ACTIVECOUNTER_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_BLITENGCFG_TB4ACTIVECOUNTER_t;

/**
  * \brief One of the TB utilization measurement registers. Since TB operations may be overlapping the sum of all TB utilization measurement registers may be higher than clock counter (VIDEOSS_BLITENGCFG_TB5ACTIVECOUNTER)
  */
typedef struct stc_VIDEOSS_BLITENGCFG_TB5ACTIVECOUNTER_field {
  uint32_t                         u32TB5ACTIVECOUNTER:32;
} stc_VIDEOSS_BLITENGCFG_TB5ACTIVECOUNTER_field_t;

typedef union un_VIDEOSS_BLITENGCFG_TB5ACTIVECOUNTER {
  uint32_t                         u32Register;
  stc_VIDEOSS_BLITENGCFG_TB5ACTIVECOUNTER_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_BLITENGCFG_TB5ACTIVECOUNTER_t;

/**
  * \brief One of the TB utilization measurement registers. Since TB operations may be overlapping the sum of all TB utilization measurement registers may be higher than clock counter (VIDEOSS_BLITENGCFG_TB6ACTIVECOUNTER)
  */
typedef struct stc_VIDEOSS_BLITENGCFG_TB6ACTIVECOUNTER_field {
  uint32_t                         u32TB6ACTIVECOUNTER:32;
} stc_VIDEOSS_BLITENGCFG_TB6ACTIVECOUNTER_field_t;

typedef union un_VIDEOSS_BLITENGCFG_TB6ACTIVECOUNTER {
  uint32_t                         u32Register;
  stc_VIDEOSS_BLITENGCFG_TB6ACTIVECOUNTER_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_BLITENGCFG_TB6ACTIVECOUNTER_t;

/**
  * \brief One of the TB utilization measurement registers. Since TB operations may be overlapping the sum of all TB utilization measurement registers may be higher than clock counter (VIDEOSS_BLITENGCFG_TB7ACTIVECOUNTER)
  */
typedef struct stc_VIDEOSS_BLITENGCFG_TB7ACTIVECOUNTER_field {
  uint32_t                         u32TB7ACTIVECOUNTER:32;
} stc_VIDEOSS_BLITENGCFG_TB7ACTIVECOUNTER_field_t;

typedef union un_VIDEOSS_BLITENGCFG_TB7ACTIVECOUNTER {
  uint32_t                         u32Register;
  stc_VIDEOSS_BLITENGCFG_TB7ACTIVECOUNTER_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_BLITENGCFG_TB7ACTIVECOUNTER_t;

/**
  * \brief RGBA source pixel counter for LBO mode (VIDEOSS_BLITENGCFG_LBOSOURCEPIXELRGBACOUNTER)
  */
typedef struct stc_VIDEOSS_BLITENGCFG_LBOSOURCEPIXELRGBACOUNTER_field {
  uint32_t                         u32LBOSOURCEPIXELRGBACOUNTER:32;
} stc_VIDEOSS_BLITENGCFG_LBOSOURCEPIXELRGBACOUNTER_field_t;

typedef union un_VIDEOSS_BLITENGCFG_LBOSOURCEPIXELRGBACOUNTER {
  uint32_t                         u32Register;
  stc_VIDEOSS_BLITENGCFG_LBOSOURCEPIXELRGBACOUNTER_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_BLITENGCFG_LBOSOURCEPIXELRGBACOUNTER_t;

/**
  * \brief Alpha source pixel counter for LBO mode (VIDEOSS_BLITENGCFG_LBOSOURCEPIXELALPHACOUNTER)
  */
typedef struct stc_VIDEOSS_BLITENGCFG_LBOSOURCEPIXELALPHACOUNTER_field {
  uint32_t                         u32LBOSOURCEPIXELALPHACOUNTER:32;
} stc_VIDEOSS_BLITENGCFG_LBOSOURCEPIXELALPHACOUNTER_field_t;

typedef union un_VIDEOSS_BLITENGCFG_LBOSOURCEPIXELALPHACOUNTER {
  uint32_t                         u32Register;
  stc_VIDEOSS_BLITENGCFG_LBOSOURCEPIXELALPHACOUNTER_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_BLITENGCFG_LBOSOURCEPIXELALPHACOUNTER_t;

/**
  * \brief Destination pixel counter for LBO mode (VIDEOSS_BLITENGCFG_LBODESTINATIONPIXELCOUNTER)
  */
typedef struct stc_VIDEOSS_BLITENGCFG_LBODESTINATIONPIXELCOUNTER_field {
  uint32_t                         u32LBODESTINATIONPIXELCOUNTER:32;
} stc_VIDEOSS_BLITENGCFG_LBODESTINATIONPIXELCOUNTER_field_t;

typedef union un_VIDEOSS_BLITENGCFG_LBODESTINATIONPIXELCOUNTER {
  uint32_t                         u32Register;
  stc_VIDEOSS_BLITENGCFG_LBODESTINATIONPIXELCOUNTER_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_BLITENGCFG_LBODESTINATIONPIXELCOUNTER_t;

/**
  * \brief Destination pixel counter for IBO mode (VIDEOSS_BLITENGCFG_IBODESTINATIONPIXELCOUNTER)
  */
typedef struct stc_VIDEOSS_BLITENGCFG_IBODESTINATIONPIXELCOUNTER_field {
  uint32_t                         u32IBODESTINATIONPIXELCOUNTER:32;
} stc_VIDEOSS_BLITENGCFG_IBODESTINATIONPIXELCOUNTER_field_t;

typedef union un_VIDEOSS_BLITENGCFG_IBODESTINATIONPIXELCOUNTER {
  uint32_t                         u32Register;
  stc_VIDEOSS_BLITENGCFG_IBODESTINATIONPIXELCOUNTER_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_BLITENGCFG_IBODESTINATIONPIXELCOUNTER_t;

/**
  * \brief Line buffer configuration register 0. (VIDEOSS_BLITENGCFG_LBHLINK0BUFFERCONFIG0)
  */
typedef struct stc_VIDEOSS_BLITENGCFG_LBHLINK0BUFFERCONFIG0_field {
  uint32_t                         u1LBHLINK0ENABLE:1;
  uint32_t                         :3;
  uint32_t                         u1LBHLINK0SIZEENABLE:1;
  uint32_t                         :3;
  uint32_t                         u4LBHLINK0BUFLINES:4;
  uint32_t                         :20;
} stc_VIDEOSS_BLITENGCFG_LBHLINK0BUFFERCONFIG0_field_t;

typedef union un_VIDEOSS_BLITENGCFG_LBHLINK0BUFFERCONFIG0 {
  uint32_t                         u32Register;
  stc_VIDEOSS_BLITENGCFG_LBHLINK0BUFFERCONFIG0_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_BLITENGCFG_LBHLINK0BUFFERCONFIG0_t;

/**
  * \brief Line buffer configuration register 1. (VIDEOSS_BLITENGCFG_LBHLINK0BUFFERCONFIG1)
  */
typedef struct stc_VIDEOSS_BLITENGCFG_LBHLINK0BUFFERCONFIG1_field {
  uint32_t                         u14LBHLINK0FRAMELINES:14;
  uint32_t                         :2;
  uint32_t                         u14LBHLINK0KEEPLINES:14;
  uint32_t                         :2;
} stc_VIDEOSS_BLITENGCFG_LBHLINK0BUFFERCONFIG1_field_t;

typedef union un_VIDEOSS_BLITENGCFG_LBHLINK0BUFFERCONFIG1 {
  uint32_t                         u32Register;
  stc_VIDEOSS_BLITENGCFG_LBHLINK0BUFFERCONFIG1_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_BLITENGCFG_LBHLINK0BUFFERCONFIG1_t;

/**
  * \brief Buffer status register 0 for the line buffer handshake. Writing to this register has no effect, reading provides the value and simultaneously resets the internal register. The value provided after the first read or if LBH is inactive is not valid. (VIDEOSS_BLITENGCFG_LBHLINK0BUFFERSTATUS0)
  */
typedef struct stc_VIDEOSS_BLITENGCFG_LBHLINK0BUFFERSTATUS0_field {
  uint32_t                         u15LBHLINK0MAXFREELINES:15;
  uint32_t                         :1;
  uint32_t                         u15LBHLINK0MAXFREELINESSTORE:15;
} stc_VIDEOSS_BLITENGCFG_LBHLINK0BUFFERSTATUS0_field_t;

typedef union un_VIDEOSS_BLITENGCFG_LBHLINK0BUFFERSTATUS0 {
  uint32_t                         u32Register;
  stc_VIDEOSS_BLITENGCFG_LBHLINK0BUFFERSTATUS0_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_BLITENGCFG_LBHLINK0BUFFERSTATUS0_t;

/**
  * \brief Buffer status register 1 for the line buffer handshake. (VIDEOSS_BLITENGCFG_LBHLINK0BUFFERSTATUS1)
  */
typedef struct stc_VIDEOSS_BLITENGCFG_LBHLINK0BUFFERSTATUS1_field {
  uint32_t                         u15LBHLINK0AVAILABLELINES:15;
  uint32_t                         :1;
  uint32_t                         u1LBHLINK0SAMEFRAME:1;
  uint32_t                         :15;
} stc_VIDEOSS_BLITENGCFG_LBHLINK0BUFFERSTATUS1_field_t;

typedef union un_VIDEOSS_BLITENGCFG_LBHLINK0BUFFERSTATUS1 {
  uint32_t                         u32Register;
  stc_VIDEOSS_BLITENGCFG_LBHLINK0BUFFERSTATUS1_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_BLITENGCFG_LBHLINK0BUFFERSTATUS1_t;

/**
  * \brief Buffer status register 3 for the line buffer handshake. (VIDEOSS_BLITENGCFG_LBHLINK0BUFFERSTATUS3)
  */
typedef struct stc_VIDEOSS_BLITENGCFG_LBHLINK0BUFFERSTATUS3_field {
  uint32_t                         u14LBHLINK0FETCHLINE:14;
  uint32_t                         :2;
  uint32_t                         u14LBHLINK0STORELINE:14;
  uint32_t                         :2;
} stc_VIDEOSS_BLITENGCFG_LBHLINK0BUFFERSTATUS3_field_t;

typedef union un_VIDEOSS_BLITENGCFG_LBHLINK0BUFFERSTATUS3 {
  uint32_t                         u32Register;
  stc_VIDEOSS_BLITENGCFG_LBHLINK0BUFFERSTATUS3_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_BLITENGCFG_LBHLINK0BUFFERSTATUS3_t;

/**
  * \brief Buffer status register 4 for the line buffer handshake. (VIDEOSS_BLITENGCFG_LBHLINK0BUFFERSTATUS4)
  */
typedef struct stc_VIDEOSS_BLITENGCFG_LBHLINK0BUFFERSTATUS4_field {
  uint32_t                         u15LBHLINK0FETCHSTOPLINE:15;
  uint32_t                         :1;
  uint32_t                         u15LBHLINK0STORESTOPLINE:15;
} stc_VIDEOSS_BLITENGCFG_LBHLINK0BUFFERSTATUS4_field_t;

typedef union un_VIDEOSS_BLITENGCFG_LBHLINK0BUFFERSTATUS4 {
  uint32_t                         u32Register;
  stc_VIDEOSS_BLITENGCFG_LBHLINK0BUFFERSTATUS4_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_BLITENGCFG_LBHLINK0BUFFERSTATUS4_t;

/**
  * \brief Line buffer configuration register 0. (VIDEOSS_BLITENGCFG_LBHLINK1BUFFERCONFIG0)
  */
typedef struct stc_VIDEOSS_BLITENGCFG_LBHLINK1BUFFERCONFIG0_field {
  uint32_t                         u1LBHLINK1ENABLE:1;
  uint32_t                         :3;
  uint32_t                         u1LBHLINK1SIZEENABLE:1;
  uint32_t                         :3;
  uint32_t                         u4LBHLINK1BUFLINES:4;
  uint32_t                         :20;
} stc_VIDEOSS_BLITENGCFG_LBHLINK1BUFFERCONFIG0_field_t;

typedef union un_VIDEOSS_BLITENGCFG_LBHLINK1BUFFERCONFIG0 {
  uint32_t                         u32Register;
  stc_VIDEOSS_BLITENGCFG_LBHLINK1BUFFERCONFIG0_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_BLITENGCFG_LBHLINK1BUFFERCONFIG0_t;

/**
  * \brief Line buffer configuration register 1. (VIDEOSS_BLITENGCFG_LBHLINK1BUFFERCONFIG1)
  */
typedef struct stc_VIDEOSS_BLITENGCFG_LBHLINK1BUFFERCONFIG1_field {
  uint32_t                         u14LBHLINK1FRAMELINES:14;
  uint32_t                         :2;
  uint32_t                         u14LBHLINK1KEEPLINES:14;
  uint32_t                         :2;
} stc_VIDEOSS_BLITENGCFG_LBHLINK1BUFFERCONFIG1_field_t;

typedef union un_VIDEOSS_BLITENGCFG_LBHLINK1BUFFERCONFIG1 {
  uint32_t                         u32Register;
  stc_VIDEOSS_BLITENGCFG_LBHLINK1BUFFERCONFIG1_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_BLITENGCFG_LBHLINK1BUFFERCONFIG1_t;

/**
  * \brief Buffer status register 0 for the line buffer handshake. Writing to this register has no effect, reading provides the value and simultaneously resets the internal register. The value provided after the first read or if LBH is inactive is not valid. (VIDEOSS_BLITENGCFG_LBHLINK1BUFFERSTATUS0)
  */
typedef struct stc_VIDEOSS_BLITENGCFG_LBHLINK1BUFFERSTATUS0_field {
  uint32_t                         u15LBHLINK1MAXFREELINES:15;
  uint32_t                         :1;
  uint32_t                         u15LBHLINK1MAXFREELINESSTORE:15;
} stc_VIDEOSS_BLITENGCFG_LBHLINK1BUFFERSTATUS0_field_t;

typedef union un_VIDEOSS_BLITENGCFG_LBHLINK1BUFFERSTATUS0 {
  uint32_t                         u32Register;
  stc_VIDEOSS_BLITENGCFG_LBHLINK1BUFFERSTATUS0_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_BLITENGCFG_LBHLINK1BUFFERSTATUS0_t;

/**
  * \brief Buffer status register 1 for the line buffer handshake. (VIDEOSS_BLITENGCFG_LBHLINK1BUFFERSTATUS1)
  */
typedef struct stc_VIDEOSS_BLITENGCFG_LBHLINK1BUFFERSTATUS1_field {
  uint32_t                         u15LBHLINK1AVAILABLELINES:15;
  uint32_t                         :1;
  uint32_t                         u1LBHLINK1SAMEFRAME:1;
  uint32_t                         :15;
} stc_VIDEOSS_BLITENGCFG_LBHLINK1BUFFERSTATUS1_field_t;

typedef union un_VIDEOSS_BLITENGCFG_LBHLINK1BUFFERSTATUS1 {
  uint32_t                         u32Register;
  stc_VIDEOSS_BLITENGCFG_LBHLINK1BUFFERSTATUS1_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_BLITENGCFG_LBHLINK1BUFFERSTATUS1_t;

/**
  * \brief Buffer status register 3 for the line buffer handshake. (VIDEOSS_BLITENGCFG_LBHLINK1BUFFERSTATUS3)
  */
typedef struct stc_VIDEOSS_BLITENGCFG_LBHLINK1BUFFERSTATUS3_field {
  uint32_t                         u14LBHLINK1FETCHLINE:14;
  uint32_t                         :2;
  uint32_t                         u14LBHLINK1STORELINE:14;
  uint32_t                         :2;
} stc_VIDEOSS_BLITENGCFG_LBHLINK1BUFFERSTATUS3_field_t;

typedef union un_VIDEOSS_BLITENGCFG_LBHLINK1BUFFERSTATUS3 {
  uint32_t                         u32Register;
  stc_VIDEOSS_BLITENGCFG_LBHLINK1BUFFERSTATUS3_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_BLITENGCFG_LBHLINK1BUFFERSTATUS3_t;

/**
  * \brief Buffer status register 4 for the line buffer handshake. (VIDEOSS_BLITENGCFG_LBHLINK1BUFFERSTATUS4)
  */
typedef struct stc_VIDEOSS_BLITENGCFG_LBHLINK1BUFFERSTATUS4_field {
  uint32_t                         u15LBHLINK1FETCHSTOPLINE:15;
  uint32_t                         :1;
  uint32_t                         u15LBHLINK1STORESTOPLINE:15;
} stc_VIDEOSS_BLITENGCFG_LBHLINK1BUFFERSTATUS4_field_t;

typedef union un_VIDEOSS_BLITENGCFG_LBHLINK1BUFFERSTATUS4 {
  uint32_t                         u32Register;
  stc_VIDEOSS_BLITENGCFG_LBHLINK1BUFFERSTATUS4_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_BLITENGCFG_LBHLINK1BUFFERSTATUS4_t;

/**
  * \brief Line buffer configuration register 0. (VIDEOSS_BLITENGCFG_LBHLINK2BUFFERCONFIG0)
  */
typedef struct stc_VIDEOSS_BLITENGCFG_LBHLINK2BUFFERCONFIG0_field {
  uint32_t                         u1LBHLINK2ENABLE:1;
  uint32_t                         :3;
  uint32_t                         u1LBHLINK2SIZEENABLE:1;
  uint32_t                         :3;
  uint32_t                         u4LBHLINK2BUFLINES:4;
  uint32_t                         :20;
} stc_VIDEOSS_BLITENGCFG_LBHLINK2BUFFERCONFIG0_field_t;

typedef union un_VIDEOSS_BLITENGCFG_LBHLINK2BUFFERCONFIG0 {
  uint32_t                         u32Register;
  stc_VIDEOSS_BLITENGCFG_LBHLINK2BUFFERCONFIG0_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_BLITENGCFG_LBHLINK2BUFFERCONFIG0_t;

/**
  * \brief Line buffer configuration register 1. (VIDEOSS_BLITENGCFG_LBHLINK2BUFFERCONFIG1)
  */
typedef struct stc_VIDEOSS_BLITENGCFG_LBHLINK2BUFFERCONFIG1_field {
  uint32_t                         u14LBHLINK2FRAMELINES:14;
  uint32_t                         :2;
  uint32_t                         u14LBHLINK2KEEPLINES:14;
  uint32_t                         :2;
} stc_VIDEOSS_BLITENGCFG_LBHLINK2BUFFERCONFIG1_field_t;

typedef union un_VIDEOSS_BLITENGCFG_LBHLINK2BUFFERCONFIG1 {
  uint32_t                         u32Register;
  stc_VIDEOSS_BLITENGCFG_LBHLINK2BUFFERCONFIG1_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_BLITENGCFG_LBHLINK2BUFFERCONFIG1_t;

/**
  * \brief Buffer status register 0 for the line buffer handshake. Writing to this register has no effect, reading provides the value and simultaneously resets the internal register. The value provided after the first read or if LBH is inactive is not valid. (VIDEOSS_BLITENGCFG_LBHLINK2BUFFERSTATUS0)
  */
typedef struct stc_VIDEOSS_BLITENGCFG_LBHLINK2BUFFERSTATUS0_field {
  uint32_t                         u15LBHLINK2MAXFREELINES:15;
  uint32_t                         :1;
  uint32_t                         u15LBHLINK2MAXFREELINESSTORE:15;
} stc_VIDEOSS_BLITENGCFG_LBHLINK2BUFFERSTATUS0_field_t;

typedef union un_VIDEOSS_BLITENGCFG_LBHLINK2BUFFERSTATUS0 {
  uint32_t                         u32Register;
  stc_VIDEOSS_BLITENGCFG_LBHLINK2BUFFERSTATUS0_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_BLITENGCFG_LBHLINK2BUFFERSTATUS0_t;

/**
  * \brief Buffer status register 1 for the line buffer handshake. (VIDEOSS_BLITENGCFG_LBHLINK2BUFFERSTATUS1)
  */
typedef struct stc_VIDEOSS_BLITENGCFG_LBHLINK2BUFFERSTATUS1_field {
  uint32_t                         u15LBHLINK2AVAILABLELINES:15;
  uint32_t                         :1;
  uint32_t                         u1LBHLINK2SAMEFRAME:1;
  uint32_t                         :15;
} stc_VIDEOSS_BLITENGCFG_LBHLINK2BUFFERSTATUS1_field_t;

typedef union un_VIDEOSS_BLITENGCFG_LBHLINK2BUFFERSTATUS1 {
  uint32_t                         u32Register;
  stc_VIDEOSS_BLITENGCFG_LBHLINK2BUFFERSTATUS1_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_BLITENGCFG_LBHLINK2BUFFERSTATUS1_t;

/**
  * \brief Buffer status register 3 for the line buffer handshake. (VIDEOSS_BLITENGCFG_LBHLINK2BUFFERSTATUS3)
  */
typedef struct stc_VIDEOSS_BLITENGCFG_LBHLINK2BUFFERSTATUS3_field {
  uint32_t                         u14LBHLINK2FETCHLINE:14;
  uint32_t                         :2;
  uint32_t                         u14LBHLINK2STORELINE:14;
  uint32_t                         :2;
} stc_VIDEOSS_BLITENGCFG_LBHLINK2BUFFERSTATUS3_field_t;

typedef union un_VIDEOSS_BLITENGCFG_LBHLINK2BUFFERSTATUS3 {
  uint32_t                         u32Register;
  stc_VIDEOSS_BLITENGCFG_LBHLINK2BUFFERSTATUS3_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_BLITENGCFG_LBHLINK2BUFFERSTATUS3_t;

/**
  * \brief Buffer status register 4 for the line buffer handshake. (VIDEOSS_BLITENGCFG_LBHLINK2BUFFERSTATUS4)
  */
typedef struct stc_VIDEOSS_BLITENGCFG_LBHLINK2BUFFERSTATUS4_field {
  uint32_t                         u15LBHLINK2FETCHSTOPLINE:15;
  uint32_t                         :1;
  uint32_t                         u15LBHLINK2STORESTOPLINE:15;
} stc_VIDEOSS_BLITENGCFG_LBHLINK2BUFFERSTATUS4_field_t;

typedef union un_VIDEOSS_BLITENGCFG_LBHLINK2BUFFERSTATUS4 {
  uint32_t                         u32Register;
  stc_VIDEOSS_BLITENGCFG_LBHLINK2BUFFERSTATUS4_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_BLITENGCFG_LBHLINK2BUFFERSTATUS4_t;

/**
  * \brief Line buffer configuration register 0. (VIDEOSS_BLITENGCFG_LBHLINK3BUFFERCONFIG0)
  */
typedef struct stc_VIDEOSS_BLITENGCFG_LBHLINK3BUFFERCONFIG0_field {
  uint32_t                         u1LBHLINK3ENABLE:1;
  uint32_t                         :3;
  uint32_t                         u1LBHLINK3SIZEENABLE:1;
  uint32_t                         :3;
  uint32_t                         u4LBHLINK3BUFLINES:4;
  uint32_t                         :20;
} stc_VIDEOSS_BLITENGCFG_LBHLINK3BUFFERCONFIG0_field_t;

typedef union un_VIDEOSS_BLITENGCFG_LBHLINK3BUFFERCONFIG0 {
  uint32_t                         u32Register;
  stc_VIDEOSS_BLITENGCFG_LBHLINK3BUFFERCONFIG0_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_BLITENGCFG_LBHLINK3BUFFERCONFIG0_t;

/**
  * \brief Line buffer configuration register 1. (VIDEOSS_BLITENGCFG_LBHLINK3BUFFERCONFIG1)
  */
typedef struct stc_VIDEOSS_BLITENGCFG_LBHLINK3BUFFERCONFIG1_field {
  uint32_t                         u14LBHLINK3FRAMELINES:14;
  uint32_t                         :2;
  uint32_t                         u14LBHLINK3KEEPLINES:14;
  uint32_t                         :2;
} stc_VIDEOSS_BLITENGCFG_LBHLINK3BUFFERCONFIG1_field_t;

typedef union un_VIDEOSS_BLITENGCFG_LBHLINK3BUFFERCONFIG1 {
  uint32_t                         u32Register;
  stc_VIDEOSS_BLITENGCFG_LBHLINK3BUFFERCONFIG1_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_BLITENGCFG_LBHLINK3BUFFERCONFIG1_t;

/**
  * \brief Buffer status register 0 for the line buffer handshake. Writing to this register has no effect, reading provides the value and simultaneously resets the internal register. The value provided after the first read or if LBH is inactive is not valid. (VIDEOSS_BLITENGCFG_LBHLINK3BUFFERSTATUS0)
  */
typedef struct stc_VIDEOSS_BLITENGCFG_LBHLINK3BUFFERSTATUS0_field {
  uint32_t                         u15LBHLINK3MAXFREELINES:15;
  uint32_t                         :1;
  uint32_t                         u15LBHLINK3MAXFREELINESSTORE:15;
} stc_VIDEOSS_BLITENGCFG_LBHLINK3BUFFERSTATUS0_field_t;

typedef union un_VIDEOSS_BLITENGCFG_LBHLINK3BUFFERSTATUS0 {
  uint32_t                         u32Register;
  stc_VIDEOSS_BLITENGCFG_LBHLINK3BUFFERSTATUS0_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_BLITENGCFG_LBHLINK3BUFFERSTATUS0_t;

/**
  * \brief Buffer status register 1 for the line buffer handshake. (VIDEOSS_BLITENGCFG_LBHLINK3BUFFERSTATUS1)
  */
typedef struct stc_VIDEOSS_BLITENGCFG_LBHLINK3BUFFERSTATUS1_field {
  uint32_t                         u15LBHLINK3AVAILABLELINES:15;
  uint32_t                         :1;
  uint32_t                         u1LBHLINK3SAMEFRAME:1;
  uint32_t                         :15;
} stc_VIDEOSS_BLITENGCFG_LBHLINK3BUFFERSTATUS1_field_t;

typedef union un_VIDEOSS_BLITENGCFG_LBHLINK3BUFFERSTATUS1 {
  uint32_t                         u32Register;
  stc_VIDEOSS_BLITENGCFG_LBHLINK3BUFFERSTATUS1_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_BLITENGCFG_LBHLINK3BUFFERSTATUS1_t;

/**
  * \brief Buffer status register 3 for the line buffer handshake. (VIDEOSS_BLITENGCFG_LBHLINK3BUFFERSTATUS3)
  */
typedef struct stc_VIDEOSS_BLITENGCFG_LBHLINK3BUFFERSTATUS3_field {
  uint32_t                         u14LBHLINK3FETCHLINE:14;
  uint32_t                         :2;
  uint32_t                         u14LBHLINK3STORELINE:14;
  uint32_t                         :2;
} stc_VIDEOSS_BLITENGCFG_LBHLINK3BUFFERSTATUS3_field_t;

typedef union un_VIDEOSS_BLITENGCFG_LBHLINK3BUFFERSTATUS3 {
  uint32_t                         u32Register;
  stc_VIDEOSS_BLITENGCFG_LBHLINK3BUFFERSTATUS3_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_BLITENGCFG_LBHLINK3BUFFERSTATUS3_t;

/**
  * \brief Buffer status register 4 for the line buffer handshake. (VIDEOSS_BLITENGCFG_LBHLINK3BUFFERSTATUS4)
  */
typedef struct stc_VIDEOSS_BLITENGCFG_LBHLINK3BUFFERSTATUS4_field {
  uint32_t                         u15LBHLINK3FETCHSTOPLINE:15;
  uint32_t                         :1;
  uint32_t                         u15LBHLINK3STORESTOPLINE:15;
} stc_VIDEOSS_BLITENGCFG_LBHLINK3BUFFERSTATUS4_field_t;

typedef union un_VIDEOSS_BLITENGCFG_LBHLINK3BUFFERSTATUS4 {
  uint32_t                         u32Register;
  stc_VIDEOSS_BLITENGCFG_LBHLINK3BUFFERSTATUS4_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_BLITENGCFG_LBHLINK3BUFFERSTATUS4_t;

/**
  * \brief Line buffer configuration register 0. (VIDEOSS_BLITENGCFG_LBHLINK4BUFFERCONFIG0)
  */
typedef struct stc_VIDEOSS_BLITENGCFG_LBHLINK4BUFFERCONFIG0_field {
  uint32_t                         u1LBHLINK4ENABLE:1;
  uint32_t                         :3;
  uint32_t                         u1LBHLINK4SIZEENABLE:1;
  uint32_t                         :3;
  uint32_t                         u4LBHLINK4BUFLINES:4;
  uint32_t                         :20;
} stc_VIDEOSS_BLITENGCFG_LBHLINK4BUFFERCONFIG0_field_t;

typedef union un_VIDEOSS_BLITENGCFG_LBHLINK4BUFFERCONFIG0 {
  uint32_t                         u32Register;
  stc_VIDEOSS_BLITENGCFG_LBHLINK4BUFFERCONFIG0_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_BLITENGCFG_LBHLINK4BUFFERCONFIG0_t;

/**
  * \brief Line buffer configuration register 1. (VIDEOSS_BLITENGCFG_LBHLINK4BUFFERCONFIG1)
  */
typedef struct stc_VIDEOSS_BLITENGCFG_LBHLINK4BUFFERCONFIG1_field {
  uint32_t                         u14LBHLINK4FRAMELINES:14;
  uint32_t                         :2;
  uint32_t                         u14LBHLINK4KEEPLINES:14;
  uint32_t                         :2;
} stc_VIDEOSS_BLITENGCFG_LBHLINK4BUFFERCONFIG1_field_t;

typedef union un_VIDEOSS_BLITENGCFG_LBHLINK4BUFFERCONFIG1 {
  uint32_t                         u32Register;
  stc_VIDEOSS_BLITENGCFG_LBHLINK4BUFFERCONFIG1_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_BLITENGCFG_LBHLINK4BUFFERCONFIG1_t;

/**
  * \brief Buffer status register 0 for the line buffer handshake. Writing to this register has no effect, reading provides the value and simultaneously resets the internal register. The value provided after the first read or if LBH is inactive is not valid. (VIDEOSS_BLITENGCFG_LBHLINK4BUFFERSTATUS0)
  */
typedef struct stc_VIDEOSS_BLITENGCFG_LBHLINK4BUFFERSTATUS0_field {
  uint32_t                         u15LBHLINK4MAXFREELINES:15;
  uint32_t                         :1;
  uint32_t                         u15LBHLINK4MAXFREELINESSTORE:15;
} stc_VIDEOSS_BLITENGCFG_LBHLINK4BUFFERSTATUS0_field_t;

typedef union un_VIDEOSS_BLITENGCFG_LBHLINK4BUFFERSTATUS0 {
  uint32_t                         u32Register;
  stc_VIDEOSS_BLITENGCFG_LBHLINK4BUFFERSTATUS0_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_BLITENGCFG_LBHLINK4BUFFERSTATUS0_t;

/**
  * \brief Buffer status register 1 for the line buffer handshake. (VIDEOSS_BLITENGCFG_LBHLINK4BUFFERSTATUS1)
  */
typedef struct stc_VIDEOSS_BLITENGCFG_LBHLINK4BUFFERSTATUS1_field {
  uint32_t                         u15LBHLINK4AVAILABLELINES:15;
  uint32_t                         :1;
  uint32_t                         u1LBHLINK4SAMEFRAME:1;
  uint32_t                         :15;
} stc_VIDEOSS_BLITENGCFG_LBHLINK4BUFFERSTATUS1_field_t;

typedef union un_VIDEOSS_BLITENGCFG_LBHLINK4BUFFERSTATUS1 {
  uint32_t                         u32Register;
  stc_VIDEOSS_BLITENGCFG_LBHLINK4BUFFERSTATUS1_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_BLITENGCFG_LBHLINK4BUFFERSTATUS1_t;

/**
  * \brief Buffer status register 3 for the line buffer handshake. (VIDEOSS_BLITENGCFG_LBHLINK4BUFFERSTATUS3)
  */
typedef struct stc_VIDEOSS_BLITENGCFG_LBHLINK4BUFFERSTATUS3_field {
  uint32_t                         u14LBHLINK4FETCHLINE:14;
  uint32_t                         :2;
  uint32_t                         u14LBHLINK4STORELINE:14;
  uint32_t                         :2;
} stc_VIDEOSS_BLITENGCFG_LBHLINK4BUFFERSTATUS3_field_t;

typedef union un_VIDEOSS_BLITENGCFG_LBHLINK4BUFFERSTATUS3 {
  uint32_t                         u32Register;
  stc_VIDEOSS_BLITENGCFG_LBHLINK4BUFFERSTATUS3_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_BLITENGCFG_LBHLINK4BUFFERSTATUS3_t;

/**
  * \brief Buffer status register 4 for the line buffer handshake. (VIDEOSS_BLITENGCFG_LBHLINK4BUFFERSTATUS4)
  */
typedef struct stc_VIDEOSS_BLITENGCFG_LBHLINK4BUFFERSTATUS4_field {
  uint32_t                         u15LBHLINK4FETCHSTOPLINE:15;
  uint32_t                         :1;
  uint32_t                         u15LBHLINK4STORESTOPLINE:15;
} stc_VIDEOSS_BLITENGCFG_LBHLINK4BUFFERSTATUS4_field_t;

typedef union un_VIDEOSS_BLITENGCFG_LBHLINK4BUFFERSTATUS4 {
  uint32_t                         u32Register;
  stc_VIDEOSS_BLITENGCFG_LBHLINK4BUFFERSTATUS4_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_BLITENGCFG_LBHLINK4BUFFERSTATUS4_t;

/**
  * \brief Shared Palette Memory. (VIDEOSS_BLITENGCFG_PALETTE)
  */
typedef struct stc_VIDEOSS_BLITENGCFG_PALETTE_field {
  uint32_t                         u24PALETTEENTRY:24;
  uint32_t                         :8;
} stc_VIDEOSS_BLITENGCFG_PALETTE_field_t;

typedef union un_VIDEOSS_BLITENGCFG_PALETTE {
  uint32_t                         u32Register;
  stc_VIDEOSS_BLITENGCFG_PALETTE_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_BLITENGCFG_PALETTE_t;



/**
  * \brief Common static control options. (VIDEOSS_FETCHSRC_STATICCONTROL)
  */
typedef struct stc_VIDEOSS_FETCHSRC_STATICCONTROL_field {
  uint32_t                         u1SHDEN:1;
  uint32_t                         :15;
  uint32_t                         u8BASEADDRESSAUTOUPDATE:8;
  uint32_t                         :8;
} stc_VIDEOSS_FETCHSRC_STATICCONTROL_field_t;

typedef union un_VIDEOSS_FETCHSRC_STATICCONTROL {
  uint32_t                         u32Register;
  stc_VIDEOSS_FETCHSRC_STATICCONTROL_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_FETCHSRC_STATICCONTROL_t;

/**
  * \brief AXI interface buffer management register (VIDEOSS_FETCHSRC_BURSTBUFFERMANAGEMENT)
  */
typedef struct stc_VIDEOSS_FETCHSRC_BURSTBUFFERMANAGEMENT_field {
  uint32_t                         u8SETNUMBUFFERS:8;
  uint32_t                         u5SETBURSTLENGTH:5;
  uint32_t                         :18;
  uint32_t                         u1LINEMODE:1;
} stc_VIDEOSS_FETCHSRC_BURSTBUFFERMANAGEMENT_field_t;

typedef union un_VIDEOSS_FETCHSRC_BURSTBUFFERMANAGEMENT {
  uint32_t                         u32Register;
  stc_VIDEOSS_FETCHSRC_BURSTBUFFERMANAGEMENT_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_FETCHSRC_BURSTBUFFERMANAGEMENT_t;

/**
  * \brief Source buffer base address of layer 0. (VIDEOSS_FETCHSRC_BASEADDRESS0)
  */
typedef struct stc_VIDEOSS_FETCHSRC_BASEADDRESS0_field {
  uint32_t                         u32BASEADDRESS0:32;
} stc_VIDEOSS_FETCHSRC_BASEADDRESS0_field_t;

typedef union un_VIDEOSS_FETCHSRC_BASEADDRESS0 {
  uint32_t                         u32Register;
  stc_VIDEOSS_FETCHSRC_BASEADDRESS0_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_FETCHSRC_BASEADDRESS0_t;

/**
  * \brief Source buffer attributes for layer 0. (VIDEOSS_FETCHSRC_SOURCEBUFFERATTRIBUTES0)
  */
typedef struct stc_VIDEOSS_FETCHSRC_SOURCEBUFFERATTRIBUTES0_field {
  uint32_t                         u16STRIDE0:16;
  uint32_t                         u6BITSPERPIXEL0:6;
  uint32_t                         :10;
} stc_VIDEOSS_FETCHSRC_SOURCEBUFFERATTRIBUTES0_field_t;

typedef union un_VIDEOSS_FETCHSRC_SOURCEBUFFERATTRIBUTES0 {
  uint32_t                         u32Register;
  stc_VIDEOSS_FETCHSRC_SOURCEBUFFERATTRIBUTES0_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_FETCHSRC_SOURCEBUFFERATTRIBUTES0_t;

/**
  * \brief Source buffer dimension of layer 0. (VIDEOSS_FETCHSRC_SOURCEBUFFERDIMENSION0)
  */
typedef struct stc_VIDEOSS_FETCHSRC_SOURCEBUFFERDIMENSION0_field {
  uint32_t                         u14LINEWIDTH0:14;
  uint32_t                         :2;
  uint32_t                         u14LINECOUNT0:14;
  uint32_t                         :2;
} stc_VIDEOSS_FETCHSRC_SOURCEBUFFERDIMENSION0_field_t;

typedef union un_VIDEOSS_FETCHSRC_SOURCEBUFFERDIMENSION0 {
  uint32_t                         u32Register;
  stc_VIDEOSS_FETCHSRC_SOURCEBUFFERDIMENSION0_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_FETCHSRC_SOURCEBUFFERDIMENSION0_t;

/**
  * \brief Size of color components for RGB, YUV and index formats (layer 0). (VIDEOSS_FETCHSRC_COLORCOMPONENTBITS0)
  */
typedef struct stc_VIDEOSS_FETCHSRC_COLORCOMPONENTBITS0_field {
  uint32_t                         u4COMPONENTBITSALPHA0:4;
  uint32_t                         :4;
  uint32_t                         u4COMPONENTBITSBLUE0:4;
  uint32_t                         :4;
  uint32_t                         u4COMPONENTBITSGREEN0:4;
  uint32_t                         :4;
  uint32_t                         u4COMPONENTBITSRED0:4;
  uint32_t                         :3;
  uint32_t                         u1ITUFORMAT0:1;
} stc_VIDEOSS_FETCHSRC_COLORCOMPONENTBITS0_field_t;

typedef union un_VIDEOSS_FETCHSRC_COLORCOMPONENTBITS0 {
  uint32_t                         u32Register;
  stc_VIDEOSS_FETCHSRC_COLORCOMPONENTBITS0_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_FETCHSRC_COLORCOMPONENTBITS0_t;

/**
  * \brief Bit position of color components for RGB, YUV and index formats (layer 0). (VIDEOSS_FETCHSRC_COLORCOMPONENTSHIFT0)
  */
typedef struct stc_VIDEOSS_FETCHSRC_COLORCOMPONENTSHIFT0_field {
  uint32_t                         u5COMPONENTSHIFTALPHA0:5;
  uint32_t                         :3;
  uint32_t                         u5COMPONENTSHIFTBLUE0:5;
  uint32_t                         :3;
  uint32_t                         u5COMPONENTSHIFTGREEN0:5;
  uint32_t                         :3;
  uint32_t                         u5COMPONENTSHIFTRED0:5;
  uint32_t                         :3;
} stc_VIDEOSS_FETCHSRC_COLORCOMPONENTSHIFT0_field_t;

typedef union un_VIDEOSS_FETCHSRC_COLORCOMPONENTSHIFT0 {
  uint32_t                         u32Register;
  stc_VIDEOSS_FETCHSRC_COLORCOMPONENTSHIFT0_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_FETCHSRC_COLORCOMPONENTSHIFT0_t;

/**
  * \brief Position of layer 0 within the destination frame. (VIDEOSS_FETCHSRC_LAYEROFFSET0)
  */
typedef struct stc_VIDEOSS_FETCHSRC_LAYEROFFSET0_field {
  uint32_t                         u15LAYERXOFFSET0:15;
  uint32_t                         :1;
  uint32_t                         u15LAYERYOFFSET0:15;
} stc_VIDEOSS_FETCHSRC_LAYEROFFSET0_field_t;

typedef union un_VIDEOSS_FETCHSRC_LAYEROFFSET0 {
  uint32_t                         u32Register;
  stc_VIDEOSS_FETCHSRC_LAYEROFFSET0_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_FETCHSRC_LAYEROFFSET0_t;

/**
  * \brief Clip window position for layer 0. (VIDEOSS_FETCHSRC_CLIPWINDOWOFFSET0)
  */
typedef struct stc_VIDEOSS_FETCHSRC_CLIPWINDOWOFFSET0_field {
  uint32_t                         u15CLIPWINDOWXOFFSET0:15;
  uint32_t                         :1;
  uint32_t                         u15CLIPWINDOWYOFFSET0:15;
} stc_VIDEOSS_FETCHSRC_CLIPWINDOWOFFSET0_field_t;

typedef union un_VIDEOSS_FETCHSRC_CLIPWINDOWOFFSET0 {
  uint32_t                         u32Register;
  stc_VIDEOSS_FETCHSRC_CLIPWINDOWOFFSET0_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_FETCHSRC_CLIPWINDOWOFFSET0_t;

/**
  * \brief Clip window size for layer 0. (VIDEOSS_FETCHSRC_CLIPWINDOWDIMENSIONS0)
  */
typedef struct stc_VIDEOSS_FETCHSRC_CLIPWINDOWDIMENSIONS0_field {
  uint32_t                         u14CLIPWINDOWWIDTH0:14;
  uint32_t                         :2;
  uint32_t                         u14CLIPWINDOWHEIGHT0:14;
  uint32_t                         :2;
} stc_VIDEOSS_FETCHSRC_CLIPWINDOWDIMENSIONS0_field_t;

typedef union un_VIDEOSS_FETCHSRC_CLIPWINDOWDIMENSIONS0 {
  uint32_t                         u32Register;
  stc_VIDEOSS_FETCHSRC_CLIPWINDOWDIMENSIONS0_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_FETCHSRC_CLIPWINDOWDIMENSIONS0_t;

/**
  * \brief Constant color for layer 0. (VIDEOSS_FETCHSRC_CONSTANTCOLOR0)
  */
typedef struct stc_VIDEOSS_FETCHSRC_CONSTANTCOLOR0_field {
  uint32_t                         u8CONSTANTALPHA0:8;
  uint32_t                         u8CONSTANTBLUE0:8;
  uint32_t                         u8CONSTANTGREEN0:8;
  uint32_t                         u8CONSTANTRED0:8;
} stc_VIDEOSS_FETCHSRC_CONSTANTCOLOR0_field_t;

typedef union un_VIDEOSS_FETCHSRC_CONSTANTCOLOR0 {
  uint32_t                         u32Register;
  stc_VIDEOSS_FETCHSRC_CONSTANTCOLOR0_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_FETCHSRC_CONSTANTCOLOR0_t;

/**
  * \brief Common properties of layer 0. (VIDEOSS_FETCHSRC_LAYERPROPERTY0)
  */
typedef struct stc_VIDEOSS_FETCHSRC_LAYERPROPERTY0_field {
  uint32_t                         u1PALETTEENABLE0:1;
  uint32_t                         u2TILEMODE0:2;
  uint32_t                         u1ALPHASRCENABLE0:1;
  uint32_t                         u1ALPHACONSTENABLE0:1;
  uint32_t                         u1ALPHAMASKENABLE0:1;
  uint32_t                         u1ALPHATRANSENABLE0:1;
  uint32_t                         u1RGBALPHASRCENABLE0:1;
  uint32_t                         u1RGBALPHACONSTENABLE0:1;
  uint32_t                         u1RGBALPHAMASKENABLE0:1;
  uint32_t                         u1RGBALPHATRANSENABLE0:1;
  uint32_t                         u1PREMULCONSTRGB0:1;
  uint32_t                         u2YUVCONVERSIONMODE0:2;
  uint32_t                         u1GAMMAREMOVEENABLE0:1;
  uint32_t                         :1;
  uint32_t                         u11PALETTEOFFSET0:11;
  uint32_t                         u3PALETTEIDWIDTH0:3;
  uint32_t                         u1CLIPWINDOWENABLE0:1;
  uint32_t                         u1SOURCEBUFFERENABLE0:1;
} stc_VIDEOSS_FETCHSRC_LAYERPROPERTY0_field_t;

typedef union un_VIDEOSS_FETCHSRC_LAYERPROPERTY0 {
  uint32_t                         u32Register;
  stc_VIDEOSS_FETCHSRC_LAYERPROPERTY0_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_FETCHSRC_LAYERPROPERTY0_t;

/**
  * \brief Output frame dimension. (VIDEOSS_FETCHSRC_FRAMEDIMENSIONS)
  */
typedef struct stc_VIDEOSS_FETCHSRC_FRAMEDIMENSIONS_field {
  uint32_t                         u14FRAMEWIDTH:14;
  uint32_t                         :2;
  uint32_t                         u14FRAMEHEIGHT:14;
  uint32_t                         :1;
  uint32_t                         u1EMPTYFRAME:1;
} stc_VIDEOSS_FETCHSRC_FRAMEDIMENSIONS_field_t;

typedef union un_VIDEOSS_FETCHSRC_FRAMEDIMENSIONS {
  uint32_t                         u32Register;
  stc_VIDEOSS_FETCHSRC_FRAMEDIMENSIONS_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_FETCHSRC_FRAMEDIMENSIONS_t;

/**
  * \brief Resampling options for output frame. (VIDEOSS_FETCHSRC_FRAMERESAMPLING)
  */
typedef struct stc_VIDEOSS_FETCHSRC_FRAMERESAMPLING_field {
  uint32_t                         u6STARTX:6;
  uint32_t                         u6STARTY:6;
  uint32_t                         u6DELTAX:6;
  uint32_t                         u6DELTAY:6;
  uint32_t                         u1SWAPDIRECTION:1;
  uint32_t                         :7;
} stc_VIDEOSS_FETCHSRC_FRAMERESAMPLING_field_t;

typedef union un_VIDEOSS_FETCHSRC_FRAMERESAMPLING {
  uint32_t                         u32Register;
  stc_VIDEOSS_FETCHSRC_FRAMERESAMPLING_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_FETCHSRC_FRAMERESAMPLING_t;

/**
  * \brief Warping control options. (VIDEOSS_FETCHSRC_WARPCONTROL)
  */
typedef struct stc_VIDEOSS_FETCHSRC_WARPCONTROL_field {
  uint32_t                         u6WARPBITSPERPIXEL:6;
  uint32_t                         :2;
  uint32_t                         u2WARPCOORDINATEMODE:2;
  uint32_t                         :2;
  uint32_t                         u1WARPSYMMETRICOFFSET:1;
  uint32_t                         :19;
} stc_VIDEOSS_FETCHSRC_WARPCONTROL_field_t;

typedef union un_VIDEOSS_FETCHSRC_WARPCONTROL {
  uint32_t                         u32Register;
  stc_VIDEOSS_FETCHSRC_WARPCONTROL_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_FETCHSRC_WARPCONTROL_t;

/**
  * \brief Start value X for affine/perspective warping. (VIDEOSS_FETCHSRC_PERSPSTARTX)
  */
typedef struct stc_VIDEOSS_FETCHSRC_PERSPSTARTX_field {
  uint32_t                         u32PERSPSTARTX:32;
} stc_VIDEOSS_FETCHSRC_PERSPSTARTX_field_t;

typedef union un_VIDEOSS_FETCHSRC_PERSPSTARTX {
  uint32_t                         u32Register;
  stc_VIDEOSS_FETCHSRC_PERSPSTARTX_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_FETCHSRC_PERSPSTARTX_t;

/**
  * \brief Start value Y for affine/perspective warping. (VIDEOSS_FETCHSRC_PERSPSTARTY)
  */
typedef struct stc_VIDEOSS_FETCHSRC_PERSPSTARTY_field {
  uint32_t                         u32PERSPSTARTY:32;
} stc_VIDEOSS_FETCHSRC_PERSPSTARTY_field_t;

typedef union un_VIDEOSS_FETCHSRC_PERSPSTARTY {
  uint32_t                         u32Register;
  stc_VIDEOSS_FETCHSRC_PERSPSTARTY_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_FETCHSRC_PERSPSTARTY_t;

/**
  * \brief DeltaXX increment for affine/perspective warping. (VIDEOSS_FETCHSRC_PERSPDELTAXX)
  */
typedef struct stc_VIDEOSS_FETCHSRC_PERSPDELTAXX_field {
  uint32_t                         u32PERSPDELTAXX:32;
} stc_VIDEOSS_FETCHSRC_PERSPDELTAXX_field_t;

typedef union un_VIDEOSS_FETCHSRC_PERSPDELTAXX {
  uint32_t                         u32Register;
  stc_VIDEOSS_FETCHSRC_PERSPDELTAXX_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_FETCHSRC_PERSPDELTAXX_t;

/**
  * \brief DeltaYY increment for affine/perspective warping. (VIDEOSS_FETCHSRC_PERSPDELTAYY)
  */
typedef struct stc_VIDEOSS_FETCHSRC_PERSPDELTAYY_field {
  uint32_t                         u32PERSPDELTAYY:32;
} stc_VIDEOSS_FETCHSRC_PERSPDELTAYY_field_t;

typedef union un_VIDEOSS_FETCHSRC_PERSPDELTAYY {
  uint32_t                         u32Register;
  stc_VIDEOSS_FETCHSRC_PERSPDELTAYY_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_FETCHSRC_PERSPDELTAYY_t;

/**
  * \brief DeltaXY increment for affine/perspective warping. (VIDEOSS_FETCHSRC_PERSPDELTAXY)
  */
typedef struct stc_VIDEOSS_FETCHSRC_PERSPDELTAXY_field {
  uint32_t                         u32PERSPDELTAXY:32;
} stc_VIDEOSS_FETCHSRC_PERSPDELTAXY_field_t;

typedef union un_VIDEOSS_FETCHSRC_PERSPDELTAXY {
  uint32_t                         u32Register;
  stc_VIDEOSS_FETCHSRC_PERSPDELTAXY_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_FETCHSRC_PERSPDELTAXY_t;

/**
  * \brief DeltaYX increment for affine/perspective warping. (VIDEOSS_FETCHSRC_PERSPDELTAYX)
  */
typedef struct stc_VIDEOSS_FETCHSRC_PERSPDELTAYX_field {
  uint32_t                         u32PERSPDELTAYX:32;
} stc_VIDEOSS_FETCHSRC_PERSPDELTAYX_field_t;

typedef union un_VIDEOSS_FETCHSRC_PERSPDELTAYX {
  uint32_t                         u32Register;
  stc_VIDEOSS_FETCHSRC_PERSPDELTAYX_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_FETCHSRC_PERSPDELTAYX_t;

/**
  * \brief Start value W for perspective warping. (VIDEOSS_FETCHSRC_PERSPSTARTW)
  */
typedef struct stc_VIDEOSS_FETCHSRC_PERSPSTARTW_field {
  uint32_t                         u32PERSPSTARTW:32;
} stc_VIDEOSS_FETCHSRC_PERSPSTARTW_field_t;

typedef union un_VIDEOSS_FETCHSRC_PERSPSTARTW {
  uint32_t                         u32Register;
  stc_VIDEOSS_FETCHSRC_PERSPSTARTW_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_FETCHSRC_PERSPSTARTW_t;

/**
  * \brief DeltaWX increment for perspective warping. (VIDEOSS_FETCHSRC_PERSPDELTAXW)
  */
typedef struct stc_VIDEOSS_FETCHSRC_PERSPDELTAXW_field {
  uint32_t                         u32PERSPDELTAXW:32;
} stc_VIDEOSS_FETCHSRC_PERSPDELTAXW_field_t;

typedef union un_VIDEOSS_FETCHSRC_PERSPDELTAXW {
  uint32_t                         u32Register;
  stc_VIDEOSS_FETCHSRC_PERSPDELTAXW_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_FETCHSRC_PERSPDELTAXW_t;

/**
  * \brief DeltaWY increment for perspective warping. (VIDEOSS_FETCHSRC_PERSPDELTAYW)
  */
typedef struct stc_VIDEOSS_FETCHSRC_PERSPDELTAYW_field {
  uint32_t                         u32PERSPDELTAYW:32;
} stc_VIDEOSS_FETCHSRC_PERSPDELTAYW_field_t;

typedef union un_VIDEOSS_FETCHSRC_PERSPDELTAYW {
  uint32_t                         u32Register;
  stc_VIDEOSS_FETCHSRC_PERSPDELTAYW_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_FETCHSRC_PERSPDELTAYW_t;

/**
  * \brief Start value X for arbitrary warping. (VIDEOSS_FETCHSRC_ARBSTARTX)
  */
typedef struct stc_VIDEOSS_FETCHSRC_ARBSTARTX_field {
  uint32_t                         u21ARBSTARTX:21;
  uint32_t                         :11;
} stc_VIDEOSS_FETCHSRC_ARBSTARTX_field_t;

typedef union un_VIDEOSS_FETCHSRC_ARBSTARTX {
  uint32_t                         u32Register;
  stc_VIDEOSS_FETCHSRC_ARBSTARTX_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_FETCHSRC_ARBSTARTX_t;

/**
  * \brief Start value Y for arbitrary warping. (VIDEOSS_FETCHSRC_ARBSTARTY)
  */
typedef struct stc_VIDEOSS_FETCHSRC_ARBSTARTY_field {
  uint32_t                         u21ARBSTARTY:21;
  uint32_t                         :11;
} stc_VIDEOSS_FETCHSRC_ARBSTARTY_field_t;

typedef union un_VIDEOSS_FETCHSRC_ARBSTARTY {
  uint32_t                         u32Register;
  stc_VIDEOSS_FETCHSRC_ARBSTARTY_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_FETCHSRC_ARBSTARTY_t;

/**
  * \brief Start values for delta incrementation of arbitrary warping. (VIDEOSS_FETCHSRC_ARBDELTA)
  */
typedef struct stc_VIDEOSS_FETCHSRC_ARBDELTA_field {
  uint32_t                         u8ARBDELTAXX:8;
  uint32_t                         u8ARBDELTAXY:8;
  uint32_t                         u8ARBDELTAYX:8;
  uint32_t                         u8ARBDELTAYY:8;
} stc_VIDEOSS_FETCHSRC_ARBDELTA_field_t;

typedef union un_VIDEOSS_FETCHSRC_ARBDELTA {
  uint32_t                         u32Register;
  stc_VIDEOSS_FETCHSRC_ARBDELTA_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_FETCHSRC_ARBDELTA_t;

/**
  * \brief FIR sequence control register. (VIDEOSS_FETCHSRC_FIRPOSITIONS)
  */
typedef struct stc_VIDEOSS_FETCHSRC_FIRPOSITIONS_field {
  uint32_t                         u4FIR0POSITION:4;
  uint32_t                         u4FIR1POSITION:4;
  uint32_t                         u4FIR2POSITION:4;
  uint32_t                         u4FIR3POSITION:4;
  uint32_t                         :16;
} stc_VIDEOSS_FETCHSRC_FIRPOSITIONS_field_t;

typedef union un_VIDEOSS_FETCHSRC_FIRPOSITIONS {
  uint32_t                         u32Register;
  stc_VIDEOSS_FETCHSRC_FIRPOSITIONS_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_FETCHSRC_FIRPOSITIONS_t;

/**
  * \brief FIR coefficients register. (VIDEOSS_FETCHSRC_FIRCOEFFICIENTS)
  */
typedef struct stc_VIDEOSS_FETCHSRC_FIRCOEFFICIENTS_field {
  uint32_t                         u8FIR0COEFFICIENT:8;
  uint32_t                         u8FIR1COEFFICIENT:8;
  uint32_t                         u8FIR2COEFFICIENT:8;
  uint32_t                         u8FIR3COEFFICIENT:8;
} stc_VIDEOSS_FETCHSRC_FIRCOEFFICIENTS_field_t;

typedef union un_VIDEOSS_FETCHSRC_FIRCOEFFICIENTS {
  uint32_t                         u32Register;
  stc_VIDEOSS_FETCHSRC_FIRCOEFFICIENTS_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_FETCHSRC_FIRCOEFFICIENTS_t;

/**
  * \brief Control options for RLAD decompression. (VIDEOSS_FETCHSRC_DECODECONTROL)
  */
typedef struct stc_VIDEOSS_FETCHSRC_DECODECONTROL_field {
  uint32_t                         u2COMPRESSIONMODE:2;
  uint32_t                         :14;
  uint32_t                         u4RLADCOMPBITSRED:4;
  uint32_t                         u4RLADCOMPBITSGREEN:4;
  uint32_t                         u4RLADCOMPBITSBLUE:4;
  uint32_t                         u4RLADCOMPBITSALPHA:4;
} stc_VIDEOSS_FETCHSRC_DECODECONTROL_field_t;

typedef union un_VIDEOSS_FETCHSRC_DECODECONTROL {
  uint32_t                         u32Register;
  stc_VIDEOSS_FETCHSRC_DECODECONTROL_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_FETCHSRC_DECODECONTROL_t;

/**
  * \brief Source buffer length for compressed data. (VIDEOSS_FETCHSRC_SOURCEBUFFERLENGTH)
  */
typedef struct stc_VIDEOSS_FETCHSRC_SOURCEBUFFERLENGTH_field {
  uint32_t                         u29RLEWORDS:29;
  uint32_t                         :3;
} stc_VIDEOSS_FETCHSRC_SOURCEBUFFERLENGTH_field_t;

typedef union un_VIDEOSS_FETCHSRC_SOURCEBUFFERLENGTH {
  uint32_t                         u32Register;
  stc_VIDEOSS_FETCHSRC_SOURCEBUFFERLENGTH_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_FETCHSRC_SOURCEBUFFERLENGTH_t;

/**
  * \brief Shared common control settings for all layers. (VIDEOSS_FETCHSRC_CONTROL)
  */
typedef struct stc_VIDEOSS_FETCHSRC_CONTROL_field {
  uint32_t                         u3RASTERMODE:3;
  uint32_t                         u2INPUTSELECT:2;
  uint32_t                         u1YUV422UPSAMPLINGMODE:1;
  uint32_t                         :1;
  uint32_t                         u1RAWPIXEL:1;
  uint32_t                         :8;
  uint32_t                         u1CLIPCOLOR:1;
  uint32_t                         :3;
  uint32_t                         u3FILTERMODE:3;
  uint32_t                         :5;
  uint32_t                         u2GEOMETRY:2;
  uint32_t                         :2;
} stc_VIDEOSS_FETCHSRC_CONTROL_field_t;

typedef union un_VIDEOSS_FETCHSRC_CONTROL {
  uint32_t                         u32Register;
  stc_VIDEOSS_FETCHSRC_CONTROL_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_FETCHSRC_CONTROL_t;

/**
  * \brief Shadow load trigger. (VIDEOSS_FETCHSRC_CONTROLTRIGGER)
  */
typedef struct stc_VIDEOSS_FETCHSRC_CONTROLTRIGGER_field {
  uint32_t                         u1SHDTOKGEN:1;
  uint32_t                         :31;
} stc_VIDEOSS_FETCHSRC_CONTROLTRIGGER_field_t;

typedef union un_VIDEOSS_FETCHSRC_CONTROLTRIGGER {
  uint32_t                         u32Register;
  stc_VIDEOSS_FETCHSRC_CONTROLTRIGGER_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_FETCHSRC_CONTROLTRIGGER_t;

/**
  * \brief Frame start trigger. (VIDEOSS_FETCHSRC_START)
  */
typedef struct stc_VIDEOSS_FETCHSRC_START_field {
  uint32_t                         u1START:1;
  uint32_t                         :31;
} stc_VIDEOSS_FETCHSRC_START_field_t;

typedef union un_VIDEOSS_FETCHSRC_START {
  uint32_t                         u32Register;
  stc_VIDEOSS_FETCHSRC_START_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_FETCHSRC_START_t;

/**
  * \brief Fetch unit type. (VIDEOSS_FETCHSRC_FETCHTYPE)
  */
typedef struct stc_VIDEOSS_FETCHSRC_FETCHTYPE_field {
  uint32_t                         u4FETCHTYPE:4;
  uint32_t                         :28;
} stc_VIDEOSS_FETCHSRC_FETCHTYPE_field_t;

typedef union un_VIDEOSS_FETCHSRC_FETCHTYPE {
  uint32_t                         u32Register;
  stc_VIDEOSS_FETCHSRC_FETCHTYPE_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_FETCHSRC_FETCHTYPE_t;

/**
  * \brief Status information of the RLAD decoder. (VIDEOSS_FETCHSRC_DECODERSTATUS)
  */
typedef struct stc_VIDEOSS_FETCHSRC_DECODERSTATUS_field {
  uint32_t                         u1BUFFERTOOSMALL:1;
  uint32_t                         u1BUFFERTOOLARGE:1;
  uint32_t                         :30;
} stc_VIDEOSS_FETCHSRC_DECODERSTATUS_field_t;

typedef union un_VIDEOSS_FETCHSRC_DECODERSTATUS {
  uint32_t                         u32Register;
  stc_VIDEOSS_FETCHSRC_DECODERSTATUS_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_FETCHSRC_DECODERSTATUS_t;

/**
  * \brief Burst buffer properties. (VIDEOSS_FETCHSRC_BURSTBUFFERPROPERTIES)
  */
typedef struct stc_VIDEOSS_FETCHSRC_BURSTBUFFERPROPERTIES_field {
  uint32_t                         u8MANAGEDBURSTBUFFERS:8;
  uint32_t                         u5BURSTLENGTHFORMAXBUFFERS:5;
  uint32_t                         :19;
} stc_VIDEOSS_FETCHSRC_BURSTBUFFERPROPERTIES_field_t;

typedef union un_VIDEOSS_FETCHSRC_BURSTBUFFERPROPERTIES {
  uint32_t                         u32Register;
  stc_VIDEOSS_FETCHSRC_BURSTBUFFERPROPERTIES_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_FETCHSRC_BURSTBUFFERPROPERTIES_t;



/**
  * \brief Common static control options. (VIDEOSS_FETCHDST_STATICCONTROL)
  */
typedef struct stc_VIDEOSS_FETCHDST_STATICCONTROL_field {
  uint32_t                         u1SHDEN:1;
  uint32_t                         :15;
  uint32_t                         u8BASEADDRESSAUTOUPDATE:8;
  uint32_t                         :8;
} stc_VIDEOSS_FETCHDST_STATICCONTROL_field_t;

typedef union un_VIDEOSS_FETCHDST_STATICCONTROL {
  uint32_t                         u32Register;
  stc_VIDEOSS_FETCHDST_STATICCONTROL_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_FETCHDST_STATICCONTROL_t;

/**
  * \brief AXI interface buffer management register (VIDEOSS_FETCHDST_BURSTBUFFERMANAGEMENT)
  */
typedef struct stc_VIDEOSS_FETCHDST_BURSTBUFFERMANAGEMENT_field {
  uint32_t                         u8SETNUMBUFFERS:8;
  uint32_t                         u5SETBURSTLENGTH:5;
  uint32_t                         :18;
  uint32_t                         u1LINEMODE:1;
} stc_VIDEOSS_FETCHDST_BURSTBUFFERMANAGEMENT_field_t;

typedef union un_VIDEOSS_FETCHDST_BURSTBUFFERMANAGEMENT {
  uint32_t                         u32Register;
  stc_VIDEOSS_FETCHDST_BURSTBUFFERMANAGEMENT_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_FETCHDST_BURSTBUFFERMANAGEMENT_t;

/**
  * \brief Source buffer base address of layer 0. (VIDEOSS_FETCHDST_BASEADDRESS0)
  */
typedef struct stc_VIDEOSS_FETCHDST_BASEADDRESS0_field {
  uint32_t                         u32BASEADDRESS0:32;
} stc_VIDEOSS_FETCHDST_BASEADDRESS0_field_t;

typedef union un_VIDEOSS_FETCHDST_BASEADDRESS0 {
  uint32_t                         u32Register;
  stc_VIDEOSS_FETCHDST_BASEADDRESS0_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_FETCHDST_BASEADDRESS0_t;

/**
  * \brief Source buffer attributes for layer 0. (VIDEOSS_FETCHDST_SOURCEBUFFERATTRIBUTES0)
  */
typedef struct stc_VIDEOSS_FETCHDST_SOURCEBUFFERATTRIBUTES0_field {
  uint32_t                         u16STRIDE0:16;
  uint32_t                         u6BITSPERPIXEL0:6;
  uint32_t                         :10;
} stc_VIDEOSS_FETCHDST_SOURCEBUFFERATTRIBUTES0_field_t;

typedef union un_VIDEOSS_FETCHDST_SOURCEBUFFERATTRIBUTES0 {
  uint32_t                         u32Register;
  stc_VIDEOSS_FETCHDST_SOURCEBUFFERATTRIBUTES0_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_FETCHDST_SOURCEBUFFERATTRIBUTES0_t;

/**
  * \brief Source buffer dimension of layer 0. (VIDEOSS_FETCHDST_SOURCEBUFFERDIMENSION0)
  */
typedef struct stc_VIDEOSS_FETCHDST_SOURCEBUFFERDIMENSION0_field {
  uint32_t                         u14LINEWIDTH0:14;
  uint32_t                         :2;
  uint32_t                         u14LINECOUNT0:14;
  uint32_t                         :2;
} stc_VIDEOSS_FETCHDST_SOURCEBUFFERDIMENSION0_field_t;

typedef union un_VIDEOSS_FETCHDST_SOURCEBUFFERDIMENSION0 {
  uint32_t                         u32Register;
  stc_VIDEOSS_FETCHDST_SOURCEBUFFERDIMENSION0_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_FETCHDST_SOURCEBUFFERDIMENSION0_t;

/**
  * \brief Size of color components for RGB, YUV and index formats (layer 0). (VIDEOSS_FETCHDST_COLORCOMPONENTBITS0)
  */
typedef struct stc_VIDEOSS_FETCHDST_COLORCOMPONENTBITS0_field {
  uint32_t                         u4COMPONENTBITSALPHA0:4;
  uint32_t                         :4;
  uint32_t                         u4COMPONENTBITSBLUE0:4;
  uint32_t                         :4;
  uint32_t                         u4COMPONENTBITSGREEN0:4;
  uint32_t                         :4;
  uint32_t                         u4COMPONENTBITSRED0:4;
  uint32_t                         :3;
  uint32_t                         u1ITUFORMAT0:1;
} stc_VIDEOSS_FETCHDST_COLORCOMPONENTBITS0_field_t;

typedef union un_VIDEOSS_FETCHDST_COLORCOMPONENTBITS0 {
  uint32_t                         u32Register;
  stc_VIDEOSS_FETCHDST_COLORCOMPONENTBITS0_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_FETCHDST_COLORCOMPONENTBITS0_t;

/**
  * \brief Bit position of color components for RGB, YUV and index formats (layer 0). (VIDEOSS_FETCHDST_COLORCOMPONENTSHIFT0)
  */
typedef struct stc_VIDEOSS_FETCHDST_COLORCOMPONENTSHIFT0_field {
  uint32_t                         u5COMPONENTSHIFTALPHA0:5;
  uint32_t                         :3;
  uint32_t                         u5COMPONENTSHIFTBLUE0:5;
  uint32_t                         :3;
  uint32_t                         u5COMPONENTSHIFTGREEN0:5;
  uint32_t                         :3;
  uint32_t                         u5COMPONENTSHIFTRED0:5;
  uint32_t                         :3;
} stc_VIDEOSS_FETCHDST_COLORCOMPONENTSHIFT0_field_t;

typedef union un_VIDEOSS_FETCHDST_COLORCOMPONENTSHIFT0 {
  uint32_t                         u32Register;
  stc_VIDEOSS_FETCHDST_COLORCOMPONENTSHIFT0_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_FETCHDST_COLORCOMPONENTSHIFT0_t;

/**
  * \brief Position of layer 0 within the destination frame. (VIDEOSS_FETCHDST_LAYEROFFSET0)
  */
typedef struct stc_VIDEOSS_FETCHDST_LAYEROFFSET0_field {
  uint32_t                         u15LAYERXOFFSET0:15;
  uint32_t                         :1;
  uint32_t                         u15LAYERYOFFSET0:15;
} stc_VIDEOSS_FETCHDST_LAYEROFFSET0_field_t;

typedef union un_VIDEOSS_FETCHDST_LAYEROFFSET0 {
  uint32_t                         u32Register;
  stc_VIDEOSS_FETCHDST_LAYEROFFSET0_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_FETCHDST_LAYEROFFSET0_t;

/**
  * \brief Clip window position for layer 0. (VIDEOSS_FETCHDST_CLIPWINDOWOFFSET0)
  */
typedef struct stc_VIDEOSS_FETCHDST_CLIPWINDOWOFFSET0_field {
  uint32_t                         u15CLIPWINDOWXOFFSET0:15;
  uint32_t                         :1;
  uint32_t                         u15CLIPWINDOWYOFFSET0:15;
} stc_VIDEOSS_FETCHDST_CLIPWINDOWOFFSET0_field_t;

typedef union un_VIDEOSS_FETCHDST_CLIPWINDOWOFFSET0 {
  uint32_t                         u32Register;
  stc_VIDEOSS_FETCHDST_CLIPWINDOWOFFSET0_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_FETCHDST_CLIPWINDOWOFFSET0_t;

/**
  * \brief Clip window size for layer 0. (VIDEOSS_FETCHDST_CLIPWINDOWDIMENSIONS0)
  */
typedef struct stc_VIDEOSS_FETCHDST_CLIPWINDOWDIMENSIONS0_field {
  uint32_t                         u14CLIPWINDOWWIDTH0:14;
  uint32_t                         :2;
  uint32_t                         u14CLIPWINDOWHEIGHT0:14;
  uint32_t                         :2;
} stc_VIDEOSS_FETCHDST_CLIPWINDOWDIMENSIONS0_field_t;

typedef union un_VIDEOSS_FETCHDST_CLIPWINDOWDIMENSIONS0 {
  uint32_t                         u32Register;
  stc_VIDEOSS_FETCHDST_CLIPWINDOWDIMENSIONS0_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_FETCHDST_CLIPWINDOWDIMENSIONS0_t;

/**
  * \brief Constant color for layer 0. (VIDEOSS_FETCHDST_CONSTANTCOLOR0)
  */
typedef struct stc_VIDEOSS_FETCHDST_CONSTANTCOLOR0_field {
  uint32_t                         u8CONSTANTALPHA0:8;
  uint32_t                         u8CONSTANTBLUE0:8;
  uint32_t                         u8CONSTANTGREEN0:8;
  uint32_t                         u8CONSTANTRED0:8;
} stc_VIDEOSS_FETCHDST_CONSTANTCOLOR0_field_t;

typedef union un_VIDEOSS_FETCHDST_CONSTANTCOLOR0 {
  uint32_t                         u32Register;
  stc_VIDEOSS_FETCHDST_CONSTANTCOLOR0_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_FETCHDST_CONSTANTCOLOR0_t;

/**
  * \brief Common properties of layer 0. (VIDEOSS_FETCHDST_LAYERPROPERTY0)
  */
typedef struct stc_VIDEOSS_FETCHDST_LAYERPROPERTY0_field {
  uint32_t                         u1PALETTEENABLE0:1;
  uint32_t                         u2TILEMODE0:2;
  uint32_t                         u1ALPHASRCENABLE0:1;
  uint32_t                         u1ALPHACONSTENABLE0:1;
  uint32_t                         u1ALPHAMASKENABLE0:1;
  uint32_t                         u1ALPHATRANSENABLE0:1;
  uint32_t                         u1RGBALPHASRCENABLE0:1;
  uint32_t                         u1RGBALPHACONSTENABLE0:1;
  uint32_t                         u1RGBALPHAMASKENABLE0:1;
  uint32_t                         u1RGBALPHATRANSENABLE0:1;
  uint32_t                         u1PREMULCONSTRGB0:1;
  uint32_t                         u2YUVCONVERSIONMODE0:2;
  uint32_t                         u1GAMMAREMOVEENABLE0:1;
  uint32_t                         :1;
  uint32_t                         u11PALETTEOFFSET0:11;
  uint32_t                         u3PALETTEIDWIDTH0:3;
  uint32_t                         u1CLIPWINDOWENABLE0:1;
  uint32_t                         u1SOURCEBUFFERENABLE0:1;
} stc_VIDEOSS_FETCHDST_LAYERPROPERTY0_field_t;

typedef union un_VIDEOSS_FETCHDST_LAYERPROPERTY0 {
  uint32_t                         u32Register;
  stc_VIDEOSS_FETCHDST_LAYERPROPERTY0_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_FETCHDST_LAYERPROPERTY0_t;

/**
  * \brief Output frame dimension. (VIDEOSS_FETCHDST_FRAMEDIMENSIONS)
  */
typedef struct stc_VIDEOSS_FETCHDST_FRAMEDIMENSIONS_field {
  uint32_t                         u14FRAMEWIDTH:14;
  uint32_t                         :2;
  uint32_t                         u14FRAMEHEIGHT:14;
  uint32_t                         :1;
  uint32_t                         u1EMPTYFRAME:1;
} stc_VIDEOSS_FETCHDST_FRAMEDIMENSIONS_field_t;

typedef union un_VIDEOSS_FETCHDST_FRAMEDIMENSIONS {
  uint32_t                         u32Register;
  stc_VIDEOSS_FETCHDST_FRAMEDIMENSIONS_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_FETCHDST_FRAMEDIMENSIONS_t;

/**
  * \brief Resampling options for output frame. (VIDEOSS_FETCHDST_FRAMERESAMPLING)
  */
typedef struct stc_VIDEOSS_FETCHDST_FRAMERESAMPLING_field {
  uint32_t                         u6STARTX:6;
  uint32_t                         u6STARTY:6;
  uint32_t                         u6DELTAX:6;
  uint32_t                         u6DELTAY:6;
  uint32_t                         u1SWAPDIRECTION:1;
  uint32_t                         :7;
} stc_VIDEOSS_FETCHDST_FRAMERESAMPLING_field_t;

typedef union un_VIDEOSS_FETCHDST_FRAMERESAMPLING {
  uint32_t                         u32Register;
  stc_VIDEOSS_FETCHDST_FRAMERESAMPLING_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_FETCHDST_FRAMERESAMPLING_t;

/**
  * \brief Warping control options. (VIDEOSS_FETCHDST_WARPCONTROL)
  */
typedef struct stc_VIDEOSS_FETCHDST_WARPCONTROL_field {
  uint32_t                         u6WARPBITSPERPIXEL:6;
  uint32_t                         :2;
  uint32_t                         u2WARPCOORDINATEMODE:2;
  uint32_t                         :2;
  uint32_t                         u1WARPSYMMETRICOFFSET:1;
  uint32_t                         :19;
} stc_VIDEOSS_FETCHDST_WARPCONTROL_field_t;

typedef union un_VIDEOSS_FETCHDST_WARPCONTROL {
  uint32_t                         u32Register;
  stc_VIDEOSS_FETCHDST_WARPCONTROL_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_FETCHDST_WARPCONTROL_t;

/**
  * \brief Start value X for affine/perspective warping. (VIDEOSS_FETCHDST_PERSPSTARTX)
  */
typedef struct stc_VIDEOSS_FETCHDST_PERSPSTARTX_field {
  uint32_t                         u32PERSPSTARTX:32;
} stc_VIDEOSS_FETCHDST_PERSPSTARTX_field_t;

typedef union un_VIDEOSS_FETCHDST_PERSPSTARTX {
  uint32_t                         u32Register;
  stc_VIDEOSS_FETCHDST_PERSPSTARTX_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_FETCHDST_PERSPSTARTX_t;

/**
  * \brief Start value Y for affine/perspective warping. (VIDEOSS_FETCHDST_PERSPSTARTY)
  */
typedef struct stc_VIDEOSS_FETCHDST_PERSPSTARTY_field {
  uint32_t                         u32PERSPSTARTY:32;
} stc_VIDEOSS_FETCHDST_PERSPSTARTY_field_t;

typedef union un_VIDEOSS_FETCHDST_PERSPSTARTY {
  uint32_t                         u32Register;
  stc_VIDEOSS_FETCHDST_PERSPSTARTY_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_FETCHDST_PERSPSTARTY_t;

/**
  * \brief DeltaXX increment for affine/perspective warping. (VIDEOSS_FETCHDST_PERSPDELTAXX)
  */
typedef struct stc_VIDEOSS_FETCHDST_PERSPDELTAXX_field {
  uint32_t                         u32PERSPDELTAXX:32;
} stc_VIDEOSS_FETCHDST_PERSPDELTAXX_field_t;

typedef union un_VIDEOSS_FETCHDST_PERSPDELTAXX {
  uint32_t                         u32Register;
  stc_VIDEOSS_FETCHDST_PERSPDELTAXX_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_FETCHDST_PERSPDELTAXX_t;

/**
  * \brief DeltaYY increment for affine/perspective warping. (VIDEOSS_FETCHDST_PERSPDELTAYY)
  */
typedef struct stc_VIDEOSS_FETCHDST_PERSPDELTAYY_field {
  uint32_t                         u32PERSPDELTAYY:32;
} stc_VIDEOSS_FETCHDST_PERSPDELTAYY_field_t;

typedef union un_VIDEOSS_FETCHDST_PERSPDELTAYY {
  uint32_t                         u32Register;
  stc_VIDEOSS_FETCHDST_PERSPDELTAYY_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_FETCHDST_PERSPDELTAYY_t;

/**
  * \brief DeltaXY increment for affine/perspective warping. (VIDEOSS_FETCHDST_PERSPDELTAXY)
  */
typedef struct stc_VIDEOSS_FETCHDST_PERSPDELTAXY_field {
  uint32_t                         u32PERSPDELTAXY:32;
} stc_VIDEOSS_FETCHDST_PERSPDELTAXY_field_t;

typedef union un_VIDEOSS_FETCHDST_PERSPDELTAXY {
  uint32_t                         u32Register;
  stc_VIDEOSS_FETCHDST_PERSPDELTAXY_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_FETCHDST_PERSPDELTAXY_t;

/**
  * \brief DeltaYX increment for affine/perspective warping. (VIDEOSS_FETCHDST_PERSPDELTAYX)
  */
typedef struct stc_VIDEOSS_FETCHDST_PERSPDELTAYX_field {
  uint32_t                         u32PERSPDELTAYX:32;
} stc_VIDEOSS_FETCHDST_PERSPDELTAYX_field_t;

typedef union un_VIDEOSS_FETCHDST_PERSPDELTAYX {
  uint32_t                         u32Register;
  stc_VIDEOSS_FETCHDST_PERSPDELTAYX_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_FETCHDST_PERSPDELTAYX_t;

/**
  * \brief Start value W for perspective warping. (VIDEOSS_FETCHDST_PERSPSTARTW)
  */
typedef struct stc_VIDEOSS_FETCHDST_PERSPSTARTW_field {
  uint32_t                         u32PERSPSTARTW:32;
} stc_VIDEOSS_FETCHDST_PERSPSTARTW_field_t;

typedef union un_VIDEOSS_FETCHDST_PERSPSTARTW {
  uint32_t                         u32Register;
  stc_VIDEOSS_FETCHDST_PERSPSTARTW_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_FETCHDST_PERSPSTARTW_t;

/**
  * \brief DeltaWX increment for perspective warping. (VIDEOSS_FETCHDST_PERSPDELTAXW)
  */
typedef struct stc_VIDEOSS_FETCHDST_PERSPDELTAXW_field {
  uint32_t                         u32PERSPDELTAXW:32;
} stc_VIDEOSS_FETCHDST_PERSPDELTAXW_field_t;

typedef union un_VIDEOSS_FETCHDST_PERSPDELTAXW {
  uint32_t                         u32Register;
  stc_VIDEOSS_FETCHDST_PERSPDELTAXW_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_FETCHDST_PERSPDELTAXW_t;

/**
  * \brief DeltaWY increment for perspective warping. (VIDEOSS_FETCHDST_PERSPDELTAYW)
  */
typedef struct stc_VIDEOSS_FETCHDST_PERSPDELTAYW_field {
  uint32_t                         u32PERSPDELTAYW:32;
} stc_VIDEOSS_FETCHDST_PERSPDELTAYW_field_t;

typedef union un_VIDEOSS_FETCHDST_PERSPDELTAYW {
  uint32_t                         u32Register;
  stc_VIDEOSS_FETCHDST_PERSPDELTAYW_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_FETCHDST_PERSPDELTAYW_t;

/**
  * \brief Start value X for arbitrary warping. (VIDEOSS_FETCHDST_ARBSTARTX)
  */
typedef struct stc_VIDEOSS_FETCHDST_ARBSTARTX_field {
  uint32_t                         u21ARBSTARTX:21;
  uint32_t                         :11;
} stc_VIDEOSS_FETCHDST_ARBSTARTX_field_t;

typedef union un_VIDEOSS_FETCHDST_ARBSTARTX {
  uint32_t                         u32Register;
  stc_VIDEOSS_FETCHDST_ARBSTARTX_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_FETCHDST_ARBSTARTX_t;

/**
  * \brief Start value Y for arbitrary warping. (VIDEOSS_FETCHDST_ARBSTARTY)
  */
typedef struct stc_VIDEOSS_FETCHDST_ARBSTARTY_field {
  uint32_t                         u21ARBSTARTY:21;
  uint32_t                         :11;
} stc_VIDEOSS_FETCHDST_ARBSTARTY_field_t;

typedef union un_VIDEOSS_FETCHDST_ARBSTARTY {
  uint32_t                         u32Register;
  stc_VIDEOSS_FETCHDST_ARBSTARTY_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_FETCHDST_ARBSTARTY_t;

/**
  * \brief Start values for delta incrementation of arbitrary warping. (VIDEOSS_FETCHDST_ARBDELTA)
  */
typedef struct stc_VIDEOSS_FETCHDST_ARBDELTA_field {
  uint32_t                         u8ARBDELTAXX:8;
  uint32_t                         u8ARBDELTAXY:8;
  uint32_t                         u8ARBDELTAYX:8;
  uint32_t                         u8ARBDELTAYY:8;
} stc_VIDEOSS_FETCHDST_ARBDELTA_field_t;

typedef union un_VIDEOSS_FETCHDST_ARBDELTA {
  uint32_t                         u32Register;
  stc_VIDEOSS_FETCHDST_ARBDELTA_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_FETCHDST_ARBDELTA_t;

/**
  * \brief FIR sequence control register. (VIDEOSS_FETCHDST_FIRPOSITIONS)
  */
typedef struct stc_VIDEOSS_FETCHDST_FIRPOSITIONS_field {
  uint32_t                         u4FIR0POSITION:4;
  uint32_t                         u4FIR1POSITION:4;
  uint32_t                         u4FIR2POSITION:4;
  uint32_t                         u4FIR3POSITION:4;
  uint32_t                         :16;
} stc_VIDEOSS_FETCHDST_FIRPOSITIONS_field_t;

typedef union un_VIDEOSS_FETCHDST_FIRPOSITIONS {
  uint32_t                         u32Register;
  stc_VIDEOSS_FETCHDST_FIRPOSITIONS_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_FETCHDST_FIRPOSITIONS_t;

/**
  * \brief FIR coefficients register. (VIDEOSS_FETCHDST_FIRCOEFFICIENTS)
  */
typedef struct stc_VIDEOSS_FETCHDST_FIRCOEFFICIENTS_field {
  uint32_t                         u8FIR0COEFFICIENT:8;
  uint32_t                         u8FIR1COEFFICIENT:8;
  uint32_t                         u8FIR2COEFFICIENT:8;
  uint32_t                         u8FIR3COEFFICIENT:8;
} stc_VIDEOSS_FETCHDST_FIRCOEFFICIENTS_field_t;

typedef union un_VIDEOSS_FETCHDST_FIRCOEFFICIENTS {
  uint32_t                         u32Register;
  stc_VIDEOSS_FETCHDST_FIRCOEFFICIENTS_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_FETCHDST_FIRCOEFFICIENTS_t;

/**
  * \brief Control options for RLAD decompression. (VIDEOSS_FETCHDST_DECODECONTROL)
  */
typedef struct stc_VIDEOSS_FETCHDST_DECODECONTROL_field {
  uint32_t                         u2COMPRESSIONMODE:2;
  uint32_t                         :14;
  uint32_t                         u4RLADCOMPBITSRED:4;
  uint32_t                         u4RLADCOMPBITSGREEN:4;
  uint32_t                         u4RLADCOMPBITSBLUE:4;
  uint32_t                         u4RLADCOMPBITSALPHA:4;
} stc_VIDEOSS_FETCHDST_DECODECONTROL_field_t;

typedef union un_VIDEOSS_FETCHDST_DECODECONTROL {
  uint32_t                         u32Register;
  stc_VIDEOSS_FETCHDST_DECODECONTROL_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_FETCHDST_DECODECONTROL_t;

/**
  * \brief Source buffer length for compressed data. (VIDEOSS_FETCHDST_SOURCEBUFFERLENGTH)
  */
typedef struct stc_VIDEOSS_FETCHDST_SOURCEBUFFERLENGTH_field {
  uint32_t                         u29RLEWORDS:29;
  uint32_t                         :3;
} stc_VIDEOSS_FETCHDST_SOURCEBUFFERLENGTH_field_t;

typedef union un_VIDEOSS_FETCHDST_SOURCEBUFFERLENGTH {
  uint32_t                         u32Register;
  stc_VIDEOSS_FETCHDST_SOURCEBUFFERLENGTH_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_FETCHDST_SOURCEBUFFERLENGTH_t;

/**
  * \brief Shared common control settings for all layers. (VIDEOSS_FETCHDST_CONTROL)
  */
typedef struct stc_VIDEOSS_FETCHDST_CONTROL_field {
  uint32_t                         u3RASTERMODE:3;
  uint32_t                         u2INPUTSELECT:2;
  uint32_t                         u1YUV422UPSAMPLINGMODE:1;
  uint32_t                         :1;
  uint32_t                         u1RAWPIXEL:1;
  uint32_t                         :8;
  uint32_t                         u1CLIPCOLOR:1;
  uint32_t                         :3;
  uint32_t                         u3FILTERMODE:3;
  uint32_t                         :5;
  uint32_t                         u2GEOMETRY:2;
  uint32_t                         :2;
} stc_VIDEOSS_FETCHDST_CONTROL_field_t;

typedef union un_VIDEOSS_FETCHDST_CONTROL {
  uint32_t                         u32Register;
  stc_VIDEOSS_FETCHDST_CONTROL_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_FETCHDST_CONTROL_t;

/**
  * \brief Shadow load trigger. (VIDEOSS_FETCHDST_CONTROLTRIGGER)
  */
typedef struct stc_VIDEOSS_FETCHDST_CONTROLTRIGGER_field {
  uint32_t                         u1SHDTOKGEN:1;
  uint32_t                         :31;
} stc_VIDEOSS_FETCHDST_CONTROLTRIGGER_field_t;

typedef union un_VIDEOSS_FETCHDST_CONTROLTRIGGER {
  uint32_t                         u32Register;
  stc_VIDEOSS_FETCHDST_CONTROLTRIGGER_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_FETCHDST_CONTROLTRIGGER_t;

/**
  * \brief Frame start trigger. (VIDEOSS_FETCHDST_START)
  */
typedef struct stc_VIDEOSS_FETCHDST_START_field {
  uint32_t                         u1START:1;
  uint32_t                         :31;
} stc_VIDEOSS_FETCHDST_START_field_t;

typedef union un_VIDEOSS_FETCHDST_START {
  uint32_t                         u32Register;
  stc_VIDEOSS_FETCHDST_START_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_FETCHDST_START_t;

/**
  * \brief Fetch unit type. (VIDEOSS_FETCHDST_FETCHTYPE)
  */
typedef struct stc_VIDEOSS_FETCHDST_FETCHTYPE_field {
  uint32_t                         u4FETCHTYPE:4;
  uint32_t                         :28;
} stc_VIDEOSS_FETCHDST_FETCHTYPE_field_t;

typedef union un_VIDEOSS_FETCHDST_FETCHTYPE {
  uint32_t                         u32Register;
  stc_VIDEOSS_FETCHDST_FETCHTYPE_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_FETCHDST_FETCHTYPE_t;

/**
  * \brief Status information of the RLAD decoder. (VIDEOSS_FETCHDST_DECODERSTATUS)
  */
typedef struct stc_VIDEOSS_FETCHDST_DECODERSTATUS_field {
  uint32_t                         u1BUFFERTOOSMALL:1;
  uint32_t                         u1BUFFERTOOLARGE:1;
  uint32_t                         :30;
} stc_VIDEOSS_FETCHDST_DECODERSTATUS_field_t;

typedef union un_VIDEOSS_FETCHDST_DECODERSTATUS {
  uint32_t                         u32Register;
  stc_VIDEOSS_FETCHDST_DECODERSTATUS_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_FETCHDST_DECODERSTATUS_t;

/**
  * \brief Burst buffer properties. (VIDEOSS_FETCHDST_BURSTBUFFERPROPERTIES)
  */
typedef struct stc_VIDEOSS_FETCHDST_BURSTBUFFERPROPERTIES_field {
  uint32_t                         u8MANAGEDBURSTBUFFERS:8;
  uint32_t                         u5BURSTLENGTHFORMAXBUFFERS:5;
  uint32_t                         :19;
} stc_VIDEOSS_FETCHDST_BURSTBUFFERPROPERTIES_field_t;

typedef union un_VIDEOSS_FETCHDST_BURSTBUFFERPROPERTIES {
  uint32_t                         u32Register;
  stc_VIDEOSS_FETCHDST_BURSTBUFFERPROPERTIES_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_FETCHDST_BURSTBUFFERPROPERTIES_t;



/**
  * \brief Common static control options. (VIDEOSS_FETCHMASK_STATICCONTROL)
  */
typedef struct stc_VIDEOSS_FETCHMASK_STATICCONTROL_field {
  uint32_t                         u1SHDEN:1;
  uint32_t                         :15;
  uint32_t                         u8BASEADDRESSAUTOUPDATE:8;
  uint32_t                         :8;
} stc_VIDEOSS_FETCHMASK_STATICCONTROL_field_t;

typedef union un_VIDEOSS_FETCHMASK_STATICCONTROL {
  uint32_t                         u32Register;
  stc_VIDEOSS_FETCHMASK_STATICCONTROL_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_FETCHMASK_STATICCONTROL_t;

/**
  * \brief AXI interface buffer management register (VIDEOSS_FETCHMASK_BURSTBUFFERMANAGEMENT)
  */
typedef struct stc_VIDEOSS_FETCHMASK_BURSTBUFFERMANAGEMENT_field {
  uint32_t                         u8SETNUMBUFFERS:8;
  uint32_t                         u5SETBURSTLENGTH:5;
  uint32_t                         :18;
  uint32_t                         u1LINEMODE:1;
} stc_VIDEOSS_FETCHMASK_BURSTBUFFERMANAGEMENT_field_t;

typedef union un_VIDEOSS_FETCHMASK_BURSTBUFFERMANAGEMENT {
  uint32_t                         u32Register;
  stc_VIDEOSS_FETCHMASK_BURSTBUFFERMANAGEMENT_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_FETCHMASK_BURSTBUFFERMANAGEMENT_t;

/**
  * \brief Source buffer base address of layer 0. (VIDEOSS_FETCHMASK_BASEADDRESS0)
  */
typedef struct stc_VIDEOSS_FETCHMASK_BASEADDRESS0_field {
  uint32_t                         u32BASEADDRESS0:32;
} stc_VIDEOSS_FETCHMASK_BASEADDRESS0_field_t;

typedef union un_VIDEOSS_FETCHMASK_BASEADDRESS0 {
  uint32_t                         u32Register;
  stc_VIDEOSS_FETCHMASK_BASEADDRESS0_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_FETCHMASK_BASEADDRESS0_t;

/**
  * \brief Source buffer attributes for layer 0. (VIDEOSS_FETCHMASK_SOURCEBUFFERATTRIBUTES0)
  */
typedef struct stc_VIDEOSS_FETCHMASK_SOURCEBUFFERATTRIBUTES0_field {
  uint32_t                         u16STRIDE0:16;
  uint32_t                         u6BITSPERPIXEL0:6;
  uint32_t                         :10;
} stc_VIDEOSS_FETCHMASK_SOURCEBUFFERATTRIBUTES0_field_t;

typedef union un_VIDEOSS_FETCHMASK_SOURCEBUFFERATTRIBUTES0 {
  uint32_t                         u32Register;
  stc_VIDEOSS_FETCHMASK_SOURCEBUFFERATTRIBUTES0_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_FETCHMASK_SOURCEBUFFERATTRIBUTES0_t;

/**
  * \brief Source buffer dimension of layer 0. (VIDEOSS_FETCHMASK_SOURCEBUFFERDIMENSION0)
  */
typedef struct stc_VIDEOSS_FETCHMASK_SOURCEBUFFERDIMENSION0_field {
  uint32_t                         u14LINEWIDTH0:14;
  uint32_t                         :2;
  uint32_t                         u14LINECOUNT0:14;
  uint32_t                         :2;
} stc_VIDEOSS_FETCHMASK_SOURCEBUFFERDIMENSION0_field_t;

typedef union un_VIDEOSS_FETCHMASK_SOURCEBUFFERDIMENSION0 {
  uint32_t                         u32Register;
  stc_VIDEOSS_FETCHMASK_SOURCEBUFFERDIMENSION0_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_FETCHMASK_SOURCEBUFFERDIMENSION0_t;

/**
  * \brief Size of color components for RGB, YUV and index formats (layer 0). (VIDEOSS_FETCHMASK_COLORCOMPONENTBITS0)
  */
typedef struct stc_VIDEOSS_FETCHMASK_COLORCOMPONENTBITS0_field {
  uint32_t                         u4COMPONENTBITSALPHA0:4;
  uint32_t                         :4;
  uint32_t                         u4COMPONENTBITSBLUE0:4;
  uint32_t                         :4;
  uint32_t                         u4COMPONENTBITSGREEN0:4;
  uint32_t                         :4;
  uint32_t                         u4COMPONENTBITSRED0:4;
  uint32_t                         :3;
  uint32_t                         u1ITUFORMAT0:1;
} stc_VIDEOSS_FETCHMASK_COLORCOMPONENTBITS0_field_t;

typedef union un_VIDEOSS_FETCHMASK_COLORCOMPONENTBITS0 {
  uint32_t                         u32Register;
  stc_VIDEOSS_FETCHMASK_COLORCOMPONENTBITS0_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_FETCHMASK_COLORCOMPONENTBITS0_t;

/**
  * \brief Bit position of color components for RGB, YUV and index formats (layer 0). (VIDEOSS_FETCHMASK_COLORCOMPONENTSHIFT0)
  */
typedef struct stc_VIDEOSS_FETCHMASK_COLORCOMPONENTSHIFT0_field {
  uint32_t                         u5COMPONENTSHIFTALPHA0:5;
  uint32_t                         :3;
  uint32_t                         u5COMPONENTSHIFTBLUE0:5;
  uint32_t                         :3;
  uint32_t                         u5COMPONENTSHIFTGREEN0:5;
  uint32_t                         :3;
  uint32_t                         u5COMPONENTSHIFTRED0:5;
  uint32_t                         :3;
} stc_VIDEOSS_FETCHMASK_COLORCOMPONENTSHIFT0_field_t;

typedef union un_VIDEOSS_FETCHMASK_COLORCOMPONENTSHIFT0 {
  uint32_t                         u32Register;
  stc_VIDEOSS_FETCHMASK_COLORCOMPONENTSHIFT0_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_FETCHMASK_COLORCOMPONENTSHIFT0_t;

/**
  * \brief Position of layer 0 within the destination frame. (VIDEOSS_FETCHMASK_LAYEROFFSET0)
  */
typedef struct stc_VIDEOSS_FETCHMASK_LAYEROFFSET0_field {
  uint32_t                         u15LAYERXOFFSET0:15;
  uint32_t                         :1;
  uint32_t                         u15LAYERYOFFSET0:15;
} stc_VIDEOSS_FETCHMASK_LAYEROFFSET0_field_t;

typedef union un_VIDEOSS_FETCHMASK_LAYEROFFSET0 {
  uint32_t                         u32Register;
  stc_VIDEOSS_FETCHMASK_LAYEROFFSET0_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_FETCHMASK_LAYEROFFSET0_t;

/**
  * \brief Clip window position for layer 0. (VIDEOSS_FETCHMASK_CLIPWINDOWOFFSET0)
  */
typedef struct stc_VIDEOSS_FETCHMASK_CLIPWINDOWOFFSET0_field {
  uint32_t                         u15CLIPWINDOWXOFFSET0:15;
  uint32_t                         :1;
  uint32_t                         u15CLIPWINDOWYOFFSET0:15;
} stc_VIDEOSS_FETCHMASK_CLIPWINDOWOFFSET0_field_t;

typedef union un_VIDEOSS_FETCHMASK_CLIPWINDOWOFFSET0 {
  uint32_t                         u32Register;
  stc_VIDEOSS_FETCHMASK_CLIPWINDOWOFFSET0_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_FETCHMASK_CLIPWINDOWOFFSET0_t;

/**
  * \brief Clip window size for layer 0. (VIDEOSS_FETCHMASK_CLIPWINDOWDIMENSIONS0)
  */
typedef struct stc_VIDEOSS_FETCHMASK_CLIPWINDOWDIMENSIONS0_field {
  uint32_t                         u14CLIPWINDOWWIDTH0:14;
  uint32_t                         :2;
  uint32_t                         u14CLIPWINDOWHEIGHT0:14;
  uint32_t                         :2;
} stc_VIDEOSS_FETCHMASK_CLIPWINDOWDIMENSIONS0_field_t;

typedef union un_VIDEOSS_FETCHMASK_CLIPWINDOWDIMENSIONS0 {
  uint32_t                         u32Register;
  stc_VIDEOSS_FETCHMASK_CLIPWINDOWDIMENSIONS0_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_FETCHMASK_CLIPWINDOWDIMENSIONS0_t;

/**
  * \brief Constant color for layer 0. (VIDEOSS_FETCHMASK_CONSTANTCOLOR0)
  */
typedef struct stc_VIDEOSS_FETCHMASK_CONSTANTCOLOR0_field {
  uint32_t                         u8CONSTANTALPHA0:8;
  uint32_t                         u8CONSTANTBLUE0:8;
  uint32_t                         u8CONSTANTGREEN0:8;
  uint32_t                         u8CONSTANTRED0:8;
} stc_VIDEOSS_FETCHMASK_CONSTANTCOLOR0_field_t;

typedef union un_VIDEOSS_FETCHMASK_CONSTANTCOLOR0 {
  uint32_t                         u32Register;
  stc_VIDEOSS_FETCHMASK_CONSTANTCOLOR0_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_FETCHMASK_CONSTANTCOLOR0_t;

/**
  * \brief Common properties of layer 0. (VIDEOSS_FETCHMASK_LAYERPROPERTY0)
  */
typedef struct stc_VIDEOSS_FETCHMASK_LAYERPROPERTY0_field {
  uint32_t                         u1PALETTEENABLE0:1;
  uint32_t                         u2TILEMODE0:2;
  uint32_t                         u1ALPHASRCENABLE0:1;
  uint32_t                         u1ALPHACONSTENABLE0:1;
  uint32_t                         u1ALPHAMASKENABLE0:1;
  uint32_t                         u1ALPHATRANSENABLE0:1;
  uint32_t                         u1RGBALPHASRCENABLE0:1;
  uint32_t                         u1RGBALPHACONSTENABLE0:1;
  uint32_t                         u1RGBALPHAMASKENABLE0:1;
  uint32_t                         u1RGBALPHATRANSENABLE0:1;
  uint32_t                         u1PREMULCONSTRGB0:1;
  uint32_t                         u2YUVCONVERSIONMODE0:2;
  uint32_t                         u1GAMMAREMOVEENABLE0:1;
  uint32_t                         :1;
  uint32_t                         u11PALETTEOFFSET0:11;
  uint32_t                         u3PALETTEIDWIDTH0:3;
  uint32_t                         u1CLIPWINDOWENABLE0:1;
  uint32_t                         u1SOURCEBUFFERENABLE0:1;
} stc_VIDEOSS_FETCHMASK_LAYERPROPERTY0_field_t;

typedef union un_VIDEOSS_FETCHMASK_LAYERPROPERTY0 {
  uint32_t                         u32Register;
  stc_VIDEOSS_FETCHMASK_LAYERPROPERTY0_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_FETCHMASK_LAYERPROPERTY0_t;

/**
  * \brief Output frame dimension. (VIDEOSS_FETCHMASK_FRAMEDIMENSIONS)
  */
typedef struct stc_VIDEOSS_FETCHMASK_FRAMEDIMENSIONS_field {
  uint32_t                         u14FRAMEWIDTH:14;
  uint32_t                         :2;
  uint32_t                         u14FRAMEHEIGHT:14;
  uint32_t                         :1;
  uint32_t                         u1EMPTYFRAME:1;
} stc_VIDEOSS_FETCHMASK_FRAMEDIMENSIONS_field_t;

typedef union un_VIDEOSS_FETCHMASK_FRAMEDIMENSIONS {
  uint32_t                         u32Register;
  stc_VIDEOSS_FETCHMASK_FRAMEDIMENSIONS_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_FETCHMASK_FRAMEDIMENSIONS_t;

/**
  * \brief Resampling options for output frame. (VIDEOSS_FETCHMASK_FRAMERESAMPLING)
  */
typedef struct stc_VIDEOSS_FETCHMASK_FRAMERESAMPLING_field {
  uint32_t                         u6STARTX:6;
  uint32_t                         u6STARTY:6;
  uint32_t                         u6DELTAX:6;
  uint32_t                         u6DELTAY:6;
  uint32_t                         u1SWAPDIRECTION:1;
  uint32_t                         :7;
} stc_VIDEOSS_FETCHMASK_FRAMERESAMPLING_field_t;

typedef union un_VIDEOSS_FETCHMASK_FRAMERESAMPLING {
  uint32_t                         u32Register;
  stc_VIDEOSS_FETCHMASK_FRAMERESAMPLING_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_FETCHMASK_FRAMERESAMPLING_t;

/**
  * \brief Warping control options. (VIDEOSS_FETCHMASK_WARPCONTROL)
  */
typedef struct stc_VIDEOSS_FETCHMASK_WARPCONTROL_field {
  uint32_t                         u6WARPBITSPERPIXEL:6;
  uint32_t                         :2;
  uint32_t                         u2WARPCOORDINATEMODE:2;
  uint32_t                         :2;
  uint32_t                         u1WARPSYMMETRICOFFSET:1;
  uint32_t                         :19;
} stc_VIDEOSS_FETCHMASK_WARPCONTROL_field_t;

typedef union un_VIDEOSS_FETCHMASK_WARPCONTROL {
  uint32_t                         u32Register;
  stc_VIDEOSS_FETCHMASK_WARPCONTROL_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_FETCHMASK_WARPCONTROL_t;

/**
  * \brief Start value X for affine/perspective warping. (VIDEOSS_FETCHMASK_PERSPSTARTX)
  */
typedef struct stc_VIDEOSS_FETCHMASK_PERSPSTARTX_field {
  uint32_t                         u32PERSPSTARTX:32;
} stc_VIDEOSS_FETCHMASK_PERSPSTARTX_field_t;

typedef union un_VIDEOSS_FETCHMASK_PERSPSTARTX {
  uint32_t                         u32Register;
  stc_VIDEOSS_FETCHMASK_PERSPSTARTX_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_FETCHMASK_PERSPSTARTX_t;

/**
  * \brief Start value Y for affine/perspective warping. (VIDEOSS_FETCHMASK_PERSPSTARTY)
  */
typedef struct stc_VIDEOSS_FETCHMASK_PERSPSTARTY_field {
  uint32_t                         u32PERSPSTARTY:32;
} stc_VIDEOSS_FETCHMASK_PERSPSTARTY_field_t;

typedef union un_VIDEOSS_FETCHMASK_PERSPSTARTY {
  uint32_t                         u32Register;
  stc_VIDEOSS_FETCHMASK_PERSPSTARTY_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_FETCHMASK_PERSPSTARTY_t;

/**
  * \brief DeltaXX increment for affine/perspective warping. (VIDEOSS_FETCHMASK_PERSPDELTAXX)
  */
typedef struct stc_VIDEOSS_FETCHMASK_PERSPDELTAXX_field {
  uint32_t                         u32PERSPDELTAXX:32;
} stc_VIDEOSS_FETCHMASK_PERSPDELTAXX_field_t;

typedef union un_VIDEOSS_FETCHMASK_PERSPDELTAXX {
  uint32_t                         u32Register;
  stc_VIDEOSS_FETCHMASK_PERSPDELTAXX_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_FETCHMASK_PERSPDELTAXX_t;

/**
  * \brief DeltaYY increment for affine/perspective warping. (VIDEOSS_FETCHMASK_PERSPDELTAYY)
  */
typedef struct stc_VIDEOSS_FETCHMASK_PERSPDELTAYY_field {
  uint32_t                         u32PERSPDELTAYY:32;
} stc_VIDEOSS_FETCHMASK_PERSPDELTAYY_field_t;

typedef union un_VIDEOSS_FETCHMASK_PERSPDELTAYY {
  uint32_t                         u32Register;
  stc_VIDEOSS_FETCHMASK_PERSPDELTAYY_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_FETCHMASK_PERSPDELTAYY_t;

/**
  * \brief DeltaXY increment for affine/perspective warping. (VIDEOSS_FETCHMASK_PERSPDELTAXY)
  */
typedef struct stc_VIDEOSS_FETCHMASK_PERSPDELTAXY_field {
  uint32_t                         u32PERSPDELTAXY:32;
} stc_VIDEOSS_FETCHMASK_PERSPDELTAXY_field_t;

typedef union un_VIDEOSS_FETCHMASK_PERSPDELTAXY {
  uint32_t                         u32Register;
  stc_VIDEOSS_FETCHMASK_PERSPDELTAXY_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_FETCHMASK_PERSPDELTAXY_t;

/**
  * \brief DeltaYX increment for affine/perspective warping. (VIDEOSS_FETCHMASK_PERSPDELTAYX)
  */
typedef struct stc_VIDEOSS_FETCHMASK_PERSPDELTAYX_field {
  uint32_t                         u32PERSPDELTAYX:32;
} stc_VIDEOSS_FETCHMASK_PERSPDELTAYX_field_t;

typedef union un_VIDEOSS_FETCHMASK_PERSPDELTAYX {
  uint32_t                         u32Register;
  stc_VIDEOSS_FETCHMASK_PERSPDELTAYX_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_FETCHMASK_PERSPDELTAYX_t;

/**
  * \brief Start value W for perspective warping. (VIDEOSS_FETCHMASK_PERSPSTARTW)
  */
typedef struct stc_VIDEOSS_FETCHMASK_PERSPSTARTW_field {
  uint32_t                         u32PERSPSTARTW:32;
} stc_VIDEOSS_FETCHMASK_PERSPSTARTW_field_t;

typedef union un_VIDEOSS_FETCHMASK_PERSPSTARTW {
  uint32_t                         u32Register;
  stc_VIDEOSS_FETCHMASK_PERSPSTARTW_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_FETCHMASK_PERSPSTARTW_t;

/**
  * \brief DeltaWX increment for perspective warping. (VIDEOSS_FETCHMASK_PERSPDELTAXW)
  */
typedef struct stc_VIDEOSS_FETCHMASK_PERSPDELTAXW_field {
  uint32_t                         u32PERSPDELTAXW:32;
} stc_VIDEOSS_FETCHMASK_PERSPDELTAXW_field_t;

typedef union un_VIDEOSS_FETCHMASK_PERSPDELTAXW {
  uint32_t                         u32Register;
  stc_VIDEOSS_FETCHMASK_PERSPDELTAXW_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_FETCHMASK_PERSPDELTAXW_t;

/**
  * \brief DeltaWY increment for perspective warping. (VIDEOSS_FETCHMASK_PERSPDELTAYW)
  */
typedef struct stc_VIDEOSS_FETCHMASK_PERSPDELTAYW_field {
  uint32_t                         u32PERSPDELTAYW:32;
} stc_VIDEOSS_FETCHMASK_PERSPDELTAYW_field_t;

typedef union un_VIDEOSS_FETCHMASK_PERSPDELTAYW {
  uint32_t                         u32Register;
  stc_VIDEOSS_FETCHMASK_PERSPDELTAYW_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_FETCHMASK_PERSPDELTAYW_t;

/**
  * \brief Start value X for arbitrary warping. (VIDEOSS_FETCHMASK_ARBSTARTX)
  */
typedef struct stc_VIDEOSS_FETCHMASK_ARBSTARTX_field {
  uint32_t                         u21ARBSTARTX:21;
  uint32_t                         :11;
} stc_VIDEOSS_FETCHMASK_ARBSTARTX_field_t;

typedef union un_VIDEOSS_FETCHMASK_ARBSTARTX {
  uint32_t                         u32Register;
  stc_VIDEOSS_FETCHMASK_ARBSTARTX_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_FETCHMASK_ARBSTARTX_t;

/**
  * \brief Start value Y for arbitrary warping. (VIDEOSS_FETCHMASK_ARBSTARTY)
  */
typedef struct stc_VIDEOSS_FETCHMASK_ARBSTARTY_field {
  uint32_t                         u21ARBSTARTY:21;
  uint32_t                         :11;
} stc_VIDEOSS_FETCHMASK_ARBSTARTY_field_t;

typedef union un_VIDEOSS_FETCHMASK_ARBSTARTY {
  uint32_t                         u32Register;
  stc_VIDEOSS_FETCHMASK_ARBSTARTY_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_FETCHMASK_ARBSTARTY_t;

/**
  * \brief Start values for delta incrementation of arbitrary warping. (VIDEOSS_FETCHMASK_ARBDELTA)
  */
typedef struct stc_VIDEOSS_FETCHMASK_ARBDELTA_field {
  uint32_t                         u8ARBDELTAXX:8;
  uint32_t                         u8ARBDELTAXY:8;
  uint32_t                         u8ARBDELTAYX:8;
  uint32_t                         u8ARBDELTAYY:8;
} stc_VIDEOSS_FETCHMASK_ARBDELTA_field_t;

typedef union un_VIDEOSS_FETCHMASK_ARBDELTA {
  uint32_t                         u32Register;
  stc_VIDEOSS_FETCHMASK_ARBDELTA_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_FETCHMASK_ARBDELTA_t;

/**
  * \brief FIR sequence control register. (VIDEOSS_FETCHMASK_FIRPOSITIONS)
  */
typedef struct stc_VIDEOSS_FETCHMASK_FIRPOSITIONS_field {
  uint32_t                         u4FIR0POSITION:4;
  uint32_t                         u4FIR1POSITION:4;
  uint32_t                         u4FIR2POSITION:4;
  uint32_t                         u4FIR3POSITION:4;
  uint32_t                         :16;
} stc_VIDEOSS_FETCHMASK_FIRPOSITIONS_field_t;

typedef union un_VIDEOSS_FETCHMASK_FIRPOSITIONS {
  uint32_t                         u32Register;
  stc_VIDEOSS_FETCHMASK_FIRPOSITIONS_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_FETCHMASK_FIRPOSITIONS_t;

/**
  * \brief FIR coefficients register. (VIDEOSS_FETCHMASK_FIRCOEFFICIENTS)
  */
typedef struct stc_VIDEOSS_FETCHMASK_FIRCOEFFICIENTS_field {
  uint32_t                         u8FIR0COEFFICIENT:8;
  uint32_t                         u8FIR1COEFFICIENT:8;
  uint32_t                         u8FIR2COEFFICIENT:8;
  uint32_t                         u8FIR3COEFFICIENT:8;
} stc_VIDEOSS_FETCHMASK_FIRCOEFFICIENTS_field_t;

typedef union un_VIDEOSS_FETCHMASK_FIRCOEFFICIENTS {
  uint32_t                         u32Register;
  stc_VIDEOSS_FETCHMASK_FIRCOEFFICIENTS_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_FETCHMASK_FIRCOEFFICIENTS_t;

/**
  * \brief Control options for RLAD decompression. (VIDEOSS_FETCHMASK_DECODECONTROL)
  */
typedef struct stc_VIDEOSS_FETCHMASK_DECODECONTROL_field {
  uint32_t                         u2COMPRESSIONMODE:2;
  uint32_t                         :14;
  uint32_t                         u4RLADCOMPBITSRED:4;
  uint32_t                         u4RLADCOMPBITSGREEN:4;
  uint32_t                         u4RLADCOMPBITSBLUE:4;
  uint32_t                         u4RLADCOMPBITSALPHA:4;
} stc_VIDEOSS_FETCHMASK_DECODECONTROL_field_t;

typedef union un_VIDEOSS_FETCHMASK_DECODECONTROL {
  uint32_t                         u32Register;
  stc_VIDEOSS_FETCHMASK_DECODECONTROL_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_FETCHMASK_DECODECONTROL_t;

/**
  * \brief Source buffer length for compressed data. (VIDEOSS_FETCHMASK_SOURCEBUFFERLENGTH)
  */
typedef struct stc_VIDEOSS_FETCHMASK_SOURCEBUFFERLENGTH_field {
  uint32_t                         u29RLEWORDS:29;
  uint32_t                         :3;
} stc_VIDEOSS_FETCHMASK_SOURCEBUFFERLENGTH_field_t;

typedef union un_VIDEOSS_FETCHMASK_SOURCEBUFFERLENGTH {
  uint32_t                         u32Register;
  stc_VIDEOSS_FETCHMASK_SOURCEBUFFERLENGTH_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_FETCHMASK_SOURCEBUFFERLENGTH_t;

/**
  * \brief Shared common control settings for all layers. (VIDEOSS_FETCHMASK_CONTROL)
  */
typedef struct stc_VIDEOSS_FETCHMASK_CONTROL_field {
  uint32_t                         u3RASTERMODE:3;
  uint32_t                         u2INPUTSELECT:2;
  uint32_t                         u1YUV422UPSAMPLINGMODE:1;
  uint32_t                         :1;
  uint32_t                         u1RAWPIXEL:1;
  uint32_t                         :8;
  uint32_t                         u1CLIPCOLOR:1;
  uint32_t                         :3;
  uint32_t                         u3FILTERMODE:3;
  uint32_t                         :5;
  uint32_t                         u2GEOMETRY:2;
  uint32_t                         :2;
} stc_VIDEOSS_FETCHMASK_CONTROL_field_t;

typedef union un_VIDEOSS_FETCHMASK_CONTROL {
  uint32_t                         u32Register;
  stc_VIDEOSS_FETCHMASK_CONTROL_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_FETCHMASK_CONTROL_t;

/**
  * \brief Shadow load trigger. (VIDEOSS_FETCHMASK_CONTROLTRIGGER)
  */
typedef struct stc_VIDEOSS_FETCHMASK_CONTROLTRIGGER_field {
  uint32_t                         u1SHDTOKGEN:1;
  uint32_t                         :31;
} stc_VIDEOSS_FETCHMASK_CONTROLTRIGGER_field_t;

typedef union un_VIDEOSS_FETCHMASK_CONTROLTRIGGER {
  uint32_t                         u32Register;
  stc_VIDEOSS_FETCHMASK_CONTROLTRIGGER_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_FETCHMASK_CONTROLTRIGGER_t;

/**
  * \brief Frame start trigger. (VIDEOSS_FETCHMASK_START)
  */
typedef struct stc_VIDEOSS_FETCHMASK_START_field {
  uint32_t                         u1START:1;
  uint32_t                         :31;
} stc_VIDEOSS_FETCHMASK_START_field_t;

typedef union un_VIDEOSS_FETCHMASK_START {
  uint32_t                         u32Register;
  stc_VIDEOSS_FETCHMASK_START_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_FETCHMASK_START_t;

/**
  * \brief Fetch unit type. (VIDEOSS_FETCHMASK_FETCHTYPE)
  */
typedef struct stc_VIDEOSS_FETCHMASK_FETCHTYPE_field {
  uint32_t                         u4FETCHTYPE:4;
  uint32_t                         :28;
} stc_VIDEOSS_FETCHMASK_FETCHTYPE_field_t;

typedef union un_VIDEOSS_FETCHMASK_FETCHTYPE {
  uint32_t                         u32Register;
  stc_VIDEOSS_FETCHMASK_FETCHTYPE_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_FETCHMASK_FETCHTYPE_t;

/**
  * \brief Status information of the RLAD decoder. (VIDEOSS_FETCHMASK_DECODERSTATUS)
  */
typedef struct stc_VIDEOSS_FETCHMASK_DECODERSTATUS_field {
  uint32_t                         u1BUFFERTOOSMALL:1;
  uint32_t                         u1BUFFERTOOLARGE:1;
  uint32_t                         :30;
} stc_VIDEOSS_FETCHMASK_DECODERSTATUS_field_t;

typedef union un_VIDEOSS_FETCHMASK_DECODERSTATUS {
  uint32_t                         u32Register;
  stc_VIDEOSS_FETCHMASK_DECODERSTATUS_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_FETCHMASK_DECODERSTATUS_t;

/**
  * \brief Burst buffer properties. (VIDEOSS_FETCHMASK_BURSTBUFFERPROPERTIES)
  */
typedef struct stc_VIDEOSS_FETCHMASK_BURSTBUFFERPROPERTIES_field {
  uint32_t                         u8MANAGEDBURSTBUFFERS:8;
  uint32_t                         u5BURSTLENGTHFORMAXBUFFERS:5;
  uint32_t                         :19;
} stc_VIDEOSS_FETCHMASK_BURSTBUFFERPROPERTIES_field_t;

typedef union un_VIDEOSS_FETCHMASK_BURSTBUFFERPROPERTIES {
  uint32_t                         u32Register;
  stc_VIDEOSS_FETCHMASK_BURSTBUFFERPROPERTIES_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_FETCHMASK_BURSTBUFFERPROPERTIES_t;



/**
  * \brief Raster Operation static control register (VIDEOSS_ROP_STATICCONTROL)
  */
typedef struct stc_VIDEOSS_ROP_STATICCONTROL_field {
  uint32_t                         u1SHDEN:1;
  uint32_t                         :31;
} stc_VIDEOSS_ROP_STATICCONTROL_field_t;

typedef union un_VIDEOSS_ROP_STATICCONTROL {
  uint32_t                         u32Register;
  stc_VIDEOSS_ROP_STATICCONTROL_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_ROP_STATICCONTROL_t;

/**
  * \brief Raster Operation control register (VIDEOSS_ROP_CONTROL)
  */
typedef struct stc_VIDEOSS_ROP_CONTROL_field {
  uint32_t                         u1MODE:1;
  uint32_t                         :3;
  uint32_t                         u1ALPHAMODE:1;
  uint32_t                         u1BLUEMODE:1;
  uint32_t                         u1GREENMODE:1;
  uint32_t                         u1REDMODE:1;
  uint32_t                         u1PRIMDIV2:1;
  uint32_t                         u1SECDIV2:1;
  uint32_t                         u1TERTDIV2:1;
  uint32_t                         :21;
} stc_VIDEOSS_ROP_CONTROL_field_t;

typedef union un_VIDEOSS_ROP_CONTROL {
  uint32_t                         u32Register;
  stc_VIDEOSS_ROP_CONTROL_field_t  stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_ROP_CONTROL_t;

/**
  * \brief ROP operation indices (VIDEOSS_ROP_RASTEROPERATIONINDICES)
  */
typedef struct stc_VIDEOSS_ROP_RASTEROPERATIONINDICES_field {
  uint32_t                         u8OPINDEXALPHA:8;
  uint32_t                         u8OPINDEXBLUE:8;
  uint32_t                         u8OPINDEXGREEN:8;
  uint32_t                         u8OPINDEXRED:8;
} stc_VIDEOSS_ROP_RASTEROPERATIONINDICES_field_t;

typedef union un_VIDEOSS_ROP_RASTEROPERATIONINDICES {
  uint32_t                         u32Register;
  stc_VIDEOSS_ROP_RASTEROPERATIONINDICES_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_ROP_RASTEROPERATIONINDICES_t;

/**
  * \brief Value of last received primary control word (VIDEOSS_ROP_PRIMCONTROLWORD)
  */
typedef struct stc_VIDEOSS_ROP_PRIMCONTROLWORD_field {
  uint32_t                         u32P_VAL:32;
} stc_VIDEOSS_ROP_PRIMCONTROLWORD_field_t;

typedef union un_VIDEOSS_ROP_PRIMCONTROLWORD {
  uint32_t                         u32Register;
  stc_VIDEOSS_ROP_PRIMCONTROLWORD_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_ROP_PRIMCONTROLWORD_t;

/**
  * \brief Value of last received secondary control word (VIDEOSS_ROP_SECCONTROLWORD)
  */
typedef struct stc_VIDEOSS_ROP_SECCONTROLWORD_field {
  uint32_t                         u32S_VAL:32;
} stc_VIDEOSS_ROP_SECCONTROLWORD_field_t;

typedef union un_VIDEOSS_ROP_SECCONTROLWORD {
  uint32_t                         u32Register;
  stc_VIDEOSS_ROP_SECCONTROLWORD_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_ROP_SECCONTROLWORD_t;

/**
  * \brief Value of last received tertiary control word (VIDEOSS_ROP_TERTCONTROLWORD)
  */
typedef struct stc_VIDEOSS_ROP_TERTCONTROLWORD_field {
  uint32_t                         u32T_VAL:32;
} stc_VIDEOSS_ROP_TERTCONTROLWORD_field_t;

typedef union un_VIDEOSS_ROP_TERTCONTROLWORD {
  uint32_t                         u32Register;
  stc_VIDEOSS_ROP_TERTCONTROLWORD_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_ROP_TERTCONTROLWORD_t;



/**
  * \brief CLUT static control register (VIDEOSS_CLUT_STATICCONTROL)
  */
typedef struct stc_VIDEOSS_CLUT_STATICCONTROL_field {
  uint32_t                         u1SHDEN:1;
  uint32_t                         :31;
} stc_VIDEOSS_CLUT_STATICCONTROL_field_t;

typedef union un_VIDEOSS_CLUT_STATICCONTROL {
  uint32_t                         u32Register;
  stc_VIDEOSS_CLUT_STATICCONTROL_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_CLUT_STATICCONTROL_t;

/**
  * \brief CLUT unshadowed control register (VIDEOSS_CLUT_UNSHADOWEDCONTROL)
  */
typedef struct stc_VIDEOSS_CLUT_UNSHADOWEDCONTROL_field {
  uint32_t                         u1B_EN:1;
  uint32_t                         u1G_EN:1;
  uint32_t                         u1R_EN:1;
  uint32_t                         :29;
} stc_VIDEOSS_CLUT_UNSHADOWEDCONTROL_field_t;

typedef union un_VIDEOSS_CLUT_UNSHADOWEDCONTROL {
  uint32_t                         u32Register;
  stc_VIDEOSS_CLUT_UNSHADOWEDCONTROL_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_CLUT_UNSHADOWEDCONTROL_t;

/**
  * \brief CLUT control register (VIDEOSS_CLUT_CONTROL)
  */
typedef struct stc_VIDEOSS_CLUT_CONTROL_field {
  uint32_t                         u2MODE:2;
  uint32_t                         :2;
  uint32_t                         u1COL_8BIT:1;
  uint32_t                         u1ALPHAMASK:1;
  uint32_t                         u1ALPHAINVERT:1;
  uint32_t                         :1;
  uint32_t                         u4IDX_BITS:4;
  uint32_t                         :20;
} stc_VIDEOSS_CLUT_CONTROL_field_t;

typedef union un_VIDEOSS_CLUT_CONTROL {
  uint32_t                         u32Register;
  stc_VIDEOSS_CLUT_CONTROL_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_CLUT_CONTROL_t;

/**
  * \brief CLUT status register (VIDEOSS_CLUT_STATUS)
  */
typedef struct stc_VIDEOSS_CLUT_STATUS_field {
  uint32_t                         u1WRITE_TIMEOUT:1;
  uint32_t                         :3;
  uint32_t                         u1READ_TIMEOUT:1;
  uint32_t                         :27;
} stc_VIDEOSS_CLUT_STATUS_field_t;

typedef union un_VIDEOSS_CLUT_STATUS {
  uint32_t                         u32Register;
  stc_VIDEOSS_CLUT_STATUS_field_t  stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_CLUT_STATUS_t;

/**
  * \brief Value of last received control word, for debugging (VIDEOSS_CLUT_LASTCONTROLWORD)
  */
typedef struct stc_VIDEOSS_CLUT_LASTCONTROLWORD_field {
  uint32_t                         u32L_VAL:32;
} stc_VIDEOSS_CLUT_LASTCONTROLWORD_field_t;

typedef union un_VIDEOSS_CLUT_LASTCONTROLWORD {
  uint32_t                         u32Register;
  stc_VIDEOSS_CLUT_LASTCONTROLWORD_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_CLUT_LASTCONTROLWORD_t;

/**
  * \brief Look Up Table (VIDEOSS_CLUT_LUT)
  */
typedef struct stc_VIDEOSS_CLUT_LUT_field {
  uint32_t                         u10BLUE:10;
  uint32_t                         u10GREEN:10;
  uint32_t                         u10RED:10;
  uint32_t                         :2;
} stc_VIDEOSS_CLUT_LUT_field_t;

typedef union un_VIDEOSS_CLUT_LUT {
  uint32_t                         u32Register;
  stc_VIDEOSS_CLUT_LUT_field_t     stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_CLUT_LUT_t;



/**
  * \brief Color Matrix static control register (VIDEOSS_MATRIX_STATICCONTROL)
  */
typedef struct stc_VIDEOSS_MATRIX_STATICCONTROL_field {
  uint32_t                         u1SHDEN:1;
  uint32_t                         :31;
} stc_VIDEOSS_MATRIX_STATICCONTROL_field_t;

typedef union un_VIDEOSS_MATRIX_STATICCONTROL {
  uint32_t                         u32Register;
  stc_VIDEOSS_MATRIX_STATICCONTROL_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_MATRIX_STATICCONTROL_t;

/**
  * \brief Color Matrix control register (VIDEOSS_MATRIX_CONTROL)
  */
typedef struct stc_VIDEOSS_MATRIX_CONTROL_field {
  uint32_t                         u2MODE:2;
  uint32_t                         :2;
  uint32_t                         u1ALPHAMASK:1;
  uint32_t                         u1ALPHAINVERT:1;
  uint32_t                         :26;
} stc_VIDEOSS_MATRIX_CONTROL_field_t;

typedef union un_VIDEOSS_MATRIX_CONTROL {
  uint32_t                         u32Register;
  stc_VIDEOSS_MATRIX_CONTROL_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_MATRIX_CONTROL_t;

/**
  * \brief Matrix values for calculation of the red output value. (VIDEOSS_MATRIX_RED0)
  */
typedef struct stc_VIDEOSS_MATRIX_RED0_field {
  uint32_t                         u13A11:13;
  uint32_t                         :3;
  uint32_t                         u13A12:13;
  uint32_t                         :3;
} stc_VIDEOSS_MATRIX_RED0_field_t;

typedef union un_VIDEOSS_MATRIX_RED0 {
  uint32_t                         u32Register;
  stc_VIDEOSS_MATRIX_RED0_field_t  stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_MATRIX_RED0_t;

/**
  * \brief Matrix values for calculation of the red output value. (VIDEOSS_MATRIX_RED1)
  */
typedef struct stc_VIDEOSS_MATRIX_RED1_field {
  uint32_t                         u13A13:13;
  uint32_t                         :3;
  uint32_t                         u13A14:13;
  uint32_t                         :3;
} stc_VIDEOSS_MATRIX_RED1_field_t;

typedef union un_VIDEOSS_MATRIX_RED1 {
  uint32_t                         u32Register;
  stc_VIDEOSS_MATRIX_RED1_field_t  stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_MATRIX_RED1_t;

/**
  * \brief Matrix values for calculation of the green output value. (VIDEOSS_MATRIX_GREEN0)
  */
typedef struct stc_VIDEOSS_MATRIX_GREEN0_field {
  uint32_t                         u13A21:13;
  uint32_t                         :3;
  uint32_t                         u13A22:13;
  uint32_t                         :3;
} stc_VIDEOSS_MATRIX_GREEN0_field_t;

typedef union un_VIDEOSS_MATRIX_GREEN0 {
  uint32_t                         u32Register;
  stc_VIDEOSS_MATRIX_GREEN0_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_MATRIX_GREEN0_t;

/**
  * \brief Matrix values for calculation of the green output value. (VIDEOSS_MATRIX_GREEN1)
  */
typedef struct stc_VIDEOSS_MATRIX_GREEN1_field {
  uint32_t                         u13A23:13;
  uint32_t                         :3;
  uint32_t                         u13A24:13;
  uint32_t                         :3;
} stc_VIDEOSS_MATRIX_GREEN1_field_t;

typedef union un_VIDEOSS_MATRIX_GREEN1 {
  uint32_t                         u32Register;
  stc_VIDEOSS_MATRIX_GREEN1_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_MATRIX_GREEN1_t;

/**
  * \brief Matrix values for calculation of the blue output value. (VIDEOSS_MATRIX_BLUE0)
  */
typedef struct stc_VIDEOSS_MATRIX_BLUE0_field {
  uint32_t                         u13A31:13;
  uint32_t                         :3;
  uint32_t                         u13A32:13;
  uint32_t                         :3;
} stc_VIDEOSS_MATRIX_BLUE0_field_t;

typedef union un_VIDEOSS_MATRIX_BLUE0 {
  uint32_t                         u32Register;
  stc_VIDEOSS_MATRIX_BLUE0_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_MATRIX_BLUE0_t;

/**
  * \brief Matrix values for calculation of the blue output value. (VIDEOSS_MATRIX_BLUE1)
  */
typedef struct stc_VIDEOSS_MATRIX_BLUE1_field {
  uint32_t                         u13A33:13;
  uint32_t                         :3;
  uint32_t                         u13A34:13;
  uint32_t                         :3;
} stc_VIDEOSS_MATRIX_BLUE1_field_t;

typedef union un_VIDEOSS_MATRIX_BLUE1 {
  uint32_t                         u32Register;
  stc_VIDEOSS_MATRIX_BLUE1_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_MATRIX_BLUE1_t;

/**
  * \brief Matrix values for calculation of the alpha output value. (VIDEOSS_MATRIX_ALPHA0)
  */
typedef struct stc_VIDEOSS_MATRIX_ALPHA0_field {
  uint32_t                         u13A41:13;
  uint32_t                         :3;
  uint32_t                         u13A42:13;
  uint32_t                         :3;
} stc_VIDEOSS_MATRIX_ALPHA0_field_t;

typedef union un_VIDEOSS_MATRIX_ALPHA0 {
  uint32_t                         u32Register;
  stc_VIDEOSS_MATRIX_ALPHA0_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_MATRIX_ALPHA0_t;

/**
  * \brief Matrix values for calculation of the alpha output value. (VIDEOSS_MATRIX_ALPHA1)
  */
typedef struct stc_VIDEOSS_MATRIX_ALPHA1_field {
  uint32_t                         u13A43:13;
  uint32_t                         :3;
  uint32_t                         u13A44:13;
  uint32_t                         :3;
} stc_VIDEOSS_MATRIX_ALPHA1_field_t;

typedef union un_VIDEOSS_MATRIX_ALPHA1 {
  uint32_t                         u32Register;
  stc_VIDEOSS_MATRIX_ALPHA1_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_MATRIX_ALPHA1_t;

/**
  * \brief Offset vectors for red and green output. (VIDEOSS_MATRIX_OFFSETVECTOR0)
  */
typedef struct stc_VIDEOSS_MATRIX_OFFSETVECTOR0_field {
  uint32_t                         u13C1:13;
  uint32_t                         :3;
  uint32_t                         u13C2:13;
  uint32_t                         :3;
} stc_VIDEOSS_MATRIX_OFFSETVECTOR0_field_t;

typedef union un_VIDEOSS_MATRIX_OFFSETVECTOR0 {
  uint32_t                         u32Register;
  stc_VIDEOSS_MATRIX_OFFSETVECTOR0_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_MATRIX_OFFSETVECTOR0_t;

/**
  * \brief Offset vectors for blue and alpha output. (VIDEOSS_MATRIX_OFFSETVECTOR1)
  */
typedef struct stc_VIDEOSS_MATRIX_OFFSETVECTOR1_field {
  uint32_t                         u13C3:13;
  uint32_t                         :3;
  uint32_t                         u13C4:13;
  uint32_t                         :3;
} stc_VIDEOSS_MATRIX_OFFSETVECTOR1_field_t;

typedef union un_VIDEOSS_MATRIX_OFFSETVECTOR1 {
  uint32_t                         u32Register;
  stc_VIDEOSS_MATRIX_OFFSETVECTOR1_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_MATRIX_OFFSETVECTOR1_t;



/**
  * \brief Static control settings that must typically be setup once only. (VIDEOSS_GPSCALER_STATICCONTROL)
  */
typedef struct stc_VIDEOSS_GPSCALER_STATICCONTROL_field {
  uint32_t                         u1SHDEN:1;
  uint32_t                         :31;
} stc_VIDEOSS_GPSCALER_STATICCONTROL_field_t;

typedef union un_VIDEOSS_GPSCALER_STATICCONTROL {
  uint32_t                         u32Register;
  stc_VIDEOSS_GPSCALER_STATICCONTROL_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_GPSCALER_STATICCONTROL_t;

/**
  * \brief Global operation control. (VIDEOSS_GPSCALER_CONTROL)
  */
typedef struct stc_VIDEOSS_GPSCALER_CONTROL_field {
  uint32_t                         u4MODE:4;
  uint32_t                         :4;
  uint32_t                         u1OPERATION_MODE:1;
  uint32_t                         :23;
} stc_VIDEOSS_GPSCALER_CONTROL_field_t;

typedef union un_VIDEOSS_GPSCALER_CONTROL {
  uint32_t                         u32Register;
  stc_VIDEOSS_GPSCALER_CONTROL_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_GPSCALER_CONTROL_t;

/**
  * \brief Dimensions of the output frame or fame slice. This values are required for both FIR filter and scaler, since their output may have other dimension than input. The dimension of scaler's output is defined by the scale factor. The dimension of FIR filter's output depends on the tiling at the begin and the end of the slice. (VIDEOSS_GPSCALER_OUTPUTDIMENSION)
  */
typedef struct stc_VIDEOSS_GPSCALER_OUTPUTDIMENSION_field {
  uint32_t                         u14OUTPUT_WIDTH:14;
  uint32_t                         :2;
  uint32_t                         u14OUTPUT_HEIGHT:14;
  uint32_t                         :2;
} stc_VIDEOSS_GPSCALER_OUTPUTDIMENSION_field_t;

typedef union un_VIDEOSS_GPSCALER_OUTPUTDIMENSION {
  uint32_t                         u32Register;
  stc_VIDEOSS_GPSCALER_OUTPUTDIMENSION_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_GPSCALER_OUTPUTDIMENSION_t;

/**
  * \brief Scaler operation control. (VIDEOSS_GPSCALER_SCALERCONTROL)
  */
typedef struct stc_VIDEOSS_GPSCALER_SCALERCONTROL_field {
  uint32_t                         u1SCALE_MODE_H:1;
  uint32_t                         :3;
  uint32_t                         u1SCALE_MODE_V:1;
  uint32_t                         :3;
  uint32_t                         u1FILTER_MODE_H:1;
  uint32_t                         :3;
  uint32_t                         u1FILTER_MODE_V:1;
  uint32_t                         :3;
  uint32_t                         u2FIELD_MODE:2;
  uint32_t                         :2;
  uint32_t                         u8ALPHA_VALUE:8;
  uint32_t                         :4;
} stc_VIDEOSS_GPSCALER_SCALERCONTROL_field_t;

typedef union un_VIDEOSS_GPSCALER_SCALERCONTROL {
  uint32_t                         u32Register;
  stc_VIDEOSS_GPSCALER_SCALERCONTROL_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_GPSCALER_SCALERCONTROL_t;

/**
  * \brief Phase interpolator setup. (VIDEOSS_GPSCALER_SCALERSETUPH0)
  */
typedef struct stc_VIDEOSS_GPSCALER_SCALERSETUPH0_field {
  uint32_t                         u20SCALE_FACTOR_H:20;
  uint32_t                         :12;
} stc_VIDEOSS_GPSCALER_SCALERSETUPH0_field_t;

typedef union un_VIDEOSS_GPSCALER_SCALERSETUPH0 {
  uint32_t                         u32Register;
  stc_VIDEOSS_GPSCALER_SCALERSETUPH0_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_GPSCALER_SCALERSETUPH0_t;

/**
  * \brief Phase interpolator setup. (VIDEOSS_GPSCALER_SCALERSETUPH1)
  */
typedef struct stc_VIDEOSS_GPSCALER_SCALERSETUPH1_field {
  uint32_t                         u21PHASE_OFFSET_H:21;
  uint32_t                         :11;
} stc_VIDEOSS_GPSCALER_SCALERSETUPH1_field_t;

typedef union un_VIDEOSS_GPSCALER_SCALERSETUPH1 {
  uint32_t                         u32Register;
  stc_VIDEOSS_GPSCALER_SCALERSETUPH1_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_GPSCALER_SCALERSETUPH1_t;

/**
  * \brief Phase interpolator setup. (VIDEOSS_GPSCALER_SCALERSETUPV0)
  */
typedef struct stc_VIDEOSS_GPSCALER_SCALERSETUPV0_field {
  uint32_t                         u20SCALE_FACTOR_V:20;
  uint32_t                         :12;
} stc_VIDEOSS_GPSCALER_SCALERSETUPV0_field_t;

typedef union un_VIDEOSS_GPSCALER_SCALERSETUPV0 {
  uint32_t                         u32Register;
  stc_VIDEOSS_GPSCALER_SCALERSETUPV0_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_GPSCALER_SCALERSETUPV0_t;

/**
  * \brief Phase interpolator setup, selected if input and output field polarity is 0. (VIDEOSS_GPSCALER_SCALERSETUPV1)
  */
typedef struct stc_VIDEOSS_GPSCALER_SCALERSETUPV1_field {
  uint32_t                         u21PHASE_OFFSET_V:21;
  uint32_t                         :11;
} stc_VIDEOSS_GPSCALER_SCALERSETUPV1_field_t;

typedef union un_VIDEOSS_GPSCALER_SCALERSETUPV1 {
  uint32_t                         u32Register;
  stc_VIDEOSS_GPSCALER_SCALERSETUPV1_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_GPSCALER_SCALERSETUPV1_t;

/**
  * \brief Phase interpolator setup, selected if input field polarity is 1 and output field polarity is 0. (VIDEOSS_GPSCALER_SCALERSETUPV2)
  */
typedef struct stc_VIDEOSS_GPSCALER_SCALERSETUPV2_field {
  uint32_t                         u21PHASE_OFFSET_V1:21;
  uint32_t                         :11;
} stc_VIDEOSS_GPSCALER_SCALERSETUPV2_field_t;

typedef union un_VIDEOSS_GPSCALER_SCALERSETUPV2 {
  uint32_t                         u32Register;
  stc_VIDEOSS_GPSCALER_SCALERSETUPV2_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_GPSCALER_SCALERSETUPV2_t;

/**
  * \brief Phase interpolator setup, selected if input field polarity is 0 and output field polarity is 1. (VIDEOSS_GPSCALER_SCALERSETUPV3)
  */
typedef struct stc_VIDEOSS_GPSCALER_SCALERSETUPV3_field {
  uint32_t                         u21PHASE_OFFSET_V2:21;
  uint32_t                         :11;
} stc_VIDEOSS_GPSCALER_SCALERSETUPV3_field_t;

typedef union un_VIDEOSS_GPSCALER_SCALERSETUPV3 {
  uint32_t                         u32Register;
  stc_VIDEOSS_GPSCALER_SCALERSETUPV3_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_GPSCALER_SCALERSETUPV3_t;

/**
  * \brief Phase interpolator setup, selected if input and output field polarity is 1. (VIDEOSS_GPSCALER_SCALERSETUPV4)
  */
typedef struct stc_VIDEOSS_GPSCALER_SCALERSETUPV4_field {
  uint32_t                         u21PHASE_OFFSET_V3:21;
  uint32_t                         :11;
} stc_VIDEOSS_GPSCALER_SCALERSETUPV4_field_t;

typedef union un_VIDEOSS_GPSCALER_SCALERSETUPV4 {
  uint32_t                         u32Register;
  stc_VIDEOSS_GPSCALER_SCALERSETUPV4_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_GPSCALER_SCALERSETUPV4_t;

/**
  * \brief Filter operation control. (VIDEOSS_GPSCALER_FILTERCONTROL)
  */
typedef struct stc_VIDEOSS_GPSCALER_FILTERCONTROL_field {
  uint32_t                         u3TAPS_H:3;
  uint32_t                         :1;
  uint32_t                         u3TAPS_V:3;
  uint32_t                         :1;
  uint32_t                         u1BYPASS_MODE_R:1;
  uint32_t                         u1BYPASS_MODE_G:1;
  uint32_t                         u1BYPASS_MODE_B:1;
  uint32_t                         u1BYPASS_MODE_A:1;
  uint32_t                         u4EXPONENT_FIR:4;
  uint32_t                         u2TILE_MODE:2;
  uint32_t                         :2;
  uint32_t                         u1TILING_AT_BEGIN_H:1;
  uint32_t                         u1TILING_AT_BEGIN_V:1;
  uint32_t                         :2;
  uint32_t                         u8TILE_COLOR_ALPHA:8;
} stc_VIDEOSS_GPSCALER_FILTERCONTROL_field_t;

typedef union un_VIDEOSS_GPSCALER_FILTERCONTROL {
  uint32_t                         u32Register;
  stc_VIDEOSS_GPSCALER_FILTERCONTROL_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_GPSCALER_FILTERCONTROL_t;

/**
  * \brief Color for outside of the slice. (VIDEOSS_GPSCALER_TILECOLORRGB)
  */
typedef struct stc_VIDEOSS_GPSCALER_TILECOLORRGB_field {
  uint32_t                         u10TILE_COLOR_RED:10;
  uint32_t                         u10TILE_COLOR_GREEN:10;
  uint32_t                         u10TILE_COLOR_BLUE:10;
  uint32_t                         :2;
} stc_VIDEOSS_GPSCALER_TILECOLORRGB_field_t;

typedef union un_VIDEOSS_GPSCALER_TILECOLORRGB {
  uint32_t                         u32Register;
  stc_VIDEOSS_GPSCALER_TILECOLORRGB_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_GPSCALER_TILECOLORRGB_t;

/**
  * \brief Horizontal coefficients for filter_mode FIR. (VIDEOSS_GPSCALER_COEFFICIENTSH0)
  */
typedef struct stc_VIDEOSS_GPSCALER_COEFFICIENTSH0_field {
  uint32_t                         u8COEFF_H3:8;
  uint32_t                         u8COEFF_H2:8;
  uint32_t                         u8COEFF_H1:8;
  uint32_t                         u8COEFF_H0:8;
} stc_VIDEOSS_GPSCALER_COEFFICIENTSH0_field_t;

typedef union un_VIDEOSS_GPSCALER_COEFFICIENTSH0 {
  uint32_t                         u32Register;
  stc_VIDEOSS_GPSCALER_COEFFICIENTSH0_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_GPSCALER_COEFFICIENTSH0_t;

/**
  * \brief Horizontal coefficients for filter_mode FIR. (VIDEOSS_GPSCALER_COEFFICIENTSH1)
  */
typedef struct stc_VIDEOSS_GPSCALER_COEFFICIENTSH1_field {
  uint32_t                         u8COEFF_H7:8;
  uint32_t                         u8COEFF_H6:8;
  uint32_t                         u8COEFF_H5:8;
  uint32_t                         u8COEFF_H4:8;
} stc_VIDEOSS_GPSCALER_COEFFICIENTSH1_field_t;

typedef union un_VIDEOSS_GPSCALER_COEFFICIENTSH1 {
  uint32_t                         u32Register;
  stc_VIDEOSS_GPSCALER_COEFFICIENTSH1_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_GPSCALER_COEFFICIENTSH1_t;

/**
  * \brief Horizontal coefficients for filter_mode FIR. (VIDEOSS_GPSCALER_COEFFICIENTSH2)
  */
typedef struct stc_VIDEOSS_GPSCALER_COEFFICIENTSH2_field {
  uint32_t                         u8COEFF_H11:8;
  uint32_t                         u8COEFF_H10:8;
  uint32_t                         u8COEFF_H9:8;
  uint32_t                         u8COEFF_H8:8;
} stc_VIDEOSS_GPSCALER_COEFFICIENTSH2_field_t;

typedef union un_VIDEOSS_GPSCALER_COEFFICIENTSH2 {
  uint32_t                         u32Register;
  stc_VIDEOSS_GPSCALER_COEFFICIENTSH2_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_GPSCALER_COEFFICIENTSH2_t;

/**
  * \brief Horizontal coefficients for filter_mode FIR. (VIDEOSS_GPSCALER_COEFFICIENTSH3)
  */
typedef struct stc_VIDEOSS_GPSCALER_COEFFICIENTSH3_field {
  uint32_t                         :8;
  uint32_t                         u8COEFF_H14:8;
  uint32_t                         u8COEFF_H13:8;
  uint32_t                         u8COEFF_H12:8;
} stc_VIDEOSS_GPSCALER_COEFFICIENTSH3_field_t;

typedef union un_VIDEOSS_GPSCALER_COEFFICIENTSH3 {
  uint32_t                         u32Register;
  stc_VIDEOSS_GPSCALER_COEFFICIENTSH3_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_GPSCALER_COEFFICIENTSH3_t;

/**
  * \brief Vertical coefficients for filter_mode FIR. (VIDEOSS_GPSCALER_COEFFICIENTSV0)
  */
typedef struct stc_VIDEOSS_GPSCALER_COEFFICIENTSV0_field {
  uint32_t                         u8COEFF_V3:8;
  uint32_t                         u8COEFF_V2:8;
  uint32_t                         u8COEFF_V1:8;
  uint32_t                         u8COEFF_V0:8;
} stc_VIDEOSS_GPSCALER_COEFFICIENTSV0_field_t;

typedef union un_VIDEOSS_GPSCALER_COEFFICIENTSV0 {
  uint32_t                         u32Register;
  stc_VIDEOSS_GPSCALER_COEFFICIENTSV0_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_GPSCALER_COEFFICIENTSV0_t;

/**
  * \brief Vertical coefficients for filter_mode FIR. (VIDEOSS_GPSCALER_COEFFICIENTSV1)
  */
typedef struct stc_VIDEOSS_GPSCALER_COEFFICIENTSV1_field {
  uint32_t                         u8COEFF_V7:8;
  uint32_t                         u8COEFF_V6:8;
  uint32_t                         u8COEFF_V5:8;
  uint32_t                         u8COEFF_V4:8;
} stc_VIDEOSS_GPSCALER_COEFFICIENTSV1_field_t;

typedef union un_VIDEOSS_GPSCALER_COEFFICIENTSV1 {
  uint32_t                         u32Register;
  stc_VIDEOSS_GPSCALER_COEFFICIENTSV1_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_GPSCALER_COEFFICIENTSV1_t;

/**
  * \brief Vertical coefficients for filter_mode FIR. (VIDEOSS_GPSCALER_COEFFICIENTSV2)
  */
typedef struct stc_VIDEOSS_GPSCALER_COEFFICIENTSV2_field {
  uint32_t                         u8COEFF_V11:8;
  uint32_t                         u8COEFF_V10:8;
  uint32_t                         u8COEFF_V9:8;
  uint32_t                         u8COEFF_V8:8;
} stc_VIDEOSS_GPSCALER_COEFFICIENTSV2_field_t;

typedef union un_VIDEOSS_GPSCALER_COEFFICIENTSV2 {
  uint32_t                         u32Register;
  stc_VIDEOSS_GPSCALER_COEFFICIENTSV2_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_GPSCALER_COEFFICIENTSV2_t;

/**
  * \brief Vertical coefficients for filter_mode FIR. (VIDEOSS_GPSCALER_COEFFICIENTSV3)
  */
typedef struct stc_VIDEOSS_GPSCALER_COEFFICIENTSV3_field {
  uint32_t                         :8;
  uint32_t                         u8COEFF_V14:8;
  uint32_t                         u8COEFF_V13:8;
  uint32_t                         u8COEFF_V12:8;
} stc_VIDEOSS_GPSCALER_COEFFICIENTSV3_field_t;

typedef union un_VIDEOSS_GPSCALER_COEFFICIENTSV3 {
  uint32_t                         u32Register;
  stc_VIDEOSS_GPSCALER_COEFFICIENTSV3_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_GPSCALER_COEFFICIENTSV3_t;



/**
  * \brief BlitBlend static control register (VIDEOSS_BLITBLEND_STATICCONTROL)
  */
typedef struct stc_VIDEOSS_BLITBLEND_STATICCONTROL_field {
  uint32_t                         u1SHDEN:1;
  uint32_t                         :31;
} stc_VIDEOSS_BLITBLEND_STATICCONTROL_field_t;

typedef union un_VIDEOSS_BLITBLEND_STATICCONTROL {
  uint32_t                         u32Register;
  stc_VIDEOSS_BLITBLEND_STATICCONTROL_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_BLITBLEND_STATICCONTROL_t;

/**
  * \brief BlitBlend control register (VIDEOSS_BLITBLEND_CONTROL)
  */
typedef struct stc_VIDEOSS_BLITBLEND_CONTROL_field {
  uint32_t                         u1MODE:1;
  uint32_t                         :31;
} stc_VIDEOSS_BLITBLEND_CONTROL_field_t;

typedef union un_VIDEOSS_BLITBLEND_CONTROL {
  uint32_t                         u32Register;
  stc_VIDEOSS_BLITBLEND_CONTROL_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_BLITBLEND_CONTROL_t;

/**
  * \brief Neutral border setup register (VIDEOSS_BLITBLEND_NEUTRALBORDER)
  */
typedef struct stc_VIDEOSS_BLITBLEND_NEUTRALBORDER_field {
  uint32_t                         u1NEUTRALBORDERMODE:1;
  uint32_t                         :7;
  uint32_t                         u3NEUTRALBORDERLEFT:3;
  uint32_t                         :1;
  uint32_t                         u3NEUTRALBORDERRIGHT:3;
  uint32_t                         :17;
} stc_VIDEOSS_BLITBLEND_NEUTRALBORDER_field_t;

typedef union un_VIDEOSS_BLITBLEND_NEUTRALBORDER {
  uint32_t                         u32Register;
  stc_VIDEOSS_BLITBLEND_NEUTRALBORDER_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_BLITBLEND_NEUTRALBORDER_t;

/**
  * \brief Constant color register (VIDEOSS_BLITBLEND_CONSTANTCOLOR)
  */
typedef struct stc_VIDEOSS_BLITBLEND_CONSTANTCOLOR_field {
  uint32_t                         u8CONSTANTALPHA:8;
  uint32_t                         u8CONSTANTBLUE:8;
  uint32_t                         u8CONSTANTGREEN:8;
  uint32_t                         u8CONSTANTRED:8;
} stc_VIDEOSS_BLITBLEND_CONSTANTCOLOR_field_t;

typedef union un_VIDEOSS_BLITBLEND_CONSTANTCOLOR {
  uint32_t                         u32Register;
  stc_VIDEOSS_BLITBLEND_CONSTANTCOLOR_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_BLITBLEND_CONSTANTCOLOR_t;

/**
  * \brief Open GL RGB blending factors (VIDEOSS_BLITBLEND_COLORREDBLENDFUNCTION)
  */
typedef struct stc_VIDEOSS_BLITBLEND_COLORREDBLENDFUNCTION_field {
  uint32_t                         u16BLENDFUNCCOLORREDSRC:16;
  uint32_t                         u16BLENDFUNCCOLORREDDST:16;
} stc_VIDEOSS_BLITBLEND_COLORREDBLENDFUNCTION_field_t;

typedef union un_VIDEOSS_BLITBLEND_COLORREDBLENDFUNCTION {
  uint32_t                         u32Register;
  stc_VIDEOSS_BLITBLEND_COLORREDBLENDFUNCTION_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_BLITBLEND_COLORREDBLENDFUNCTION_t;

/**
  * \brief Open GL RGB blending factors (VIDEOSS_BLITBLEND_COLORGREENBLENDFUNCTION)
  */
typedef struct stc_VIDEOSS_BLITBLEND_COLORGREENBLENDFUNCTION_field {
  uint32_t                         u16BLENDFUNCCOLORGREENSRC:16;
  uint32_t                         u16BLENDFUNCCOLORGREENDST:16;
} stc_VIDEOSS_BLITBLEND_COLORGREENBLENDFUNCTION_field_t;

typedef union un_VIDEOSS_BLITBLEND_COLORGREENBLENDFUNCTION {
  uint32_t                         u32Register;
  stc_VIDEOSS_BLITBLEND_COLORGREENBLENDFUNCTION_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_BLITBLEND_COLORGREENBLENDFUNCTION_t;

/**
  * \brief Open GL RGB blending factors (VIDEOSS_BLITBLEND_COLORBLUEBLENDFUNCTION)
  */
typedef struct stc_VIDEOSS_BLITBLEND_COLORBLUEBLENDFUNCTION_field {
  uint32_t                         u16BLENDFUNCCOLORBLUESRC:16;
  uint32_t                         u16BLENDFUNCCOLORBLUEDST:16;
} stc_VIDEOSS_BLITBLEND_COLORBLUEBLENDFUNCTION_field_t;

typedef union un_VIDEOSS_BLITBLEND_COLORBLUEBLENDFUNCTION {
  uint32_t                         u32Register;
  stc_VIDEOSS_BLITBLEND_COLORBLUEBLENDFUNCTION_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_BLITBLEND_COLORBLUEBLENDFUNCTION_t;

/**
  * \brief Open GL alpha blending factors (VIDEOSS_BLITBLEND_ALPHABLENDFUNCTION)
  */
typedef struct stc_VIDEOSS_BLITBLEND_ALPHABLENDFUNCTION_field {
  uint32_t                         u16BLENDFUNCALPHASRC:16;
  uint32_t                         u16BLENDFUNCALPHADST:16;
} stc_VIDEOSS_BLITBLEND_ALPHABLENDFUNCTION_field_t;

typedef union un_VIDEOSS_BLITBLEND_ALPHABLENDFUNCTION {
  uint32_t                         u32Register;
  stc_VIDEOSS_BLITBLEND_ALPHABLENDFUNCTION_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_BLITBLEND_ALPHABLENDFUNCTION_t;

/**
  * \brief Open GL and Open VG blending modes for colors red and green (VIDEOSS_BLITBLEND_BLENDMODE1)
  */
typedef struct stc_VIDEOSS_BLITBLEND_BLENDMODE1_field {
  uint32_t                         u16BLENDMODECOLORRED:16;
  uint32_t                         u16BLENDMODECOLORGREEN:16;
} stc_VIDEOSS_BLITBLEND_BLENDMODE1_field_t;

typedef union un_VIDEOSS_BLITBLEND_BLENDMODE1 {
  uint32_t                         u32Register;
  stc_VIDEOSS_BLITBLEND_BLENDMODE1_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_BLITBLEND_BLENDMODE1_t;

/**
  * \brief Open GL and Open VG blending modes for color blue and alpha (VIDEOSS_BLITBLEND_BLENDMODE2)
  */
typedef struct stc_VIDEOSS_BLITBLEND_BLENDMODE2_field {
  uint32_t                         u16BLENDMODECOLORBLUE:16;
  uint32_t                         u16BLENDMODEALPHA:16;
} stc_VIDEOSS_BLITBLEND_BLENDMODE2_field_t;

typedef union un_VIDEOSS_BLITBLEND_BLENDMODE2 {
  uint32_t                         u32Register;
  stc_VIDEOSS_BLITBLEND_BLENDMODE2_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_BLITBLEND_BLENDMODE2_t;

/**
  * \brief Direct Control of the BlitBlend Datapath multiplexers, do not change (VIDEOSS_BLITBLEND_DIRECTSETUP)
  */
typedef struct stc_VIDEOSS_BLITBLEND_DIRECTSETUP_field {
  uint32_t                         u10COLORDEBUG:10;
  uint32_t                         :6;
  uint32_t                         u10ALPHADEBUG:10;
  uint32_t                         :6;
} stc_VIDEOSS_BLITBLEND_DIRECTSETUP_field_t;

typedef union un_VIDEOSS_BLITBLEND_DIRECTSETUP {
  uint32_t                         u32Register;
  stc_VIDEOSS_BLITBLEND_DIRECTSETUP_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_BLITBLEND_DIRECTSETUP_t;

/**
  * \brief Value of last received primary control word (VIDEOSS_BLITBLEND_PRIMCONTROLWORD)
  */
typedef struct stc_VIDEOSS_BLITBLEND_PRIMCONTROLWORD_field {
  uint32_t                         u32P_VAL:32;
} stc_VIDEOSS_BLITBLEND_PRIMCONTROLWORD_field_t;

typedef union un_VIDEOSS_BLITBLEND_PRIMCONTROLWORD {
  uint32_t                         u32Register;
  stc_VIDEOSS_BLITBLEND_PRIMCONTROLWORD_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_BLITBLEND_PRIMCONTROLWORD_t;

/**
  * \brief Value of last received secondary control word (VIDEOSS_BLITBLEND_SECCONTROLWORD)
  */
typedef struct stc_VIDEOSS_BLITBLEND_SECCONTROLWORD_field {
  uint32_t                         u32S_VAL:32;
} stc_VIDEOSS_BLITBLEND_SECCONTROLWORD_field_t;

typedef union un_VIDEOSS_BLITBLEND_SECCONTROLWORD {
  uint32_t                         u32Register;
  stc_VIDEOSS_BLITBLEND_SECCONTROLWORD_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_BLITBLEND_SECCONTROLWORD_t;



/**
  * \brief Store unit static control register. (VIDEOSS_STORE_STATICCONTROL)
  */
typedef struct stc_VIDEOSS_STORE_STATICCONTROL_field {
  uint32_t                         u1SHDEN:1;
  uint32_t                         :3;
  uint32_t                         u1SINGLEFRAMEOPERATION:1;
  uint32_t                         :3;
  uint32_t                         u1BASEADDRESSAUTOUPDATE:1;
  uint32_t                         :23;
} stc_VIDEOSS_STORE_STATICCONTROL_field_t;

typedef union un_VIDEOSS_STORE_STATICCONTROL {
  uint32_t                         u32Register;
  stc_VIDEOSS_STORE_STATICCONTROL_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_STORE_STATICCONTROL_t;

/**
  * \brief Burst Buffer setup register. (VIDEOSS_STORE_BURSTBUFFERMANAGEMENT)
  */
typedef struct stc_VIDEOSS_STORE_BURSTBUFFERMANAGEMENT_field {
  uint32_t                         :8;
  uint32_t                         u5SETBURSTLENGTH:5;
  uint32_t                         :19;
} stc_VIDEOSS_STORE_BURSTBUFFERMANAGEMENT_field_t;

typedef union un_VIDEOSS_STORE_BURSTBUFFERMANAGEMENT {
  uint32_t                         u32Register;
  stc_VIDEOSS_STORE_BURSTBUFFERMANAGEMENT_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_STORE_BURSTBUFFERMANAGEMENT_t;

/**
  * \brief Ring buffer setup for destination. (VIDEOSS_STORE_RINGBUFSTARTADDR)
  */
typedef struct stc_VIDEOSS_STORE_RINGBUFSTARTADDR_field {
  uint32_t                         u32RINGBUFSTARTADDR:32;
} stc_VIDEOSS_STORE_RINGBUFSTARTADDR_field_t;

typedef union un_VIDEOSS_STORE_RINGBUFSTARTADDR {
  uint32_t                         u32Register;
  stc_VIDEOSS_STORE_RINGBUFSTARTADDR_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_STORE_RINGBUFSTARTADDR_t;

/**
  * \brief Ring buffer setup for destination. (VIDEOSS_STORE_RINGBUFWRAPADDR)
  */
typedef struct stc_VIDEOSS_STORE_RINGBUFWRAPADDR_field {
  uint32_t                         u32RINGBUFWRAPADDR:32;
} stc_VIDEOSS_STORE_RINGBUFWRAPADDR_field_t;

typedef union un_VIDEOSS_STORE_RINGBUFWRAPADDR {
  uint32_t                         u32Register;
  stc_VIDEOSS_STORE_RINGBUFWRAPADDR_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_STORE_RINGBUFWRAPADDR_t;

/**
  * \brief Destination buffer base address. (VIDEOSS_STORE_BASEADDRESS)
  */
typedef struct stc_VIDEOSS_STORE_BASEADDRESS_field {
  uint32_t                         u32BASEADDRESS:32;
} stc_VIDEOSS_STORE_BASEADDRESS_field_t;

typedef union un_VIDEOSS_STORE_BASEADDRESS {
  uint32_t                         u32Register;
  stc_VIDEOSS_STORE_BASEADDRESS_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_STORE_BASEADDRESS_t;

/**
  * \brief Destination buffer attributes. (VIDEOSS_STORE_DESTINATIONBUFFERATTRIBUTES)
  */
typedef struct stc_VIDEOSS_STORE_DESTINATIONBUFFERATTRIBUTES_field {
  uint32_t                         u17STRIDE:17;
  uint32_t                         :7;
  uint32_t                         u7BITSPERPIXEL:7;
} stc_VIDEOSS_STORE_DESTINATIONBUFFERATTRIBUTES_field_t;

typedef union un_VIDEOSS_STORE_DESTINATIONBUFFERATTRIBUTES {
  uint32_t                         u32Register;
  stc_VIDEOSS_STORE_DESTINATIONBUFFERATTRIBUTES_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_STORE_DESTINATIONBUFFERATTRIBUTES_t;

/**
  * \brief Destination buffer dimension. (VIDEOSS_STORE_DESTINATIONBUFFERDIMENSION)
  */
typedef struct stc_VIDEOSS_STORE_DESTINATIONBUFFERDIMENSION_field {
  uint32_t                         u14LINEWIDTH:14;
  uint32_t                         :2;
  uint32_t                         u14LINECOUNT:14;
  uint32_t                         :2;
} stc_VIDEOSS_STORE_DESTINATIONBUFFERDIMENSION_field_t;

typedef union un_VIDEOSS_STORE_DESTINATIONBUFFERDIMENSION {
  uint32_t                         u32Register;
  stc_VIDEOSS_STORE_DESTINATIONBUFFERDIMENSION_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_STORE_DESTINATIONBUFFERDIMENSION_t;

/**
  * \brief Offset between destination frame and buffer. (VIDEOSS_STORE_FRAMEOFFSET)
  */
typedef struct stc_VIDEOSS_STORE_FRAMEOFFSET_field {
  uint32_t                         u15FRAMEXOFFSET:15;
  uint32_t                         :1;
  uint32_t                         u15FRAMEYOFFSET:15;
} stc_VIDEOSS_STORE_FRAMEOFFSET_field_t;

typedef union un_VIDEOSS_STORE_FRAMEOFFSET {
  uint32_t                         u32Register;
  stc_VIDEOSS_STORE_FRAMEOFFSET_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_STORE_FRAMEOFFSET_t;

/**
  * \brief Color component size of destination buffer (VIDEOSS_STORE_COLORCOMPONENTBITS)
  */
typedef struct stc_VIDEOSS_STORE_COLORCOMPONENTBITS_field {
  uint32_t                         u4COMPONENTBITSALPHA:4;
  uint32_t                         :4;
  uint32_t                         u4COMPONENTBITSBLUE:4;
  uint32_t                         :4;
  uint32_t                         u4COMPONENTBITSGREEN:4;
  uint32_t                         :4;
  uint32_t                         u4COMPONENTBITSRED:4;
  uint32_t                         :4;
} stc_VIDEOSS_STORE_COLORCOMPONENTBITS_field_t;

typedef union un_VIDEOSS_STORE_COLORCOMPONENTBITS {
  uint32_t                         u32Register;
  stc_VIDEOSS_STORE_COLORCOMPONENTBITS_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_STORE_COLORCOMPONENTBITS_t;

/**
  * \brief Color component offset of destination buffer. (VIDEOSS_STORE_COLORCOMPONENTSHIFT)
  */
typedef struct stc_VIDEOSS_STORE_COLORCOMPONENTSHIFT_field {
  uint32_t                         u5COMPONENTSHIFTALPHA:5;
  uint32_t                         :3;
  uint32_t                         u5COMPONENTSHIFTBLUE:5;
  uint32_t                         :3;
  uint32_t                         u5COMPONENTSHIFTGREEN:5;
  uint32_t                         :3;
  uint32_t                         u5COMPONENTSHIFTRED:5;
  uint32_t                         :3;
} stc_VIDEOSS_STORE_COLORCOMPONENTSHIFT_field_t;

typedef union un_VIDEOSS_STORE_COLORCOMPONENTSHIFT {
  uint32_t                         u32Register;
  stc_VIDEOSS_STORE_COLORCOMPONENTSHIFT_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_STORE_COLORCOMPONENTSHIFT_t;

/**
  * \brief Store unit dynamic control register (VIDEOSS_STORE_CONTROL)
  */
typedef struct stc_VIDEOSS_STORE_CONTROL_field {
  uint32_t                         u1COLORDITHERENABLE:1;
  uint32_t                         u1ALPHADITHERENABLE:1;
  uint32_t                         :2;
  uint32_t                         u4DITHEROFFSET:4;
  uint32_t                         :4;
  uint32_t                         u1GAMMAAPPLYENABLE:1;
  uint32_t                         :3;
  uint32_t                         u2YUVCONVERSIONMODE:2;
  uint32_t                         u2RASTERMODE:2;
  uint32_t                         u2YUV422DOWNSAMPLINGMODE:2;
  uint32_t                         :10;
} stc_VIDEOSS_STORE_CONTROL_field_t;

typedef union un_VIDEOSS_STORE_CONTROL {
  uint32_t                         u32Register;
  stc_VIDEOSS_STORE_CONTROL_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_STORE_CONTROL_t;

/**
  * \brief Control options for RLAD compression. (VIDEOSS_STORE_ENCODECONTROL)
  */
typedef struct stc_VIDEOSS_STORE_ENCODECONTROL_field {
  uint32_t                         u1COMPRESSIONMODE:1;
  uint32_t                         :15;
  uint32_t                         u4RLADCOMPBITSRED:4;
  uint32_t                         u4RLADCOMPBITSGREEN:4;
  uint32_t                         u4RLADCOMPBITSBLUE:4;
  uint32_t                         u4RLADCOMPBITSALPHA:4;
} stc_VIDEOSS_STORE_ENCODECONTROL_field_t;

typedef union un_VIDEOSS_STORE_ENCODECONTROL {
  uint32_t                         u32Register;
  stc_VIDEOSS_STORE_ENCODECONTROL_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_STORE_ENCODECONTROL_t;

/**
  * \brief Destination buffer length for compressed data. (VIDEOSS_STORE_DESTINATIONBUFFERLENGTH)
  */
typedef struct stc_VIDEOSS_STORE_DESTINATIONBUFFERLENGTH_field {
  uint32_t                         u29RLEWORDSMAX:29;
  uint32_t                         :3;
} stc_VIDEOSS_STORE_DESTINATIONBUFFERLENGTH_field_t;

typedef union un_VIDEOSS_STORE_DESTINATIONBUFFERLENGTH {
  uint32_t                         u32Register;
  stc_VIDEOSS_STORE_DESTINATIONBUFFERLENGTH_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_STORE_DESTINATIONBUFFERLENGTH_t;

/**
  * \brief Store unit start register (VIDEOSS_STORE_START)
  */
typedef struct stc_VIDEOSS_STORE_START_field {
  uint32_t                         u1START:1;
  uint32_t                         :31;
} stc_VIDEOSS_STORE_START_field_t;

typedef union un_VIDEOSS_STORE_START {
  uint32_t                         u32Register;
  stc_VIDEOSS_STORE_START_field_t  stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_STORE_START_t;

/**
  * \brief Status information of the RLAD encoder. (VIDEOSS_STORE_ENCODERSTATUS)
  */
typedef struct stc_VIDEOSS_STORE_ENCODERSTATUS_field {
  uint32_t                         u29RLEWORDS:29;
  uint32_t                         :2;
  uint32_t                         u1BUFFERTOOSMALL:1;
} stc_VIDEOSS_STORE_ENCODERSTATUS_field_t;

typedef union un_VIDEOSS_STORE_ENCODERSTATUS {
  uint32_t                         u32Register;
  stc_VIDEOSS_STORE_ENCODERSTATUS_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_STORE_ENCODERSTATUS_t;

/**
  * \brief Ring buffer synchronization. (VIDEOSS_STORE_WRITEADDRESS)
  */
typedef struct stc_VIDEOSS_STORE_WRITEADDRESS_field {
  uint32_t                         u32WRITEADDRESS:32;
} stc_VIDEOSS_STORE_WRITEADDRESS_field_t;

typedef union un_VIDEOSS_STORE_WRITEADDRESS {
  uint32_t                         u32Register;
  stc_VIDEOSS_STORE_WRITEADDRESS_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_STORE_WRITEADDRESS_t;

/**
  * \brief Ring buffer synchronization. (VIDEOSS_STORE_FRAMEPROPERTIES)
  */
typedef struct stc_VIDEOSS_STORE_FRAMEPROPERTIES_field {
  uint32_t                         u1FIELDID:1;
  uint32_t                         :31;
} stc_VIDEOSS_STORE_FRAMEPROPERTIES_field_t;

typedef union un_VIDEOSS_STORE_FRAMEPROPERTIES {
  uint32_t                         u32Register;
  stc_VIDEOSS_STORE_FRAMEPROPERTIES_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_STORE_FRAMEPROPERTIES_t;

/**
  * \brief Burst Buffer Property register (VIDEOSS_STORE_BURSTBUFFERPROPERTIES)
  */
typedef struct stc_VIDEOSS_STORE_BURSTBUFFERPROPERTIES_field {
  uint32_t                         :8;
  uint32_t                         u5MAXBURSTLENGTH:5;
  uint32_t                         :19;
} stc_VIDEOSS_STORE_BURSTBUFFERPROPERTIES_field_t;

typedef union un_VIDEOSS_STORE_BURSTBUFFERPROPERTIES {
  uint32_t                         u32Register;
  stc_VIDEOSS_STORE_BURSTBUFFERPROPERTIES_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_STORE_BURSTBUFFERPROPERTIES_t;

/**
  * \brief Shows the last control word received (VIDEOSS_STORE_LASTCONTROLWORD)
  */
typedef struct stc_VIDEOSS_STORE_LASTCONTROLWORD_field {
  uint32_t                         u32L_VAL:32;
} stc_VIDEOSS_STORE_LASTCONTROLWORD_field_t;

typedef union un_VIDEOSS_STORE_LASTCONTROLWORD {
  uint32_t                         u32Register;
  stc_VIDEOSS_STORE_LASTCONTROLWORD_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_STORE_LASTCONTROLWORD_t;

/**
  * \brief Performance counter result (VIDEOSS_STORE_PERFCOUNTER)
  */
typedef struct stc_VIDEOSS_STORE_PERFCOUNTER_field {
  uint32_t                         u32PERFRESULT:32;
} stc_VIDEOSS_STORE_PERFCOUNTER_field_t;

typedef union un_VIDEOSS_STORE_PERFCOUNTER {
  uint32_t                         u32Register;
  stc_VIDEOSS_STORE_PERFCOUNTER_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_STORE_PERFCOUNTER_t;



/**
  * \brief Drawing Engine static control register (VIDEOSS_DRAWENG_STATICCONTROL)
  */
typedef struct stc_VIDEOSS_DRAWENG_STATICCONTROL_field {
  uint32_t                         :4;
  uint32_t                         u1SWRESET:1;
  uint32_t                         u1CLOCKDISABLE:1;
  uint32_t                         :26;
} stc_VIDEOSS_DRAWENG_STATICCONTROL_field_t;

typedef union un_VIDEOSS_DRAWENG_STATICCONTROL {
  uint32_t                         u32Register;
  stc_VIDEOSS_DRAWENG_STATICCONTROL_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_DRAWENG_STATICCONTROL_t;

/**
  * \brief Burst Buffer setup register (VIDEOSS_DRAWENG_STATICBURSTBUFFERMANAGEMENT)
  */
typedef struct stc_VIDEOSS_DRAWENG_STATICBURSTBUFFERMANAGEMENT_field {
  uint32_t                         u5SETFETCHBURSTLENGTH:5;
  uint32_t                         :11;
  uint32_t                         u5SETSTOREBURSTLENGTH:5;
  uint32_t                         :11;
} stc_VIDEOSS_DRAWENG_STATICBURSTBUFFERMANAGEMENT_field_t;

typedef union un_VIDEOSS_DRAWENG_STATICBURSTBUFFERMANAGEMENT {
  uint32_t                         u32Register;
  stc_VIDEOSS_DRAWENG_STATICBURSTBUFFERMANAGEMENT_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_DRAWENG_STATICBURSTBUFFERMANAGEMENT_t;

/**
  * \brief Lowest command buffer address (VIDEOSS_DRAWENG_STATICCMDBUFFERADDRESS)
  */
typedef struct stc_VIDEOSS_DRAWENG_STATICCMDBUFFERADDRESS_field {
  uint32_t                         u32CMDBUFFERADDRESS:32;
} stc_VIDEOSS_DRAWENG_STATICCMDBUFFERADDRESS_field_t;

typedef union un_VIDEOSS_DRAWENG_STATICCMDBUFFERADDRESS {
  uint32_t                         u32Register;
  stc_VIDEOSS_DRAWENG_STATICCMDBUFFERADDRESS_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_DRAWENG_STATICCMDBUFFERADDRESS_t;

/**
  * \brief Command buffer size (VIDEOSS_DRAWENG_STATICCMDBUFFERSIZE)
  */
typedef struct stc_VIDEOSS_DRAWENG_STATICCMDBUFFERSIZE_field {
  uint32_t                         u30CMDBUFFERSIZE:30;
  uint32_t                         :2;
} stc_VIDEOSS_DRAWENG_STATICCMDBUFFERSIZE_field_t;

typedef union un_VIDEOSS_DRAWENG_STATICCMDBUFFERSIZE {
  uint32_t                         u32Register;
  stc_VIDEOSS_DRAWENG_STATICCMDBUFFERSIZE_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_DRAWENG_STATICCMDBUFFERSIZE_t;

/**
  * \brief Buffer end address of command list (VIDEOSS_DRAWENG_CMDBUFFERWRITEPTR)
  */
typedef struct stc_VIDEOSS_DRAWENG_CMDBUFFERWRITEPTR_field {
  uint32_t                         u30CMDBUFFERWRITEPTR:30;
  uint32_t                         :2;
} stc_VIDEOSS_DRAWENG_CMDBUFFERWRITEPTR_field_t;

typedef union un_VIDEOSS_DRAWENG_CMDBUFFERWRITEPTR {
  uint32_t                         u32Register;
  stc_VIDEOSS_DRAWENG_CMDBUFFERWRITEPTR_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_DRAWENG_CMDBUFFERWRITEPTR_t;

/**
  * \brief Component A11 of transformation Matrix A (VIDEOSS_DRAWENG_TRANSFORMATIONMATRIXA11)
  */
typedef struct stc_VIDEOSS_DRAWENG_TRANSFORMATIONMATRIXA11_field {
  uint32_t                         u32A11:32;
} stc_VIDEOSS_DRAWENG_TRANSFORMATIONMATRIXA11_field_t;

typedef union un_VIDEOSS_DRAWENG_TRANSFORMATIONMATRIXA11 {
  uint32_t                         u32Register;
  stc_VIDEOSS_DRAWENG_TRANSFORMATIONMATRIXA11_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_DRAWENG_TRANSFORMATIONMATRIXA11_t;

/**
  * \brief Component A21 of transformation Matrix A (VIDEOSS_DRAWENG_TRANSFORMATIONMATRIXA21)
  */
typedef struct stc_VIDEOSS_DRAWENG_TRANSFORMATIONMATRIXA21_field {
  uint32_t                         u32A21:32;
} stc_VIDEOSS_DRAWENG_TRANSFORMATIONMATRIXA21_field_t;

typedef union un_VIDEOSS_DRAWENG_TRANSFORMATIONMATRIXA21 {
  uint32_t                         u32Register;
  stc_VIDEOSS_DRAWENG_TRANSFORMATIONMATRIXA21_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_DRAWENG_TRANSFORMATIONMATRIXA21_t;

/**
  * \brief Component A12 of transformation Matrix A (VIDEOSS_DRAWENG_TRANSFORMATIONMATRIXA12)
  */
typedef struct stc_VIDEOSS_DRAWENG_TRANSFORMATIONMATRIXA12_field {
  uint32_t                         u32A12:32;
} stc_VIDEOSS_DRAWENG_TRANSFORMATIONMATRIXA12_field_t;

typedef union un_VIDEOSS_DRAWENG_TRANSFORMATIONMATRIXA12 {
  uint32_t                         u32Register;
  stc_VIDEOSS_DRAWENG_TRANSFORMATIONMATRIXA12_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_DRAWENG_TRANSFORMATIONMATRIXA12_t;

/**
  * \brief Component A22 of transformation Matrix A (VIDEOSS_DRAWENG_TRANSFORMATIONMATRIXA22)
  */
typedef struct stc_VIDEOSS_DRAWENG_TRANSFORMATIONMATRIXA22_field {
  uint32_t                         u32A22:32;
} stc_VIDEOSS_DRAWENG_TRANSFORMATIONMATRIXA22_field_t;

typedef union un_VIDEOSS_DRAWENG_TRANSFORMATIONMATRIXA22 {
  uint32_t                         u32Register;
  stc_VIDEOSS_DRAWENG_TRANSFORMATIONMATRIXA22_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_DRAWENG_TRANSFORMATIONMATRIXA22_t;

/**
  * \brief Horizontal translation of the alpha frame. (VIDEOSS_DRAWENG_TRANSLATIONVECTORX)
  */
typedef struct stc_VIDEOSS_DRAWENG_TRANSLATIONVECTORX_field {
  uint32_t                         u22TRANSLATIONX:22;
  uint32_t                         :10;
} stc_VIDEOSS_DRAWENG_TRANSLATIONVECTORX_field_t;

typedef union un_VIDEOSS_DRAWENG_TRANSLATIONVECTORX {
  uint32_t                         u32Register;
  stc_VIDEOSS_DRAWENG_TRANSLATIONVECTORX_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_DRAWENG_TRANSLATIONVECTORX_t;

/**
  * \brief Vertical translation of the alpha frame. (VIDEOSS_DRAWENG_TRANSLATIONVECTORY)
  */
typedef struct stc_VIDEOSS_DRAWENG_TRANSLATIONVECTORY_field {
  uint32_t                         u22TRANSLATIONY:22;
  uint32_t                         :10;
} stc_VIDEOSS_DRAWENG_TRANSLATIONVECTORY_field_t;

typedef union un_VIDEOSS_DRAWENG_TRANSLATIONVECTORY {
  uint32_t                         u32Register;
  stc_VIDEOSS_DRAWENG_TRANSLATIONVECTORY_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_DRAWENG_TRANSLATIONVECTORY_t;

/**
  * \brief Drawing Engine main processing control register (VIDEOSS_DRAWENG_PROCESSINGCONTROL)
  */
typedef struct stc_VIDEOSS_DRAWENG_PROCESSINGCONTROL_field {
  uint32_t                         u4SUBPIXELGRID:4;
  uint32_t                         u1FILLRULE:1;
  uint32_t                         :11;
  uint32_t                         u6TARGETBITSPERPIXEL:6;
  uint32_t                         :10;
} stc_VIDEOSS_DRAWENG_PROCESSINGCONTROL_field_t;

typedef union un_VIDEOSS_DRAWENG_PROCESSINGCONTROL {
  uint32_t                         u32Register;
  stc_VIDEOSS_DRAWENG_PROCESSINGCONTROL_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_DRAWENG_PROCESSINGCONTROL_t;

/**
  * \brief Store unit dynamic control register (VIDEOSS_DRAWENG_STORECONTROL)
  */
typedef struct stc_VIDEOSS_DRAWENG_STORECONTROL_field {
  uint32_t                         u4STOREBITSPERPIXEL:4;
  uint32_t                         :4;
  uint32_t                         u17STORESTRIDE:17;
  uint32_t                         :7;
} stc_VIDEOSS_DRAWENG_STORECONTROL_field_t;

typedef union un_VIDEOSS_DRAWENG_STORECONTROL {
  uint32_t                         u32Register;
  stc_VIDEOSS_DRAWENG_STORECONTROL_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_DRAWENG_STORECONTROL_t;

/**
  * \brief Maximum dimensions of the destination buffer. The resulting alpha frame is limited to this dimensions. However, the active area can be smaller and is given by ActiveDimensions register. (VIDEOSS_DRAWENG_DESTINATIONBUFFERDIMENSIONS)
  */
typedef struct stc_VIDEOSS_DRAWENG_DESTINATIONBUFFERDIMENSIONS_field {
  uint32_t                         u14DSTBUFFERWIDTH:14;
  uint32_t                         :2;
  uint32_t                         u14DSTBUFFERHEIGHT:14;
  uint32_t                         :2;
} stc_VIDEOSS_DRAWENG_DESTINATIONBUFFERDIMENSIONS_field_t;

typedef union un_VIDEOSS_DRAWENG_DESTINATIONBUFFERDIMENSIONS {
  uint32_t                         u32Register;
  stc_VIDEOSS_DRAWENG_DESTINATIONBUFFERDIMENSIONS_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_DRAWENG_DESTINATIONBUFFERDIMENSIONS_t;

/**
  * \brief Destination buffer base address (VIDEOSS_DRAWENG_DESTINATIONBUFFER)
  */
typedef struct stc_VIDEOSS_DRAWENG_DESTINATIONBUFFER_field {
  uint32_t                         u32DSTBASEADDRESS:32;
} stc_VIDEOSS_DRAWENG_DESTINATIONBUFFER_field_t;

typedef union un_VIDEOSS_DRAWENG_DESTINATIONBUFFER {
  uint32_t                         u32Register;
  stc_VIDEOSS_DRAWENG_DESTINATIONBUFFER_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_DRAWENG_DESTINATIONBUFFER_t;

/**
  * \brief Drawing Engine start register (VIDEOSS_DRAWENG_START)
  */
typedef struct stc_VIDEOSS_DRAWENG_START_field {
  uint32_t                         u1START:1;
  uint32_t                         :31;
} stc_VIDEOSS_DRAWENG_START_field_t;

typedef union un_VIDEOSS_DRAWENG_START {
  uint32_t                         u32Register;
  stc_VIDEOSS_DRAWENG_START_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_DRAWENG_START_t;

/**
  * \brief Drawing Engine read acknowledge register (VIDEOSS_DRAWENG_READACK)
  */
typedef struct stc_VIDEOSS_DRAWENG_READACK_field {
  uint32_t                         u1READACK:1;
  uint32_t                         u1READACK_ERROR:1;
  uint32_t                         :30;
} stc_VIDEOSS_DRAWENG_READACK_field_t;

typedef union un_VIDEOSS_DRAWENG_READACK {
  uint32_t                         u32Register;
  stc_VIDEOSS_DRAWENG_READACK_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_DRAWENG_READACK_t;

/**
  * \brief Buffer end address of command list (VIDEOSS_DRAWENG_CMDBUFFERREADPTR)
  */
typedef struct stc_VIDEOSS_DRAWENG_CMDBUFFERREADPTR_field {
  uint32_t                         u30CMDBUFFERREADPTR:30;
  uint32_t                         :2;
} stc_VIDEOSS_DRAWENG_CMDBUFFERREADPTR_field_t;

typedef union un_VIDEOSS_DRAWENG_CMDBUFFERREADPTR {
  uint32_t                         u32Register;
  stc_VIDEOSS_DRAWENG_CMDBUFFERREADPTR_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_DRAWENG_CMDBUFFERREADPTR_t;

/**
  * \brief Shows active dimensions of the output alpha frame. This register is aligned to the ClipWindowDimensions register of the fetch. (VIDEOSS_DRAWENG_ACTIVEDIMENSIONS)
  */
typedef struct stc_VIDEOSS_DRAWENG_ACTIVEDIMENSIONS_field {
  uint32_t                         u14ACTIVEWIDTH:14;
  uint32_t                         :2;
  uint32_t                         u14ACTIVEHEIGHT:14;
  uint32_t                         :2;
} stc_VIDEOSS_DRAWENG_ACTIVEDIMENSIONS_field_t;

typedef union un_VIDEOSS_DRAWENG_ACTIVEDIMENSIONS {
  uint32_t                         u32Register;
  stc_VIDEOSS_DRAWENG_ACTIVEDIMENSIONS_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_DRAWENG_ACTIVEDIMENSIONS_t;

/**
  * \brief Desired position of the alpha frame for the following Blit operation. This register is aligned to the LayerOffset of the fetch and given as signed 16.0 values. (VIDEOSS_DRAWENG_LAYEROFFSET)
  */
typedef struct stc_VIDEOSS_DRAWENG_LAYEROFFSET_field {
  uint32_t                         u16XOFFSET:16;
  uint32_t                         u16YOFFSET:16;
} stc_VIDEOSS_DRAWENG_LAYEROFFSET_field_t;

typedef union un_VIDEOSS_DRAWENG_LAYEROFFSET {
  uint32_t                         u32Register;
  stc_VIDEOSS_DRAWENG_LAYEROFFSET_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_DRAWENG_LAYEROFFSET_t;

/**
  * \brief Error status of finished operation. If register is unequal to zero the resulting raster image is most likely corrupted. (VIDEOSS_DRAWENG_ERROR)
  */
typedef struct stc_VIDEOSS_DRAWENG_ERROR_field {
  uint32_t                         u1FETCHERROR:1;
  uint32_t                         u1STOREERROR:1;
  uint32_t                         u1INSTRERROR:1;
  uint32_t                         u1OVERFLOWERROR:1;
  uint32_t                         :28;
} stc_VIDEOSS_DRAWENG_ERROR_field_t;

typedef union un_VIDEOSS_DRAWENG_ERROR {
  uint32_t                         u32Register;
  stc_VIDEOSS_DRAWENG_ERROR_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_DRAWENG_ERROR_t;

/**
  * \brief Burst Buffer Property register (VIDEOSS_DRAWENG_BURSTBUFFERPROPERTIES)
  */
typedef struct stc_VIDEOSS_DRAWENG_BURSTBUFFERPROPERTIES_field {
  uint32_t                         u5MAXFETCHBURSTLENGTH:5;
  uint32_t                         :11;
  uint32_t                         u5MAXSTOREBURSTLENGTH:5;
  uint32_t                         :11;
} stc_VIDEOSS_DRAWENG_BURSTBUFFERPROPERTIES_field_t;

typedef union un_VIDEOSS_DRAWENG_BURSTBUFFERPROPERTIES {
  uint32_t                         u32Register;
  stc_VIDEOSS_DRAWENG_BURSTBUFFERPROPERTIES_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_DRAWENG_BURSTBUFFERPROPERTIES_t;

/**
  * \brief Status bits. (VIDEOSS_DRAWENG_STATUS)
  */
typedef struct stc_VIDEOSS_DRAWENG_STATUS_field {
  uint32_t                         u1STATUSBUSY:1;
  uint32_t                         u1WAITACK:1;
  uint32_t                         u1STATUSDIRTY:1;
  uint32_t                         u1STARTPENDING:1;
  uint32_t                         :28;
} stc_VIDEOSS_DRAWENG_STATUS_field_t;

typedef union un_VIDEOSS_DRAWENG_STATUS {
  uint32_t                         u32Register;
  stc_VIDEOSS_DRAWENG_STATUS_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_DRAWENG_STATUS_t;

/**
  * \brief Performance counter result (VIDEOSS_DRAWENG_PERFCOUNTERFRONT)
  */
typedef struct stc_VIDEOSS_DRAWENG_PERFCOUNTERFRONT_field {
  uint32_t                         u32PERFRESULTFRONT:32;
} stc_VIDEOSS_DRAWENG_PERFCOUNTERFRONT_field_t;

typedef union un_VIDEOSS_DRAWENG_PERFCOUNTERFRONT {
  uint32_t                         u32Register;
  stc_VIDEOSS_DRAWENG_PERFCOUNTERFRONT_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_DRAWENG_PERFCOUNTERFRONT_t;

/**
  * \brief Performance counter result (VIDEOSS_DRAWENG_PERFCOUNTERBACK)
  */
typedef struct stc_VIDEOSS_DRAWENG_PERFCOUNTERBACK_field {
  uint32_t                         u32PERFRESULTBACK:32;
} stc_VIDEOSS_DRAWENG_PERFCOUNTERBACK_field_t;

typedef union un_VIDEOSS_DRAWENG_PERFCOUNTERBACK {
  uint32_t                         u32Register;
  stc_VIDEOSS_DRAWENG_PERFCOUNTERBACK_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_DRAWENG_PERFCOUNTERBACK_t;



/**
  * \brief Interrupt status register 0 (VIDEOSS_VIDEOIOCFG_INTR_VIDEOIO0)
  */
typedef struct stc_VIDEOSS_VIDEOIOCFG_INTR_VIDEOIO0_field {
  uint32_t                         u24INTR_VIDEOIO0:24;
  uint32_t                         :8;
} stc_VIDEOSS_VIDEOIOCFG_INTR_VIDEOIO0_field_t;

typedef union un_VIDEOSS_VIDEOIOCFG_INTR_VIDEOIO0 {
  uint32_t                         u32Register;
  stc_VIDEOSS_VIDEOIOCFG_INTR_VIDEOIO0_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_VIDEOIOCFG_INTR_VIDEOIO0_t;

/**
  * \brief Interrupt Status register 1 (VIDEOSS_VIDEOIOCFG_INTR_VIDEOIO1)
  */
typedef struct stc_VIDEOSS_VIDEOIOCFG_INTR_VIDEOIO1_field {
  uint32_t                         u28INTR_VIDEOIO1:28;
  uint32_t                         :4;
} stc_VIDEOSS_VIDEOIOCFG_INTR_VIDEOIO1_field_t;

typedef union un_VIDEOSS_VIDEOIOCFG_INTR_VIDEOIO1 {
  uint32_t                         u32Register;
  stc_VIDEOSS_VIDEOIOCFG_INTR_VIDEOIO1_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_VIDEOIOCFG_INTR_VIDEOIO1_t;

/**
  * \brief Interrupt set register 0 (VIDEOSS_VIDEOIOCFG_INTR_VIDEOIO0_SET)
  */
typedef struct stc_VIDEOSS_VIDEOIOCFG_INTR_VIDEOIO0_SET_field {
  uint32_t                         u24INTR_VIDEOIO0_SET:24;
  uint32_t                         :8;
} stc_VIDEOSS_VIDEOIOCFG_INTR_VIDEOIO0_SET_field_t;

typedef union un_VIDEOSS_VIDEOIOCFG_INTR_VIDEOIO0_SET {
  uint32_t                         u32Register;
  stc_VIDEOSS_VIDEOIOCFG_INTR_VIDEOIO0_SET_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_VIDEOIOCFG_INTR_VIDEOIO0_SET_t;

/**
  * \brief Interrupt set register 1 (VIDEOSS_VIDEOIOCFG_INTR_VIDEOIO1_SET)
  */
typedef struct stc_VIDEOSS_VIDEOIOCFG_INTR_VIDEOIO1_SET_field {
  uint32_t                         u28INTR_VIDEOIO1_SET:28;
  uint32_t                         :4;
} stc_VIDEOSS_VIDEOIOCFG_INTR_VIDEOIO1_SET_field_t;

typedef union un_VIDEOSS_VIDEOIOCFG_INTR_VIDEOIO1_SET {
  uint32_t                         u32Register;
  stc_VIDEOSS_VIDEOIOCFG_INTR_VIDEOIO1_SET_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_VIDEOIOCFG_INTR_VIDEOIO1_SET_t;

/**
  * \brief Interrupt mask register 0 (VIDEOSS_VIDEOIOCFG_INTR_VIDEOIO0_MASK)
  */
typedef struct stc_VIDEOSS_VIDEOIOCFG_INTR_VIDEOIO0_MASK_field {
  uint32_t                         u24INTR_VIDEOIO0_MASK:24;
  uint32_t                         :8;
} stc_VIDEOSS_VIDEOIOCFG_INTR_VIDEOIO0_MASK_field_t;

typedef union un_VIDEOSS_VIDEOIOCFG_INTR_VIDEOIO0_MASK {
  uint32_t                         u32Register;
  stc_VIDEOSS_VIDEOIOCFG_INTR_VIDEOIO0_MASK_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_VIDEOIOCFG_INTR_VIDEOIO0_MASK_t;

/**
  * \brief Interrupt mask register 1 (VIDEOSS_VIDEOIOCFG_INTR_VIDEOIO1_MASK)
  */
typedef struct stc_VIDEOSS_VIDEOIOCFG_INTR_VIDEOIO1_MASK_field {
  uint32_t                         u28INTR_VIDEOIO1_MASK:28;
  uint32_t                         :4;
} stc_VIDEOSS_VIDEOIOCFG_INTR_VIDEOIO1_MASK_field_t;

typedef union un_VIDEOSS_VIDEOIOCFG_INTR_VIDEOIO1_MASK {
  uint32_t                         u32Register;
  stc_VIDEOSS_VIDEOIOCFG_INTR_VIDEOIO1_MASK_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_VIDEOIOCFG_INTR_VIDEOIO1_MASK_t;

/**
  * \brief Interrupt masked register 0 (VIDEOSS_VIDEOIOCFG_INTR_VIDEOIO0_MASKED)
  */
typedef struct stc_VIDEOSS_VIDEOIOCFG_INTR_VIDEOIO0_MASKED_field {
  uint32_t                         u24INTR_VIDEOIO0_MASKED:24;
  uint32_t                         :8;
} stc_VIDEOSS_VIDEOIOCFG_INTR_VIDEOIO0_MASKED_field_t;

typedef union un_VIDEOSS_VIDEOIOCFG_INTR_VIDEOIO0_MASKED {
  uint32_t                         u32Register;
  stc_VIDEOSS_VIDEOIOCFG_INTR_VIDEOIO0_MASKED_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_VIDEOIOCFG_INTR_VIDEOIO0_MASKED_t;

/**
  * \brief Interrupt masked register 1 (VIDEOSS_VIDEOIOCFG_INTR_VIDEOIO1_MASKED)
  */
typedef struct stc_VIDEOSS_VIDEOIOCFG_INTR_VIDEOIO1_MASKED_field {
  uint32_t                         u28INTR_VIDEOIO1_MASKED:28;
  uint32_t                         :4;
} stc_VIDEOSS_VIDEOIOCFG_INTR_VIDEOIO1_MASKED_field_t;

typedef union un_VIDEOSS_VIDEOIOCFG_INTR_VIDEOIO1_MASKED {
  uint32_t                         u32Register;
  stc_VIDEOSS_VIDEOIOCFG_INTR_VIDEOIO1_MASKED_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_VIDEOIOCFG_INTR_VIDEOIO1_MASKED_t;

/**
  * \brief Interrupt Status register 0 (VIDEOSS_VIDEOIOCFG_INTR_VIDEOIO0_SAFETY)
  */
typedef struct stc_VIDEOSS_VIDEOIOCFG_INTR_VIDEOIO0_SAFETY_field {
  uint32_t                         u24INTR_VIDEOIO0_SAFETY:24;
  uint32_t                         :8;
} stc_VIDEOSS_VIDEOIOCFG_INTR_VIDEOIO0_SAFETY_field_t;

typedef union un_VIDEOSS_VIDEOIOCFG_INTR_VIDEOIO0_SAFETY {
  uint32_t                         u32Register;
  stc_VIDEOSS_VIDEOIOCFG_INTR_VIDEOIO0_SAFETY_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_VIDEOIOCFG_INTR_VIDEOIO0_SAFETY_t;

/**
  * \brief Interrupt Status register 1 (VIDEOSS_VIDEOIOCFG_INTR_VIDEOIO1_SAFETY)
  */
typedef struct stc_VIDEOSS_VIDEOIOCFG_INTR_VIDEOIO1_SAFETY_field {
  uint32_t                         u28INTR_VIDEOIO1_SAFETY:28;
  uint32_t                         :4;
} stc_VIDEOSS_VIDEOIOCFG_INTR_VIDEOIO1_SAFETY_field_t;

typedef union un_VIDEOSS_VIDEOIOCFG_INTR_VIDEOIO1_SAFETY {
  uint32_t                         u32Register;
  stc_VIDEOSS_VIDEOIOCFG_INTR_VIDEOIO1_SAFETY_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_VIDEOIOCFG_INTR_VIDEOIO1_SAFETY_t;

/**
  * \brief Interrupt set register 0 (VIDEOSS_VIDEOIOCFG_INTR_VIDEOIO0_SAFETY_SET)
  */
typedef struct stc_VIDEOSS_VIDEOIOCFG_INTR_VIDEOIO0_SAFETY_SET_field {
  uint32_t                         u24INTR_VIDEOIO0_SAFETY_SET:24;
  uint32_t                         :8;
} stc_VIDEOSS_VIDEOIOCFG_INTR_VIDEOIO0_SAFETY_SET_field_t;

typedef union un_VIDEOSS_VIDEOIOCFG_INTR_VIDEOIO0_SAFETY_SET {
  uint32_t                         u32Register;
  stc_VIDEOSS_VIDEOIOCFG_INTR_VIDEOIO0_SAFETY_SET_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_VIDEOIOCFG_INTR_VIDEOIO0_SAFETY_SET_t;

/**
  * \brief Interrupt set register 1 (VIDEOSS_VIDEOIOCFG_INTR_VIDEOIO1_SAFETY_SET)
  */
typedef struct stc_VIDEOSS_VIDEOIOCFG_INTR_VIDEOIO1_SAFETY_SET_field {
  uint32_t                         u28INTR_VIDEOIO1_SAFETY_SET:28;
  uint32_t                         :4;
} stc_VIDEOSS_VIDEOIOCFG_INTR_VIDEOIO1_SAFETY_SET_field_t;

typedef union un_VIDEOSS_VIDEOIOCFG_INTR_VIDEOIO1_SAFETY_SET {
  uint32_t                         u32Register;
  stc_VIDEOSS_VIDEOIOCFG_INTR_VIDEOIO1_SAFETY_SET_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_VIDEOIOCFG_INTR_VIDEOIO1_SAFETY_SET_t;

/**
  * \brief Interrupt mask register 0 (VIDEOSS_VIDEOIOCFG_INTR_VIDEOIO0_SAFETY_MASK)
  */
typedef struct stc_VIDEOSS_VIDEOIOCFG_INTR_VIDEOIO0_SAFETY_MASK_field {
  uint32_t                         u24INTR_VIDEOIO0_SAFETY_MASK:24;
  uint32_t                         :8;
} stc_VIDEOSS_VIDEOIOCFG_INTR_VIDEOIO0_SAFETY_MASK_field_t;

typedef union un_VIDEOSS_VIDEOIOCFG_INTR_VIDEOIO0_SAFETY_MASK {
  uint32_t                         u32Register;
  stc_VIDEOSS_VIDEOIOCFG_INTR_VIDEOIO0_SAFETY_MASK_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_VIDEOIOCFG_INTR_VIDEOIO0_SAFETY_MASK_t;

/**
  * \brief Interrupt mask register 1 (VIDEOSS_VIDEOIOCFG_INTR_VIDEOIO1_SAFETY_MASK)
  */
typedef struct stc_VIDEOSS_VIDEOIOCFG_INTR_VIDEOIO1_SAFETY_MASK_field {
  uint32_t                         u28INTR_VIDEOIO1_SAFETY_MASK:28;
  uint32_t                         :4;
} stc_VIDEOSS_VIDEOIOCFG_INTR_VIDEOIO1_SAFETY_MASK_field_t;

typedef union un_VIDEOSS_VIDEOIOCFG_INTR_VIDEOIO1_SAFETY_MASK {
  uint32_t                         u32Register;
  stc_VIDEOSS_VIDEOIOCFG_INTR_VIDEOIO1_SAFETY_MASK_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_VIDEOIOCFG_INTR_VIDEOIO1_SAFETY_MASK_t;

/**
  * \brief Interrupt masked register 0 (VIDEOSS_VIDEOIOCFG_INTR_VIDEOIO0_SAFETY_MASKED)
  */
typedef struct stc_VIDEOSS_VIDEOIOCFG_INTR_VIDEOIO0_SAFETY_MASKED_field {
  uint32_t                         u24INTR_VIDEOIO0_SAFETY_MASKED:24;
  uint32_t                         :8;
} stc_VIDEOSS_VIDEOIOCFG_INTR_VIDEOIO0_SAFETY_MASKED_field_t;

typedef union un_VIDEOSS_VIDEOIOCFG_INTR_VIDEOIO0_SAFETY_MASKED {
  uint32_t                         u32Register;
  stc_VIDEOSS_VIDEOIOCFG_INTR_VIDEOIO0_SAFETY_MASKED_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_VIDEOIOCFG_INTR_VIDEOIO0_SAFETY_MASKED_t;

/**
  * \brief Interrupt masked register 1 (VIDEOSS_VIDEOIOCFG_INTR_VIDEOIO1_SAFETY_MASKED)
  */
typedef struct stc_VIDEOSS_VIDEOIOCFG_INTR_VIDEOIO1_SAFETY_MASKED_field {
  uint32_t                         u28INTR_VIDEOIO1_SAFETY_MASKED:28;
  uint32_t                         :4;
} stc_VIDEOSS_VIDEOIOCFG_INTR_VIDEOIO1_SAFETY_MASKED_field_t;

typedef union un_VIDEOSS_VIDEOIOCFG_INTR_VIDEOIO1_SAFETY_MASKED {
  uint32_t                         u32Register;
  stc_VIDEOSS_VIDEOIOCFG_INTR_VIDEOIO1_SAFETY_MASKED_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_VIDEOIOCFG_INTR_VIDEOIO1_SAFETY_MASKED_t;



/**
  * \brief Control settings. (VIDEOSS_FRAMEDUMP_CONTROL)
  */
typedef struct stc_VIDEOSS_FRAMEDUMP_CONTROL_field {
  uint32_t                         u1INPUTSELECT:1;
  uint32_t                         :23;
  uint32_t                         u1SETFIELD:1;
  uint32_t                         u1TOGGLEFIELD:1;
  uint32_t                         :6;
} stc_VIDEOSS_FRAMEDUMP_CONTROL_field_t;

typedef union un_VIDEOSS_FRAMEDUMP_CONTROL {
  uint32_t                         u32Register;
  stc_VIDEOSS_FRAMEDUMP_CONTROL_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_FRAMEDUMP_CONTROL_t;

/**
  * \brief Dump window size. (VIDEOSS_FRAMEDUMP_FRAMESIZE)
  */
typedef struct stc_VIDEOSS_FRAMEDUMP_FRAMESIZE_field {
  uint32_t                         u14FRAMEWIDTH:14;
  uint32_t                         :2;
  uint32_t                         u14FRAMEHEIGHT:14;
  uint32_t                         :2;
} stc_VIDEOSS_FRAMEDUMP_FRAMESIZE_field_t;

typedef union un_VIDEOSS_FRAMEDUMP_FRAMESIZE {
  uint32_t                         u32Register;
  stc_VIDEOSS_FRAMEDUMP_FRAMESIZE_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_FRAMEDUMP_FRAMESIZE_t;

/**
  * \brief Dump window position. (VIDEOSS_FRAMEDUMP_INPUTSETUP)
  */
typedef struct stc_VIDEOSS_FRAMEDUMP_INPUTSETUP_field {
  uint32_t                         u14INPUTCAPTUREXOFFSET:14;
  uint32_t                         :2;
  uint32_t                         u14INPUTCAPTUREYOFFSET:14;
  uint32_t                         :2;
} stc_VIDEOSS_FRAMEDUMP_INPUTSETUP_field_t;

typedef union un_VIDEOSS_FRAMEDUMP_INPUTSETUP {
  uint32_t                         u32Register;
  stc_VIDEOSS_FRAMEDUMP_INPUTSETUP_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_FRAMEDUMP_INPUTSETUP_t;

/**
  * \brief Enable register. (VIDEOSS_FRAMEDUMP_ENABLE)
  */
typedef struct stc_VIDEOSS_FRAMEDUMP_ENABLE_field {
  uint32_t                         u1DUMPEN:1;
  uint32_t                         :31;
} stc_VIDEOSS_FRAMEDUMP_ENABLE_field_t;

typedef union un_VIDEOSS_FRAMEDUMP_ENABLE {
  uint32_t                         u32Register;
  stc_VIDEOSS_FRAMEDUMP_ENABLE_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_FRAMEDUMP_ENABLE_t;

/**
  * \brief Trigger bits. (VIDEOSS_FRAMEDUMP_TRIGGER)
  */
typedef struct stc_VIDEOSS_FRAMEDUMP_TRIGGER_field {
  uint32_t                         u1DUMPREQ:1;
  uint32_t                         :31;
} stc_VIDEOSS_FRAMEDUMP_TRIGGER_field_t;

typedef union un_VIDEOSS_FRAMEDUMP_TRIGGER {
  uint32_t                         u32Register;
  stc_VIDEOSS_FRAMEDUMP_TRIGGER_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_FRAMEDUMP_TRIGGER_t;

/**
  * \brief Status register. (VIDEOSS_FRAMEDUMP_STATUS)
  */
typedef struct stc_VIDEOSS_FRAMEDUMP_STATUS_field {
  uint32_t                         u1DUMPIDLE:1;
  uint32_t                         :31;
} stc_VIDEOSS_FRAMEDUMP_STATUS_field_t;

typedef union un_VIDEOSS_FRAMEDUMP_STATUS {
  uint32_t                         u32Register;
  stc_VIDEOSS_FRAMEDUMP_STATUS_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_FRAMEDUMP_STATUS_t;



/**
  * \brief Capture mode configuration. FrameCap input mode configuration. (VIDEOSS_FRAMECAP_CAPTUREMODE)
  */
typedef struct stc_VIDEOSS_FRAMECAP_CAPTUREMODE_field {
  uint32_t                         u2CAPTUREMODE:2;
  uint32_t                         :30;
} stc_VIDEOSS_FRAMECAP_CAPTUREMODE_field_t;

typedef union un_VIDEOSS_FRAMECAP_CAPTUREMODE {
  uint32_t                         u32Register;
  stc_VIDEOSS_FRAMECAP_CAPTUREMODE_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_FRAMECAP_CAPTUREMODE_t;

/**
  * \brief FrameCap control register for starting the unit (VIDEOSS_FRAMECAP_CTR)
  */
typedef struct stc_VIDEOSS_FRAMECAP_CTR_field {
  uint32_t                         u1CEN:1;
  uint32_t                         :31;
} stc_VIDEOSS_FRAMECAP_CTR_field_t;

typedef union un_VIDEOSS_FRAMECAP_CTR {
  uint32_t                         u32Register;
  stc_VIDEOSS_FRAMECAP_CTR_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_FRAMECAP_CTR_t;

/**
  * \brief FrameCap sync signal polarity configuration. (VIDEOSS_FRAMECAP_SPR)
  */
typedef struct stc_VIDEOSS_FRAMECAP_SPR_field {
  uint32_t                         u1POLEN:1;
  uint32_t                         u1POLHS:1;
  uint32_t                         u1POLVS:1;
  uint32_t                         :29;
} stc_VIDEOSS_FRAMECAP_SPR_field_t;

typedef union un_VIDEOSS_FRAMECAP_SPR {
  uint32_t                         u32Register;
  stc_VIDEOSS_FRAMECAP_SPR_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_FRAMECAP_SPR_t;

/**
  * \brief FrameCap control register for starting the mode detection (VIDEOSS_FRAMECAP_MDR)
  */
typedef struct stc_VIDEOSS_FRAMECAP_MDR_field {
  uint32_t                         u1MDR_EN:1;
  uint32_t                         u31FRAMET_OFFSET:31;
} stc_VIDEOSS_FRAMECAP_MDR_field_t;

typedef union un_VIDEOSS_FRAMECAP_MDR {
  uint32_t                         u32Register;
  stc_VIDEOSS_FRAMECAP_MDR_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_FRAMECAP_MDR_t;

/**
  * \brief Frame dimension (progressive frame and field 0). (VIDEOSS_FRAMECAP_FDR)
  */
typedef struct stc_VIDEOSS_FRAMECAP_FDR_field {
  uint32_t                         u14WIDTH:14;
  uint32_t                         :2;
  uint32_t                         u14HEIGHT:14;
  uint32_t                         :2;
} stc_VIDEOSS_FRAMECAP_FDR_field_t;

typedef union un_VIDEOSS_FRAMECAP_FDR {
  uint32_t                         u32Register;
  stc_VIDEOSS_FRAMECAP_FDR_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_FRAMECAP_FDR_t;

/**
  * \brief Frame dimension (field 1). (VIDEOSS_FRAMECAP_FDR1)
  */
typedef struct stc_VIDEOSS_FRAMECAP_FDR1_field {
  uint32_t                         :16;
  uint32_t                         u14HEIGHT1:14;
  uint32_t                         :2;
} stc_VIDEOSS_FRAMECAP_FDR1_field_t;

typedef union un_VIDEOSS_FRAMECAP_FDR1 {
  uint32_t                         u32Register;
  stc_VIDEOSS_FRAMECAP_FDR1_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_FRAMECAP_FDR1_t;

/**
  * \brief FrameCap kick delay configuration register (VIDEOSS_FRAMECAP_KDR)
  */
typedef struct stc_VIDEOSS_FRAMECAP_KDR_field {
  uint32_t                         u28KICKDEL:28;
  uint32_t                         :4;
} stc_VIDEOSS_FRAMECAP_KDR_field_t;

typedef union un_VIDEOSS_FRAMECAP_KDR {
  uint32_t                         u32Register;
  stc_VIDEOSS_FRAMECAP_KDR_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_FRAMECAP_KDR_t;

/**
  * \brief FrameCap Sync frame number configuration register (VIDEOSS_FRAMECAP_SCR)
  */
typedef struct stc_VIDEOSS_FRAMECAP_SCR_field {
  uint32_t                         u4FUS:4;
  uint32_t                         :28;
} stc_VIDEOSS_FRAMECAP_SCR_field_t;

typedef union un_VIDEOSS_FRAMECAP_SCR {
  uint32_t                         u32Register;
  stc_VIDEOSS_FRAMECAP_SCR_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_FRAMECAP_SCR_t;

/**
  * \brief Framecap control register for capture clock supervision (VIDEOSS_FRAMECAP_CSVR)
  */
typedef struct stc_VIDEOSS_FRAMECAP_CSVR_field {
  uint32_t                         u1CSVENABLE:1;
  uint32_t                         u10CSVTIMEOUT:10;
  uint32_t                         :21;
} stc_VIDEOSS_FRAMECAP_CSVR_field_t;

typedef union un_VIDEOSS_FRAMECAP_CSVR {
  uint32_t                         u32Register;
  stc_VIDEOSS_FRAMECAP_CSVR_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_FRAMECAP_CSVR_t;

/**
  * \brief FrameCap status clear register. Clears the status bits of Sts register, Mdr_SizeChange and Csv_lost field. (VIDEOSS_FRAMECAP_STSCLR)
  */
typedef struct stc_VIDEOSS_FRAMECAP_STSCLR_field {
  uint32_t                         u1STATUSCLEAR:1;
  uint32_t                         :31;
} stc_VIDEOSS_FRAMECAP_STSCLR_field_t;

typedef union un_VIDEOSS_FRAMECAP_STSCLR {
  uint32_t                         u32Register;
  stc_VIDEOSS_FRAMECAP_STSCLR_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_FRAMECAP_STSCLR_t;

/**
  * \brief FrameCap status register. Current status of the FrameCap module. (VIDEOSS_FRAMECAP_STS)
  */
typedef struct stc_VIDEOSS_FRAMECAP_STS_field {
  uint32_t                         u1FIFOFULL:1;
  uint32_t                         u1VSLATE:1;
  uint32_t                         u1VSEARLY:1;
  uint32_t                         u1CSV_LOST:1;
  uint32_t                         u1MDR_SIZECHANGE:1;
  uint32_t                         u1MDRCMRDONE:1;
  uint32_t                         :2;
  uint32_t                         u1SYNCSTAT:1;
  uint32_t                         :23;
} stc_VIDEOSS_FRAMECAP_STS_field_t;

typedef union un_VIDEOSS_FRAMECAP_STS {
  uint32_t                         u32Register;
  stc_VIDEOSS_FRAMECAP_STS_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_FRAMECAP_STS_t;

/**
  * \brief FrameCap mode detection status register for the active part of the video frames.(bit locked when MdrCmrDone=1). (VIDEOSS_FRAMECAP_MDSTS0)
  */
typedef struct stc_VIDEOSS_FRAMECAP_MDSTS0_field {
  uint32_t                         u15ACTIVEWIDTH:15;
  uint32_t                         :1;
  uint32_t                         u15ACTIVEHEIGHT:15;
} stc_VIDEOSS_FRAMECAP_MDSTS0_field_t;

typedef union un_VIDEOSS_FRAMECAP_MDSTS0 {
  uint32_t                         u32Register;
  stc_VIDEOSS_FRAMECAP_MDSTS0_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_FRAMECAP_MDSTS0_t;

/**
  * \brief FrameCap mode detection status register. The current (x,y) position of the capture stream (with respect to the output). (VIDEOSS_FRAMECAP_MDSTS1)
  */
typedef struct stc_VIDEOSS_FRAMECAP_MDSTS1_field {
  uint32_t                         u15POSITIONX:15;
  uint32_t                         :1;
  uint32_t                         u15POSITIONY:15;
} stc_VIDEOSS_FRAMECAP_MDSTS1_field_t;

typedef union un_VIDEOSS_FRAMECAP_MDSTS1 {
  uint32_t                         u32Register;
  stc_VIDEOSS_FRAMECAP_MDSTS1_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_FRAMECAP_MDSTS1_t;

/**
  * \brief FrameCap frame counter register indicating the corresponding clk_axi cycles. (VIDEOSS_FRAMECAP_FRCNT)
  */
typedef struct stc_VIDEOSS_FRAMECAP_FRCNT_field {
  uint32_t                         u32FRCOUNT:32;
} stc_VIDEOSS_FRAMECAP_FRCNT_field_t;

typedef union un_VIDEOSS_FRAMECAP_FRCNT {
  uint32_t                         u32Register;
  stc_VIDEOSS_FRAMECAP_FRCNT_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_FRAMECAP_FRCNT_t;

/**
  * \brief FrameCap line counter register. (VIDEOSS_FRAMECAP_FRLINECOUNT)
  */
typedef struct stc_VIDEOSS_FRAMECAP_FRLINECOUNT_field {
  uint32_t                         u14FRLINECOUNT:14;
  uint32_t                         :2;
  uint32_t                         u5TOTWIDTHT_MSBS:5;
  uint32_t                         :3;
  uint32_t                         u6ACTWIDTHT_MSBS:6;
  uint32_t                         :2;
} stc_VIDEOSS_FRAMECAP_FRLINECOUNT_field_t;

typedef union un_VIDEOSS_FRAMECAP_FRLINECOUNT {
  uint32_t                         u32Register;
  stc_VIDEOSS_FRAMECAP_FRLINECOUNT_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_FRAMECAP_FRLINECOUNT_t;

/**
  * \brief clk_axi cycle number of a frame. (bit locked when MdrCmrDone=1). (VIDEOSS_FRAMECAP_CMSTS1)
  */
typedef struct stc_VIDEOSS_FRAMECAP_CMSTS1_field {
  uint32_t                         u30TOTAL_TIME:30;
  uint32_t                         :2;
} stc_VIDEOSS_FRAMECAP_CMSTS1_field_t;

typedef union un_VIDEOSS_FRAMECAP_CMSTS1 {
  uint32_t                         u32Register;
  stc_VIDEOSS_FRAMECAP_CMSTS1_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_FRAMECAP_CMSTS1_t;

/**
  * \brief clk_axi cycle number of totwidth and actwidth of a frame. (bit locked when MdrCmrDone=1). (VIDEOSS_FRAMECAP_CMSTS2)
  */
typedef struct stc_VIDEOSS_FRAMECAP_CMSTS2_field {
  uint32_t                         u15TOTWIDTHT:15;
  uint32_t                         u14ACTWIDTHT:14;
  uint32_t                         :3;
} stc_VIDEOSS_FRAMECAP_CMSTS2_field_t;

typedef union un_VIDEOSS_FRAMECAP_CMSTS2 {
  uint32_t                         u32Register;
  stc_VIDEOSS_FRAMECAP_CMSTS2_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_FRAMECAP_CMSTS2_t;

/**
  * \brief ITU error status register. (VIDEOSS_FRAMECAP_ITUSTS)
  */
typedef struct stc_VIDEOSS_FRAMECAP_ITUSTS_field {
  uint32_t                         u1ITUPROTECTIONONEBITERROR:1;
  uint32_t                         u1ITUPROTECTIONTWOBITERROR:1;
  uint32_t                         :30;
} stc_VIDEOSS_FRAMECAP_ITUSTS_field_t;

typedef union un_VIDEOSS_FRAMECAP_ITUSTS {
  uint32_t                         u32Register;
  stc_VIDEOSS_FRAMECAP_ITUSTS_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_FRAMECAP_ITUSTS_t;



/**
  * \brief Shared Color Palette Memory. (VIDEOSS_COMPENGCFG_PALETTE)
  */
typedef struct stc_VIDEOSS_COMPENGCFG_PALETTE_field {
  uint32_t                         u24PALETTEENTRY:24;
  uint32_t                         :8;
} stc_VIDEOSS_COMPENGCFG_PALETTE_field_t;

typedef union un_VIDEOSS_COMPENGCFG_PALETTE {
  uint32_t                         u32Register;
  stc_VIDEOSS_COMPENGCFG_PALETTE_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_COMPENGCFG_PALETTE_t;

/**
  * \brief Safety mask for extdst0 (VIDEOSS_COMPENGCFG_EXTDST0_SAFETYMASK)
  */
typedef struct stc_VIDEOSS_COMPENGCFG_EXTDST0_SAFETYMASK_field {
  uint32_t                         u21EXTDST0_SAFETYMASK:21;
  uint32_t                         :11;
} stc_VIDEOSS_COMPENGCFG_EXTDST0_SAFETYMASK_field_t;

typedef union un_VIDEOSS_COMPENGCFG_EXTDST0_SAFETYMASK {
  uint32_t                         u32Register;
  stc_VIDEOSS_COMPENGCFG_EXTDST0_SAFETYMASK_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_COMPENGCFG_EXTDST0_SAFETYMASK_t;

/**
  * \brief Safety mask for extdst4 (VIDEOSS_COMPENGCFG_EXTDST4_SAFETYMASK)
  */
typedef struct stc_VIDEOSS_COMPENGCFG_EXTDST4_SAFETYMASK_field {
  uint32_t                         u21EXTDST4_SAFETYMASK:21;
  uint32_t                         :11;
} stc_VIDEOSS_COMPENGCFG_EXTDST4_SAFETYMASK_field_t;

typedef union un_VIDEOSS_COMPENGCFG_EXTDST4_SAFETYMASK {
  uint32_t                         u32Register;
  stc_VIDEOSS_COMPENGCFG_EXTDST4_SAFETYMASK_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_COMPENGCFG_EXTDST4_SAFETYMASK_t;

/**
  * \brief Safety mask for extdst1 (VIDEOSS_COMPENGCFG_EXTDST1_SAFETYMASK)
  */
typedef struct stc_VIDEOSS_COMPENGCFG_EXTDST1_SAFETYMASK_field {
  uint32_t                         u21EXTDST1_SAFETYMASK:21;
  uint32_t                         :11;
} stc_VIDEOSS_COMPENGCFG_EXTDST1_SAFETYMASK_field_t;

typedef union un_VIDEOSS_COMPENGCFG_EXTDST1_SAFETYMASK {
  uint32_t                         u32Register;
  stc_VIDEOSS_COMPENGCFG_EXTDST1_SAFETYMASK_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_COMPENGCFG_EXTDST1_SAFETYMASK_t;

/**
  * \brief Safety mask for extdst5 (VIDEOSS_COMPENGCFG_EXTDST5_SAFETYMASK)
  */
typedef struct stc_VIDEOSS_COMPENGCFG_EXTDST5_SAFETYMASK_field {
  uint32_t                         u21EXTDST5_SAFETYMASK:21;
  uint32_t                         :11;
} stc_VIDEOSS_COMPENGCFG_EXTDST5_SAFETYMASK_field_t;

typedef union un_VIDEOSS_COMPENGCFG_EXTDST5_SAFETYMASK {
  uint32_t                         u32Register;
  stc_VIDEOSS_COMPENGCFG_EXTDST5_SAFETYMASK_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_COMPENGCFG_EXTDST5_SAFETYMASK_t;

/**
  * \brief Safety mask for store4 (VIDEOSS_COMPENGCFG_STORE4_SAFETYMASK)
  */
typedef struct stc_VIDEOSS_COMPENGCFG_STORE4_SAFETYMASK_field {
  uint32_t                         u21STORE4_SAFETYMASK:21;
  uint32_t                         :11;
} stc_VIDEOSS_COMPENGCFG_STORE4_SAFETYMASK_field_t;

typedef union un_VIDEOSS_COMPENGCFG_STORE4_SAFETYMASK {
  uint32_t                         u32Register;
  stc_VIDEOSS_COMPENGCFG_STORE4_SAFETYMASK_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_COMPENGCFG_STORE4_SAFETYMASK_t;

/**
  * \brief Status information for pixel engine configuration of constframe0 (VIDEOSS_COMPENGCFG_CONSTFRAME0_STATUS)
  */
typedef struct stc_VIDEOSS_COMPENGCFG_CONSTFRAME0_STATUS_field {
  uint32_t                         :16;
  uint32_t                         u3CONSTFRAME0_SEL:3;
  uint32_t                         :13;
} stc_VIDEOSS_COMPENGCFG_CONSTFRAME0_STATUS_field_t;

typedef union un_VIDEOSS_COMPENGCFG_CONSTFRAME0_STATUS {
  uint32_t                         u32Register;
  stc_VIDEOSS_COMPENGCFG_CONSTFRAME0_STATUS_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_COMPENGCFG_CONSTFRAME0_STATUS_t;

/**
  * \brief Static pixel engine configuration for extdst0 (VIDEOSS_COMPENGCFG_EXTDST0_STATIC)
  */
typedef struct stc_VIDEOSS_COMPENGCFG_EXTDST0_STATIC_field {
  uint32_t                         u1EXTDST0_SHDEN:1;
  uint32_t                         :3;
  uint32_t                         u1EXTDST0_POWERDOWN:1;
  uint32_t                         :3;
  uint32_t                         u1EXTDST0_SYNC_MODE:1;
  uint32_t                         :2;
  uint32_t                         u1EXTDST0_SW_RESET:1;
  uint32_t                         :4;
  uint32_t                         u8EXTDST0_DIV:8;
  uint32_t                         :8;
} stc_VIDEOSS_COMPENGCFG_EXTDST0_STATIC_field_t;

typedef union un_VIDEOSS_COMPENGCFG_EXTDST0_STATIC {
  uint32_t                         u32Register;
  stc_VIDEOSS_COMPENGCFG_EXTDST0_STATIC_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_COMPENGCFG_EXTDST0_STATIC_t;

/**
  * \brief Dynamic pixel engine configuration for extdst0 (VIDEOSS_COMPENGCFG_EXTDST0_DYNAMIC)
  */
typedef struct stc_VIDEOSS_COMPENGCFG_EXTDST0_DYNAMIC_field {
  uint32_t                         u5EXTDST0_SRC_SEL:5;
  uint32_t                         :27;
} stc_VIDEOSS_COMPENGCFG_EXTDST0_DYNAMIC_field_t;

typedef union un_VIDEOSS_COMPENGCFG_EXTDST0_DYNAMIC {
  uint32_t                         u32Register;
  stc_VIDEOSS_COMPENGCFG_EXTDST0_DYNAMIC_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_COMPENGCFG_EXTDST0_DYNAMIC_t;

/**
  * \brief ShadowLoadRequest register for endpoint extdst0 (VIDEOSS_COMPENGCFG_EXTDST0_REQUEST)
  */
typedef struct stc_VIDEOSS_COMPENGCFG_EXTDST0_REQUEST_field {
  uint32_t                         u1EXTDST0_SEL_SHDLDREQ:1;
  uint32_t                         u13EXTDST0_SHDLDREQ:13;
  uint32_t                         :18;
} stc_VIDEOSS_COMPENGCFG_EXTDST0_REQUEST_field_t;

typedef union un_VIDEOSS_COMPENGCFG_EXTDST0_REQUEST {
  uint32_t                         u32Register;
  stc_VIDEOSS_COMPENGCFG_EXTDST0_REQUEST_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_COMPENGCFG_EXTDST0_REQUEST_t;

/**
  * \brief Trigger bits for pixel engine configuration of extdst0 (VIDEOSS_COMPENGCFG_EXTDST0_TRIGGER)
  */
typedef struct stc_VIDEOSS_COMPENGCFG_EXTDST0_TRIGGER_field {
  uint32_t                         u1EXTDST0_SYNC_TRIGGER:1;
  uint32_t                         :3;
  uint32_t                         u1EXTDST0_TRIGGER_SEQUENCE_COMPLETE:1;
  uint32_t                         :27;
} stc_VIDEOSS_COMPENGCFG_EXTDST0_TRIGGER_field_t;

typedef union un_VIDEOSS_COMPENGCFG_EXTDST0_TRIGGER {
  uint32_t                         u32Register;
  stc_VIDEOSS_COMPENGCFG_EXTDST0_TRIGGER_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_COMPENGCFG_EXTDST0_TRIGGER_t;

/**
  * \brief Status information for pixel engine configuration of extdst0 (VIDEOSS_COMPENGCFG_EXTDST0_STATUS)
  */
typedef struct stc_VIDEOSS_COMPENGCFG_EXTDST0_STATUS_field {
  uint32_t                         u2EXTDST0_PIPELINE_STATUS:2;
  uint32_t                         :6;
  uint32_t                         u1EXTDST0_SYNC_BUSY:1;
  uint32_t                         :23;
} stc_VIDEOSS_COMPENGCFG_EXTDST0_STATUS_field_t;

typedef union un_VIDEOSS_COMPENGCFG_EXTDST0_STATUS {
  uint32_t                         u32Register;
  stc_VIDEOSS_COMPENGCFG_EXTDST0_STATUS_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_COMPENGCFG_EXTDST0_STATUS_t;

/**
  * \brief Status information for pixel engine configuration of constframe4 (VIDEOSS_COMPENGCFG_CONSTFRAME4_STATUS)
  */
typedef struct stc_VIDEOSS_COMPENGCFG_CONSTFRAME4_STATUS_field {
  uint32_t                         :16;
  uint32_t                         u3CONSTFRAME4_SEL:3;
  uint32_t                         :13;
} stc_VIDEOSS_COMPENGCFG_CONSTFRAME4_STATUS_field_t;

typedef union un_VIDEOSS_COMPENGCFG_CONSTFRAME4_STATUS {
  uint32_t                         u32Register;
  stc_VIDEOSS_COMPENGCFG_CONSTFRAME4_STATUS_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_COMPENGCFG_CONSTFRAME4_STATUS_t;

/**
  * \brief Static pixel engine configuration for extdst4 (VIDEOSS_COMPENGCFG_EXTDST4_STATIC)
  */
typedef struct stc_VIDEOSS_COMPENGCFG_EXTDST4_STATIC_field {
  uint32_t                         u1EXTDST4_SHDEN:1;
  uint32_t                         :3;
  uint32_t                         u1EXTDST4_POWERDOWN:1;
  uint32_t                         :3;
  uint32_t                         u1EXTDST4_SYNC_MODE:1;
  uint32_t                         :2;
  uint32_t                         u1EXTDST4_SW_RESET:1;
  uint32_t                         :4;
  uint32_t                         u8EXTDST4_DIV:8;
  uint32_t                         :8;
} stc_VIDEOSS_COMPENGCFG_EXTDST4_STATIC_field_t;

typedef union un_VIDEOSS_COMPENGCFG_EXTDST4_STATIC {
  uint32_t                         u32Register;
  stc_VIDEOSS_COMPENGCFG_EXTDST4_STATIC_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_COMPENGCFG_EXTDST4_STATIC_t;

/**
  * \brief Dynamic pixel engine configuration for extdst4 (VIDEOSS_COMPENGCFG_EXTDST4_DYNAMIC)
  */
typedef struct stc_VIDEOSS_COMPENGCFG_EXTDST4_DYNAMIC_field {
  uint32_t                         u5EXTDST4_SRC_SEL:5;
  uint32_t                         :27;
} stc_VIDEOSS_COMPENGCFG_EXTDST4_DYNAMIC_field_t;

typedef union un_VIDEOSS_COMPENGCFG_EXTDST4_DYNAMIC {
  uint32_t                         u32Register;
  stc_VIDEOSS_COMPENGCFG_EXTDST4_DYNAMIC_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_COMPENGCFG_EXTDST4_DYNAMIC_t;

/**
  * \brief ShadowLoadRequest register for endpoint extdst4 (VIDEOSS_COMPENGCFG_EXTDST4_REQUEST)
  */
typedef struct stc_VIDEOSS_COMPENGCFG_EXTDST4_REQUEST_field {
  uint32_t                         u1EXTDST4_SEL_SHDLDREQ:1;
  uint32_t                         u13EXTDST4_SHDLDREQ:13;
  uint32_t                         :18;
} stc_VIDEOSS_COMPENGCFG_EXTDST4_REQUEST_field_t;

typedef union un_VIDEOSS_COMPENGCFG_EXTDST4_REQUEST {
  uint32_t                         u32Register;
  stc_VIDEOSS_COMPENGCFG_EXTDST4_REQUEST_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_COMPENGCFG_EXTDST4_REQUEST_t;

/**
  * \brief Trigger bits for pixel engine configuration of extdst4 (VIDEOSS_COMPENGCFG_EXTDST4_TRIGGER)
  */
typedef struct stc_VIDEOSS_COMPENGCFG_EXTDST4_TRIGGER_field {
  uint32_t                         u1EXTDST4_SYNC_TRIGGER:1;
  uint32_t                         :3;
  uint32_t                         u1EXTDST4_TRIGGER_SEQUENCE_COMPLETE:1;
  uint32_t                         :27;
} stc_VIDEOSS_COMPENGCFG_EXTDST4_TRIGGER_field_t;

typedef union un_VIDEOSS_COMPENGCFG_EXTDST4_TRIGGER {
  uint32_t                         u32Register;
  stc_VIDEOSS_COMPENGCFG_EXTDST4_TRIGGER_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_COMPENGCFG_EXTDST4_TRIGGER_t;

/**
  * \brief Status information for pixel engine configuration of extdst4 (VIDEOSS_COMPENGCFG_EXTDST4_STATUS)
  */
typedef struct stc_VIDEOSS_COMPENGCFG_EXTDST4_STATUS_field {
  uint32_t                         u2EXTDST4_PIPELINE_STATUS:2;
  uint32_t                         :6;
  uint32_t                         u1EXTDST4_SYNC_BUSY:1;
  uint32_t                         :23;
} stc_VIDEOSS_COMPENGCFG_EXTDST4_STATUS_field_t;

typedef union un_VIDEOSS_COMPENGCFG_EXTDST4_STATUS {
  uint32_t                         u32Register;
  stc_VIDEOSS_COMPENGCFG_EXTDST4_STATUS_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_COMPENGCFG_EXTDST4_STATUS_t;

/**
  * \brief Status information for pixel engine configuration of constframe1 (VIDEOSS_COMPENGCFG_CONSTFRAME1_STATUS)
  */
typedef struct stc_VIDEOSS_COMPENGCFG_CONSTFRAME1_STATUS_field {
  uint32_t                         :16;
  uint32_t                         u3CONSTFRAME1_SEL:3;
  uint32_t                         :13;
} stc_VIDEOSS_COMPENGCFG_CONSTFRAME1_STATUS_field_t;

typedef union un_VIDEOSS_COMPENGCFG_CONSTFRAME1_STATUS {
  uint32_t                         u32Register;
  stc_VIDEOSS_COMPENGCFG_CONSTFRAME1_STATUS_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_COMPENGCFG_CONSTFRAME1_STATUS_t;

/**
  * \brief Static pixel engine configuration for extdst1 (VIDEOSS_COMPENGCFG_EXTDST1_STATIC)
  */
typedef struct stc_VIDEOSS_COMPENGCFG_EXTDST1_STATIC_field {
  uint32_t                         u1EXTDST1_SHDEN:1;
  uint32_t                         :3;
  uint32_t                         u1EXTDST1_POWERDOWN:1;
  uint32_t                         :3;
  uint32_t                         u1EXTDST1_SYNC_MODE:1;
  uint32_t                         :2;
  uint32_t                         u1EXTDST1_SW_RESET:1;
  uint32_t                         :4;
  uint32_t                         u8EXTDST1_DIV:8;
  uint32_t                         :8;
} stc_VIDEOSS_COMPENGCFG_EXTDST1_STATIC_field_t;

typedef union un_VIDEOSS_COMPENGCFG_EXTDST1_STATIC {
  uint32_t                         u32Register;
  stc_VIDEOSS_COMPENGCFG_EXTDST1_STATIC_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_COMPENGCFG_EXTDST1_STATIC_t;

/**
  * \brief Dynamic pixel engine configuration for extdst1 (VIDEOSS_COMPENGCFG_EXTDST1_DYNAMIC)
  */
typedef struct stc_VIDEOSS_COMPENGCFG_EXTDST1_DYNAMIC_field {
  uint32_t                         u5EXTDST1_SRC_SEL:5;
  uint32_t                         :27;
} stc_VIDEOSS_COMPENGCFG_EXTDST1_DYNAMIC_field_t;

typedef union un_VIDEOSS_COMPENGCFG_EXTDST1_DYNAMIC {
  uint32_t                         u32Register;
  stc_VIDEOSS_COMPENGCFG_EXTDST1_DYNAMIC_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_COMPENGCFG_EXTDST1_DYNAMIC_t;

/**
  * \brief ShadowLoadRequest register for endpoint extdst1 (VIDEOSS_COMPENGCFG_EXTDST1_REQUEST)
  */
typedef struct stc_VIDEOSS_COMPENGCFG_EXTDST1_REQUEST_field {
  uint32_t                         u1EXTDST1_SEL_SHDLDREQ:1;
  uint32_t                         u13EXTDST1_SHDLDREQ:13;
  uint32_t                         :18;
} stc_VIDEOSS_COMPENGCFG_EXTDST1_REQUEST_field_t;

typedef union un_VIDEOSS_COMPENGCFG_EXTDST1_REQUEST {
  uint32_t                         u32Register;
  stc_VIDEOSS_COMPENGCFG_EXTDST1_REQUEST_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_COMPENGCFG_EXTDST1_REQUEST_t;

/**
  * \brief Trigger bits for pixel engine configuration of extdst1 (VIDEOSS_COMPENGCFG_EXTDST1_TRIGGER)
  */
typedef struct stc_VIDEOSS_COMPENGCFG_EXTDST1_TRIGGER_field {
  uint32_t                         u1EXTDST1_SYNC_TRIGGER:1;
  uint32_t                         :3;
  uint32_t                         u1EXTDST1_TRIGGER_SEQUENCE_COMPLETE:1;
  uint32_t                         :27;
} stc_VIDEOSS_COMPENGCFG_EXTDST1_TRIGGER_field_t;

typedef union un_VIDEOSS_COMPENGCFG_EXTDST1_TRIGGER {
  uint32_t                         u32Register;
  stc_VIDEOSS_COMPENGCFG_EXTDST1_TRIGGER_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_COMPENGCFG_EXTDST1_TRIGGER_t;

/**
  * \brief Status information for pixel engine configuration of extdst1 (VIDEOSS_COMPENGCFG_EXTDST1_STATUS)
  */
typedef struct stc_VIDEOSS_COMPENGCFG_EXTDST1_STATUS_field {
  uint32_t                         u2EXTDST1_PIPELINE_STATUS:2;
  uint32_t                         :6;
  uint32_t                         u1EXTDST1_SYNC_BUSY:1;
  uint32_t                         :23;
} stc_VIDEOSS_COMPENGCFG_EXTDST1_STATUS_field_t;

typedef union un_VIDEOSS_COMPENGCFG_EXTDST1_STATUS {
  uint32_t                         u32Register;
  stc_VIDEOSS_COMPENGCFG_EXTDST1_STATUS_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_COMPENGCFG_EXTDST1_STATUS_t;

/**
  * \brief Status information for pixel engine configuration of constframe5 (VIDEOSS_COMPENGCFG_CONSTFRAME5_STATUS)
  */
typedef struct stc_VIDEOSS_COMPENGCFG_CONSTFRAME5_STATUS_field {
  uint32_t                         :16;
  uint32_t                         u3CONSTFRAME5_SEL:3;
  uint32_t                         :13;
} stc_VIDEOSS_COMPENGCFG_CONSTFRAME5_STATUS_field_t;

typedef union un_VIDEOSS_COMPENGCFG_CONSTFRAME5_STATUS {
  uint32_t                         u32Register;
  stc_VIDEOSS_COMPENGCFG_CONSTFRAME5_STATUS_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_COMPENGCFG_CONSTFRAME5_STATUS_t;

/**
  * \brief Static pixel engine configuration for extdst5 (VIDEOSS_COMPENGCFG_EXTDST5_STATIC)
  */
typedef struct stc_VIDEOSS_COMPENGCFG_EXTDST5_STATIC_field {
  uint32_t                         u1EXTDST5_SHDEN:1;
  uint32_t                         :3;
  uint32_t                         u1EXTDST5_POWERDOWN:1;
  uint32_t                         :3;
  uint32_t                         u1EXTDST5_SYNC_MODE:1;
  uint32_t                         :2;
  uint32_t                         u1EXTDST5_SW_RESET:1;
  uint32_t                         :4;
  uint32_t                         u8EXTDST5_DIV:8;
  uint32_t                         :8;
} stc_VIDEOSS_COMPENGCFG_EXTDST5_STATIC_field_t;

typedef union un_VIDEOSS_COMPENGCFG_EXTDST5_STATIC {
  uint32_t                         u32Register;
  stc_VIDEOSS_COMPENGCFG_EXTDST5_STATIC_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_COMPENGCFG_EXTDST5_STATIC_t;

/**
  * \brief Dynamic pixel engine configuration for extdst5 (VIDEOSS_COMPENGCFG_EXTDST5_DYNAMIC)
  */
typedef struct stc_VIDEOSS_COMPENGCFG_EXTDST5_DYNAMIC_field {
  uint32_t                         u5EXTDST5_SRC_SEL:5;
  uint32_t                         :27;
} stc_VIDEOSS_COMPENGCFG_EXTDST5_DYNAMIC_field_t;

typedef union un_VIDEOSS_COMPENGCFG_EXTDST5_DYNAMIC {
  uint32_t                         u32Register;
  stc_VIDEOSS_COMPENGCFG_EXTDST5_DYNAMIC_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_COMPENGCFG_EXTDST5_DYNAMIC_t;

/**
  * \brief ShadowLoadRequest register for endpoint extdst5 (VIDEOSS_COMPENGCFG_EXTDST5_REQUEST)
  */
typedef struct stc_VIDEOSS_COMPENGCFG_EXTDST5_REQUEST_field {
  uint32_t                         u1EXTDST5_SEL_SHDLDREQ:1;
  uint32_t                         u13EXTDST5_SHDLDREQ:13;
  uint32_t                         :18;
} stc_VIDEOSS_COMPENGCFG_EXTDST5_REQUEST_field_t;

typedef union un_VIDEOSS_COMPENGCFG_EXTDST5_REQUEST {
  uint32_t                         u32Register;
  stc_VIDEOSS_COMPENGCFG_EXTDST5_REQUEST_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_COMPENGCFG_EXTDST5_REQUEST_t;

/**
  * \brief Trigger bits for pixel engine configuration of extdst5 (VIDEOSS_COMPENGCFG_EXTDST5_TRIGGER)
  */
typedef struct stc_VIDEOSS_COMPENGCFG_EXTDST5_TRIGGER_field {
  uint32_t                         u1EXTDST5_SYNC_TRIGGER:1;
  uint32_t                         :3;
  uint32_t                         u1EXTDST5_TRIGGER_SEQUENCE_COMPLETE:1;
  uint32_t                         :27;
} stc_VIDEOSS_COMPENGCFG_EXTDST5_TRIGGER_field_t;

typedef union un_VIDEOSS_COMPENGCFG_EXTDST5_TRIGGER {
  uint32_t                         u32Register;
  stc_VIDEOSS_COMPENGCFG_EXTDST5_TRIGGER_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_COMPENGCFG_EXTDST5_TRIGGER_t;

/**
  * \brief Status information for pixel engine configuration of extdst5 (VIDEOSS_COMPENGCFG_EXTDST5_STATUS)
  */
typedef struct stc_VIDEOSS_COMPENGCFG_EXTDST5_STATUS_field {
  uint32_t                         u2EXTDST5_PIPELINE_STATUS:2;
  uint32_t                         :6;
  uint32_t                         u1EXTDST5_SYNC_BUSY:1;
  uint32_t                         :23;
} stc_VIDEOSS_COMPENGCFG_EXTDST5_STATUS_field_t;

typedef union un_VIDEOSS_COMPENGCFG_EXTDST5_STATUS {
  uint32_t                         u32Register;
  stc_VIDEOSS_COMPENGCFG_EXTDST5_STATUS_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_COMPENGCFG_EXTDST5_STATUS_t;

/**
  * \brief Status information for pixel engine configuration of extsrc4 (VIDEOSS_COMPENGCFG_EXTSRC4_STATUS)
  */
typedef struct stc_VIDEOSS_COMPENGCFG_EXTSRC4_STATUS_field {
  uint32_t                         :16;
  uint32_t                         u3EXTSRC4_SEL:3;
  uint32_t                         :13;
} stc_VIDEOSS_COMPENGCFG_EXTSRC4_STATUS_field_t;

typedef union un_VIDEOSS_COMPENGCFG_EXTSRC4_STATUS {
  uint32_t                         u32Register;
  stc_VIDEOSS_COMPENGCFG_EXTSRC4_STATUS_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_COMPENGCFG_EXTSRC4_STATUS_t;

/**
  * \brief Static pixel engine configuration for store4 (VIDEOSS_COMPENGCFG_STORE4_STATIC)
  */
typedef struct stc_VIDEOSS_COMPENGCFG_STORE4_STATIC_field {
  uint32_t                         u1STORE4_SHDEN:1;
  uint32_t                         :3;
  uint32_t                         u1STORE4_POWERDOWN:1;
  uint32_t                         :3;
  uint32_t                         u1STORE4_SYNC_MODE:1;
  uint32_t                         :2;
  uint32_t                         u1STORE4_SW_RESET:1;
  uint32_t                         :4;
  uint32_t                         u8STORE4_DIV:8;
  uint32_t                         :8;
} stc_VIDEOSS_COMPENGCFG_STORE4_STATIC_field_t;

typedef union un_VIDEOSS_COMPENGCFG_STORE4_STATIC {
  uint32_t                         u32Register;
  stc_VIDEOSS_COMPENGCFG_STORE4_STATIC_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_COMPENGCFG_STORE4_STATIC_t;

/**
  * \brief Dynamic pixel engine configuration for store4 (VIDEOSS_COMPENGCFG_STORE4_DYNAMIC)
  */
typedef struct stc_VIDEOSS_COMPENGCFG_STORE4_DYNAMIC_field {
  uint32_t                         u5STORE4_SRC_SEL:5;
  uint32_t                         :27;
} stc_VIDEOSS_COMPENGCFG_STORE4_DYNAMIC_field_t;

typedef union un_VIDEOSS_COMPENGCFG_STORE4_DYNAMIC {
  uint32_t                         u32Register;
  stc_VIDEOSS_COMPENGCFG_STORE4_DYNAMIC_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_COMPENGCFG_STORE4_DYNAMIC_t;

/**
  * \brief ShadowLoadRequest register for endpoint store4 (VIDEOSS_COMPENGCFG_STORE4_REQUEST)
  */
typedef struct stc_VIDEOSS_COMPENGCFG_STORE4_REQUEST_field {
  uint32_t                         u1STORE4_SEL_SHDLDREQ:1;
  uint32_t                         u13STORE4_SHDLDREQ:13;
  uint32_t                         :18;
} stc_VIDEOSS_COMPENGCFG_STORE4_REQUEST_field_t;

typedef union un_VIDEOSS_COMPENGCFG_STORE4_REQUEST {
  uint32_t                         u32Register;
  stc_VIDEOSS_COMPENGCFG_STORE4_REQUEST_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_COMPENGCFG_STORE4_REQUEST_t;

/**
  * \brief Trigger bits for pixel engine configuration of store4 (VIDEOSS_COMPENGCFG_STORE4_TRIGGER)
  */
typedef struct stc_VIDEOSS_COMPENGCFG_STORE4_TRIGGER_field {
  uint32_t                         u1STORE4_SYNC_TRIGGER:1;
  uint32_t                         :3;
  uint32_t                         u1STORE4_TRIGGER_SEQUENCE_COMPLETE:1;
  uint32_t                         :27;
} stc_VIDEOSS_COMPENGCFG_STORE4_TRIGGER_field_t;

typedef union un_VIDEOSS_COMPENGCFG_STORE4_TRIGGER {
  uint32_t                         u32Register;
  stc_VIDEOSS_COMPENGCFG_STORE4_TRIGGER_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_COMPENGCFG_STORE4_TRIGGER_t;

/**
  * \brief Status information for pixel engine configuration of store4 (VIDEOSS_COMPENGCFG_STORE4_STATUS)
  */
typedef struct stc_VIDEOSS_COMPENGCFG_STORE4_STATUS_field {
  uint32_t                         u2STORE4_PIPELINE_STATUS:2;
  uint32_t                         :6;
  uint32_t                         u1STORE4_SYNC_BUSY:1;
  uint32_t                         :23;
} stc_VIDEOSS_COMPENGCFG_STORE4_STATUS_field_t;

typedef union un_VIDEOSS_COMPENGCFG_STORE4_STATUS {
  uint32_t                         u32Register;
  stc_VIDEOSS_COMPENGCFG_STORE4_STATUS_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_COMPENGCFG_STORE4_STATUS_t;

/**
  * \brief Status information for pixel engine configuration of fetchlayer0 (VIDEOSS_COMPENGCFG_FETCHLAYER0_STATUS)
  */
typedef struct stc_VIDEOSS_COMPENGCFG_FETCHLAYER0_STATUS_field {
  uint32_t                         :16;
  uint32_t                         u3FETCHLAYER0_SEL:3;
  uint32_t                         :13;
} stc_VIDEOSS_COMPENGCFG_FETCHLAYER0_STATUS_field_t;

typedef union un_VIDEOSS_COMPENGCFG_FETCHLAYER0_STATUS {
  uint32_t                         u32Register;
  stc_VIDEOSS_COMPENGCFG_FETCHLAYER0_STATUS_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_COMPENGCFG_FETCHLAYER0_STATUS_t;

/**
  * \brief Dynamic pixel engine configuration for fetchdecode4 (VIDEOSS_COMPENGCFG_FETCHDECODE4_DYNAMIC)
  */
typedef struct stc_VIDEOSS_COMPENGCFG_FETCHDECODE4_DYNAMIC_field {
  uint32_t                         u5FETCHDECODE4_SRC_SEL:5;
  uint32_t                         :27;
} stc_VIDEOSS_COMPENGCFG_FETCHDECODE4_DYNAMIC_field_t;

typedef union un_VIDEOSS_COMPENGCFG_FETCHDECODE4_DYNAMIC {
  uint32_t                         u32Register;
  stc_VIDEOSS_COMPENGCFG_FETCHDECODE4_DYNAMIC_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_COMPENGCFG_FETCHDECODE4_DYNAMIC_t;

/**
  * \brief Status information for pixel engine configuration of fetchdecode4 (VIDEOSS_COMPENGCFG_FETCHDECODE4_STATUS)
  */
typedef struct stc_VIDEOSS_COMPENGCFG_FETCHDECODE4_STATUS_field {
  uint32_t                         :16;
  uint32_t                         u3FETCHDECODE4_SEL:3;
  uint32_t                         :13;
} stc_VIDEOSS_COMPENGCFG_FETCHDECODE4_STATUS_field_t;

typedef union un_VIDEOSS_COMPENGCFG_FETCHDECODE4_STATUS {
  uint32_t                         u32Register;
  stc_VIDEOSS_COMPENGCFG_FETCHDECODE4_STATUS_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_COMPENGCFG_FETCHDECODE4_STATUS_t;

/**
  * \brief Status information for pixel engine configuration of fetcheco4 (VIDEOSS_COMPENGCFG_FETCHECO4_STATUS)
  */
typedef struct stc_VIDEOSS_COMPENGCFG_FETCHECO4_STATUS_field {
  uint32_t                         :16;
  uint32_t                         u3FETCHECO4_SEL:3;
  uint32_t                         :13;
} stc_VIDEOSS_COMPENGCFG_FETCHECO4_STATUS_field_t;

typedef union un_VIDEOSS_COMPENGCFG_FETCHECO4_STATUS {
  uint32_t                         u32Register;
  stc_VIDEOSS_COMPENGCFG_FETCHECO4_STATUS_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_COMPENGCFG_FETCHECO4_STATUS_t;

/**
  * \brief Dynamic pixel engine configuration for fetchwarp1 (VIDEOSS_COMPENGCFG_FETCHWARP1_DYNAMIC)
  */
typedef struct stc_VIDEOSS_COMPENGCFG_FETCHWARP1_DYNAMIC_field {
  uint32_t                         u5FETCHWARP1_SRC_SEL:5;
  uint32_t                         :27;
} stc_VIDEOSS_COMPENGCFG_FETCHWARP1_DYNAMIC_field_t;

typedef union un_VIDEOSS_COMPENGCFG_FETCHWARP1_DYNAMIC {
  uint32_t                         u32Register;
  stc_VIDEOSS_COMPENGCFG_FETCHWARP1_DYNAMIC_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_COMPENGCFG_FETCHWARP1_DYNAMIC_t;

/**
  * \brief Status information for pixel engine configuration of fetchwarp1 (VIDEOSS_COMPENGCFG_FETCHWARP1_STATUS)
  */
typedef struct stc_VIDEOSS_COMPENGCFG_FETCHWARP1_STATUS_field {
  uint32_t                         :16;
  uint32_t                         u3FETCHWARP1_SEL:3;
  uint32_t                         :13;
} stc_VIDEOSS_COMPENGCFG_FETCHWARP1_STATUS_field_t;

typedef union un_VIDEOSS_COMPENGCFG_FETCHWARP1_STATUS {
  uint32_t                         u32Register;
  stc_VIDEOSS_COMPENGCFG_FETCHWARP1_STATUS_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_COMPENGCFG_FETCHWARP1_STATUS_t;

/**
  * \brief Status information for pixel engine configuration of fetcheco1 (VIDEOSS_COMPENGCFG_FETCHECO1_STATUS)
  */
typedef struct stc_VIDEOSS_COMPENGCFG_FETCHECO1_STATUS_field {
  uint32_t                         :16;
  uint32_t                         u3FETCHECO1_SEL:3;
  uint32_t                         :13;
} stc_VIDEOSS_COMPENGCFG_FETCHECO1_STATUS_field_t;

typedef union un_VIDEOSS_COMPENGCFG_FETCHECO1_STATUS {
  uint32_t                         u32Register;
  stc_VIDEOSS_COMPENGCFG_FETCHECO1_STATUS_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_COMPENGCFG_FETCHECO1_STATUS_t;

/**
  * \brief Status information for pixel engine configuration of fetchlayer1 (VIDEOSS_COMPENGCFG_FETCHLAYER1_STATUS)
  */
typedef struct stc_VIDEOSS_COMPENGCFG_FETCHLAYER1_STATUS_field {
  uint32_t                         :16;
  uint32_t                         u3FETCHLAYER1_SEL:3;
  uint32_t                         :13;
} stc_VIDEOSS_COMPENGCFG_FETCHLAYER1_STATUS_field_t;

typedef union un_VIDEOSS_COMPENGCFG_FETCHLAYER1_STATUS {
  uint32_t                         u32Register;
  stc_VIDEOSS_COMPENGCFG_FETCHLAYER1_STATUS_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_COMPENGCFG_FETCHLAYER1_STATUS_t;

/**
  * \brief Dynamic pixel engine configuration for fetchdecode0 (VIDEOSS_COMPENGCFG_FETCHDECODE0_DYNAMIC)
  */
typedef struct stc_VIDEOSS_COMPENGCFG_FETCHDECODE0_DYNAMIC_field {
  uint32_t                         u5FETCHDECODE0_SRC_SEL:5;
  uint32_t                         :27;
} stc_VIDEOSS_COMPENGCFG_FETCHDECODE0_DYNAMIC_field_t;

typedef union un_VIDEOSS_COMPENGCFG_FETCHDECODE0_DYNAMIC {
  uint32_t                         u32Register;
  stc_VIDEOSS_COMPENGCFG_FETCHDECODE0_DYNAMIC_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_COMPENGCFG_FETCHDECODE0_DYNAMIC_t;

/**
  * \brief Status information for pixel engine configuration of fetchdecode0 (VIDEOSS_COMPENGCFG_FETCHDECODE0_STATUS)
  */
typedef struct stc_VIDEOSS_COMPENGCFG_FETCHDECODE0_STATUS_field {
  uint32_t                         :16;
  uint32_t                         u3FETCHDECODE0_SEL:3;
  uint32_t                         :13;
} stc_VIDEOSS_COMPENGCFG_FETCHDECODE0_STATUS_field_t;

typedef union un_VIDEOSS_COMPENGCFG_FETCHDECODE0_STATUS {
  uint32_t                         u32Register;
  stc_VIDEOSS_COMPENGCFG_FETCHDECODE0_STATUS_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_COMPENGCFG_FETCHDECODE0_STATUS_t;

/**
  * \brief Dynamic pixel engine configuration for gammacor4 (VIDEOSS_COMPENGCFG_GAMMACOR4_DYNAMIC)
  */
typedef struct stc_VIDEOSS_COMPENGCFG_GAMMACOR4_DYNAMIC_field {
  uint32_t                         u5GAMMACOR4_SRC_SEL:5;
  uint32_t                         :27;
} stc_VIDEOSS_COMPENGCFG_GAMMACOR4_DYNAMIC_field_t;

typedef union un_VIDEOSS_COMPENGCFG_GAMMACOR4_DYNAMIC {
  uint32_t                         u32Register;
  stc_VIDEOSS_COMPENGCFG_GAMMACOR4_DYNAMIC_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_COMPENGCFG_GAMMACOR4_DYNAMIC_t;

/**
  * \brief Status information for pixel engine configuration of gammacor4 (VIDEOSS_COMPENGCFG_GAMMACOR4_STATUS)
  */
typedef struct stc_VIDEOSS_COMPENGCFG_GAMMACOR4_STATUS_field {
  uint32_t                         :16;
  uint32_t                         u3GAMMACOR4_SEL:3;
  uint32_t                         :13;
} stc_VIDEOSS_COMPENGCFG_GAMMACOR4_STATUS_field_t;

typedef union un_VIDEOSS_COMPENGCFG_GAMMACOR4_STATUS {
  uint32_t                         u32Register;
  stc_VIDEOSS_COMPENGCFG_GAMMACOR4_STATUS_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_COMPENGCFG_GAMMACOR4_STATUS_t;

/**
  * \brief Dynamic pixel engine configuration for matrix4 (VIDEOSS_COMPENGCFG_MATRIX4_DYNAMIC)
  */
typedef struct stc_VIDEOSS_COMPENGCFG_MATRIX4_DYNAMIC_field {
  uint32_t                         u5MATRIX4_SRC_SEL:5;
  uint32_t                         :19;
  uint32_t                         u2MATRIX4_CLKEN:2;
  uint32_t                         :6;
} stc_VIDEOSS_COMPENGCFG_MATRIX4_DYNAMIC_field_t;

typedef union un_VIDEOSS_COMPENGCFG_MATRIX4_DYNAMIC {
  uint32_t                         u32Register;
  stc_VIDEOSS_COMPENGCFG_MATRIX4_DYNAMIC_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_COMPENGCFG_MATRIX4_DYNAMIC_t;

/**
  * \brief Status information for pixel engine configuration of matrix4 (VIDEOSS_COMPENGCFG_MATRIX4_STATUS)
  */
typedef struct stc_VIDEOSS_COMPENGCFG_MATRIX4_STATUS_field {
  uint32_t                         :16;
  uint32_t                         u3MATRIX4_SEL:3;
  uint32_t                         :13;
} stc_VIDEOSS_COMPENGCFG_MATRIX4_STATUS_field_t;

typedef union un_VIDEOSS_COMPENGCFG_MATRIX4_STATUS {
  uint32_t                         u32Register;
  stc_VIDEOSS_COMPENGCFG_MATRIX4_STATUS_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_COMPENGCFG_MATRIX4_STATUS_t;

/**
  * \brief Dynamic pixel engine configuration for gpscaler4 (VIDEOSS_COMPENGCFG_GPSCALER4_DYNAMIC)
  */
typedef struct stc_VIDEOSS_COMPENGCFG_GPSCALER4_DYNAMIC_field {
  uint32_t                         u5GPSCALER4_SRC_SEL:5;
  uint32_t                         :19;
  uint32_t                         u2GPSCALER4_CLKEN:2;
  uint32_t                         :6;
} stc_VIDEOSS_COMPENGCFG_GPSCALER4_DYNAMIC_field_t;

typedef union un_VIDEOSS_COMPENGCFG_GPSCALER4_DYNAMIC {
  uint32_t                         u32Register;
  stc_VIDEOSS_COMPENGCFG_GPSCALER4_DYNAMIC_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_COMPENGCFG_GPSCALER4_DYNAMIC_t;

/**
  * \brief Status information for pixel engine configuration of gpscaler4 (VIDEOSS_COMPENGCFG_GPSCALER4_STATUS)
  */
typedef struct stc_VIDEOSS_COMPENGCFG_GPSCALER4_STATUS_field {
  uint32_t                         :16;
  uint32_t                         u3GPSCALER4_SEL:3;
  uint32_t                         :13;
} stc_VIDEOSS_COMPENGCFG_GPSCALER4_STATUS_field_t;

typedef union un_VIDEOSS_COMPENGCFG_GPSCALER4_STATUS {
  uint32_t                         u32Register;
  stc_VIDEOSS_COMPENGCFG_GPSCALER4_STATUS_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_COMPENGCFG_GPSCALER4_STATUS_t;

/**
  * \brief Dynamic pixel engine configuration for histogram4 (VIDEOSS_COMPENGCFG_HISTOGRAM4_DYNAMIC)
  */
typedef struct stc_VIDEOSS_COMPENGCFG_HISTOGRAM4_DYNAMIC_field {
  uint32_t                         u5HISTOGRAM4_SRC_SEL:5;
  uint32_t                         :19;
  uint32_t                         u2HISTOGRAM4_CLKEN:2;
  uint32_t                         :6;
} stc_VIDEOSS_COMPENGCFG_HISTOGRAM4_DYNAMIC_field_t;

typedef union un_VIDEOSS_COMPENGCFG_HISTOGRAM4_DYNAMIC {
  uint32_t                         u32Register;
  stc_VIDEOSS_COMPENGCFG_HISTOGRAM4_DYNAMIC_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_COMPENGCFG_HISTOGRAM4_DYNAMIC_t;

/**
  * \brief Status information for pixel engine configuration of histogram4 (VIDEOSS_COMPENGCFG_HISTOGRAM4_STATUS)
  */
typedef struct stc_VIDEOSS_COMPENGCFG_HISTOGRAM4_STATUS_field {
  uint32_t                         :16;
  uint32_t                         u3HISTOGRAM4_SEL:3;
  uint32_t                         :13;
} stc_VIDEOSS_COMPENGCFG_HISTOGRAM4_STATUS_field_t;

typedef union un_VIDEOSS_COMPENGCFG_HISTOGRAM4_STATUS {
  uint32_t                         u32Register;
  stc_VIDEOSS_COMPENGCFG_HISTOGRAM4_STATUS_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_COMPENGCFG_HISTOGRAM4_STATUS_t;

/**
  * \brief Dynamic pixel engine configuration for layerblend1 (VIDEOSS_COMPENGCFG_LAYERBLEND1_DYNAMIC)
  */
typedef struct stc_VIDEOSS_COMPENGCFG_LAYERBLEND1_DYNAMIC_field {
  uint32_t                         u5LAYERBLEND1_PRIM_SEL:5;
  uint32_t                         :3;
  uint32_t                         u5LAYERBLEND1_SEC_SEL:5;
  uint32_t                         :11;
  uint32_t                         u2LAYERBLEND1_CLKEN:2;
  uint32_t                         :6;
} stc_VIDEOSS_COMPENGCFG_LAYERBLEND1_DYNAMIC_field_t;

typedef union un_VIDEOSS_COMPENGCFG_LAYERBLEND1_DYNAMIC {
  uint32_t                         u32Register;
  stc_VIDEOSS_COMPENGCFG_LAYERBLEND1_DYNAMIC_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_COMPENGCFG_LAYERBLEND1_DYNAMIC_t;

/**
  * \brief Status information for pixel engine configuration of layerblend1 (VIDEOSS_COMPENGCFG_LAYERBLEND1_STATUS)
  */
typedef struct stc_VIDEOSS_COMPENGCFG_LAYERBLEND1_STATUS_field {
  uint32_t                         :16;
  uint32_t                         u3LAYERBLEND1_SEL:3;
  uint32_t                         :13;
} stc_VIDEOSS_COMPENGCFG_LAYERBLEND1_STATUS_field_t;

typedef union un_VIDEOSS_COMPENGCFG_LAYERBLEND1_STATUS {
  uint32_t                         u32Register;
  stc_VIDEOSS_COMPENGCFG_LAYERBLEND1_STATUS_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_COMPENGCFG_LAYERBLEND1_STATUS_t;

/**
  * \brief Dynamic pixel engine configuration for layerblend2 (VIDEOSS_COMPENGCFG_LAYERBLEND2_DYNAMIC)
  */
typedef struct stc_VIDEOSS_COMPENGCFG_LAYERBLEND2_DYNAMIC_field {
  uint32_t                         u5LAYERBLEND2_PRIM_SEL:5;
  uint32_t                         :3;
  uint32_t                         u5LAYERBLEND2_SEC_SEL:5;
  uint32_t                         :11;
  uint32_t                         u2LAYERBLEND2_CLKEN:2;
  uint32_t                         :6;
} stc_VIDEOSS_COMPENGCFG_LAYERBLEND2_DYNAMIC_field_t;

typedef union un_VIDEOSS_COMPENGCFG_LAYERBLEND2_DYNAMIC {
  uint32_t                         u32Register;
  stc_VIDEOSS_COMPENGCFG_LAYERBLEND2_DYNAMIC_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_COMPENGCFG_LAYERBLEND2_DYNAMIC_t;

/**
  * \brief Status information for pixel engine configuration of layerblend2 (VIDEOSS_COMPENGCFG_LAYERBLEND2_STATUS)
  */
typedef struct stc_VIDEOSS_COMPENGCFG_LAYERBLEND2_STATUS_field {
  uint32_t                         :16;
  uint32_t                         u3LAYERBLEND2_SEL:3;
  uint32_t                         :13;
} stc_VIDEOSS_COMPENGCFG_LAYERBLEND2_STATUS_field_t;

typedef union un_VIDEOSS_COMPENGCFG_LAYERBLEND2_STATUS {
  uint32_t                         u32Register;
  stc_VIDEOSS_COMPENGCFG_LAYERBLEND2_STATUS_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_COMPENGCFG_LAYERBLEND2_STATUS_t;

/**
  * \brief Dynamic pixel engine configuration for layerblend3 (VIDEOSS_COMPENGCFG_LAYERBLEND3_DYNAMIC)
  */
typedef struct stc_VIDEOSS_COMPENGCFG_LAYERBLEND3_DYNAMIC_field {
  uint32_t                         u5LAYERBLEND3_PRIM_SEL:5;
  uint32_t                         :3;
  uint32_t                         u5LAYERBLEND3_SEC_SEL:5;
  uint32_t                         :11;
  uint32_t                         u2LAYERBLEND3_CLKEN:2;
  uint32_t                         :6;
} stc_VIDEOSS_COMPENGCFG_LAYERBLEND3_DYNAMIC_field_t;

typedef union un_VIDEOSS_COMPENGCFG_LAYERBLEND3_DYNAMIC {
  uint32_t                         u32Register;
  stc_VIDEOSS_COMPENGCFG_LAYERBLEND3_DYNAMIC_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_COMPENGCFG_LAYERBLEND3_DYNAMIC_t;

/**
  * \brief Status information for pixel engine configuration of layerblend3 (VIDEOSS_COMPENGCFG_LAYERBLEND3_STATUS)
  */
typedef struct stc_VIDEOSS_COMPENGCFG_LAYERBLEND3_STATUS_field {
  uint32_t                         :16;
  uint32_t                         u3LAYERBLEND3_SEL:3;
  uint32_t                         :13;
} stc_VIDEOSS_COMPENGCFG_LAYERBLEND3_STATUS_field_t;

typedef union un_VIDEOSS_COMPENGCFG_LAYERBLEND3_STATUS {
  uint32_t                         u32Register;
  stc_VIDEOSS_COMPENGCFG_LAYERBLEND3_STATUS_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_COMPENGCFG_LAYERBLEND3_STATUS_t;

/**
  * \brief Dynamic pixel engine configuration for layerblend4 (VIDEOSS_COMPENGCFG_LAYERBLEND4_DYNAMIC)
  */
typedef struct stc_VIDEOSS_COMPENGCFG_LAYERBLEND4_DYNAMIC_field {
  uint32_t                         u5LAYERBLEND4_PRIM_SEL:5;
  uint32_t                         :3;
  uint32_t                         u5LAYERBLEND4_SEC_SEL:5;
  uint32_t                         :11;
  uint32_t                         u2LAYERBLEND4_CLKEN:2;
  uint32_t                         :6;
} stc_VIDEOSS_COMPENGCFG_LAYERBLEND4_DYNAMIC_field_t;

typedef union un_VIDEOSS_COMPENGCFG_LAYERBLEND4_DYNAMIC {
  uint32_t                         u32Register;
  stc_VIDEOSS_COMPENGCFG_LAYERBLEND4_DYNAMIC_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_COMPENGCFG_LAYERBLEND4_DYNAMIC_t;

/**
  * \brief Status information for pixel engine configuration of layerblend4 (VIDEOSS_COMPENGCFG_LAYERBLEND4_STATUS)
  */
typedef struct stc_VIDEOSS_COMPENGCFG_LAYERBLEND4_STATUS_field {
  uint32_t                         :16;
  uint32_t                         u3LAYERBLEND4_SEL:3;
  uint32_t                         :13;
} stc_VIDEOSS_COMPENGCFG_LAYERBLEND4_STATUS_field_t;

typedef union un_VIDEOSS_COMPENGCFG_LAYERBLEND4_STATUS {
  uint32_t                         u32Register;
  stc_VIDEOSS_COMPENGCFG_LAYERBLEND4_STATUS_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_COMPENGCFG_LAYERBLEND4_STATUS_t;

/**
  * \brief Dynamic pixel engine configuration for layerblend5 (VIDEOSS_COMPENGCFG_LAYERBLEND5_DYNAMIC)
  */
typedef struct stc_VIDEOSS_COMPENGCFG_LAYERBLEND5_DYNAMIC_field {
  uint32_t                         u5LAYERBLEND5_PRIM_SEL:5;
  uint32_t                         :3;
  uint32_t                         u5LAYERBLEND5_SEC_SEL:5;
  uint32_t                         :11;
  uint32_t                         u2LAYERBLEND5_CLKEN:2;
  uint32_t                         :6;
} stc_VIDEOSS_COMPENGCFG_LAYERBLEND5_DYNAMIC_field_t;

typedef union un_VIDEOSS_COMPENGCFG_LAYERBLEND5_DYNAMIC {
  uint32_t                         u32Register;
  stc_VIDEOSS_COMPENGCFG_LAYERBLEND5_DYNAMIC_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_COMPENGCFG_LAYERBLEND5_DYNAMIC_t;

/**
  * \brief Status information for pixel engine configuration of layerblend5 (VIDEOSS_COMPENGCFG_LAYERBLEND5_STATUS)
  */
typedef struct stc_VIDEOSS_COMPENGCFG_LAYERBLEND5_STATUS_field {
  uint32_t                         :16;
  uint32_t                         u3LAYERBLEND5_SEL:3;
  uint32_t                         :13;
} stc_VIDEOSS_COMPENGCFG_LAYERBLEND5_STATUS_field_t;

typedef union un_VIDEOSS_COMPENGCFG_LAYERBLEND5_STATUS {
  uint32_t                         u32Register;
  stc_VIDEOSS_COMPENGCFG_LAYERBLEND5_STATUS_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_COMPENGCFG_LAYERBLEND5_STATUS_t;

/**
  * \brief Status information for pixel engine configuration of extsrc8 (VIDEOSS_COMPENGCFG_EXTSRC8_STATUS)
  */
typedef struct stc_VIDEOSS_COMPENGCFG_EXTSRC8_STATUS_field {
  uint32_t                         :16;
  uint32_t                         u3EXTSRC8_SEL:3;
  uint32_t                         :13;
} stc_VIDEOSS_COMPENGCFG_EXTSRC8_STATUS_field_t;

typedef union un_VIDEOSS_COMPENGCFG_EXTSRC8_STATUS {
  uint32_t                         u32Register;
  stc_VIDEOSS_COMPENGCFG_EXTSRC8_STATUS_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_COMPENGCFG_EXTSRC8_STATUS_t;



/**
  * \brief ConstFrame unit static control register (VIDEOSS_CONSTFRAME0_STATICCONTROL)
  */
typedef struct stc_VIDEOSS_CONSTFRAME0_STATICCONTROL_field {
  uint32_t                         u1SHDEN:1;
  uint32_t                         :31;
} stc_VIDEOSS_CONSTFRAME0_STATICCONTROL_field_t;

typedef union un_VIDEOSS_CONSTFRAME0_STATICCONTROL {
  uint32_t                         u32Register;
  stc_VIDEOSS_CONSTFRAME0_STATICCONTROL_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_CONSTFRAME0_STATICCONTROL_t;

/**
  * \brief Output frame dimensions. (VIDEOSS_CONSTFRAME0_FRAMEDIMENSIONS)
  */
typedef struct stc_VIDEOSS_CONSTFRAME0_FRAMEDIMENSIONS_field {
  uint32_t                         u14FRAMEWIDTH:14;
  uint32_t                         :2;
  uint32_t                         u14FRAMEHEIGHT:14;
  uint32_t                         :1;
  uint32_t                         u1EMPTYFRAME:1;
} stc_VIDEOSS_CONSTFRAME0_FRAMEDIMENSIONS_field_t;

typedef union un_VIDEOSS_CONSTFRAME0_FRAMEDIMENSIONS {
  uint32_t                         u32Register;
  stc_VIDEOSS_CONSTFRAME0_FRAMEDIMENSIONS_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_CONSTFRAME0_FRAMEDIMENSIONS_t;

/**
  * \brief Color of output frame. (VIDEOSS_CONSTFRAME0_CONSTANTCOLOR)
  */
typedef struct stc_VIDEOSS_CONSTFRAME0_CONSTANTCOLOR_field {
  uint32_t                         u8CONSTANTALPHA:8;
  uint32_t                         u8CONSTANTBLUE:8;
  uint32_t                         u8CONSTANTGREEN:8;
  uint32_t                         u8CONSTANTRED:8;
} stc_VIDEOSS_CONSTFRAME0_CONSTANTCOLOR_field_t;

typedef union un_VIDEOSS_CONSTFRAME0_CONSTANTCOLOR {
  uint32_t                         u32Register;
  stc_VIDEOSS_CONSTFRAME0_CONSTANTCOLOR_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_CONSTFRAME0_CONSTANTCOLOR_t;

/**
  * \brief ConstFrame unit trigger register (VIDEOSS_CONSTFRAME0_CONTROLTRIGGER)
  */
typedef struct stc_VIDEOSS_CONSTFRAME0_CONTROLTRIGGER_field {
  uint32_t                         u1SHDTOKGEN:1;
  uint32_t                         :31;
} stc_VIDEOSS_CONSTFRAME0_CONTROLTRIGGER_field_t;

typedef union un_VIDEOSS_CONSTFRAME0_CONTROLTRIGGER {
  uint32_t                         u32Register;
  stc_VIDEOSS_CONSTFRAME0_CONTROLTRIGGER_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_CONSTFRAME0_CONTROLTRIGGER_t;

/**
  * \brief ConstFrame unit start register (VIDEOSS_CONSTFRAME0_START)
  */
typedef struct stc_VIDEOSS_CONSTFRAME0_START_field {
  uint32_t                         u1START:1;
  uint32_t                         :31;
} stc_VIDEOSS_CONSTFRAME0_START_field_t;

typedef union un_VIDEOSS_CONSTFRAME0_START {
  uint32_t                         u32Register;
  stc_VIDEOSS_CONSTFRAME0_START_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_CONSTFRAME0_START_t;



/**
  * \brief External Destination static control register (VIDEOSS_EXTDST0_STATICCONTROL)
  */
typedef struct stc_VIDEOSS_EXTDST0_STATICCONTROL_field {
  uint32_t                         u1SHDEN:1;
  uint32_t                         :7;
  uint32_t                         u1KICK_MODE:1;
  uint32_t                         :3;
  uint32_t                         u1PERFCOUNTMODE:1;
  uint32_t                         :19;
} stc_VIDEOSS_EXTDST0_STATICCONTROL_field_t;

typedef union un_VIDEOSS_EXTDST0_STATICCONTROL {
  uint32_t                         u32Register;
  stc_VIDEOSS_EXTDST0_STATICCONTROL_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_EXTDST0_STATICCONTROL_t;

/**
  * \brief External Destination shadowed control register (VIDEOSS_EXTDST0_CONTROL)
  */
typedef struct stc_VIDEOSS_EXTDST0_CONTROL_field {
  uint32_t                         u1GAMMAAPPLYENABLE:1;
  uint32_t                         :31;
} stc_VIDEOSS_EXTDST0_CONTROL_field_t;

typedef union un_VIDEOSS_EXTDST0_CONTROL {
  uint32_t                         u32Register;
  stc_VIDEOSS_EXTDST0_CONTROL_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_EXTDST0_CONTROL_t;

/**
  * \brief External Destination software kick (VIDEOSS_EXTDST0_SOFTWAREKICK)
  */
typedef struct stc_VIDEOSS_EXTDST0_SOFTWAREKICK_field {
  uint32_t                         u1KICK:1;
  uint32_t                         :31;
} stc_VIDEOSS_EXTDST0_SOFTWAREKICK_field_t;

typedef union un_VIDEOSS_EXTDST0_SOFTWAREKICK {
  uint32_t                         u32Register;
  stc_VIDEOSS_EXTDST0_SOFTWAREKICK_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_EXTDST0_SOFTWAREKICK_t;

/**
  * \brief External Destination Unit current status (VIDEOSS_EXTDST0_STATUS)
  */
typedef struct stc_VIDEOSS_EXTDST0_STATUS_field {
  uint32_t                         u1CNT_ERR_STS:1;
  uint32_t                         :31;
} stc_VIDEOSS_EXTDST0_STATUS_field_t;

typedef union un_VIDEOSS_EXTDST0_STATUS {
  uint32_t                         u32Register;
  stc_VIDEOSS_EXTDST0_STATUS_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_EXTDST0_STATUS_t;

/**
  * \brief Value of last received control word (VIDEOSS_EXTDST0_CONTROLWORD)
  */
typedef struct stc_VIDEOSS_EXTDST0_CONTROLWORD_field {
  uint32_t                         u32CW_VAL:32;
} stc_VIDEOSS_EXTDST0_CONTROLWORD_field_t;

typedef union un_VIDEOSS_EXTDST0_CONTROLWORD {
  uint32_t                         u32Register;
  stc_VIDEOSS_EXTDST0_CONTROLWORD_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_EXTDST0_CONTROLWORD_t;

/**
  * \brief pixel count of currently running frame (VIDEOSS_EXTDST0_CURPIXELCNT)
  */
typedef struct stc_VIDEOSS_EXTDST0_CURPIXELCNT_field {
  uint32_t                         u16C_XVAL:16;
  uint32_t                         u16C_YVAL:16;
} stc_VIDEOSS_EXTDST0_CURPIXELCNT_field_t;

typedef union un_VIDEOSS_EXTDST0_CURPIXELCNT {
  uint32_t                         u32Register;
  stc_VIDEOSS_EXTDST0_CURPIXELCNT_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_EXTDST0_CURPIXELCNT_t;

/**
  * \brief pixel count between last two control words (VIDEOSS_EXTDST0_LASTPIXELCNT)
  */
typedef struct stc_VIDEOSS_EXTDST0_LASTPIXELCNT_field {
  uint32_t                         u16L_XVAL:16;
  uint32_t                         u16L_YVAL:16;
} stc_VIDEOSS_EXTDST0_LASTPIXELCNT_field_t;

typedef union un_VIDEOSS_EXTDST0_LASTPIXELCNT {
  uint32_t                         u32Register;
  stc_VIDEOSS_EXTDST0_LASTPIXELCNT_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_EXTDST0_LASTPIXELCNT_t;

/**
  * \brief Performance counter result (VIDEOSS_EXTDST0_PERFCOUNTER)
  */
typedef struct stc_VIDEOSS_EXTDST0_PERFCOUNTER_field {
  uint32_t                         u32PERFRESULT:32;
} stc_VIDEOSS_EXTDST0_PERFCOUNTER_field_t;

typedef union un_VIDEOSS_EXTDST0_PERFCOUNTER {
  uint32_t                         u32Register;
  stc_VIDEOSS_EXTDST0_PERFCOUNTER_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_EXTDST0_PERFCOUNTER_t;



/**
  * \brief ConstFrame unit static control register (VIDEOSS_CONSTFRAME4_STATICCONTROL)
  */
typedef struct stc_VIDEOSS_CONSTFRAME4_STATICCONTROL_field {
  uint32_t                         u1SHDEN:1;
  uint32_t                         :31;
} stc_VIDEOSS_CONSTFRAME4_STATICCONTROL_field_t;

typedef union un_VIDEOSS_CONSTFRAME4_STATICCONTROL {
  uint32_t                         u32Register;
  stc_VIDEOSS_CONSTFRAME4_STATICCONTROL_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_CONSTFRAME4_STATICCONTROL_t;

/**
  * \brief Output frame dimensions. (VIDEOSS_CONSTFRAME4_FRAMEDIMENSIONS)
  */
typedef struct stc_VIDEOSS_CONSTFRAME4_FRAMEDIMENSIONS_field {
  uint32_t                         u14FRAMEWIDTH:14;
  uint32_t                         :2;
  uint32_t                         u14FRAMEHEIGHT:14;
  uint32_t                         :1;
  uint32_t                         u1EMPTYFRAME:1;
} stc_VIDEOSS_CONSTFRAME4_FRAMEDIMENSIONS_field_t;

typedef union un_VIDEOSS_CONSTFRAME4_FRAMEDIMENSIONS {
  uint32_t                         u32Register;
  stc_VIDEOSS_CONSTFRAME4_FRAMEDIMENSIONS_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_CONSTFRAME4_FRAMEDIMENSIONS_t;

/**
  * \brief Color of output frame. (VIDEOSS_CONSTFRAME4_CONSTANTCOLOR)
  */
typedef struct stc_VIDEOSS_CONSTFRAME4_CONSTANTCOLOR_field {
  uint32_t                         u8CONSTANTALPHA:8;
  uint32_t                         u8CONSTANTBLUE:8;
  uint32_t                         u8CONSTANTGREEN:8;
  uint32_t                         u8CONSTANTRED:8;
} stc_VIDEOSS_CONSTFRAME4_CONSTANTCOLOR_field_t;

typedef union un_VIDEOSS_CONSTFRAME4_CONSTANTCOLOR {
  uint32_t                         u32Register;
  stc_VIDEOSS_CONSTFRAME4_CONSTANTCOLOR_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_CONSTFRAME4_CONSTANTCOLOR_t;

/**
  * \brief ConstFrame unit trigger register (VIDEOSS_CONSTFRAME4_CONTROLTRIGGER)
  */
typedef struct stc_VIDEOSS_CONSTFRAME4_CONTROLTRIGGER_field {
  uint32_t                         u1SHDTOKGEN:1;
  uint32_t                         :31;
} stc_VIDEOSS_CONSTFRAME4_CONTROLTRIGGER_field_t;

typedef union un_VIDEOSS_CONSTFRAME4_CONTROLTRIGGER {
  uint32_t                         u32Register;
  stc_VIDEOSS_CONSTFRAME4_CONTROLTRIGGER_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_CONSTFRAME4_CONTROLTRIGGER_t;

/**
  * \brief ConstFrame unit start register (VIDEOSS_CONSTFRAME4_START)
  */
typedef struct stc_VIDEOSS_CONSTFRAME4_START_field {
  uint32_t                         u1START:1;
  uint32_t                         :31;
} stc_VIDEOSS_CONSTFRAME4_START_field_t;

typedef union un_VIDEOSS_CONSTFRAME4_START {
  uint32_t                         u32Register;
  stc_VIDEOSS_CONSTFRAME4_START_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_CONSTFRAME4_START_t;



/**
  * \brief External Destination static control register (VIDEOSS_EXTDST4_STATICCONTROL)
  */
typedef struct stc_VIDEOSS_EXTDST4_STATICCONTROL_field {
  uint32_t                         u1SHDEN:1;
  uint32_t                         :7;
  uint32_t                         u1KICK_MODE:1;
  uint32_t                         :3;
  uint32_t                         u1PERFCOUNTMODE:1;
  uint32_t                         :19;
} stc_VIDEOSS_EXTDST4_STATICCONTROL_field_t;

typedef union un_VIDEOSS_EXTDST4_STATICCONTROL {
  uint32_t                         u32Register;
  stc_VIDEOSS_EXTDST4_STATICCONTROL_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_EXTDST4_STATICCONTROL_t;

/**
  * \brief External Destination shadowed control register (VIDEOSS_EXTDST4_CONTROL)
  */
typedef struct stc_VIDEOSS_EXTDST4_CONTROL_field {
  uint32_t                         u1GAMMAAPPLYENABLE:1;
  uint32_t                         :31;
} stc_VIDEOSS_EXTDST4_CONTROL_field_t;

typedef union un_VIDEOSS_EXTDST4_CONTROL {
  uint32_t                         u32Register;
  stc_VIDEOSS_EXTDST4_CONTROL_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_EXTDST4_CONTROL_t;

/**
  * \brief External Destination software kick (VIDEOSS_EXTDST4_SOFTWAREKICK)
  */
typedef struct stc_VIDEOSS_EXTDST4_SOFTWAREKICK_field {
  uint32_t                         u1KICK:1;
  uint32_t                         :31;
} stc_VIDEOSS_EXTDST4_SOFTWAREKICK_field_t;

typedef union un_VIDEOSS_EXTDST4_SOFTWAREKICK {
  uint32_t                         u32Register;
  stc_VIDEOSS_EXTDST4_SOFTWAREKICK_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_EXTDST4_SOFTWAREKICK_t;

/**
  * \brief External Destination Unit current status (VIDEOSS_EXTDST4_STATUS)
  */
typedef struct stc_VIDEOSS_EXTDST4_STATUS_field {
  uint32_t                         u1CNT_ERR_STS:1;
  uint32_t                         :31;
} stc_VIDEOSS_EXTDST4_STATUS_field_t;

typedef union un_VIDEOSS_EXTDST4_STATUS {
  uint32_t                         u32Register;
  stc_VIDEOSS_EXTDST4_STATUS_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_EXTDST4_STATUS_t;

/**
  * \brief Value of last received control word (VIDEOSS_EXTDST4_CONTROLWORD)
  */
typedef struct stc_VIDEOSS_EXTDST4_CONTROLWORD_field {
  uint32_t                         u32CW_VAL:32;
} stc_VIDEOSS_EXTDST4_CONTROLWORD_field_t;

typedef union un_VIDEOSS_EXTDST4_CONTROLWORD {
  uint32_t                         u32Register;
  stc_VIDEOSS_EXTDST4_CONTROLWORD_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_EXTDST4_CONTROLWORD_t;

/**
  * \brief pixel count of currently running frame (VIDEOSS_EXTDST4_CURPIXELCNT)
  */
typedef struct stc_VIDEOSS_EXTDST4_CURPIXELCNT_field {
  uint32_t                         u16C_XVAL:16;
  uint32_t                         u16C_YVAL:16;
} stc_VIDEOSS_EXTDST4_CURPIXELCNT_field_t;

typedef union un_VIDEOSS_EXTDST4_CURPIXELCNT {
  uint32_t                         u32Register;
  stc_VIDEOSS_EXTDST4_CURPIXELCNT_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_EXTDST4_CURPIXELCNT_t;

/**
  * \brief pixel count between last two control words (VIDEOSS_EXTDST4_LASTPIXELCNT)
  */
typedef struct stc_VIDEOSS_EXTDST4_LASTPIXELCNT_field {
  uint32_t                         u16L_XVAL:16;
  uint32_t                         u16L_YVAL:16;
} stc_VIDEOSS_EXTDST4_LASTPIXELCNT_field_t;

typedef union un_VIDEOSS_EXTDST4_LASTPIXELCNT {
  uint32_t                         u32Register;
  stc_VIDEOSS_EXTDST4_LASTPIXELCNT_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_EXTDST4_LASTPIXELCNT_t;

/**
  * \brief Performance counter result (VIDEOSS_EXTDST4_PERFCOUNTER)
  */
typedef struct stc_VIDEOSS_EXTDST4_PERFCOUNTER_field {
  uint32_t                         u32PERFRESULT:32;
} stc_VIDEOSS_EXTDST4_PERFCOUNTER_field_t;

typedef union un_VIDEOSS_EXTDST4_PERFCOUNTER {
  uint32_t                         u32Register;
  stc_VIDEOSS_EXTDST4_PERFCOUNTER_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_EXTDST4_PERFCOUNTER_t;



/**
  * \brief ConstFrame unit static control register (VIDEOSS_CONSTFRAME1_STATICCONTROL)
  */
typedef struct stc_VIDEOSS_CONSTFRAME1_STATICCONTROL_field {
  uint32_t                         u1SHDEN:1;
  uint32_t                         :31;
} stc_VIDEOSS_CONSTFRAME1_STATICCONTROL_field_t;

typedef union un_VIDEOSS_CONSTFRAME1_STATICCONTROL {
  uint32_t                         u32Register;
  stc_VIDEOSS_CONSTFRAME1_STATICCONTROL_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_CONSTFRAME1_STATICCONTROL_t;

/**
  * \brief Output frame dimensions. (VIDEOSS_CONSTFRAME1_FRAMEDIMENSIONS)
  */
typedef struct stc_VIDEOSS_CONSTFRAME1_FRAMEDIMENSIONS_field {
  uint32_t                         u14FRAMEWIDTH:14;
  uint32_t                         :2;
  uint32_t                         u14FRAMEHEIGHT:14;
  uint32_t                         :1;
  uint32_t                         u1EMPTYFRAME:1;
} stc_VIDEOSS_CONSTFRAME1_FRAMEDIMENSIONS_field_t;

typedef union un_VIDEOSS_CONSTFRAME1_FRAMEDIMENSIONS {
  uint32_t                         u32Register;
  stc_VIDEOSS_CONSTFRAME1_FRAMEDIMENSIONS_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_CONSTFRAME1_FRAMEDIMENSIONS_t;

/**
  * \brief Color of output frame. (VIDEOSS_CONSTFRAME1_CONSTANTCOLOR)
  */
typedef struct stc_VIDEOSS_CONSTFRAME1_CONSTANTCOLOR_field {
  uint32_t                         u8CONSTANTALPHA:8;
  uint32_t                         u8CONSTANTBLUE:8;
  uint32_t                         u8CONSTANTGREEN:8;
  uint32_t                         u8CONSTANTRED:8;
} stc_VIDEOSS_CONSTFRAME1_CONSTANTCOLOR_field_t;

typedef union un_VIDEOSS_CONSTFRAME1_CONSTANTCOLOR {
  uint32_t                         u32Register;
  stc_VIDEOSS_CONSTFRAME1_CONSTANTCOLOR_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_CONSTFRAME1_CONSTANTCOLOR_t;

/**
  * \brief ConstFrame unit trigger register (VIDEOSS_CONSTFRAME1_CONTROLTRIGGER)
  */
typedef struct stc_VIDEOSS_CONSTFRAME1_CONTROLTRIGGER_field {
  uint32_t                         u1SHDTOKGEN:1;
  uint32_t                         :31;
} stc_VIDEOSS_CONSTFRAME1_CONTROLTRIGGER_field_t;

typedef union un_VIDEOSS_CONSTFRAME1_CONTROLTRIGGER {
  uint32_t                         u32Register;
  stc_VIDEOSS_CONSTFRAME1_CONTROLTRIGGER_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_CONSTFRAME1_CONTROLTRIGGER_t;

/**
  * \brief ConstFrame unit start register (VIDEOSS_CONSTFRAME1_START)
  */
typedef struct stc_VIDEOSS_CONSTFRAME1_START_field {
  uint32_t                         u1START:1;
  uint32_t                         :31;
} stc_VIDEOSS_CONSTFRAME1_START_field_t;

typedef union un_VIDEOSS_CONSTFRAME1_START {
  uint32_t                         u32Register;
  stc_VIDEOSS_CONSTFRAME1_START_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_CONSTFRAME1_START_t;



/**
  * \brief External Destination static control register (VIDEOSS_EXTDST1_STATICCONTROL)
  */
typedef struct stc_VIDEOSS_EXTDST1_STATICCONTROL_field {
  uint32_t                         u1SHDEN:1;
  uint32_t                         :7;
  uint32_t                         u1KICK_MODE:1;
  uint32_t                         :3;
  uint32_t                         u1PERFCOUNTMODE:1;
  uint32_t                         :19;
} stc_VIDEOSS_EXTDST1_STATICCONTROL_field_t;

typedef union un_VIDEOSS_EXTDST1_STATICCONTROL {
  uint32_t                         u32Register;
  stc_VIDEOSS_EXTDST1_STATICCONTROL_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_EXTDST1_STATICCONTROL_t;

/**
  * \brief External Destination shadowed control register (VIDEOSS_EXTDST1_CONTROL)
  */
typedef struct stc_VIDEOSS_EXTDST1_CONTROL_field {
  uint32_t                         u1GAMMAAPPLYENABLE:1;
  uint32_t                         :31;
} stc_VIDEOSS_EXTDST1_CONTROL_field_t;

typedef union un_VIDEOSS_EXTDST1_CONTROL {
  uint32_t                         u32Register;
  stc_VIDEOSS_EXTDST1_CONTROL_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_EXTDST1_CONTROL_t;

/**
  * \brief External Destination software kick (VIDEOSS_EXTDST1_SOFTWAREKICK)
  */
typedef struct stc_VIDEOSS_EXTDST1_SOFTWAREKICK_field {
  uint32_t                         u1KICK:1;
  uint32_t                         :31;
} stc_VIDEOSS_EXTDST1_SOFTWAREKICK_field_t;

typedef union un_VIDEOSS_EXTDST1_SOFTWAREKICK {
  uint32_t                         u32Register;
  stc_VIDEOSS_EXTDST1_SOFTWAREKICK_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_EXTDST1_SOFTWAREKICK_t;

/**
  * \brief External Destination Unit current status (VIDEOSS_EXTDST1_STATUS)
  */
typedef struct stc_VIDEOSS_EXTDST1_STATUS_field {
  uint32_t                         u1CNT_ERR_STS:1;
  uint32_t                         :31;
} stc_VIDEOSS_EXTDST1_STATUS_field_t;

typedef union un_VIDEOSS_EXTDST1_STATUS {
  uint32_t                         u32Register;
  stc_VIDEOSS_EXTDST1_STATUS_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_EXTDST1_STATUS_t;

/**
  * \brief Value of last received control word (VIDEOSS_EXTDST1_CONTROLWORD)
  */
typedef struct stc_VIDEOSS_EXTDST1_CONTROLWORD_field {
  uint32_t                         u32CW_VAL:32;
} stc_VIDEOSS_EXTDST1_CONTROLWORD_field_t;

typedef union un_VIDEOSS_EXTDST1_CONTROLWORD {
  uint32_t                         u32Register;
  stc_VIDEOSS_EXTDST1_CONTROLWORD_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_EXTDST1_CONTROLWORD_t;

/**
  * \brief pixel count of currently running frame (VIDEOSS_EXTDST1_CURPIXELCNT)
  */
typedef struct stc_VIDEOSS_EXTDST1_CURPIXELCNT_field {
  uint32_t                         u16C_XVAL:16;
  uint32_t                         u16C_YVAL:16;
} stc_VIDEOSS_EXTDST1_CURPIXELCNT_field_t;

typedef union un_VIDEOSS_EXTDST1_CURPIXELCNT {
  uint32_t                         u32Register;
  stc_VIDEOSS_EXTDST1_CURPIXELCNT_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_EXTDST1_CURPIXELCNT_t;

/**
  * \brief pixel count between last two control words (VIDEOSS_EXTDST1_LASTPIXELCNT)
  */
typedef struct stc_VIDEOSS_EXTDST1_LASTPIXELCNT_field {
  uint32_t                         u16L_XVAL:16;
  uint32_t                         u16L_YVAL:16;
} stc_VIDEOSS_EXTDST1_LASTPIXELCNT_field_t;

typedef union un_VIDEOSS_EXTDST1_LASTPIXELCNT {
  uint32_t                         u32Register;
  stc_VIDEOSS_EXTDST1_LASTPIXELCNT_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_EXTDST1_LASTPIXELCNT_t;

/**
  * \brief Performance counter result (VIDEOSS_EXTDST1_PERFCOUNTER)
  */
typedef struct stc_VIDEOSS_EXTDST1_PERFCOUNTER_field {
  uint32_t                         u32PERFRESULT:32;
} stc_VIDEOSS_EXTDST1_PERFCOUNTER_field_t;

typedef union un_VIDEOSS_EXTDST1_PERFCOUNTER {
  uint32_t                         u32Register;
  stc_VIDEOSS_EXTDST1_PERFCOUNTER_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_EXTDST1_PERFCOUNTER_t;



/**
  * \brief ConstFrame unit static control register (VIDEOSS_CONSTFRAME5_STATICCONTROL)
  */
typedef struct stc_VIDEOSS_CONSTFRAME5_STATICCONTROL_field {
  uint32_t                         u1SHDEN:1;
  uint32_t                         :31;
} stc_VIDEOSS_CONSTFRAME5_STATICCONTROL_field_t;

typedef union un_VIDEOSS_CONSTFRAME5_STATICCONTROL {
  uint32_t                         u32Register;
  stc_VIDEOSS_CONSTFRAME5_STATICCONTROL_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_CONSTFRAME5_STATICCONTROL_t;

/**
  * \brief Output frame dimensions. (VIDEOSS_CONSTFRAME5_FRAMEDIMENSIONS)
  */
typedef struct stc_VIDEOSS_CONSTFRAME5_FRAMEDIMENSIONS_field {
  uint32_t                         u14FRAMEWIDTH:14;
  uint32_t                         :2;
  uint32_t                         u14FRAMEHEIGHT:14;
  uint32_t                         :1;
  uint32_t                         u1EMPTYFRAME:1;
} stc_VIDEOSS_CONSTFRAME5_FRAMEDIMENSIONS_field_t;

typedef union un_VIDEOSS_CONSTFRAME5_FRAMEDIMENSIONS {
  uint32_t                         u32Register;
  stc_VIDEOSS_CONSTFRAME5_FRAMEDIMENSIONS_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_CONSTFRAME5_FRAMEDIMENSIONS_t;

/**
  * \brief Color of output frame. (VIDEOSS_CONSTFRAME5_CONSTANTCOLOR)
  */
typedef struct stc_VIDEOSS_CONSTFRAME5_CONSTANTCOLOR_field {
  uint32_t                         u8CONSTANTALPHA:8;
  uint32_t                         u8CONSTANTBLUE:8;
  uint32_t                         u8CONSTANTGREEN:8;
  uint32_t                         u8CONSTANTRED:8;
} stc_VIDEOSS_CONSTFRAME5_CONSTANTCOLOR_field_t;

typedef union un_VIDEOSS_CONSTFRAME5_CONSTANTCOLOR {
  uint32_t                         u32Register;
  stc_VIDEOSS_CONSTFRAME5_CONSTANTCOLOR_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_CONSTFRAME5_CONSTANTCOLOR_t;

/**
  * \brief ConstFrame unit trigger register (VIDEOSS_CONSTFRAME5_CONTROLTRIGGER)
  */
typedef struct stc_VIDEOSS_CONSTFRAME5_CONTROLTRIGGER_field {
  uint32_t                         u1SHDTOKGEN:1;
  uint32_t                         :31;
} stc_VIDEOSS_CONSTFRAME5_CONTROLTRIGGER_field_t;

typedef union un_VIDEOSS_CONSTFRAME5_CONTROLTRIGGER {
  uint32_t                         u32Register;
  stc_VIDEOSS_CONSTFRAME5_CONTROLTRIGGER_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_CONSTFRAME5_CONTROLTRIGGER_t;

/**
  * \brief ConstFrame unit start register (VIDEOSS_CONSTFRAME5_START)
  */
typedef struct stc_VIDEOSS_CONSTFRAME5_START_field {
  uint32_t                         u1START:1;
  uint32_t                         :31;
} stc_VIDEOSS_CONSTFRAME5_START_field_t;

typedef union un_VIDEOSS_CONSTFRAME5_START {
  uint32_t                         u32Register;
  stc_VIDEOSS_CONSTFRAME5_START_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_CONSTFRAME5_START_t;



/**
  * \brief External Destination static control register (VIDEOSS_EXTDST5_STATICCONTROL)
  */
typedef struct stc_VIDEOSS_EXTDST5_STATICCONTROL_field {
  uint32_t                         u1SHDEN:1;
  uint32_t                         :7;
  uint32_t                         u1KICK_MODE:1;
  uint32_t                         :3;
  uint32_t                         u1PERFCOUNTMODE:1;
  uint32_t                         :19;
} stc_VIDEOSS_EXTDST5_STATICCONTROL_field_t;

typedef union un_VIDEOSS_EXTDST5_STATICCONTROL {
  uint32_t                         u32Register;
  stc_VIDEOSS_EXTDST5_STATICCONTROL_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_EXTDST5_STATICCONTROL_t;

/**
  * \brief External Destination shadowed control register (VIDEOSS_EXTDST5_CONTROL)
  */
typedef struct stc_VIDEOSS_EXTDST5_CONTROL_field {
  uint32_t                         u1GAMMAAPPLYENABLE:1;
  uint32_t                         :31;
} stc_VIDEOSS_EXTDST5_CONTROL_field_t;

typedef union un_VIDEOSS_EXTDST5_CONTROL {
  uint32_t                         u32Register;
  stc_VIDEOSS_EXTDST5_CONTROL_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_EXTDST5_CONTROL_t;

/**
  * \brief External Destination software kick (VIDEOSS_EXTDST5_SOFTWAREKICK)
  */
typedef struct stc_VIDEOSS_EXTDST5_SOFTWAREKICK_field {
  uint32_t                         u1KICK:1;
  uint32_t                         :31;
} stc_VIDEOSS_EXTDST5_SOFTWAREKICK_field_t;

typedef union un_VIDEOSS_EXTDST5_SOFTWAREKICK {
  uint32_t                         u32Register;
  stc_VIDEOSS_EXTDST5_SOFTWAREKICK_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_EXTDST5_SOFTWAREKICK_t;

/**
  * \brief External Destination Unit current status (VIDEOSS_EXTDST5_STATUS)
  */
typedef struct stc_VIDEOSS_EXTDST5_STATUS_field {
  uint32_t                         u1CNT_ERR_STS:1;
  uint32_t                         :31;
} stc_VIDEOSS_EXTDST5_STATUS_field_t;

typedef union un_VIDEOSS_EXTDST5_STATUS {
  uint32_t                         u32Register;
  stc_VIDEOSS_EXTDST5_STATUS_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_EXTDST5_STATUS_t;

/**
  * \brief Value of last received control word (VIDEOSS_EXTDST5_CONTROLWORD)
  */
typedef struct stc_VIDEOSS_EXTDST5_CONTROLWORD_field {
  uint32_t                         u32CW_VAL:32;
} stc_VIDEOSS_EXTDST5_CONTROLWORD_field_t;

typedef union un_VIDEOSS_EXTDST5_CONTROLWORD {
  uint32_t                         u32Register;
  stc_VIDEOSS_EXTDST5_CONTROLWORD_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_EXTDST5_CONTROLWORD_t;

/**
  * \brief pixel count of currently running frame (VIDEOSS_EXTDST5_CURPIXELCNT)
  */
typedef struct stc_VIDEOSS_EXTDST5_CURPIXELCNT_field {
  uint32_t                         u16C_XVAL:16;
  uint32_t                         u16C_YVAL:16;
} stc_VIDEOSS_EXTDST5_CURPIXELCNT_field_t;

typedef union un_VIDEOSS_EXTDST5_CURPIXELCNT {
  uint32_t                         u32Register;
  stc_VIDEOSS_EXTDST5_CURPIXELCNT_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_EXTDST5_CURPIXELCNT_t;

/**
  * \brief pixel count between last two control words (VIDEOSS_EXTDST5_LASTPIXELCNT)
  */
typedef struct stc_VIDEOSS_EXTDST5_LASTPIXELCNT_field {
  uint32_t                         u16L_XVAL:16;
  uint32_t                         u16L_YVAL:16;
} stc_VIDEOSS_EXTDST5_LASTPIXELCNT_field_t;

typedef union un_VIDEOSS_EXTDST5_LASTPIXELCNT {
  uint32_t                         u32Register;
  stc_VIDEOSS_EXTDST5_LASTPIXELCNT_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_EXTDST5_LASTPIXELCNT_t;

/**
  * \brief Performance counter result (VIDEOSS_EXTDST5_PERFCOUNTER)
  */
typedef struct stc_VIDEOSS_EXTDST5_PERFCOUNTER_field {
  uint32_t                         u32PERFRESULT:32;
} stc_VIDEOSS_EXTDST5_PERFCOUNTER_field_t;

typedef union un_VIDEOSS_EXTDST5_PERFCOUNTER {
  uint32_t                         u32Register;
  stc_VIDEOSS_EXTDST5_PERFCOUNTER_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_EXTDST5_PERFCOUNTER_t;



/**
  * \brief ExtSrc static control register (VIDEOSS_EXTSRC4_STATICCONTROL)
  */
typedef struct stc_VIDEOSS_EXTSRC4_STATICCONTROL_field {
  uint32_t                         u1SHDEN:1;
  uint32_t                         :7;
  uint32_t                         u1STARTSEL:1;
  uint32_t                         :23;
} stc_VIDEOSS_EXTSRC4_STATICCONTROL_field_t;

typedef union un_VIDEOSS_EXTSRC4_STATICCONTROL {
  uint32_t                         u32Register;
  stc_VIDEOSS_EXTSRC4_STATICCONTROL_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_EXTSRC4_STATICCONTROL_t;

/**
  * \brief Clip window offset, to generate a clipping of the frame. It has to be within the input frame. (VIDEOSS_EXTSRC4_CLIPWINDOWOFFSET)
  */
typedef struct stc_VIDEOSS_EXTSRC4_CLIPWINDOWOFFSET_field {
  uint32_t                         u14CLIPWINDOWXOFFSET:14;
  uint32_t                         :2;
  uint32_t                         u14CLIPWINDOWYOFFSET:14;
  uint32_t                         :2;
} stc_VIDEOSS_EXTSRC4_CLIPWINDOWOFFSET_field_t;

typedef union un_VIDEOSS_EXTSRC4_CLIPWINDOWOFFSET {
  uint32_t                         u32Register;
  stc_VIDEOSS_EXTSRC4_CLIPWINDOWOFFSET_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_EXTSRC4_CLIPWINDOWOFFSET_t;

/**
  * \brief Define the clip window dimension. If the clip window feature is enabled this dimension is used for the new frame dimension. Note that the clip window has to be smaller or equal to the original frame dimensions. The new frame has to be within the active area of the original frame. (VIDEOSS_EXTSRC4_CLIPWINDOWDIMENSION)
  */
typedef struct stc_VIDEOSS_EXTSRC4_CLIPWINDOWDIMENSION_field {
  uint32_t                         u14CLIPWINDOWWIDTH:14;
  uint32_t                         :2;
  uint32_t                         u14CLIPWINDOWHEIGHT:14;
  uint32_t                         :2;
} stc_VIDEOSS_EXTSRC4_CLIPWINDOWDIMENSION_field_t;

typedef union un_VIDEOSS_EXTSRC4_CLIPWINDOWDIMENSION {
  uint32_t                         u32Register;
  stc_VIDEOSS_EXTSRC4_CLIPWINDOWDIMENSION_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_EXTSRC4_CLIPWINDOWDIMENSION_t;

/**
  * \brief Color component size of raw input data. Please note that the width must be equal or lower than the output width. (VIDEOSS_EXTSRC4_COLORCOMPONENTBITS)
  */
typedef struct stc_VIDEOSS_EXTSRC4_COLORCOMPONENTBITS_field {
  uint32_t                         u4COMPONENTBITSALPHA:4;
  uint32_t                         :4;
  uint32_t                         u4COMPONENTBITSBLUE:4;
  uint32_t                         :4;
  uint32_t                         u4COMPONENTBITSGREEN:4;
  uint32_t                         :4;
  uint32_t                         u4COMPONENTBITSRED:4;
  uint32_t                         :3;
  uint32_t                         u1ITUFORMAT:1;
} stc_VIDEOSS_EXTSRC4_COLORCOMPONENTBITS_field_t;

typedef union un_VIDEOSS_EXTSRC4_COLORCOMPONENTBITS {
  uint32_t                         u32Register;
  stc_VIDEOSS_EXTSRC4_COLORCOMPONENTBITS_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_EXTSRC4_COLORCOMPONENTBITS_t;

/**
  * \brief Color component offset of raw input data. (VIDEOSS_EXTSRC4_COLORCOMPONENTSHIFT)
  */
typedef struct stc_VIDEOSS_EXTSRC4_COLORCOMPONENTSHIFT_field {
  uint32_t                         u6COMPONENTSHIFTALPHA:6;
  uint32_t                         :2;
  uint32_t                         u6COMPONENTSHIFTBLUE:6;
  uint32_t                         :2;
  uint32_t                         u6COMPONENTSHIFTGREEN:6;
  uint32_t                         :2;
  uint32_t                         u6COMPONENTSHIFTRED:6;
  uint32_t                         :2;
} stc_VIDEOSS_EXTSRC4_COLORCOMPONENTSHIFT_field_t;

typedef union un_VIDEOSS_EXTSRC4_COLORCOMPONENTSHIFT {
  uint32_t                         u32Register;
  stc_VIDEOSS_EXTSRC4_COLORCOMPONENTSHIFT_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_EXTSRC4_COLORCOMPONENTSHIFT_t;

/**
  * \brief Constant color register (VIDEOSS_EXTSRC4_CONSTANTCOLOR)
  */
typedef struct stc_VIDEOSS_EXTSRC4_CONSTANTCOLOR_field {
  uint32_t                         u8CONSTANTALPHA:8;
  uint32_t                         u8CONSTANTBLUE:8;
  uint32_t                         u8CONSTANTGREEN:8;
  uint32_t                         u8CONSTANTRED:8;
} stc_VIDEOSS_EXTSRC4_CONSTANTCOLOR_field_t;

typedef union un_VIDEOSS_EXTSRC4_CONSTANTCOLOR {
  uint32_t                         u32Register;
  stc_VIDEOSS_EXTSRC4_CONSTANTCOLOR_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_EXTSRC4_CONSTANTCOLOR_t;

/**
  * \brief Common control settings. (VIDEOSS_EXTSRC4_CONTROL)
  */
typedef struct stc_VIDEOSS_EXTSRC4_CONTROL_field {
  uint32_t                         u1CLIPWINDOWENABLE:1;
  uint32_t                         :3;
  uint32_t                         u1RASTERMODE:1;
  uint32_t                         u1YUV422UPSAMPLINGMODE:1;
  uint32_t                         u2YUVCONVERSIONMODE:2;
  uint32_t                         u1RGBALPHASRCENABLE:1;
  uint32_t                         u1RGBALPHACONSTENABLE:1;
  uint32_t                         u1RGBALPHATRANSENABLE:1;
  uint32_t                         u1PREMULCONSTRGB:1;
  uint32_t                         u1ALPHASRCENABLE:1;
  uint32_t                         u1ALPHACONSTENABLE:1;
  uint32_t                         u1ALPHATRANSENABLE:1;
  uint32_t                         :1;
  uint32_t                         u1GAMMAREMOVEENABLE:1;
  uint32_t                         :15;
} stc_VIDEOSS_EXTSRC4_CONTROL_field_t;

typedef union un_VIDEOSS_EXTSRC4_CONTROL {
  uint32_t                         u32Register;
  stc_VIDEOSS_EXTSRC4_CONTROL_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_EXTSRC4_CONTROL_t;

/**
  * \brief ExtSrc unit trigger token generation (VIDEOSS_EXTSRC4_CONTROLTRIGGER)
  */
typedef struct stc_VIDEOSS_EXTSRC4_CONTROLTRIGGER_field {
  uint32_t                         u1SHDTOKGEN:1;
  uint32_t                         :31;
} stc_VIDEOSS_EXTSRC4_CONTROLTRIGGER_field_t;

typedef union un_VIDEOSS_EXTSRC4_CONTROLTRIGGER {
  uint32_t                         u32Register;
  stc_VIDEOSS_EXTSRC4_CONTROLTRIGGER_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_EXTSRC4_CONTROLTRIGGER_t;

/**
  * \brief ExtSrc unit start register (VIDEOSS_EXTSRC4_START)
  */
typedef struct stc_VIDEOSS_EXTSRC4_START_field {
  uint32_t                         u1START:1;
  uint32_t                         :31;
} stc_VIDEOSS_EXTSRC4_START_field_t;

typedef union un_VIDEOSS_EXTSRC4_START {
  uint32_t                         u32Register;
  stc_VIDEOSS_EXTSRC4_START_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_EXTSRC4_START_t;



/**
  * \brief Store unit static control register. (VIDEOSS_STORE4_STATICCONTROL)
  */
typedef struct stc_VIDEOSS_STORE4_STATICCONTROL_field {
  uint32_t                         u1SHDEN:1;
  uint32_t                         :3;
  uint32_t                         u1SINGLEFRAMEOPERATION:1;
  uint32_t                         :3;
  uint32_t                         u1BASEADDRESSAUTOUPDATE:1;
  uint32_t                         :23;
} stc_VIDEOSS_STORE4_STATICCONTROL_field_t;

typedef union un_VIDEOSS_STORE4_STATICCONTROL {
  uint32_t                         u32Register;
  stc_VIDEOSS_STORE4_STATICCONTROL_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_STORE4_STATICCONTROL_t;

/**
  * \brief Burst Buffer setup register. (VIDEOSS_STORE4_BURSTBUFFERMANAGEMENT)
  */
typedef struct stc_VIDEOSS_STORE4_BURSTBUFFERMANAGEMENT_field {
  uint32_t                         :8;
  uint32_t                         u5SETBURSTLENGTH:5;
  uint32_t                         :19;
} stc_VIDEOSS_STORE4_BURSTBUFFERMANAGEMENT_field_t;

typedef union un_VIDEOSS_STORE4_BURSTBUFFERMANAGEMENT {
  uint32_t                         u32Register;
  stc_VIDEOSS_STORE4_BURSTBUFFERMANAGEMENT_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_STORE4_BURSTBUFFERMANAGEMENT_t;

/**
  * \brief Ring buffer setup for destination. (VIDEOSS_STORE4_RINGBUFSTARTADDR)
  */
typedef struct stc_VIDEOSS_STORE4_RINGBUFSTARTADDR_field {
  uint32_t                         u32RINGBUFSTARTADDR:32;
} stc_VIDEOSS_STORE4_RINGBUFSTARTADDR_field_t;

typedef union un_VIDEOSS_STORE4_RINGBUFSTARTADDR {
  uint32_t                         u32Register;
  stc_VIDEOSS_STORE4_RINGBUFSTARTADDR_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_STORE4_RINGBUFSTARTADDR_t;

/**
  * \brief Ring buffer setup for destination. (VIDEOSS_STORE4_RINGBUFWRAPADDR)
  */
typedef struct stc_VIDEOSS_STORE4_RINGBUFWRAPADDR_field {
  uint32_t                         u32RINGBUFWRAPADDR:32;
} stc_VIDEOSS_STORE4_RINGBUFWRAPADDR_field_t;

typedef union un_VIDEOSS_STORE4_RINGBUFWRAPADDR {
  uint32_t                         u32Register;
  stc_VIDEOSS_STORE4_RINGBUFWRAPADDR_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_STORE4_RINGBUFWRAPADDR_t;

/**
  * \brief Destination buffer base address. (VIDEOSS_STORE4_BASEADDRESS)
  */
typedef struct stc_VIDEOSS_STORE4_BASEADDRESS_field {
  uint32_t                         u32BASEADDRESS:32;
} stc_VIDEOSS_STORE4_BASEADDRESS_field_t;

typedef union un_VIDEOSS_STORE4_BASEADDRESS {
  uint32_t                         u32Register;
  stc_VIDEOSS_STORE4_BASEADDRESS_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_STORE4_BASEADDRESS_t;

/**
  * \brief Destination buffer attributes. (VIDEOSS_STORE4_DESTINATIONBUFFERATTRIBUTES)
  */
typedef struct stc_VIDEOSS_STORE4_DESTINATIONBUFFERATTRIBUTES_field {
  uint32_t                         u17STRIDE:17;
  uint32_t                         :7;
  uint32_t                         u7BITSPERPIXEL:7;
} stc_VIDEOSS_STORE4_DESTINATIONBUFFERATTRIBUTES_field_t;

typedef union un_VIDEOSS_STORE4_DESTINATIONBUFFERATTRIBUTES {
  uint32_t                         u32Register;
  stc_VIDEOSS_STORE4_DESTINATIONBUFFERATTRIBUTES_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_STORE4_DESTINATIONBUFFERATTRIBUTES_t;

/**
  * \brief Destination buffer dimension. (VIDEOSS_STORE4_DESTINATIONBUFFERDIMENSION)
  */
typedef struct stc_VIDEOSS_STORE4_DESTINATIONBUFFERDIMENSION_field {
  uint32_t                         u14LINEWIDTH:14;
  uint32_t                         :2;
  uint32_t                         u14LINECOUNT:14;
  uint32_t                         :2;
} stc_VIDEOSS_STORE4_DESTINATIONBUFFERDIMENSION_field_t;

typedef union un_VIDEOSS_STORE4_DESTINATIONBUFFERDIMENSION {
  uint32_t                         u32Register;
  stc_VIDEOSS_STORE4_DESTINATIONBUFFERDIMENSION_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_STORE4_DESTINATIONBUFFERDIMENSION_t;

/**
  * \brief Offset between destination frame and buffer. (VIDEOSS_STORE4_FRAMEOFFSET)
  */
typedef struct stc_VIDEOSS_STORE4_FRAMEOFFSET_field {
  uint32_t                         u15FRAMEXOFFSET:15;
  uint32_t                         :1;
  uint32_t                         u15FRAMEYOFFSET:15;
} stc_VIDEOSS_STORE4_FRAMEOFFSET_field_t;

typedef union un_VIDEOSS_STORE4_FRAMEOFFSET {
  uint32_t                         u32Register;
  stc_VIDEOSS_STORE4_FRAMEOFFSET_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_STORE4_FRAMEOFFSET_t;

/**
  * \brief Color component size of destination buffer (VIDEOSS_STORE4_COLORCOMPONENTBITS)
  */
typedef struct stc_VIDEOSS_STORE4_COLORCOMPONENTBITS_field {
  uint32_t                         u4COMPONENTBITSALPHA:4;
  uint32_t                         :4;
  uint32_t                         u4COMPONENTBITSBLUE:4;
  uint32_t                         :4;
  uint32_t                         u4COMPONENTBITSGREEN:4;
  uint32_t                         :4;
  uint32_t                         u4COMPONENTBITSRED:4;
  uint32_t                         :4;
} stc_VIDEOSS_STORE4_COLORCOMPONENTBITS_field_t;

typedef union un_VIDEOSS_STORE4_COLORCOMPONENTBITS {
  uint32_t                         u32Register;
  stc_VIDEOSS_STORE4_COLORCOMPONENTBITS_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_STORE4_COLORCOMPONENTBITS_t;

/**
  * \brief Color component offset of destination buffer. (VIDEOSS_STORE4_COLORCOMPONENTSHIFT)
  */
typedef struct stc_VIDEOSS_STORE4_COLORCOMPONENTSHIFT_field {
  uint32_t                         u5COMPONENTSHIFTALPHA:5;
  uint32_t                         :3;
  uint32_t                         u5COMPONENTSHIFTBLUE:5;
  uint32_t                         :3;
  uint32_t                         u5COMPONENTSHIFTGREEN:5;
  uint32_t                         :3;
  uint32_t                         u5COMPONENTSHIFTRED:5;
  uint32_t                         :3;
} stc_VIDEOSS_STORE4_COLORCOMPONENTSHIFT_field_t;

typedef union un_VIDEOSS_STORE4_COLORCOMPONENTSHIFT {
  uint32_t                         u32Register;
  stc_VIDEOSS_STORE4_COLORCOMPONENTSHIFT_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_STORE4_COLORCOMPONENTSHIFT_t;

/**
  * \brief Store unit dynamic control register (VIDEOSS_STORE4_CONTROL)
  */
typedef struct stc_VIDEOSS_STORE4_CONTROL_field {
  uint32_t                         u1COLORDITHERENABLE:1;
  uint32_t                         u1ALPHADITHERENABLE:1;
  uint32_t                         :2;
  uint32_t                         u4DITHEROFFSET:4;
  uint32_t                         :4;
  uint32_t                         u1GAMMAAPPLYENABLE:1;
  uint32_t                         :3;
  uint32_t                         u2YUVCONVERSIONMODE:2;
  uint32_t                         u2RASTERMODE:2;
  uint32_t                         u2YUV422DOWNSAMPLINGMODE:2;
  uint32_t                         :10;
} stc_VIDEOSS_STORE4_CONTROL_field_t;

typedef union un_VIDEOSS_STORE4_CONTROL {
  uint32_t                         u32Register;
  stc_VIDEOSS_STORE4_CONTROL_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_STORE4_CONTROL_t;

/**
  * \brief Control options for RLAD compression. (VIDEOSS_STORE4_ENCODECONTROL)
  */
typedef struct stc_VIDEOSS_STORE4_ENCODECONTROL_field {
  uint32_t                         u1COMPRESSIONMODE:1;
  uint32_t                         :15;
  uint32_t                         u4RLADCOMPBITSRED:4;
  uint32_t                         u4RLADCOMPBITSGREEN:4;
  uint32_t                         u4RLADCOMPBITSBLUE:4;
  uint32_t                         u4RLADCOMPBITSALPHA:4;
} stc_VIDEOSS_STORE4_ENCODECONTROL_field_t;

typedef union un_VIDEOSS_STORE4_ENCODECONTROL {
  uint32_t                         u32Register;
  stc_VIDEOSS_STORE4_ENCODECONTROL_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_STORE4_ENCODECONTROL_t;

/**
  * \brief Destination buffer length for compressed data. (VIDEOSS_STORE4_DESTINATIONBUFFERLENGTH)
  */
typedef struct stc_VIDEOSS_STORE4_DESTINATIONBUFFERLENGTH_field {
  uint32_t                         u29RLEWORDSMAX:29;
  uint32_t                         :3;
} stc_VIDEOSS_STORE4_DESTINATIONBUFFERLENGTH_field_t;

typedef union un_VIDEOSS_STORE4_DESTINATIONBUFFERLENGTH {
  uint32_t                         u32Register;
  stc_VIDEOSS_STORE4_DESTINATIONBUFFERLENGTH_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_STORE4_DESTINATIONBUFFERLENGTH_t;

/**
  * \brief Store unit start register (VIDEOSS_STORE4_START)
  */
typedef struct stc_VIDEOSS_STORE4_START_field {
  uint32_t                         u1START:1;
  uint32_t                         :31;
} stc_VIDEOSS_STORE4_START_field_t;

typedef union un_VIDEOSS_STORE4_START {
  uint32_t                         u32Register;
  stc_VIDEOSS_STORE4_START_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_STORE4_START_t;

/**
  * \brief Status information of the RLAD encoder. (VIDEOSS_STORE4_ENCODERSTATUS)
  */
typedef struct stc_VIDEOSS_STORE4_ENCODERSTATUS_field {
  uint32_t                         u29RLEWORDS:29;
  uint32_t                         :2;
  uint32_t                         u1BUFFERTOOSMALL:1;
} stc_VIDEOSS_STORE4_ENCODERSTATUS_field_t;

typedef union un_VIDEOSS_STORE4_ENCODERSTATUS {
  uint32_t                         u32Register;
  stc_VIDEOSS_STORE4_ENCODERSTATUS_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_STORE4_ENCODERSTATUS_t;

/**
  * \brief Ring buffer synchronization. (VIDEOSS_STORE4_WRITEADDRESS)
  */
typedef struct stc_VIDEOSS_STORE4_WRITEADDRESS_field {
  uint32_t                         u32WRITEADDRESS:32;
} stc_VIDEOSS_STORE4_WRITEADDRESS_field_t;

typedef union un_VIDEOSS_STORE4_WRITEADDRESS {
  uint32_t                         u32Register;
  stc_VIDEOSS_STORE4_WRITEADDRESS_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_STORE4_WRITEADDRESS_t;

/**
  * \brief Ring buffer synchronization. (VIDEOSS_STORE4_FRAMEPROPERTIES)
  */
typedef struct stc_VIDEOSS_STORE4_FRAMEPROPERTIES_field {
  uint32_t                         u1FIELDID:1;
  uint32_t                         :31;
} stc_VIDEOSS_STORE4_FRAMEPROPERTIES_field_t;

typedef union un_VIDEOSS_STORE4_FRAMEPROPERTIES {
  uint32_t                         u32Register;
  stc_VIDEOSS_STORE4_FRAMEPROPERTIES_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_STORE4_FRAMEPROPERTIES_t;

/**
  * \brief Burst Buffer Property register (VIDEOSS_STORE4_BURSTBUFFERPROPERTIES)
  */
typedef struct stc_VIDEOSS_STORE4_BURSTBUFFERPROPERTIES_field {
  uint32_t                         :8;
  uint32_t                         u5MAXBURSTLENGTH:5;
  uint32_t                         :19;
} stc_VIDEOSS_STORE4_BURSTBUFFERPROPERTIES_field_t;

typedef union un_VIDEOSS_STORE4_BURSTBUFFERPROPERTIES {
  uint32_t                         u32Register;
  stc_VIDEOSS_STORE4_BURSTBUFFERPROPERTIES_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_STORE4_BURSTBUFFERPROPERTIES_t;

/**
  * \brief Shows the last control word received (VIDEOSS_STORE4_LASTCONTROLWORD)
  */
typedef struct stc_VIDEOSS_STORE4_LASTCONTROLWORD_field {
  uint32_t                         u32L_VAL:32;
} stc_VIDEOSS_STORE4_LASTCONTROLWORD_field_t;

typedef union un_VIDEOSS_STORE4_LASTCONTROLWORD {
  uint32_t                         u32Register;
  stc_VIDEOSS_STORE4_LASTCONTROLWORD_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_STORE4_LASTCONTROLWORD_t;

/**
  * \brief Performance counter result (VIDEOSS_STORE4_PERFCOUNTER)
  */
typedef struct stc_VIDEOSS_STORE4_PERFCOUNTER_field {
  uint32_t                         u32PERFRESULT:32;
} stc_VIDEOSS_STORE4_PERFCOUNTER_field_t;

typedef union un_VIDEOSS_STORE4_PERFCOUNTER {
  uint32_t                         u32Register;
  stc_VIDEOSS_STORE4_PERFCOUNTER_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_STORE4_PERFCOUNTER_t;



/**
  * \brief Common static control options. (VIDEOSS_FETCHLAYER0_STATICCONTROL)
  */
typedef struct stc_VIDEOSS_FETCHLAYER0_STATICCONTROL_field {
  uint32_t                         u1SHDEN:1;
  uint32_t                         u1LBHSHDEN:1;
  uint32_t                         :14;
  uint32_t                         u8BASEADDRESSAUTOUPDATE:8;
  uint32_t                         u8SHDLDREQSTICKY:8;
} stc_VIDEOSS_FETCHLAYER0_STATICCONTROL_field_t;

typedef union un_VIDEOSS_FETCHLAYER0_STATICCONTROL {
  uint32_t                         u32Register;
  stc_VIDEOSS_FETCHLAYER0_STATICCONTROL_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_FETCHLAYER0_STATICCONTROL_t;

/**
  * \brief AXI interface buffer management register (VIDEOSS_FETCHLAYER0_BURSTBUFFERMANAGEMENT)
  */
typedef struct stc_VIDEOSS_FETCHLAYER0_BURSTBUFFERMANAGEMENT_field {
  uint32_t                         u8SETNUMBUFFERS:8;
  uint32_t                         u5SETBURSTLENGTH:5;
  uint32_t                         :18;
  uint32_t                         u1LINEMODE:1;
} stc_VIDEOSS_FETCHLAYER0_BURSTBUFFERMANAGEMENT_field_t;

typedef union un_VIDEOSS_FETCHLAYER0_BURSTBUFFERMANAGEMENT {
  uint32_t                         u32Register;
  stc_VIDEOSS_FETCHLAYER0_BURSTBUFFERMANAGEMENT_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_FETCHLAYER0_BURSTBUFFERMANAGEMENT_t;

/**
  * \brief Source buffer base address of layer 0. (VIDEOSS_FETCHLAYER0_BASEADDRESS0)
  */
typedef struct stc_VIDEOSS_FETCHLAYER0_BASEADDRESS0_field {
  uint32_t                         u32BASEADDRESS0:32;
} stc_VIDEOSS_FETCHLAYER0_BASEADDRESS0_field_t;

typedef union un_VIDEOSS_FETCHLAYER0_BASEADDRESS0 {
  uint32_t                         u32Register;
  stc_VIDEOSS_FETCHLAYER0_BASEADDRESS0_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_FETCHLAYER0_BASEADDRESS0_t;

/**
  * \brief Source buffer attributes for layer 0. (VIDEOSS_FETCHLAYER0_SOURCEBUFFERATTRIBUTES0)
  */
typedef struct stc_VIDEOSS_FETCHLAYER0_SOURCEBUFFERATTRIBUTES0_field {
  uint32_t                         u16STRIDE0:16;
  uint32_t                         u6BITSPERPIXEL0:6;
  uint32_t                         :10;
} stc_VIDEOSS_FETCHLAYER0_SOURCEBUFFERATTRIBUTES0_field_t;

typedef union un_VIDEOSS_FETCHLAYER0_SOURCEBUFFERATTRIBUTES0 {
  uint32_t                         u32Register;
  stc_VIDEOSS_FETCHLAYER0_SOURCEBUFFERATTRIBUTES0_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_FETCHLAYER0_SOURCEBUFFERATTRIBUTES0_t;

/**
  * \brief Source buffer dimension of layer 0. (VIDEOSS_FETCHLAYER0_SOURCEBUFFERDIMENSION0)
  */
typedef struct stc_VIDEOSS_FETCHLAYER0_SOURCEBUFFERDIMENSION0_field {
  uint32_t                         u14LINEWIDTH0:14;
  uint32_t                         :2;
  uint32_t                         u14LINECOUNT0:14;
  uint32_t                         :2;
} stc_VIDEOSS_FETCHLAYER0_SOURCEBUFFERDIMENSION0_field_t;

typedef union un_VIDEOSS_FETCHLAYER0_SOURCEBUFFERDIMENSION0 {
  uint32_t                         u32Register;
  stc_VIDEOSS_FETCHLAYER0_SOURCEBUFFERDIMENSION0_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_FETCHLAYER0_SOURCEBUFFERDIMENSION0_t;

/**
  * \brief Size of color components for RGB, YUV and index formats (layer 0). (VIDEOSS_FETCHLAYER0_COLORCOMPONENTBITS0)
  */
typedef struct stc_VIDEOSS_FETCHLAYER0_COLORCOMPONENTBITS0_field {
  uint32_t                         u4COMPONENTBITSALPHA0:4;
  uint32_t                         :4;
  uint32_t                         u4COMPONENTBITSBLUE0:4;
  uint32_t                         :4;
  uint32_t                         u4COMPONENTBITSGREEN0:4;
  uint32_t                         :4;
  uint32_t                         u4COMPONENTBITSRED0:4;
  uint32_t                         :3;
  uint32_t                         u1ITUFORMAT0:1;
} stc_VIDEOSS_FETCHLAYER0_COLORCOMPONENTBITS0_field_t;

typedef union un_VIDEOSS_FETCHLAYER0_COLORCOMPONENTBITS0 {
  uint32_t                         u32Register;
  stc_VIDEOSS_FETCHLAYER0_COLORCOMPONENTBITS0_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_FETCHLAYER0_COLORCOMPONENTBITS0_t;

/**
  * \brief Bit position of color components for RGB, YUV and index formats (layer 0). (VIDEOSS_FETCHLAYER0_COLORCOMPONENTSHIFT0)
  */
typedef struct stc_VIDEOSS_FETCHLAYER0_COLORCOMPONENTSHIFT0_field {
  uint32_t                         u5COMPONENTSHIFTALPHA0:5;
  uint32_t                         :3;
  uint32_t                         u5COMPONENTSHIFTBLUE0:5;
  uint32_t                         :3;
  uint32_t                         u5COMPONENTSHIFTGREEN0:5;
  uint32_t                         :3;
  uint32_t                         u5COMPONENTSHIFTRED0:5;
  uint32_t                         :3;
} stc_VIDEOSS_FETCHLAYER0_COLORCOMPONENTSHIFT0_field_t;

typedef union un_VIDEOSS_FETCHLAYER0_COLORCOMPONENTSHIFT0 {
  uint32_t                         u32Register;
  stc_VIDEOSS_FETCHLAYER0_COLORCOMPONENTSHIFT0_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_FETCHLAYER0_COLORCOMPONENTSHIFT0_t;

/**
  * \brief Position of layer 0 within the destination frame. (VIDEOSS_FETCHLAYER0_LAYEROFFSET0)
  */
typedef struct stc_VIDEOSS_FETCHLAYER0_LAYEROFFSET0_field {
  uint32_t                         u15LAYERXOFFSET0:15;
  uint32_t                         :1;
  uint32_t                         u15LAYERYOFFSET0:15;
} stc_VIDEOSS_FETCHLAYER0_LAYEROFFSET0_field_t;

typedef union un_VIDEOSS_FETCHLAYER0_LAYEROFFSET0 {
  uint32_t                         u32Register;
  stc_VIDEOSS_FETCHLAYER0_LAYEROFFSET0_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_FETCHLAYER0_LAYEROFFSET0_t;

/**
  * \brief Clip window position for layer 0. (VIDEOSS_FETCHLAYER0_CLIPWINDOWOFFSET0)
  */
typedef struct stc_VIDEOSS_FETCHLAYER0_CLIPWINDOWOFFSET0_field {
  uint32_t                         u15CLIPWINDOWXOFFSET0:15;
  uint32_t                         :1;
  uint32_t                         u15CLIPWINDOWYOFFSET0:15;
} stc_VIDEOSS_FETCHLAYER0_CLIPWINDOWOFFSET0_field_t;

typedef union un_VIDEOSS_FETCHLAYER0_CLIPWINDOWOFFSET0 {
  uint32_t                         u32Register;
  stc_VIDEOSS_FETCHLAYER0_CLIPWINDOWOFFSET0_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_FETCHLAYER0_CLIPWINDOWOFFSET0_t;

/**
  * \brief Clip window size for layer 0. (VIDEOSS_FETCHLAYER0_CLIPWINDOWDIMENSIONS0)
  */
typedef struct stc_VIDEOSS_FETCHLAYER0_CLIPWINDOWDIMENSIONS0_field {
  uint32_t                         u14CLIPWINDOWWIDTH0:14;
  uint32_t                         :2;
  uint32_t                         u14CLIPWINDOWHEIGHT0:14;
  uint32_t                         :2;
} stc_VIDEOSS_FETCHLAYER0_CLIPWINDOWDIMENSIONS0_field_t;

typedef union un_VIDEOSS_FETCHLAYER0_CLIPWINDOWDIMENSIONS0 {
  uint32_t                         u32Register;
  stc_VIDEOSS_FETCHLAYER0_CLIPWINDOWDIMENSIONS0_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_FETCHLAYER0_CLIPWINDOWDIMENSIONS0_t;

/**
  * \brief Constant color for layer 0. (VIDEOSS_FETCHLAYER0_CONSTANTCOLOR0)
  */
typedef struct stc_VIDEOSS_FETCHLAYER0_CONSTANTCOLOR0_field {
  uint32_t                         u8CONSTANTALPHA0:8;
  uint32_t                         u8CONSTANTBLUE0:8;
  uint32_t                         u8CONSTANTGREEN0:8;
  uint32_t                         u8CONSTANTRED0:8;
} stc_VIDEOSS_FETCHLAYER0_CONSTANTCOLOR0_field_t;

typedef union un_VIDEOSS_FETCHLAYER0_CONSTANTCOLOR0 {
  uint32_t                         u32Register;
  stc_VIDEOSS_FETCHLAYER0_CONSTANTCOLOR0_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_FETCHLAYER0_CONSTANTCOLOR0_t;

/**
  * \brief Common properties of layer 0. (VIDEOSS_FETCHLAYER0_LAYERPROPERTY0)
  */
typedef struct stc_VIDEOSS_FETCHLAYER0_LAYERPROPERTY0_field {
  uint32_t                         u1PALETTEENABLE0:1;
  uint32_t                         u2TILEMODE0:2;
  uint32_t                         u1ALPHASRCENABLE0:1;
  uint32_t                         u1ALPHACONSTENABLE0:1;
  uint32_t                         :1;
  uint32_t                         u1ALPHATRANSENABLE0:1;
  uint32_t                         u1RGBALPHASRCENABLE0:1;
  uint32_t                         u1RGBALPHACONSTENABLE0:1;
  uint32_t                         :1;
  uint32_t                         u1RGBALPHATRANSENABLE0:1;
  uint32_t                         u1PREMULCONSTRGB0:1;
  uint32_t                         u2YUVCONVERSIONMODE0:2;
  uint32_t                         u1GAMMAREMOVEENABLE0:1;
  uint32_t                         :1;
  uint32_t                         u11PALETTEOFFSET0:11;
  uint32_t                         u3PALETTEIDWIDTH0:3;
  uint32_t                         u1CLIPWINDOWENABLE0:1;
  uint32_t                         u1SOURCEBUFFERENABLE0:1;
} stc_VIDEOSS_FETCHLAYER0_LAYERPROPERTY0_field_t;

typedef union un_VIDEOSS_FETCHLAYER0_LAYERPROPERTY0 {
  uint32_t                         u32Register;
  stc_VIDEOSS_FETCHLAYER0_LAYERPROPERTY0_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_FETCHLAYER0_LAYERPROPERTY0_t;

/**
  * \brief Source buffer base address of layer 1. (VIDEOSS_FETCHLAYER0_BASEADDRESS1)
  */
typedef struct stc_VIDEOSS_FETCHLAYER0_BASEADDRESS1_field {
  uint32_t                         u32BASEADDRESS1:32;
} stc_VIDEOSS_FETCHLAYER0_BASEADDRESS1_field_t;

typedef union un_VIDEOSS_FETCHLAYER0_BASEADDRESS1 {
  uint32_t                         u32Register;
  stc_VIDEOSS_FETCHLAYER0_BASEADDRESS1_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_FETCHLAYER0_BASEADDRESS1_t;

/**
  * \brief Source buffer attributes for layer 1. (VIDEOSS_FETCHLAYER0_SOURCEBUFFERATTRIBUTES1)
  */
typedef struct stc_VIDEOSS_FETCHLAYER0_SOURCEBUFFERATTRIBUTES1_field {
  uint32_t                         u16STRIDE1:16;
  uint32_t                         u6BITSPERPIXEL1:6;
  uint32_t                         :10;
} stc_VIDEOSS_FETCHLAYER0_SOURCEBUFFERATTRIBUTES1_field_t;

typedef union un_VIDEOSS_FETCHLAYER0_SOURCEBUFFERATTRIBUTES1 {
  uint32_t                         u32Register;
  stc_VIDEOSS_FETCHLAYER0_SOURCEBUFFERATTRIBUTES1_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_FETCHLAYER0_SOURCEBUFFERATTRIBUTES1_t;

/**
  * \brief Source buffer dimensions of layer 1, (VIDEOSS_FETCHLAYER0_SOURCEBUFFERDIMENSION1)
  */
typedef struct stc_VIDEOSS_FETCHLAYER0_SOURCEBUFFERDIMENSION1_field {
  uint32_t                         u14LINEWIDTH1:14;
  uint32_t                         :2;
  uint32_t                         u14LINECOUNT1:14;
  uint32_t                         :2;
} stc_VIDEOSS_FETCHLAYER0_SOURCEBUFFERDIMENSION1_field_t;

typedef union un_VIDEOSS_FETCHLAYER0_SOURCEBUFFERDIMENSION1 {
  uint32_t                         u32Register;
  stc_VIDEOSS_FETCHLAYER0_SOURCEBUFFERDIMENSION1_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_FETCHLAYER0_SOURCEBUFFERDIMENSION1_t;

/**
  * \brief Size of color components for RGB, YUV and index formats (layer 1). (VIDEOSS_FETCHLAYER0_COLORCOMPONENTBITS1)
  */
typedef struct stc_VIDEOSS_FETCHLAYER0_COLORCOMPONENTBITS1_field {
  uint32_t                         u4COMPONENTBITSALPHA1:4;
  uint32_t                         :4;
  uint32_t                         u4COMPONENTBITSBLUE1:4;
  uint32_t                         :4;
  uint32_t                         u4COMPONENTBITSGREEN1:4;
  uint32_t                         :4;
  uint32_t                         u4COMPONENTBITSRED1:4;
  uint32_t                         :3;
  uint32_t                         u1ITUFORMAT1:1;
} stc_VIDEOSS_FETCHLAYER0_COLORCOMPONENTBITS1_field_t;

typedef union un_VIDEOSS_FETCHLAYER0_COLORCOMPONENTBITS1 {
  uint32_t                         u32Register;
  stc_VIDEOSS_FETCHLAYER0_COLORCOMPONENTBITS1_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_FETCHLAYER0_COLORCOMPONENTBITS1_t;

/**
  * \brief Bit position of color components for RGB, YUV and index formats (layer 1). (VIDEOSS_FETCHLAYER0_COLORCOMPONENTSHIFT1)
  */
typedef struct stc_VIDEOSS_FETCHLAYER0_COLORCOMPONENTSHIFT1_field {
  uint32_t                         u5COMPONENTSHIFTALPHA1:5;
  uint32_t                         :3;
  uint32_t                         u5COMPONENTSHIFTBLUE1:5;
  uint32_t                         :3;
  uint32_t                         u5COMPONENTSHIFTGREEN1:5;
  uint32_t                         :3;
  uint32_t                         u5COMPONENTSHIFTRED1:5;
  uint32_t                         :3;
} stc_VIDEOSS_FETCHLAYER0_COLORCOMPONENTSHIFT1_field_t;

typedef union un_VIDEOSS_FETCHLAYER0_COLORCOMPONENTSHIFT1 {
  uint32_t                         u32Register;
  stc_VIDEOSS_FETCHLAYER0_COLORCOMPONENTSHIFT1_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_FETCHLAYER0_COLORCOMPONENTSHIFT1_t;

/**
  * \brief Position of layer 1 within the destination frame. (VIDEOSS_FETCHLAYER0_LAYEROFFSET1)
  */
typedef struct stc_VIDEOSS_FETCHLAYER0_LAYEROFFSET1_field {
  uint32_t                         u15LAYERXOFFSET1:15;
  uint32_t                         :1;
  uint32_t                         u15LAYERYOFFSET1:15;
} stc_VIDEOSS_FETCHLAYER0_LAYEROFFSET1_field_t;

typedef union un_VIDEOSS_FETCHLAYER0_LAYEROFFSET1 {
  uint32_t                         u32Register;
  stc_VIDEOSS_FETCHLAYER0_LAYEROFFSET1_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_FETCHLAYER0_LAYEROFFSET1_t;

/**
  * \brief Clip window position for layer 1. (VIDEOSS_FETCHLAYER0_CLIPWINDOWOFFSET1)
  */
typedef struct stc_VIDEOSS_FETCHLAYER0_CLIPWINDOWOFFSET1_field {
  uint32_t                         u15CLIPWINDOWXOFFSET1:15;
  uint32_t                         :1;
  uint32_t                         u15CLIPWINDOWYOFFSET1:15;
} stc_VIDEOSS_FETCHLAYER0_CLIPWINDOWOFFSET1_field_t;

typedef union un_VIDEOSS_FETCHLAYER0_CLIPWINDOWOFFSET1 {
  uint32_t                         u32Register;
  stc_VIDEOSS_FETCHLAYER0_CLIPWINDOWOFFSET1_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_FETCHLAYER0_CLIPWINDOWOFFSET1_t;

/**
  * \brief Clip window size for layer 1. (VIDEOSS_FETCHLAYER0_CLIPWINDOWDIMENSIONS1)
  */
typedef struct stc_VIDEOSS_FETCHLAYER0_CLIPWINDOWDIMENSIONS1_field {
  uint32_t                         u14CLIPWINDOWWIDTH1:14;
  uint32_t                         :2;
  uint32_t                         u14CLIPWINDOWHEIGHT1:14;
  uint32_t                         :2;
} stc_VIDEOSS_FETCHLAYER0_CLIPWINDOWDIMENSIONS1_field_t;

typedef union un_VIDEOSS_FETCHLAYER0_CLIPWINDOWDIMENSIONS1 {
  uint32_t                         u32Register;
  stc_VIDEOSS_FETCHLAYER0_CLIPWINDOWDIMENSIONS1_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_FETCHLAYER0_CLIPWINDOWDIMENSIONS1_t;

/**
  * \brief Constant color for layer 1. (VIDEOSS_FETCHLAYER0_CONSTANTCOLOR1)
  */
typedef struct stc_VIDEOSS_FETCHLAYER0_CONSTANTCOLOR1_field {
  uint32_t                         u8CONSTANTALPHA1:8;
  uint32_t                         u8CONSTANTBLUE1:8;
  uint32_t                         u8CONSTANTGREEN1:8;
  uint32_t                         u8CONSTANTRED1:8;
} stc_VIDEOSS_FETCHLAYER0_CONSTANTCOLOR1_field_t;

typedef union un_VIDEOSS_FETCHLAYER0_CONSTANTCOLOR1 {
  uint32_t                         u32Register;
  stc_VIDEOSS_FETCHLAYER0_CONSTANTCOLOR1_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_FETCHLAYER0_CONSTANTCOLOR1_t;

/**
  * \brief Common properties of layer 1. (VIDEOSS_FETCHLAYER0_LAYERPROPERTY1)
  */
typedef struct stc_VIDEOSS_FETCHLAYER0_LAYERPROPERTY1_field {
  uint32_t                         u1PALETTEENABLE1:1;
  uint32_t                         u2TILEMODE1:2;
  uint32_t                         u1ALPHASRCENABLE1:1;
  uint32_t                         u1ALPHACONSTENABLE1:1;
  uint32_t                         :1;
  uint32_t                         u1ALPHATRANSENABLE1:1;
  uint32_t                         u1RGBALPHASRCENABLE1:1;
  uint32_t                         u1RGBALPHACONSTENABLE1:1;
  uint32_t                         :1;
  uint32_t                         u1RGBALPHATRANSENABLE1:1;
  uint32_t                         u1PREMULCONSTRGB1:1;
  uint32_t                         u2YUVCONVERSIONMODE1:2;
  uint32_t                         u1GAMMAREMOVEENABLE1:1;
  uint32_t                         :1;
  uint32_t                         u11PALETTEOFFSET1:11;
  uint32_t                         u3PALETTEIDWIDTH1:3;
  uint32_t                         u1CLIPWINDOWENABLE1:1;
  uint32_t                         u1SOURCEBUFFERENABLE1:1;
} stc_VIDEOSS_FETCHLAYER0_LAYERPROPERTY1_field_t;

typedef union un_VIDEOSS_FETCHLAYER0_LAYERPROPERTY1 {
  uint32_t                         u32Register;
  stc_VIDEOSS_FETCHLAYER0_LAYERPROPERTY1_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_FETCHLAYER0_LAYERPROPERTY1_t;

/**
  * \brief Source buffer base address of layer 2. (VIDEOSS_FETCHLAYER0_BASEADDRESS2)
  */
typedef struct stc_VIDEOSS_FETCHLAYER0_BASEADDRESS2_field {
  uint32_t                         u32BASEADDRESS2:32;
} stc_VIDEOSS_FETCHLAYER0_BASEADDRESS2_field_t;

typedef union un_VIDEOSS_FETCHLAYER0_BASEADDRESS2 {
  uint32_t                         u32Register;
  stc_VIDEOSS_FETCHLAYER0_BASEADDRESS2_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_FETCHLAYER0_BASEADDRESS2_t;

/**
  * \brief Source buffer attributes for layer 2. (VIDEOSS_FETCHLAYER0_SOURCEBUFFERATTRIBUTES2)
  */
typedef struct stc_VIDEOSS_FETCHLAYER0_SOURCEBUFFERATTRIBUTES2_field {
  uint32_t                         u16STRIDE2:16;
  uint32_t                         u6BITSPERPIXEL2:6;
  uint32_t                         :10;
} stc_VIDEOSS_FETCHLAYER0_SOURCEBUFFERATTRIBUTES2_field_t;

typedef union un_VIDEOSS_FETCHLAYER0_SOURCEBUFFERATTRIBUTES2 {
  uint32_t                         u32Register;
  stc_VIDEOSS_FETCHLAYER0_SOURCEBUFFERATTRIBUTES2_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_FETCHLAYER0_SOURCEBUFFERATTRIBUTES2_t;

/**
  * \brief Source buffer dimension of layer 2. (VIDEOSS_FETCHLAYER0_SOURCEBUFFERDIMENSION2)
  */
typedef struct stc_VIDEOSS_FETCHLAYER0_SOURCEBUFFERDIMENSION2_field {
  uint32_t                         u14LINEWIDTH2:14;
  uint32_t                         :2;
  uint32_t                         u14LINECOUNT2:14;
  uint32_t                         :2;
} stc_VIDEOSS_FETCHLAYER0_SOURCEBUFFERDIMENSION2_field_t;

typedef union un_VIDEOSS_FETCHLAYER0_SOURCEBUFFERDIMENSION2 {
  uint32_t                         u32Register;
  stc_VIDEOSS_FETCHLAYER0_SOURCEBUFFERDIMENSION2_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_FETCHLAYER0_SOURCEBUFFERDIMENSION2_t;

/**
  * \brief Size of color components for RGB, YUV and index formats (layer 2). (VIDEOSS_FETCHLAYER0_COLORCOMPONENTBITS2)
  */
typedef struct stc_VIDEOSS_FETCHLAYER0_COLORCOMPONENTBITS2_field {
  uint32_t                         u4COMPONENTBITSALPHA2:4;
  uint32_t                         :4;
  uint32_t                         u4COMPONENTBITSBLUE2:4;
  uint32_t                         :4;
  uint32_t                         u4COMPONENTBITSGREEN2:4;
  uint32_t                         :4;
  uint32_t                         u4COMPONENTBITSRED2:4;
  uint32_t                         :3;
  uint32_t                         u1ITUFORMAT2:1;
} stc_VIDEOSS_FETCHLAYER0_COLORCOMPONENTBITS2_field_t;

typedef union un_VIDEOSS_FETCHLAYER0_COLORCOMPONENTBITS2 {
  uint32_t                         u32Register;
  stc_VIDEOSS_FETCHLAYER0_COLORCOMPONENTBITS2_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_FETCHLAYER0_COLORCOMPONENTBITS2_t;

/**
  * \brief Bit position of color components for RGB, YUV and index formats (layer 2). (VIDEOSS_FETCHLAYER0_COLORCOMPONENTSHIFT2)
  */
typedef struct stc_VIDEOSS_FETCHLAYER0_COLORCOMPONENTSHIFT2_field {
  uint32_t                         u5COMPONENTSHIFTALPHA2:5;
  uint32_t                         :3;
  uint32_t                         u5COMPONENTSHIFTBLUE2:5;
  uint32_t                         :3;
  uint32_t                         u5COMPONENTSHIFTGREEN2:5;
  uint32_t                         :3;
  uint32_t                         u5COMPONENTSHIFTRED2:5;
  uint32_t                         :3;
} stc_VIDEOSS_FETCHLAYER0_COLORCOMPONENTSHIFT2_field_t;

typedef union un_VIDEOSS_FETCHLAYER0_COLORCOMPONENTSHIFT2 {
  uint32_t                         u32Register;
  stc_VIDEOSS_FETCHLAYER0_COLORCOMPONENTSHIFT2_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_FETCHLAYER0_COLORCOMPONENTSHIFT2_t;

/**
  * \brief Position of layer 2 within the destination frame. (VIDEOSS_FETCHLAYER0_LAYEROFFSET2)
  */
typedef struct stc_VIDEOSS_FETCHLAYER0_LAYEROFFSET2_field {
  uint32_t                         u15LAYERXOFFSET2:15;
  uint32_t                         :1;
  uint32_t                         u15LAYERYOFFSET2:15;
} stc_VIDEOSS_FETCHLAYER0_LAYEROFFSET2_field_t;

typedef union un_VIDEOSS_FETCHLAYER0_LAYEROFFSET2 {
  uint32_t                         u32Register;
  stc_VIDEOSS_FETCHLAYER0_LAYEROFFSET2_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_FETCHLAYER0_LAYEROFFSET2_t;

/**
  * \brief Clip window position for layer 2. (VIDEOSS_FETCHLAYER0_CLIPWINDOWOFFSET2)
  */
typedef struct stc_VIDEOSS_FETCHLAYER0_CLIPWINDOWOFFSET2_field {
  uint32_t                         u15CLIPWINDOWXOFFSET2:15;
  uint32_t                         :1;
  uint32_t                         u15CLIPWINDOWYOFFSET2:15;
} stc_VIDEOSS_FETCHLAYER0_CLIPWINDOWOFFSET2_field_t;

typedef union un_VIDEOSS_FETCHLAYER0_CLIPWINDOWOFFSET2 {
  uint32_t                         u32Register;
  stc_VIDEOSS_FETCHLAYER0_CLIPWINDOWOFFSET2_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_FETCHLAYER0_CLIPWINDOWOFFSET2_t;

/**
  * \brief Clip window size for layer 2. (VIDEOSS_FETCHLAYER0_CLIPWINDOWDIMENSIONS2)
  */
typedef struct stc_VIDEOSS_FETCHLAYER0_CLIPWINDOWDIMENSIONS2_field {
  uint32_t                         u14CLIPWINDOWWIDTH2:14;
  uint32_t                         :2;
  uint32_t                         u14CLIPWINDOWHEIGHT2:14;
  uint32_t                         :2;
} stc_VIDEOSS_FETCHLAYER0_CLIPWINDOWDIMENSIONS2_field_t;

typedef union un_VIDEOSS_FETCHLAYER0_CLIPWINDOWDIMENSIONS2 {
  uint32_t                         u32Register;
  stc_VIDEOSS_FETCHLAYER0_CLIPWINDOWDIMENSIONS2_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_FETCHLAYER0_CLIPWINDOWDIMENSIONS2_t;

/**
  * \brief Constant color for layer 2. (VIDEOSS_FETCHLAYER0_CONSTANTCOLOR2)
  */
typedef struct stc_VIDEOSS_FETCHLAYER0_CONSTANTCOLOR2_field {
  uint32_t                         u8CONSTANTALPHA2:8;
  uint32_t                         u8CONSTANTBLUE2:8;
  uint32_t                         u8CONSTANTGREEN2:8;
  uint32_t                         u8CONSTANTRED2:8;
} stc_VIDEOSS_FETCHLAYER0_CONSTANTCOLOR2_field_t;

typedef union un_VIDEOSS_FETCHLAYER0_CONSTANTCOLOR2 {
  uint32_t                         u32Register;
  stc_VIDEOSS_FETCHLAYER0_CONSTANTCOLOR2_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_FETCHLAYER0_CONSTANTCOLOR2_t;

/**
  * \brief Common properties of layer 2. (VIDEOSS_FETCHLAYER0_LAYERPROPERTY2)
  */
typedef struct stc_VIDEOSS_FETCHLAYER0_LAYERPROPERTY2_field {
  uint32_t                         u1PALETTEENABLE2:1;
  uint32_t                         u2TILEMODE2:2;
  uint32_t                         u1ALPHASRCENABLE2:1;
  uint32_t                         u1ALPHACONSTENABLE2:1;
  uint32_t                         :1;
  uint32_t                         u1ALPHATRANSENABLE2:1;
  uint32_t                         u1RGBALPHASRCENABLE2:1;
  uint32_t                         u1RGBALPHACONSTENABLE2:1;
  uint32_t                         :1;
  uint32_t                         u1RGBALPHATRANSENABLE2:1;
  uint32_t                         u1PREMULCONSTRGB2:1;
  uint32_t                         u2YUVCONVERSIONMODE2:2;
  uint32_t                         u1GAMMAREMOVEENABLE2:1;
  uint32_t                         :1;
  uint32_t                         u11PALETTEOFFSET2:11;
  uint32_t                         u3PALETTEIDWIDTH2:3;
  uint32_t                         u1CLIPWINDOWENABLE2:1;
  uint32_t                         u1SOURCEBUFFERENABLE2:1;
} stc_VIDEOSS_FETCHLAYER0_LAYERPROPERTY2_field_t;

typedef union un_VIDEOSS_FETCHLAYER0_LAYERPROPERTY2 {
  uint32_t                         u32Register;
  stc_VIDEOSS_FETCHLAYER0_LAYERPROPERTY2_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_FETCHLAYER0_LAYERPROPERTY2_t;

/**
  * \brief Source buffer base address of layer 3. (VIDEOSS_FETCHLAYER0_BASEADDRESS3)
  */
typedef struct stc_VIDEOSS_FETCHLAYER0_BASEADDRESS3_field {
  uint32_t                         u32BASEADDRESS3:32;
} stc_VIDEOSS_FETCHLAYER0_BASEADDRESS3_field_t;

typedef union un_VIDEOSS_FETCHLAYER0_BASEADDRESS3 {
  uint32_t                         u32Register;
  stc_VIDEOSS_FETCHLAYER0_BASEADDRESS3_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_FETCHLAYER0_BASEADDRESS3_t;

/**
  * \brief Source buffer attributes for layer 3. (VIDEOSS_FETCHLAYER0_SOURCEBUFFERATTRIBUTES3)
  */
typedef struct stc_VIDEOSS_FETCHLAYER0_SOURCEBUFFERATTRIBUTES3_field {
  uint32_t                         u16STRIDE3:16;
  uint32_t                         u6BITSPERPIXEL3:6;
  uint32_t                         :10;
} stc_VIDEOSS_FETCHLAYER0_SOURCEBUFFERATTRIBUTES3_field_t;

typedef union un_VIDEOSS_FETCHLAYER0_SOURCEBUFFERATTRIBUTES3 {
  uint32_t                         u32Register;
  stc_VIDEOSS_FETCHLAYER0_SOURCEBUFFERATTRIBUTES3_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_FETCHLAYER0_SOURCEBUFFERATTRIBUTES3_t;

/**
  * \brief Source buffer dimension of layer 3. (VIDEOSS_FETCHLAYER0_SOURCEBUFFERDIMENSION3)
  */
typedef struct stc_VIDEOSS_FETCHLAYER0_SOURCEBUFFERDIMENSION3_field {
  uint32_t                         u14LINEWIDTH3:14;
  uint32_t                         :2;
  uint32_t                         u14LINECOUNT3:14;
  uint32_t                         :2;
} stc_VIDEOSS_FETCHLAYER0_SOURCEBUFFERDIMENSION3_field_t;

typedef union un_VIDEOSS_FETCHLAYER0_SOURCEBUFFERDIMENSION3 {
  uint32_t                         u32Register;
  stc_VIDEOSS_FETCHLAYER0_SOURCEBUFFERDIMENSION3_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_FETCHLAYER0_SOURCEBUFFERDIMENSION3_t;

/**
  * \brief Size of color components for RGB, YUV and index formats (layer 3). (VIDEOSS_FETCHLAYER0_COLORCOMPONENTBITS3)
  */
typedef struct stc_VIDEOSS_FETCHLAYER0_COLORCOMPONENTBITS3_field {
  uint32_t                         u4COMPONENTBITSALPHA3:4;
  uint32_t                         :4;
  uint32_t                         u4COMPONENTBITSBLUE3:4;
  uint32_t                         :4;
  uint32_t                         u4COMPONENTBITSGREEN3:4;
  uint32_t                         :4;
  uint32_t                         u4COMPONENTBITSRED3:4;
  uint32_t                         :3;
  uint32_t                         u1ITUFORMAT3:1;
} stc_VIDEOSS_FETCHLAYER0_COLORCOMPONENTBITS3_field_t;

typedef union un_VIDEOSS_FETCHLAYER0_COLORCOMPONENTBITS3 {
  uint32_t                         u32Register;
  stc_VIDEOSS_FETCHLAYER0_COLORCOMPONENTBITS3_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_FETCHLAYER0_COLORCOMPONENTBITS3_t;

/**
  * \brief Bit position of color components for RGB, YUV and index formats (layer 3). (VIDEOSS_FETCHLAYER0_COLORCOMPONENTSHIFT3)
  */
typedef struct stc_VIDEOSS_FETCHLAYER0_COLORCOMPONENTSHIFT3_field {
  uint32_t                         u5COMPONENTSHIFTALPHA3:5;
  uint32_t                         :3;
  uint32_t                         u5COMPONENTSHIFTBLUE3:5;
  uint32_t                         :3;
  uint32_t                         u5COMPONENTSHIFTGREEN3:5;
  uint32_t                         :3;
  uint32_t                         u5COMPONENTSHIFTRED3:5;
  uint32_t                         :3;
} stc_VIDEOSS_FETCHLAYER0_COLORCOMPONENTSHIFT3_field_t;

typedef union un_VIDEOSS_FETCHLAYER0_COLORCOMPONENTSHIFT3 {
  uint32_t                         u32Register;
  stc_VIDEOSS_FETCHLAYER0_COLORCOMPONENTSHIFT3_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_FETCHLAYER0_COLORCOMPONENTSHIFT3_t;

/**
  * \brief Position of layer 3 within the destination frame. (VIDEOSS_FETCHLAYER0_LAYEROFFSET3)
  */
typedef struct stc_VIDEOSS_FETCHLAYER0_LAYEROFFSET3_field {
  uint32_t                         u15LAYERXOFFSET3:15;
  uint32_t                         :1;
  uint32_t                         u15LAYERYOFFSET3:15;
} stc_VIDEOSS_FETCHLAYER0_LAYEROFFSET3_field_t;

typedef union un_VIDEOSS_FETCHLAYER0_LAYEROFFSET3 {
  uint32_t                         u32Register;
  stc_VIDEOSS_FETCHLAYER0_LAYEROFFSET3_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_FETCHLAYER0_LAYEROFFSET3_t;

/**
  * \brief Clip window position for layer 3. (VIDEOSS_FETCHLAYER0_CLIPWINDOWOFFSET3)
  */
typedef struct stc_VIDEOSS_FETCHLAYER0_CLIPWINDOWOFFSET3_field {
  uint32_t                         u15CLIPWINDOWXOFFSET3:15;
  uint32_t                         :1;
  uint32_t                         u15CLIPWINDOWYOFFSET3:15;
} stc_VIDEOSS_FETCHLAYER0_CLIPWINDOWOFFSET3_field_t;

typedef union un_VIDEOSS_FETCHLAYER0_CLIPWINDOWOFFSET3 {
  uint32_t                         u32Register;
  stc_VIDEOSS_FETCHLAYER0_CLIPWINDOWOFFSET3_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_FETCHLAYER0_CLIPWINDOWOFFSET3_t;

/**
  * \brief Clip window size for layer 3. (VIDEOSS_FETCHLAYER0_CLIPWINDOWDIMENSIONS3)
  */
typedef struct stc_VIDEOSS_FETCHLAYER0_CLIPWINDOWDIMENSIONS3_field {
  uint32_t                         u14CLIPWINDOWWIDTH3:14;
  uint32_t                         :2;
  uint32_t                         u14CLIPWINDOWHEIGHT3:14;
  uint32_t                         :2;
} stc_VIDEOSS_FETCHLAYER0_CLIPWINDOWDIMENSIONS3_field_t;

typedef union un_VIDEOSS_FETCHLAYER0_CLIPWINDOWDIMENSIONS3 {
  uint32_t                         u32Register;
  stc_VIDEOSS_FETCHLAYER0_CLIPWINDOWDIMENSIONS3_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_FETCHLAYER0_CLIPWINDOWDIMENSIONS3_t;

/**
  * \brief Constant color for layer 3. (VIDEOSS_FETCHLAYER0_CONSTANTCOLOR3)
  */
typedef struct stc_VIDEOSS_FETCHLAYER0_CONSTANTCOLOR3_field {
  uint32_t                         u8CONSTANTALPHA3:8;
  uint32_t                         u8CONSTANTBLUE3:8;
  uint32_t                         u8CONSTANTGREEN3:8;
  uint32_t                         u8CONSTANTRED3:8;
} stc_VIDEOSS_FETCHLAYER0_CONSTANTCOLOR3_field_t;

typedef union un_VIDEOSS_FETCHLAYER0_CONSTANTCOLOR3 {
  uint32_t                         u32Register;
  stc_VIDEOSS_FETCHLAYER0_CONSTANTCOLOR3_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_FETCHLAYER0_CONSTANTCOLOR3_t;

/**
  * \brief Common properties of layer 3. (VIDEOSS_FETCHLAYER0_LAYERPROPERTY3)
  */
typedef struct stc_VIDEOSS_FETCHLAYER0_LAYERPROPERTY3_field {
  uint32_t                         u1PALETTEENABLE3:1;
  uint32_t                         u2TILEMODE3:2;
  uint32_t                         u1ALPHASRCENABLE3:1;
  uint32_t                         u1ALPHACONSTENABLE3:1;
  uint32_t                         :1;
  uint32_t                         u1ALPHATRANSENABLE3:1;
  uint32_t                         u1RGBALPHASRCENABLE3:1;
  uint32_t                         u1RGBALPHACONSTENABLE3:1;
  uint32_t                         :1;
  uint32_t                         u1RGBALPHATRANSENABLE3:1;
  uint32_t                         u1PREMULCONSTRGB3:1;
  uint32_t                         u2YUVCONVERSIONMODE3:2;
  uint32_t                         u1GAMMAREMOVEENABLE3:1;
  uint32_t                         :1;
  uint32_t                         u11PALETTEOFFSET3:11;
  uint32_t                         u3PALETTEIDWIDTH3:3;
  uint32_t                         u1CLIPWINDOWENABLE3:1;
  uint32_t                         u1SOURCEBUFFERENABLE3:1;
} stc_VIDEOSS_FETCHLAYER0_LAYERPROPERTY3_field_t;

typedef union un_VIDEOSS_FETCHLAYER0_LAYERPROPERTY3 {
  uint32_t                         u32Register;
  stc_VIDEOSS_FETCHLAYER0_LAYERPROPERTY3_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_FETCHLAYER0_LAYERPROPERTY3_t;

/**
  * \brief Source buffer base address of layer 4. (VIDEOSS_FETCHLAYER0_BASEADDRESS4)
  */
typedef struct stc_VIDEOSS_FETCHLAYER0_BASEADDRESS4_field {
  uint32_t                         u32BASEADDRESS4:32;
} stc_VIDEOSS_FETCHLAYER0_BASEADDRESS4_field_t;

typedef union un_VIDEOSS_FETCHLAYER0_BASEADDRESS4 {
  uint32_t                         u32Register;
  stc_VIDEOSS_FETCHLAYER0_BASEADDRESS4_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_FETCHLAYER0_BASEADDRESS4_t;

/**
  * \brief Source buffer attributes for layer 4. (VIDEOSS_FETCHLAYER0_SOURCEBUFFERATTRIBUTES4)
  */
typedef struct stc_VIDEOSS_FETCHLAYER0_SOURCEBUFFERATTRIBUTES4_field {
  uint32_t                         u16STRIDE4:16;
  uint32_t                         u6BITSPERPIXEL4:6;
  uint32_t                         :10;
} stc_VIDEOSS_FETCHLAYER0_SOURCEBUFFERATTRIBUTES4_field_t;

typedef union un_VIDEOSS_FETCHLAYER0_SOURCEBUFFERATTRIBUTES4 {
  uint32_t                         u32Register;
  stc_VIDEOSS_FETCHLAYER0_SOURCEBUFFERATTRIBUTES4_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_FETCHLAYER0_SOURCEBUFFERATTRIBUTES4_t;

/**
  * \brief Source buffer dimension of layer 4. (VIDEOSS_FETCHLAYER0_SOURCEBUFFERDIMENSION4)
  */
typedef struct stc_VIDEOSS_FETCHLAYER0_SOURCEBUFFERDIMENSION4_field {
  uint32_t                         u14LINEWIDTH4:14;
  uint32_t                         :2;
  uint32_t                         u14LINECOUNT4:14;
  uint32_t                         :2;
} stc_VIDEOSS_FETCHLAYER0_SOURCEBUFFERDIMENSION4_field_t;

typedef union un_VIDEOSS_FETCHLAYER0_SOURCEBUFFERDIMENSION4 {
  uint32_t                         u32Register;
  stc_VIDEOSS_FETCHLAYER0_SOURCEBUFFERDIMENSION4_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_FETCHLAYER0_SOURCEBUFFERDIMENSION4_t;

/**
  * \brief Size of color components for RGB, YUV and index formats (layer 4). (VIDEOSS_FETCHLAYER0_COLORCOMPONENTBITS4)
  */
typedef struct stc_VIDEOSS_FETCHLAYER0_COLORCOMPONENTBITS4_field {
  uint32_t                         u4COMPONENTBITSALPHA4:4;
  uint32_t                         :4;
  uint32_t                         u4COMPONENTBITSBLUE4:4;
  uint32_t                         :4;
  uint32_t                         u4COMPONENTBITSGREEN4:4;
  uint32_t                         :4;
  uint32_t                         u4COMPONENTBITSRED4:4;
  uint32_t                         :3;
  uint32_t                         u1ITUFORMAT4:1;
} stc_VIDEOSS_FETCHLAYER0_COLORCOMPONENTBITS4_field_t;

typedef union un_VIDEOSS_FETCHLAYER0_COLORCOMPONENTBITS4 {
  uint32_t                         u32Register;
  stc_VIDEOSS_FETCHLAYER0_COLORCOMPONENTBITS4_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_FETCHLAYER0_COLORCOMPONENTBITS4_t;

/**
  * \brief Bit position of color components for RGB, YUV and index formats (layer 4). (VIDEOSS_FETCHLAYER0_COLORCOMPONENTSHIFT4)
  */
typedef struct stc_VIDEOSS_FETCHLAYER0_COLORCOMPONENTSHIFT4_field {
  uint32_t                         u5COMPONENTSHIFTALPHA4:5;
  uint32_t                         :3;
  uint32_t                         u5COMPONENTSHIFTBLUE4:5;
  uint32_t                         :3;
  uint32_t                         u5COMPONENTSHIFTGREEN4:5;
  uint32_t                         :3;
  uint32_t                         u5COMPONENTSHIFTRED4:5;
  uint32_t                         :3;
} stc_VIDEOSS_FETCHLAYER0_COLORCOMPONENTSHIFT4_field_t;

typedef union un_VIDEOSS_FETCHLAYER0_COLORCOMPONENTSHIFT4 {
  uint32_t                         u32Register;
  stc_VIDEOSS_FETCHLAYER0_COLORCOMPONENTSHIFT4_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_FETCHLAYER0_COLORCOMPONENTSHIFT4_t;

/**
  * \brief Position of layer 4 within the destination frame. (VIDEOSS_FETCHLAYER0_LAYEROFFSET4)
  */
typedef struct stc_VIDEOSS_FETCHLAYER0_LAYEROFFSET4_field {
  uint32_t                         u15LAYERXOFFSET4:15;
  uint32_t                         :1;
  uint32_t                         u15LAYERYOFFSET4:15;
} stc_VIDEOSS_FETCHLAYER0_LAYEROFFSET4_field_t;

typedef union un_VIDEOSS_FETCHLAYER0_LAYEROFFSET4 {
  uint32_t                         u32Register;
  stc_VIDEOSS_FETCHLAYER0_LAYEROFFSET4_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_FETCHLAYER0_LAYEROFFSET4_t;

/**
  * \brief Clip window position for layer 4. (VIDEOSS_FETCHLAYER0_CLIPWINDOWOFFSET4)
  */
typedef struct stc_VIDEOSS_FETCHLAYER0_CLIPWINDOWOFFSET4_field {
  uint32_t                         u15CLIPWINDOWXOFFSET4:15;
  uint32_t                         :1;
  uint32_t                         u15CLIPWINDOWYOFFSET4:15;
} stc_VIDEOSS_FETCHLAYER0_CLIPWINDOWOFFSET4_field_t;

typedef union un_VIDEOSS_FETCHLAYER0_CLIPWINDOWOFFSET4 {
  uint32_t                         u32Register;
  stc_VIDEOSS_FETCHLAYER0_CLIPWINDOWOFFSET4_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_FETCHLAYER0_CLIPWINDOWOFFSET4_t;

/**
  * \brief Clip window size for layer 4. (VIDEOSS_FETCHLAYER0_CLIPWINDOWDIMENSIONS4)
  */
typedef struct stc_VIDEOSS_FETCHLAYER0_CLIPWINDOWDIMENSIONS4_field {
  uint32_t                         u14CLIPWINDOWWIDTH4:14;
  uint32_t                         :2;
  uint32_t                         u14CLIPWINDOWHEIGHT4:14;
  uint32_t                         :2;
} stc_VIDEOSS_FETCHLAYER0_CLIPWINDOWDIMENSIONS4_field_t;

typedef union un_VIDEOSS_FETCHLAYER0_CLIPWINDOWDIMENSIONS4 {
  uint32_t                         u32Register;
  stc_VIDEOSS_FETCHLAYER0_CLIPWINDOWDIMENSIONS4_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_FETCHLAYER0_CLIPWINDOWDIMENSIONS4_t;

/**
  * \brief Constant color for layer 4. (VIDEOSS_FETCHLAYER0_CONSTANTCOLOR4)
  */
typedef struct stc_VIDEOSS_FETCHLAYER0_CONSTANTCOLOR4_field {
  uint32_t                         u8CONSTANTALPHA4:8;
  uint32_t                         u8CONSTANTBLUE4:8;
  uint32_t                         u8CONSTANTGREEN4:8;
  uint32_t                         u8CONSTANTRED4:8;
} stc_VIDEOSS_FETCHLAYER0_CONSTANTCOLOR4_field_t;

typedef union un_VIDEOSS_FETCHLAYER0_CONSTANTCOLOR4 {
  uint32_t                         u32Register;
  stc_VIDEOSS_FETCHLAYER0_CONSTANTCOLOR4_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_FETCHLAYER0_CONSTANTCOLOR4_t;

/**
  * \brief Common properties of layer 4. (VIDEOSS_FETCHLAYER0_LAYERPROPERTY4)
  */
typedef struct stc_VIDEOSS_FETCHLAYER0_LAYERPROPERTY4_field {
  uint32_t                         u1PALETTEENABLE4:1;
  uint32_t                         u2TILEMODE4:2;
  uint32_t                         u1ALPHASRCENABLE4:1;
  uint32_t                         u1ALPHACONSTENABLE4:1;
  uint32_t                         :1;
  uint32_t                         u1ALPHATRANSENABLE4:1;
  uint32_t                         u1RGBALPHASRCENABLE4:1;
  uint32_t                         u1RGBALPHACONSTENABLE4:1;
  uint32_t                         :1;
  uint32_t                         u1RGBALPHATRANSENABLE4:1;
  uint32_t                         u1PREMULCONSTRGB4:1;
  uint32_t                         u2YUVCONVERSIONMODE4:2;
  uint32_t                         u1GAMMAREMOVEENABLE4:1;
  uint32_t                         :1;
  uint32_t                         u11PALETTEOFFSET4:11;
  uint32_t                         u3PALETTEIDWIDTH4:3;
  uint32_t                         u1CLIPWINDOWENABLE4:1;
  uint32_t                         u1SOURCEBUFFERENABLE4:1;
} stc_VIDEOSS_FETCHLAYER0_LAYERPROPERTY4_field_t;

typedef union un_VIDEOSS_FETCHLAYER0_LAYERPROPERTY4 {
  uint32_t                         u32Register;
  stc_VIDEOSS_FETCHLAYER0_LAYERPROPERTY4_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_FETCHLAYER0_LAYERPROPERTY4_t;

/**
  * \brief Source buffer base address of layer 5. (VIDEOSS_FETCHLAYER0_BASEADDRESS5)
  */
typedef struct stc_VIDEOSS_FETCHLAYER0_BASEADDRESS5_field {
  uint32_t                         u32BASEADDRESS5:32;
} stc_VIDEOSS_FETCHLAYER0_BASEADDRESS5_field_t;

typedef union un_VIDEOSS_FETCHLAYER0_BASEADDRESS5 {
  uint32_t                         u32Register;
  stc_VIDEOSS_FETCHLAYER0_BASEADDRESS5_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_FETCHLAYER0_BASEADDRESS5_t;

/**
  * \brief Source buffer attributes for layer 5. (VIDEOSS_FETCHLAYER0_SOURCEBUFFERATTRIBUTES5)
  */
typedef struct stc_VIDEOSS_FETCHLAYER0_SOURCEBUFFERATTRIBUTES5_field {
  uint32_t                         u16STRIDE5:16;
  uint32_t                         u6BITSPERPIXEL5:6;
  uint32_t                         :10;
} stc_VIDEOSS_FETCHLAYER0_SOURCEBUFFERATTRIBUTES5_field_t;

typedef union un_VIDEOSS_FETCHLAYER0_SOURCEBUFFERATTRIBUTES5 {
  uint32_t                         u32Register;
  stc_VIDEOSS_FETCHLAYER0_SOURCEBUFFERATTRIBUTES5_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_FETCHLAYER0_SOURCEBUFFERATTRIBUTES5_t;

/**
  * \brief Source buffer dimension of layer 5. (VIDEOSS_FETCHLAYER0_SOURCEBUFFERDIMENSION5)
  */
typedef struct stc_VIDEOSS_FETCHLAYER0_SOURCEBUFFERDIMENSION5_field {
  uint32_t                         u14LINEWIDTH5:14;
  uint32_t                         :2;
  uint32_t                         u14LINECOUNT5:14;
  uint32_t                         :2;
} stc_VIDEOSS_FETCHLAYER0_SOURCEBUFFERDIMENSION5_field_t;

typedef union un_VIDEOSS_FETCHLAYER0_SOURCEBUFFERDIMENSION5 {
  uint32_t                         u32Register;
  stc_VIDEOSS_FETCHLAYER0_SOURCEBUFFERDIMENSION5_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_FETCHLAYER0_SOURCEBUFFERDIMENSION5_t;

/**
  * \brief Size of color components for RGB, YUV and index formats (layer 5). (VIDEOSS_FETCHLAYER0_COLORCOMPONENTBITS5)
  */
typedef struct stc_VIDEOSS_FETCHLAYER0_COLORCOMPONENTBITS5_field {
  uint32_t                         u4COMPONENTBITSALPHA5:4;
  uint32_t                         :4;
  uint32_t                         u4COMPONENTBITSBLUE5:4;
  uint32_t                         :4;
  uint32_t                         u4COMPONENTBITSGREEN5:4;
  uint32_t                         :4;
  uint32_t                         u4COMPONENTBITSRED5:4;
  uint32_t                         :3;
  uint32_t                         u1ITUFORMAT5:1;
} stc_VIDEOSS_FETCHLAYER0_COLORCOMPONENTBITS5_field_t;

typedef union un_VIDEOSS_FETCHLAYER0_COLORCOMPONENTBITS5 {
  uint32_t                         u32Register;
  stc_VIDEOSS_FETCHLAYER0_COLORCOMPONENTBITS5_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_FETCHLAYER0_COLORCOMPONENTBITS5_t;

/**
  * \brief Bit position of color components for RGB, YUV and index formats (layer 5). (VIDEOSS_FETCHLAYER0_COLORCOMPONENTSHIFT5)
  */
typedef struct stc_VIDEOSS_FETCHLAYER0_COLORCOMPONENTSHIFT5_field {
  uint32_t                         u5COMPONENTSHIFTALPHA5:5;
  uint32_t                         :3;
  uint32_t                         u5COMPONENTSHIFTBLUE5:5;
  uint32_t                         :3;
  uint32_t                         u5COMPONENTSHIFTGREEN5:5;
  uint32_t                         :3;
  uint32_t                         u5COMPONENTSHIFTRED5:5;
  uint32_t                         :3;
} stc_VIDEOSS_FETCHLAYER0_COLORCOMPONENTSHIFT5_field_t;

typedef union un_VIDEOSS_FETCHLAYER0_COLORCOMPONENTSHIFT5 {
  uint32_t                         u32Register;
  stc_VIDEOSS_FETCHLAYER0_COLORCOMPONENTSHIFT5_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_FETCHLAYER0_COLORCOMPONENTSHIFT5_t;

/**
  * \brief Position of layer 5 within the destination frame. (VIDEOSS_FETCHLAYER0_LAYEROFFSET5)
  */
typedef struct stc_VIDEOSS_FETCHLAYER0_LAYEROFFSET5_field {
  uint32_t                         u15LAYERXOFFSET5:15;
  uint32_t                         :1;
  uint32_t                         u15LAYERYOFFSET5:15;
} stc_VIDEOSS_FETCHLAYER0_LAYEROFFSET5_field_t;

typedef union un_VIDEOSS_FETCHLAYER0_LAYEROFFSET5 {
  uint32_t                         u32Register;
  stc_VIDEOSS_FETCHLAYER0_LAYEROFFSET5_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_FETCHLAYER0_LAYEROFFSET5_t;

/**
  * \brief Clip window position for layer 5. (VIDEOSS_FETCHLAYER0_CLIPWINDOWOFFSET5)
  */
typedef struct stc_VIDEOSS_FETCHLAYER0_CLIPWINDOWOFFSET5_field {
  uint32_t                         u15CLIPWINDOWXOFFSET5:15;
  uint32_t                         :1;
  uint32_t                         u15CLIPWINDOWYOFFSET5:15;
} stc_VIDEOSS_FETCHLAYER0_CLIPWINDOWOFFSET5_field_t;

typedef union un_VIDEOSS_FETCHLAYER0_CLIPWINDOWOFFSET5 {
  uint32_t                         u32Register;
  stc_VIDEOSS_FETCHLAYER0_CLIPWINDOWOFFSET5_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_FETCHLAYER0_CLIPWINDOWOFFSET5_t;

/**
  * \brief Clip window size for layer 5. (VIDEOSS_FETCHLAYER0_CLIPWINDOWDIMENSIONS5)
  */
typedef struct stc_VIDEOSS_FETCHLAYER0_CLIPWINDOWDIMENSIONS5_field {
  uint32_t                         u14CLIPWINDOWWIDTH5:14;
  uint32_t                         :2;
  uint32_t                         u14CLIPWINDOWHEIGHT5:14;
  uint32_t                         :2;
} stc_VIDEOSS_FETCHLAYER0_CLIPWINDOWDIMENSIONS5_field_t;

typedef union un_VIDEOSS_FETCHLAYER0_CLIPWINDOWDIMENSIONS5 {
  uint32_t                         u32Register;
  stc_VIDEOSS_FETCHLAYER0_CLIPWINDOWDIMENSIONS5_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_FETCHLAYER0_CLIPWINDOWDIMENSIONS5_t;

/**
  * \brief Constant color for layer 5. (VIDEOSS_FETCHLAYER0_CONSTANTCOLOR5)
  */
typedef struct stc_VIDEOSS_FETCHLAYER0_CONSTANTCOLOR5_field {
  uint32_t                         u8CONSTANTALPHA5:8;
  uint32_t                         u8CONSTANTBLUE5:8;
  uint32_t                         u8CONSTANTGREEN5:8;
  uint32_t                         u8CONSTANTRED5:8;
} stc_VIDEOSS_FETCHLAYER0_CONSTANTCOLOR5_field_t;

typedef union un_VIDEOSS_FETCHLAYER0_CONSTANTCOLOR5 {
  uint32_t                         u32Register;
  stc_VIDEOSS_FETCHLAYER0_CONSTANTCOLOR5_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_FETCHLAYER0_CONSTANTCOLOR5_t;

/**
  * \brief Common properties of layer 5. (VIDEOSS_FETCHLAYER0_LAYERPROPERTY5)
  */
typedef struct stc_VIDEOSS_FETCHLAYER0_LAYERPROPERTY5_field {
  uint32_t                         u1PALETTEENABLE5:1;
  uint32_t                         u2TILEMODE5:2;
  uint32_t                         u1ALPHASRCENABLE5:1;
  uint32_t                         u1ALPHACONSTENABLE5:1;
  uint32_t                         :1;
  uint32_t                         u1ALPHATRANSENABLE5:1;
  uint32_t                         u1RGBALPHASRCENABLE5:1;
  uint32_t                         u1RGBALPHACONSTENABLE5:1;
  uint32_t                         :1;
  uint32_t                         u1RGBALPHATRANSENABLE5:1;
  uint32_t                         u1PREMULCONSTRGB5:1;
  uint32_t                         u2YUVCONVERSIONMODE5:2;
  uint32_t                         u1GAMMAREMOVEENABLE5:1;
  uint32_t                         :1;
  uint32_t                         u11PALETTEOFFSET5:11;
  uint32_t                         u3PALETTEIDWIDTH5:3;
  uint32_t                         u1CLIPWINDOWENABLE5:1;
  uint32_t                         u1SOURCEBUFFERENABLE5:1;
} stc_VIDEOSS_FETCHLAYER0_LAYERPROPERTY5_field_t;

typedef union un_VIDEOSS_FETCHLAYER0_LAYERPROPERTY5 {
  uint32_t                         u32Register;
  stc_VIDEOSS_FETCHLAYER0_LAYERPROPERTY5_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_FETCHLAYER0_LAYERPROPERTY5_t;

/**
  * \brief Source buffer base address of layer 6. (VIDEOSS_FETCHLAYER0_BASEADDRESS6)
  */
typedef struct stc_VIDEOSS_FETCHLAYER0_BASEADDRESS6_field {
  uint32_t                         u32BASEADDRESS6:32;
} stc_VIDEOSS_FETCHLAYER0_BASEADDRESS6_field_t;

typedef union un_VIDEOSS_FETCHLAYER0_BASEADDRESS6 {
  uint32_t                         u32Register;
  stc_VIDEOSS_FETCHLAYER0_BASEADDRESS6_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_FETCHLAYER0_BASEADDRESS6_t;

/**
  * \brief Source buffer attributes for layer 6. (VIDEOSS_FETCHLAYER0_SOURCEBUFFERATTRIBUTES6)
  */
typedef struct stc_VIDEOSS_FETCHLAYER0_SOURCEBUFFERATTRIBUTES6_field {
  uint32_t                         u16STRIDE6:16;
  uint32_t                         u6BITSPERPIXEL6:6;
  uint32_t                         :10;
} stc_VIDEOSS_FETCHLAYER0_SOURCEBUFFERATTRIBUTES6_field_t;

typedef union un_VIDEOSS_FETCHLAYER0_SOURCEBUFFERATTRIBUTES6 {
  uint32_t                         u32Register;
  stc_VIDEOSS_FETCHLAYER0_SOURCEBUFFERATTRIBUTES6_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_FETCHLAYER0_SOURCEBUFFERATTRIBUTES6_t;

/**
  * \brief Source buffer dimension of layer 6. (VIDEOSS_FETCHLAYER0_SOURCEBUFFERDIMENSION6)
  */
typedef struct stc_VIDEOSS_FETCHLAYER0_SOURCEBUFFERDIMENSION6_field {
  uint32_t                         u14LINEWIDTH6:14;
  uint32_t                         :2;
  uint32_t                         u14LINECOUNT6:14;
  uint32_t                         :2;
} stc_VIDEOSS_FETCHLAYER0_SOURCEBUFFERDIMENSION6_field_t;

typedef union un_VIDEOSS_FETCHLAYER0_SOURCEBUFFERDIMENSION6 {
  uint32_t                         u32Register;
  stc_VIDEOSS_FETCHLAYER0_SOURCEBUFFERDIMENSION6_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_FETCHLAYER0_SOURCEBUFFERDIMENSION6_t;

/**
  * \brief Size of color components for RGB, YUV and index formats (layer 6). (VIDEOSS_FETCHLAYER0_COLORCOMPONENTBITS6)
  */
typedef struct stc_VIDEOSS_FETCHLAYER0_COLORCOMPONENTBITS6_field {
  uint32_t                         u4COMPONENTBITSALPHA6:4;
  uint32_t                         :4;
  uint32_t                         u4COMPONENTBITSBLUE6:4;
  uint32_t                         :4;
  uint32_t                         u4COMPONENTBITSGREEN6:4;
  uint32_t                         :4;
  uint32_t                         u4COMPONENTBITSRED6:4;
  uint32_t                         :3;
  uint32_t                         u1ITUFORMAT6:1;
} stc_VIDEOSS_FETCHLAYER0_COLORCOMPONENTBITS6_field_t;

typedef union un_VIDEOSS_FETCHLAYER0_COLORCOMPONENTBITS6 {
  uint32_t                         u32Register;
  stc_VIDEOSS_FETCHLAYER0_COLORCOMPONENTBITS6_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_FETCHLAYER0_COLORCOMPONENTBITS6_t;

/**
  * \brief Bit position of color components for RGB, YUV and index formats (layer 6). (VIDEOSS_FETCHLAYER0_COLORCOMPONENTSHIFT6)
  */
typedef struct stc_VIDEOSS_FETCHLAYER0_COLORCOMPONENTSHIFT6_field {
  uint32_t                         u5COMPONENTSHIFTALPHA6:5;
  uint32_t                         :3;
  uint32_t                         u5COMPONENTSHIFTBLUE6:5;
  uint32_t                         :3;
  uint32_t                         u5COMPONENTSHIFTGREEN6:5;
  uint32_t                         :3;
  uint32_t                         u5COMPONENTSHIFTRED6:5;
  uint32_t                         :3;
} stc_VIDEOSS_FETCHLAYER0_COLORCOMPONENTSHIFT6_field_t;

typedef union un_VIDEOSS_FETCHLAYER0_COLORCOMPONENTSHIFT6 {
  uint32_t                         u32Register;
  stc_VIDEOSS_FETCHLAYER0_COLORCOMPONENTSHIFT6_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_FETCHLAYER0_COLORCOMPONENTSHIFT6_t;

/**
  * \brief Position of layer 1 within the destination frame. (VIDEOSS_FETCHLAYER0_LAYEROFFSET6)
  */
typedef struct stc_VIDEOSS_FETCHLAYER0_LAYEROFFSET6_field {
  uint32_t                         u15LAYERXOFFSET6:15;
  uint32_t                         :1;
  uint32_t                         u15LAYERYOFFSET6:15;
} stc_VIDEOSS_FETCHLAYER0_LAYEROFFSET6_field_t;

typedef union un_VIDEOSS_FETCHLAYER0_LAYEROFFSET6 {
  uint32_t                         u32Register;
  stc_VIDEOSS_FETCHLAYER0_LAYEROFFSET6_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_FETCHLAYER0_LAYEROFFSET6_t;

/**
  * \brief Clip window position for layer 6. (VIDEOSS_FETCHLAYER0_CLIPWINDOWOFFSET6)
  */
typedef struct stc_VIDEOSS_FETCHLAYER0_CLIPWINDOWOFFSET6_field {
  uint32_t                         u15CLIPWINDOWXOFFSET6:15;
  uint32_t                         :1;
  uint32_t                         u15CLIPWINDOWYOFFSET6:15;
} stc_VIDEOSS_FETCHLAYER0_CLIPWINDOWOFFSET6_field_t;

typedef union un_VIDEOSS_FETCHLAYER0_CLIPWINDOWOFFSET6 {
  uint32_t                         u32Register;
  stc_VIDEOSS_FETCHLAYER0_CLIPWINDOWOFFSET6_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_FETCHLAYER0_CLIPWINDOWOFFSET6_t;

/**
  * \brief Clip window size for layer 6. (VIDEOSS_FETCHLAYER0_CLIPWINDOWDIMENSIONS6)
  */
typedef struct stc_VIDEOSS_FETCHLAYER0_CLIPWINDOWDIMENSIONS6_field {
  uint32_t                         u14CLIPWINDOWWIDTH6:14;
  uint32_t                         :2;
  uint32_t                         u14CLIPWINDOWHEIGHT6:14;
  uint32_t                         :2;
} stc_VIDEOSS_FETCHLAYER0_CLIPWINDOWDIMENSIONS6_field_t;

typedef union un_VIDEOSS_FETCHLAYER0_CLIPWINDOWDIMENSIONS6 {
  uint32_t                         u32Register;
  stc_VIDEOSS_FETCHLAYER0_CLIPWINDOWDIMENSIONS6_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_FETCHLAYER0_CLIPWINDOWDIMENSIONS6_t;

/**
  * \brief Constant color for layer 6. (VIDEOSS_FETCHLAYER0_CONSTANTCOLOR6)
  */
typedef struct stc_VIDEOSS_FETCHLAYER0_CONSTANTCOLOR6_field {
  uint32_t                         u8CONSTANTALPHA6:8;
  uint32_t                         u8CONSTANTBLUE6:8;
  uint32_t                         u8CONSTANTGREEN6:8;
  uint32_t                         u8CONSTANTRED6:8;
} stc_VIDEOSS_FETCHLAYER0_CONSTANTCOLOR6_field_t;

typedef union un_VIDEOSS_FETCHLAYER0_CONSTANTCOLOR6 {
  uint32_t                         u32Register;
  stc_VIDEOSS_FETCHLAYER0_CONSTANTCOLOR6_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_FETCHLAYER0_CONSTANTCOLOR6_t;

/**
  * \brief Common properties of layer 6. (VIDEOSS_FETCHLAYER0_LAYERPROPERTY6)
  */
typedef struct stc_VIDEOSS_FETCHLAYER0_LAYERPROPERTY6_field {
  uint32_t                         u1PALETTEENABLE6:1;
  uint32_t                         u2TILEMODE6:2;
  uint32_t                         u1ALPHASRCENABLE6:1;
  uint32_t                         u1ALPHACONSTENABLE6:1;
  uint32_t                         :1;
  uint32_t                         u1ALPHATRANSENABLE6:1;
  uint32_t                         u1RGBALPHASRCENABLE6:1;
  uint32_t                         u1RGBALPHACONSTENABLE6:1;
  uint32_t                         :1;
  uint32_t                         u1RGBALPHATRANSENABLE6:1;
  uint32_t                         u1PREMULCONSTRGB6:1;
  uint32_t                         u2YUVCONVERSIONMODE6:2;
  uint32_t                         u1GAMMAREMOVEENABLE6:1;
  uint32_t                         :1;
  uint32_t                         u11PALETTEOFFSET6:11;
  uint32_t                         u3PALETTEIDWIDTH6:3;
  uint32_t                         u1CLIPWINDOWENABLE6:1;
  uint32_t                         u1SOURCEBUFFERENABLE6:1;
} stc_VIDEOSS_FETCHLAYER0_LAYERPROPERTY6_field_t;

typedef union un_VIDEOSS_FETCHLAYER0_LAYERPROPERTY6 {
  uint32_t                         u32Register;
  stc_VIDEOSS_FETCHLAYER0_LAYERPROPERTY6_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_FETCHLAYER0_LAYERPROPERTY6_t;

/**
  * \brief Source buffer base address of layer 7. (VIDEOSS_FETCHLAYER0_BASEADDRESS7)
  */
typedef struct stc_VIDEOSS_FETCHLAYER0_BASEADDRESS7_field {
  uint32_t                         u32BASEADDRESS7:32;
} stc_VIDEOSS_FETCHLAYER0_BASEADDRESS7_field_t;

typedef union un_VIDEOSS_FETCHLAYER0_BASEADDRESS7 {
  uint32_t                         u32Register;
  stc_VIDEOSS_FETCHLAYER0_BASEADDRESS7_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_FETCHLAYER0_BASEADDRESS7_t;

/**
  * \brief Source buffer stride for layer 7. (VIDEOSS_FETCHLAYER0_SOURCEBUFFERATTRIBUTES7)
  */
typedef struct stc_VIDEOSS_FETCHLAYER0_SOURCEBUFFERATTRIBUTES7_field {
  uint32_t                         u16STRIDE7:16;
  uint32_t                         u6BITSPERPIXEL7:6;
  uint32_t                         :10;
} stc_VIDEOSS_FETCHLAYER0_SOURCEBUFFERATTRIBUTES7_field_t;

typedef union un_VIDEOSS_FETCHLAYER0_SOURCEBUFFERATTRIBUTES7 {
  uint32_t                         u32Register;
  stc_VIDEOSS_FETCHLAYER0_SOURCEBUFFERATTRIBUTES7_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_FETCHLAYER0_SOURCEBUFFERATTRIBUTES7_t;

/**
  * \brief Source buffer dimension of layer 7. (VIDEOSS_FETCHLAYER0_SOURCEBUFFERDIMENSION7)
  */
typedef struct stc_VIDEOSS_FETCHLAYER0_SOURCEBUFFERDIMENSION7_field {
  uint32_t                         u14LINEWIDTH7:14;
  uint32_t                         :2;
  uint32_t                         u14LINECOUNT7:14;
  uint32_t                         :2;
} stc_VIDEOSS_FETCHLAYER0_SOURCEBUFFERDIMENSION7_field_t;

typedef union un_VIDEOSS_FETCHLAYER0_SOURCEBUFFERDIMENSION7 {
  uint32_t                         u32Register;
  stc_VIDEOSS_FETCHLAYER0_SOURCEBUFFERDIMENSION7_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_FETCHLAYER0_SOURCEBUFFERDIMENSION7_t;

/**
  * \brief Size of color components for RGB, YUV and index formats (layer 7). (VIDEOSS_FETCHLAYER0_COLORCOMPONENTBITS7)
  */
typedef struct stc_VIDEOSS_FETCHLAYER0_COLORCOMPONENTBITS7_field {
  uint32_t                         u4COMPONENTBITSALPHA7:4;
  uint32_t                         :4;
  uint32_t                         u4COMPONENTBITSBLUE7:4;
  uint32_t                         :4;
  uint32_t                         u4COMPONENTBITSGREEN7:4;
  uint32_t                         :4;
  uint32_t                         u4COMPONENTBITSRED7:4;
  uint32_t                         :3;
  uint32_t                         u1ITUFORMAT7:1;
} stc_VIDEOSS_FETCHLAYER0_COLORCOMPONENTBITS7_field_t;

typedef union un_VIDEOSS_FETCHLAYER0_COLORCOMPONENTBITS7 {
  uint32_t                         u32Register;
  stc_VIDEOSS_FETCHLAYER0_COLORCOMPONENTBITS7_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_FETCHLAYER0_COLORCOMPONENTBITS7_t;

/**
  * \brief Bit position of color components for RGB, YUV and index formats (layer 7). (VIDEOSS_FETCHLAYER0_COLORCOMPONENTSHIFT7)
  */
typedef struct stc_VIDEOSS_FETCHLAYER0_COLORCOMPONENTSHIFT7_field {
  uint32_t                         u5COMPONENTSHIFTALPHA7:5;
  uint32_t                         :3;
  uint32_t                         u5COMPONENTSHIFTBLUE7:5;
  uint32_t                         :3;
  uint32_t                         u5COMPONENTSHIFTGREEN7:5;
  uint32_t                         :3;
  uint32_t                         u5COMPONENTSHIFTRED7:5;
  uint32_t                         :3;
} stc_VIDEOSS_FETCHLAYER0_COLORCOMPONENTSHIFT7_field_t;

typedef union un_VIDEOSS_FETCHLAYER0_COLORCOMPONENTSHIFT7 {
  uint32_t                         u32Register;
  stc_VIDEOSS_FETCHLAYER0_COLORCOMPONENTSHIFT7_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_FETCHLAYER0_COLORCOMPONENTSHIFT7_t;

/**
  * \brief Position of layer 7 within the destination frame. (VIDEOSS_FETCHLAYER0_LAYEROFFSET7)
  */
typedef struct stc_VIDEOSS_FETCHLAYER0_LAYEROFFSET7_field {
  uint32_t                         u15LAYERXOFFSET7:15;
  uint32_t                         :1;
  uint32_t                         u15LAYERYOFFSET7:15;
} stc_VIDEOSS_FETCHLAYER0_LAYEROFFSET7_field_t;

typedef union un_VIDEOSS_FETCHLAYER0_LAYEROFFSET7 {
  uint32_t                         u32Register;
  stc_VIDEOSS_FETCHLAYER0_LAYEROFFSET7_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_FETCHLAYER0_LAYEROFFSET7_t;

/**
  * \brief Clip window position for layer 7. (VIDEOSS_FETCHLAYER0_CLIPWINDOWOFFSET7)
  */
typedef struct stc_VIDEOSS_FETCHLAYER0_CLIPWINDOWOFFSET7_field {
  uint32_t                         u15CLIPWINDOWXOFFSET7:15;
  uint32_t                         :1;
  uint32_t                         u15CLIPWINDOWYOFFSET7:15;
} stc_VIDEOSS_FETCHLAYER0_CLIPWINDOWOFFSET7_field_t;

typedef union un_VIDEOSS_FETCHLAYER0_CLIPWINDOWOFFSET7 {
  uint32_t                         u32Register;
  stc_VIDEOSS_FETCHLAYER0_CLIPWINDOWOFFSET7_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_FETCHLAYER0_CLIPWINDOWOFFSET7_t;

/**
  * \brief Clip window size for layer 7. (VIDEOSS_FETCHLAYER0_CLIPWINDOWDIMENSIONS7)
  */
typedef struct stc_VIDEOSS_FETCHLAYER0_CLIPWINDOWDIMENSIONS7_field {
  uint32_t                         u14CLIPWINDOWWIDTH7:14;
  uint32_t                         :2;
  uint32_t                         u14CLIPWINDOWHEIGHT7:14;
  uint32_t                         :2;
} stc_VIDEOSS_FETCHLAYER0_CLIPWINDOWDIMENSIONS7_field_t;

typedef union un_VIDEOSS_FETCHLAYER0_CLIPWINDOWDIMENSIONS7 {
  uint32_t                         u32Register;
  stc_VIDEOSS_FETCHLAYER0_CLIPWINDOWDIMENSIONS7_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_FETCHLAYER0_CLIPWINDOWDIMENSIONS7_t;

/**
  * \brief Constant color for layer 7. (VIDEOSS_FETCHLAYER0_CONSTANTCOLOR7)
  */
typedef struct stc_VIDEOSS_FETCHLAYER0_CONSTANTCOLOR7_field {
  uint32_t                         u8CONSTANTALPHA7:8;
  uint32_t                         u8CONSTANTBLUE7:8;
  uint32_t                         u8CONSTANTGREEN7:8;
  uint32_t                         u8CONSTANTRED7:8;
} stc_VIDEOSS_FETCHLAYER0_CONSTANTCOLOR7_field_t;

typedef union un_VIDEOSS_FETCHLAYER0_CONSTANTCOLOR7 {
  uint32_t                         u32Register;
  stc_VIDEOSS_FETCHLAYER0_CONSTANTCOLOR7_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_FETCHLAYER0_CONSTANTCOLOR7_t;

/**
  * \brief Common properties of layer 7. (VIDEOSS_FETCHLAYER0_LAYERPROPERTY7)
  */
typedef struct stc_VIDEOSS_FETCHLAYER0_LAYERPROPERTY7_field {
  uint32_t                         u1PALETTEENABLE7:1;
  uint32_t                         u2TILEMODE7:2;
  uint32_t                         u1ALPHASRCENABLE7:1;
  uint32_t                         u1ALPHACONSTENABLE7:1;
  uint32_t                         :1;
  uint32_t                         u1ALPHATRANSENABLE7:1;
  uint32_t                         u1RGBALPHASRCENABLE7:1;
  uint32_t                         u1RGBALPHACONSTENABLE7:1;
  uint32_t                         :1;
  uint32_t                         u1RGBALPHATRANSENABLE7:1;
  uint32_t                         u1PREMULCONSTRGB7:1;
  uint32_t                         u2YUVCONVERSIONMODE7:2;
  uint32_t                         u1GAMMAREMOVEENABLE7:1;
  uint32_t                         :1;
  uint32_t                         u11PALETTEOFFSET7:11;
  uint32_t                         u3PALETTEIDWIDTH7:3;
  uint32_t                         u1CLIPWINDOWENABLE7:1;
  uint32_t                         u1SOURCEBUFFERENABLE7:1;
} stc_VIDEOSS_FETCHLAYER0_LAYERPROPERTY7_field_t;

typedef union un_VIDEOSS_FETCHLAYER0_LAYERPROPERTY7 {
  uint32_t                         u32Register;
  stc_VIDEOSS_FETCHLAYER0_LAYERPROPERTY7_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_FETCHLAYER0_LAYERPROPERTY7_t;

/**
  * \brief Output frame dimension. (VIDEOSS_FETCHLAYER0_FRAMEDIMENSIONS)
  */
typedef struct stc_VIDEOSS_FETCHLAYER0_FRAMEDIMENSIONS_field {
  uint32_t                         u14FRAMEWIDTH:14;
  uint32_t                         :2;
  uint32_t                         u14FRAMEHEIGHT:14;
  uint32_t                         :1;
  uint32_t                         u1EMPTYFRAME:1;
} stc_VIDEOSS_FETCHLAYER0_FRAMEDIMENSIONS_field_t;

typedef union un_VIDEOSS_FETCHLAYER0_FRAMEDIMENSIONS {
  uint32_t                         u32Register;
  stc_VIDEOSS_FETCHLAYER0_FRAMEDIMENSIONS_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_FETCHLAYER0_FRAMEDIMENSIONS_t;

/**
  * \brief Resampling options for output frame. (VIDEOSS_FETCHLAYER0_FRAMERESAMPLING)
  */
typedef struct stc_VIDEOSS_FETCHLAYER0_FRAMERESAMPLING_field {
  uint32_t                         u6STARTX:6;
  uint32_t                         u6STARTY:6;
  uint32_t                         u6DELTAX:6;
  uint32_t                         u6DELTAY:6;
  uint32_t                         u1SWAPDIRECTION:1;
  uint32_t                         :7;
} stc_VIDEOSS_FETCHLAYER0_FRAMERESAMPLING_field_t;

typedef union un_VIDEOSS_FETCHLAYER0_FRAMERESAMPLING {
  uint32_t                         u32Register;
  stc_VIDEOSS_FETCHLAYER0_FRAMERESAMPLING_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_FETCHLAYER0_FRAMERESAMPLING_t;

/**
  * \brief Shared common control settings for all layers. (VIDEOSS_FETCHLAYER0_CONTROL)
  */
typedef struct stc_VIDEOSS_FETCHLAYER0_CONTROL_field {
  uint32_t                         :7;
  uint32_t                         u1RAWPIXEL:1;
  uint32_t                         :8;
  uint32_t                         u1CLIPCOLOR:1;
  uint32_t                         u3CLIPLAYER:3;
  uint32_t                         :4;
  uint32_t                         u3LINEBUFLAYER:3;
  uint32_t                         :5;
} stc_VIDEOSS_FETCHLAYER0_CONTROL_field_t;

typedef union un_VIDEOSS_FETCHLAYER0_CONTROL {
  uint32_t                         u32Register;
  stc_VIDEOSS_FETCHLAYER0_CONTROL_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_FETCHLAYER0_CONTROL_t;

/**
  * \brief Shadow load enable flags for all layers. (VIDEOSS_FETCHLAYER0_TRIGGERENABLE)
  */
typedef struct stc_VIDEOSS_FETCHLAYER0_TRIGGERENABLE_field {
  uint32_t                         u8SHDLDREQ:8;
  uint32_t                         :24;
} stc_VIDEOSS_FETCHLAYER0_TRIGGERENABLE_field_t;

typedef union un_VIDEOSS_FETCHLAYER0_TRIGGERENABLE {
  uint32_t                         u32Register;
  stc_VIDEOSS_FETCHLAYER0_TRIGGERENABLE_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_FETCHLAYER0_TRIGGERENABLE_t;

/**
  * \brief Shadow load trigger. (VIDEOSS_FETCHLAYER0_CONTROLTRIGGER)
  */
typedef struct stc_VIDEOSS_FETCHLAYER0_CONTROLTRIGGER_field {
  uint32_t                         u1SHDTOKGEN:1;
  uint32_t                         :31;
} stc_VIDEOSS_FETCHLAYER0_CONTROLTRIGGER_field_t;

typedef union un_VIDEOSS_FETCHLAYER0_CONTROLTRIGGER {
  uint32_t                         u32Register;
  stc_VIDEOSS_FETCHLAYER0_CONTROLTRIGGER_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_FETCHLAYER0_CONTROLTRIGGER_t;

/**
  * \brief Frame start trigger. (VIDEOSS_FETCHLAYER0_START)
  */
typedef struct stc_VIDEOSS_FETCHLAYER0_START_field {
  uint32_t                         u1START:1;
  uint32_t                         :31;
} stc_VIDEOSS_FETCHLAYER0_START_field_t;

typedef union un_VIDEOSS_FETCHLAYER0_START {
  uint32_t                         u32Register;
  stc_VIDEOSS_FETCHLAYER0_START_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_FETCHLAYER0_START_t;

/**
  * \brief Fetch unit type. (VIDEOSS_FETCHLAYER0_FETCHTYPE)
  */
typedef struct stc_VIDEOSS_FETCHLAYER0_FETCHTYPE_field {
  uint32_t                         u4FETCHTYPE:4;
  uint32_t                         :28;
} stc_VIDEOSS_FETCHLAYER0_FETCHTYPE_field_t;

typedef union un_VIDEOSS_FETCHLAYER0_FETCHTYPE {
  uint32_t                         u32Register;
  stc_VIDEOSS_FETCHLAYER0_FETCHTYPE_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_FETCHLAYER0_FETCHTYPE_t;

/**
  * \brief Burst buffer properties. (VIDEOSS_FETCHLAYER0_BURSTBUFFERPROPERTIES)
  */
typedef struct stc_VIDEOSS_FETCHLAYER0_BURSTBUFFERPROPERTIES_field {
  uint32_t                         u8MANAGEDBURSTBUFFERS:8;
  uint32_t                         u5BURSTLENGTHFORMAXBUFFERS:5;
  uint32_t                         :19;
} stc_VIDEOSS_FETCHLAYER0_BURSTBUFFERPROPERTIES_field_t;

typedef union un_VIDEOSS_FETCHLAYER0_BURSTBUFFERPROPERTIES {
  uint32_t                         u32Register;
  stc_VIDEOSS_FETCHLAYER0_BURSTBUFFERPROPERTIES_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_FETCHLAYER0_BURSTBUFFERPROPERTIES_t;

/**
  * \brief Status information. (VIDEOSS_FETCHLAYER0_STATUS)
  */
typedef struct stc_VIDEOSS_FETCHLAYER0_STATUS_field {
  uint32_t                         u1WRITETIMEOUT:1;
  uint32_t                         :3;
  uint32_t                         u1READTIMEOUT:1;
  uint32_t                         :27;
} stc_VIDEOSS_FETCHLAYER0_STATUS_field_t;

typedef union un_VIDEOSS_FETCHLAYER0_STATUS {
  uint32_t                         u32Register;
  stc_VIDEOSS_FETCHLAYER0_STATUS_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_FETCHLAYER0_STATUS_t;



/**
  * \brief Common static control options. (VIDEOSS_FETCHDECODE4_STATICCONTROL)
  */
typedef struct stc_VIDEOSS_FETCHDECODE4_STATICCONTROL_field {
  uint32_t                         u1SHDEN:1;
  uint32_t                         u1LBHSHDEN:1;
  uint32_t                         :14;
  uint32_t                         u8BASEADDRESSAUTOUPDATE:8;
  uint32_t                         :8;
} stc_VIDEOSS_FETCHDECODE4_STATICCONTROL_field_t;

typedef union un_VIDEOSS_FETCHDECODE4_STATICCONTROL {
  uint32_t                         u32Register;
  stc_VIDEOSS_FETCHDECODE4_STATICCONTROL_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_FETCHDECODE4_STATICCONTROL_t;

/**
  * \brief AXI interface buffer management register (VIDEOSS_FETCHDECODE4_BURSTBUFFERMANAGEMENT)
  */
typedef struct stc_VIDEOSS_FETCHDECODE4_BURSTBUFFERMANAGEMENT_field {
  uint32_t                         u8SETNUMBUFFERS:8;
  uint32_t                         u5SETBURSTLENGTH:5;
  uint32_t                         :18;
  uint32_t                         u1LINEMODE:1;
} stc_VIDEOSS_FETCHDECODE4_BURSTBUFFERMANAGEMENT_field_t;

typedef union un_VIDEOSS_FETCHDECODE4_BURSTBUFFERMANAGEMENT {
  uint32_t                         u32Register;
  stc_VIDEOSS_FETCHDECODE4_BURSTBUFFERMANAGEMENT_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_FETCHDECODE4_BURSTBUFFERMANAGEMENT_t;

/**
  * \brief Ring buffer setup for layer 0. (VIDEOSS_FETCHDECODE4_RINGBUFSTARTADDR0)
  */
typedef struct stc_VIDEOSS_FETCHDECODE4_RINGBUFSTARTADDR0_field {
  uint32_t                         u32RINGBUFSTARTADDR0:32;
} stc_VIDEOSS_FETCHDECODE4_RINGBUFSTARTADDR0_field_t;

typedef union un_VIDEOSS_FETCHDECODE4_RINGBUFSTARTADDR0 {
  uint32_t                         u32Register;
  stc_VIDEOSS_FETCHDECODE4_RINGBUFSTARTADDR0_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_FETCHDECODE4_RINGBUFSTARTADDR0_t;

/**
  * \brief Ring buffer setup for layer 0. (VIDEOSS_FETCHDECODE4_RINGBUFWRAPADDR0)
  */
typedef struct stc_VIDEOSS_FETCHDECODE4_RINGBUFWRAPADDR0_field {
  uint32_t                         u32RINGBUFWRAPADDR0:32;
} stc_VIDEOSS_FETCHDECODE4_RINGBUFWRAPADDR0_field_t;

typedef union un_VIDEOSS_FETCHDECODE4_RINGBUFWRAPADDR0 {
  uint32_t                         u32Register;
  stc_VIDEOSS_FETCHDECODE4_RINGBUFWRAPADDR0_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_FETCHDECODE4_RINGBUFWRAPADDR0_t;

/**
  * \brief Frame property setup for layer 0. (VIDEOSS_FETCHDECODE4_FRAMEPROPERTIES0)
  */
typedef struct stc_VIDEOSS_FETCHDECODE4_FRAMEPROPERTIES0_field {
  uint32_t                         u1FIELDID0:1;
  uint32_t                         :31;
} stc_VIDEOSS_FETCHDECODE4_FRAMEPROPERTIES0_field_t;

typedef union un_VIDEOSS_FETCHDECODE4_FRAMEPROPERTIES0 {
  uint32_t                         u32Register;
  stc_VIDEOSS_FETCHDECODE4_FRAMEPROPERTIES0_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_FETCHDECODE4_FRAMEPROPERTIES0_t;

/**
  * \brief Source buffer base address of layer 0. (VIDEOSS_FETCHDECODE4_BASEADDRESS0)
  */
typedef struct stc_VIDEOSS_FETCHDECODE4_BASEADDRESS0_field {
  uint32_t                         u32BASEADDRESS0:32;
} stc_VIDEOSS_FETCHDECODE4_BASEADDRESS0_field_t;

typedef union un_VIDEOSS_FETCHDECODE4_BASEADDRESS0 {
  uint32_t                         u32Register;
  stc_VIDEOSS_FETCHDECODE4_BASEADDRESS0_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_FETCHDECODE4_BASEADDRESS0_t;

/**
  * \brief Source buffer attributes for layer 0. (VIDEOSS_FETCHDECODE4_SOURCEBUFFERATTRIBUTES0)
  */
typedef struct stc_VIDEOSS_FETCHDECODE4_SOURCEBUFFERATTRIBUTES0_field {
  uint32_t                         u16STRIDE0:16;
  uint32_t                         u6BITSPERPIXEL0:6;
  uint32_t                         :10;
} stc_VIDEOSS_FETCHDECODE4_SOURCEBUFFERATTRIBUTES0_field_t;

typedef union un_VIDEOSS_FETCHDECODE4_SOURCEBUFFERATTRIBUTES0 {
  uint32_t                         u32Register;
  stc_VIDEOSS_FETCHDECODE4_SOURCEBUFFERATTRIBUTES0_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_FETCHDECODE4_SOURCEBUFFERATTRIBUTES0_t;

/**
  * \brief Source buffer dimension of layer 0. (VIDEOSS_FETCHDECODE4_SOURCEBUFFERDIMENSION0)
  */
typedef struct stc_VIDEOSS_FETCHDECODE4_SOURCEBUFFERDIMENSION0_field {
  uint32_t                         u14LINEWIDTH0:14;
  uint32_t                         :2;
  uint32_t                         u14LINECOUNT0:14;
  uint32_t                         :2;
} stc_VIDEOSS_FETCHDECODE4_SOURCEBUFFERDIMENSION0_field_t;

typedef union un_VIDEOSS_FETCHDECODE4_SOURCEBUFFERDIMENSION0 {
  uint32_t                         u32Register;
  stc_VIDEOSS_FETCHDECODE4_SOURCEBUFFERDIMENSION0_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_FETCHDECODE4_SOURCEBUFFERDIMENSION0_t;

/**
  * \brief Size of color components for RGB, YUV and index formats (layer 0). (VIDEOSS_FETCHDECODE4_COLORCOMPONENTBITS0)
  */
typedef struct stc_VIDEOSS_FETCHDECODE4_COLORCOMPONENTBITS0_field {
  uint32_t                         u4COMPONENTBITSALPHA0:4;
  uint32_t                         :4;
  uint32_t                         u4COMPONENTBITSBLUE0:4;
  uint32_t                         :4;
  uint32_t                         u4COMPONENTBITSGREEN0:4;
  uint32_t                         :4;
  uint32_t                         u4COMPONENTBITSRED0:4;
  uint32_t                         :3;
  uint32_t                         u1ITUFORMAT0:1;
} stc_VIDEOSS_FETCHDECODE4_COLORCOMPONENTBITS0_field_t;

typedef union un_VIDEOSS_FETCHDECODE4_COLORCOMPONENTBITS0 {
  uint32_t                         u32Register;
  stc_VIDEOSS_FETCHDECODE4_COLORCOMPONENTBITS0_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_FETCHDECODE4_COLORCOMPONENTBITS0_t;

/**
  * \brief Bit position of color components for RGB, YUV and index formats (layer 0). (VIDEOSS_FETCHDECODE4_COLORCOMPONENTSHIFT0)
  */
typedef struct stc_VIDEOSS_FETCHDECODE4_COLORCOMPONENTSHIFT0_field {
  uint32_t                         u5COMPONENTSHIFTALPHA0:5;
  uint32_t                         :3;
  uint32_t                         u5COMPONENTSHIFTBLUE0:5;
  uint32_t                         :3;
  uint32_t                         u5COMPONENTSHIFTGREEN0:5;
  uint32_t                         :3;
  uint32_t                         u5COMPONENTSHIFTRED0:5;
  uint32_t                         :3;
} stc_VIDEOSS_FETCHDECODE4_COLORCOMPONENTSHIFT0_field_t;

typedef union un_VIDEOSS_FETCHDECODE4_COLORCOMPONENTSHIFT0 {
  uint32_t                         u32Register;
  stc_VIDEOSS_FETCHDECODE4_COLORCOMPONENTSHIFT0_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_FETCHDECODE4_COLORCOMPONENTSHIFT0_t;

/**
  * \brief Position of layer 0 within the destination frame. (VIDEOSS_FETCHDECODE4_LAYEROFFSET0)
  */
typedef struct stc_VIDEOSS_FETCHDECODE4_LAYEROFFSET0_field {
  uint32_t                         u15LAYERXOFFSET0:15;
  uint32_t                         :1;
  uint32_t                         u15LAYERYOFFSET0:15;
} stc_VIDEOSS_FETCHDECODE4_LAYEROFFSET0_field_t;

typedef union un_VIDEOSS_FETCHDECODE4_LAYEROFFSET0 {
  uint32_t                         u32Register;
  stc_VIDEOSS_FETCHDECODE4_LAYEROFFSET0_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_FETCHDECODE4_LAYEROFFSET0_t;

/**
  * \brief Clip window position for layer 0. (VIDEOSS_FETCHDECODE4_CLIPWINDOWOFFSET0)
  */
typedef struct stc_VIDEOSS_FETCHDECODE4_CLIPWINDOWOFFSET0_field {
  uint32_t                         u15CLIPWINDOWXOFFSET0:15;
  uint32_t                         :1;
  uint32_t                         u15CLIPWINDOWYOFFSET0:15;
} stc_VIDEOSS_FETCHDECODE4_CLIPWINDOWOFFSET0_field_t;

typedef union un_VIDEOSS_FETCHDECODE4_CLIPWINDOWOFFSET0 {
  uint32_t                         u32Register;
  stc_VIDEOSS_FETCHDECODE4_CLIPWINDOWOFFSET0_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_FETCHDECODE4_CLIPWINDOWOFFSET0_t;

/**
  * \brief Clip window size for layer 0. (VIDEOSS_FETCHDECODE4_CLIPWINDOWDIMENSIONS0)
  */
typedef struct stc_VIDEOSS_FETCHDECODE4_CLIPWINDOWDIMENSIONS0_field {
  uint32_t                         u14CLIPWINDOWWIDTH0:14;
  uint32_t                         :2;
  uint32_t                         u14CLIPWINDOWHEIGHT0:14;
  uint32_t                         :2;
} stc_VIDEOSS_FETCHDECODE4_CLIPWINDOWDIMENSIONS0_field_t;

typedef union un_VIDEOSS_FETCHDECODE4_CLIPWINDOWDIMENSIONS0 {
  uint32_t                         u32Register;
  stc_VIDEOSS_FETCHDECODE4_CLIPWINDOWDIMENSIONS0_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_FETCHDECODE4_CLIPWINDOWDIMENSIONS0_t;

/**
  * \brief Constant color for layer 0. (VIDEOSS_FETCHDECODE4_CONSTANTCOLOR0)
  */
typedef struct stc_VIDEOSS_FETCHDECODE4_CONSTANTCOLOR0_field {
  uint32_t                         u8CONSTANTALPHA0:8;
  uint32_t                         u8CONSTANTBLUE0:8;
  uint32_t                         u8CONSTANTGREEN0:8;
  uint32_t                         u8CONSTANTRED0:8;
} stc_VIDEOSS_FETCHDECODE4_CONSTANTCOLOR0_field_t;

typedef union un_VIDEOSS_FETCHDECODE4_CONSTANTCOLOR0 {
  uint32_t                         u32Register;
  stc_VIDEOSS_FETCHDECODE4_CONSTANTCOLOR0_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_FETCHDECODE4_CONSTANTCOLOR0_t;

/**
  * \brief Common properties of layer 0. (VIDEOSS_FETCHDECODE4_LAYERPROPERTY0)
  */
typedef struct stc_VIDEOSS_FETCHDECODE4_LAYERPROPERTY0_field {
  uint32_t                         u1PALETTEENABLE0:1;
  uint32_t                         u2TILEMODE0:2;
  uint32_t                         u1ALPHASRCENABLE0:1;
  uint32_t                         u1ALPHACONSTENABLE0:1;
  uint32_t                         u1ALPHAMASKENABLE0:1;
  uint32_t                         u1ALPHATRANSENABLE0:1;
  uint32_t                         u1RGBALPHASRCENABLE0:1;
  uint32_t                         u1RGBALPHACONSTENABLE0:1;
  uint32_t                         u1RGBALPHAMASKENABLE0:1;
  uint32_t                         u1RGBALPHATRANSENABLE0:1;
  uint32_t                         u1PREMULCONSTRGB0:1;
  uint32_t                         u2YUVCONVERSIONMODE0:2;
  uint32_t                         u1GAMMAREMOVEENABLE0:1;
  uint32_t                         :1;
  uint32_t                         u11PALETTEOFFSET0:11;
  uint32_t                         u3PALETTEIDWIDTH0:3;
  uint32_t                         u1CLIPWINDOWENABLE0:1;
  uint32_t                         u1SOURCEBUFFERENABLE0:1;
} stc_VIDEOSS_FETCHDECODE4_LAYERPROPERTY0_field_t;

typedef union un_VIDEOSS_FETCHDECODE4_LAYERPROPERTY0 {
  uint32_t                         u32Register;
  stc_VIDEOSS_FETCHDECODE4_LAYERPROPERTY0_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_FETCHDECODE4_LAYERPROPERTY0_t;

/**
  * \brief Output frame dimension. (VIDEOSS_FETCHDECODE4_FRAMEDIMENSIONS)
  */
typedef struct stc_VIDEOSS_FETCHDECODE4_FRAMEDIMENSIONS_field {
  uint32_t                         u14FRAMEWIDTH:14;
  uint32_t                         :2;
  uint32_t                         u14FRAMEHEIGHT:14;
  uint32_t                         :1;
  uint32_t                         u1EMPTYFRAME:1;
} stc_VIDEOSS_FETCHDECODE4_FRAMEDIMENSIONS_field_t;

typedef union un_VIDEOSS_FETCHDECODE4_FRAMEDIMENSIONS {
  uint32_t                         u32Register;
  stc_VIDEOSS_FETCHDECODE4_FRAMEDIMENSIONS_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_FETCHDECODE4_FRAMEDIMENSIONS_t;

/**
  * \brief Resampling options for output frame. (VIDEOSS_FETCHDECODE4_FRAMERESAMPLING)
  */
typedef struct stc_VIDEOSS_FETCHDECODE4_FRAMERESAMPLING_field {
  uint32_t                         u6STARTX:6;
  uint32_t                         u6STARTY:6;
  uint32_t                         u6DELTAX:6;
  uint32_t                         u6DELTAY:6;
  uint32_t                         u1SWAPDIRECTION:1;
  uint32_t                         :7;
} stc_VIDEOSS_FETCHDECODE4_FRAMERESAMPLING_field_t;

typedef union un_VIDEOSS_FETCHDECODE4_FRAMERESAMPLING {
  uint32_t                         u32Register;
  stc_VIDEOSS_FETCHDECODE4_FRAMERESAMPLING_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_FETCHDECODE4_FRAMERESAMPLING_t;

/**
  * \brief Control options for RLAD decompression. (VIDEOSS_FETCHDECODE4_DECODECONTROL)
  */
typedef struct stc_VIDEOSS_FETCHDECODE4_DECODECONTROL_field {
  uint32_t                         u2COMPRESSIONMODE:2;
  uint32_t                         :14;
  uint32_t                         u4RLADCOMPBITSRED:4;
  uint32_t                         u4RLADCOMPBITSGREEN:4;
  uint32_t                         u4RLADCOMPBITSBLUE:4;
  uint32_t                         u4RLADCOMPBITSALPHA:4;
} stc_VIDEOSS_FETCHDECODE4_DECODECONTROL_field_t;

typedef union un_VIDEOSS_FETCHDECODE4_DECODECONTROL {
  uint32_t                         u32Register;
  stc_VIDEOSS_FETCHDECODE4_DECODECONTROL_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_FETCHDECODE4_DECODECONTROL_t;

/**
  * \brief Source buffer length for compressed data. (VIDEOSS_FETCHDECODE4_SOURCEBUFFERLENGTH)
  */
typedef struct stc_VIDEOSS_FETCHDECODE4_SOURCEBUFFERLENGTH_field {
  uint32_t                         u29RLEWORDS:29;
  uint32_t                         :3;
} stc_VIDEOSS_FETCHDECODE4_SOURCEBUFFERLENGTH_field_t;

typedef union un_VIDEOSS_FETCHDECODE4_SOURCEBUFFERLENGTH {
  uint32_t                         u32Register;
  stc_VIDEOSS_FETCHDECODE4_SOURCEBUFFERLENGTH_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_FETCHDECODE4_SOURCEBUFFERLENGTH_t;

/**
  * \brief Shared common control settings for all layers. (VIDEOSS_FETCHDECODE4_CONTROL)
  */
typedef struct stc_VIDEOSS_FETCHDECODE4_CONTROL_field {
  uint32_t                         u3RASTERMODE:3;
  uint32_t                         u2INPUTSELECT:2;
  uint32_t                         u1YUV422UPSAMPLINGMODE:1;
  uint32_t                         :1;
  uint32_t                         u1RAWPIXEL:1;
  uint32_t                         :8;
  uint32_t                         u1CLIPCOLOR:1;
  uint32_t                         :15;
} stc_VIDEOSS_FETCHDECODE4_CONTROL_field_t;

typedef union un_VIDEOSS_FETCHDECODE4_CONTROL {
  uint32_t                         u32Register;
  stc_VIDEOSS_FETCHDECODE4_CONTROL_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_FETCHDECODE4_CONTROL_t;

/**
  * \brief Shadow load trigger. (VIDEOSS_FETCHDECODE4_CONTROLTRIGGER)
  */
typedef struct stc_VIDEOSS_FETCHDECODE4_CONTROLTRIGGER_field {
  uint32_t                         u1SHDTOKGEN:1;
  uint32_t                         :31;
} stc_VIDEOSS_FETCHDECODE4_CONTROLTRIGGER_field_t;

typedef union un_VIDEOSS_FETCHDECODE4_CONTROLTRIGGER {
  uint32_t                         u32Register;
  stc_VIDEOSS_FETCHDECODE4_CONTROLTRIGGER_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_FETCHDECODE4_CONTROLTRIGGER_t;

/**
  * \brief Frame start trigger. (VIDEOSS_FETCHDECODE4_START)
  */
typedef struct stc_VIDEOSS_FETCHDECODE4_START_field {
  uint32_t                         u1START:1;
  uint32_t                         :31;
} stc_VIDEOSS_FETCHDECODE4_START_field_t;

typedef union un_VIDEOSS_FETCHDECODE4_START {
  uint32_t                         u32Register;
  stc_VIDEOSS_FETCHDECODE4_START_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_FETCHDECODE4_START_t;

/**
  * \brief Fetch unit type. (VIDEOSS_FETCHDECODE4_FETCHTYPE)
  */
typedef struct stc_VIDEOSS_FETCHDECODE4_FETCHTYPE_field {
  uint32_t                         u4FETCHTYPE:4;
  uint32_t                         :28;
} stc_VIDEOSS_FETCHDECODE4_FETCHTYPE_field_t;

typedef union un_VIDEOSS_FETCHDECODE4_FETCHTYPE {
  uint32_t                         u32Register;
  stc_VIDEOSS_FETCHDECODE4_FETCHTYPE_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_FETCHDECODE4_FETCHTYPE_t;

/**
  * \brief Status information of the RLAD decoder. (VIDEOSS_FETCHDECODE4_DECODERSTATUS)
  */
typedef struct stc_VIDEOSS_FETCHDECODE4_DECODERSTATUS_field {
  uint32_t                         u1BUFFERTOOSMALL:1;
  uint32_t                         u1BUFFERTOOLARGE:1;
  uint32_t                         :30;
} stc_VIDEOSS_FETCHDECODE4_DECODERSTATUS_field_t;

typedef union un_VIDEOSS_FETCHDECODE4_DECODERSTATUS {
  uint32_t                         u32Register;
  stc_VIDEOSS_FETCHDECODE4_DECODERSTATUS_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_FETCHDECODE4_DECODERSTATUS_t;

/**
  * \brief Ring buffer synchronization for layer 0. (VIDEOSS_FETCHDECODE4_READADDRESS0)
  */
typedef struct stc_VIDEOSS_FETCHDECODE4_READADDRESS0_field {
  uint32_t                         u32READADDRESS0:32;
} stc_VIDEOSS_FETCHDECODE4_READADDRESS0_field_t;

typedef union un_VIDEOSS_FETCHDECODE4_READADDRESS0 {
  uint32_t                         u32Register;
  stc_VIDEOSS_FETCHDECODE4_READADDRESS0_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_FETCHDECODE4_READADDRESS0_t;

/**
  * \brief Burst buffer properties. (VIDEOSS_FETCHDECODE4_BURSTBUFFERPROPERTIES)
  */
typedef struct stc_VIDEOSS_FETCHDECODE4_BURSTBUFFERPROPERTIES_field {
  uint32_t                         u8MANAGEDBURSTBUFFERS:8;
  uint32_t                         u5BURSTLENGTHFORMAXBUFFERS:5;
  uint32_t                         :19;
} stc_VIDEOSS_FETCHDECODE4_BURSTBUFFERPROPERTIES_field_t;

typedef union un_VIDEOSS_FETCHDECODE4_BURSTBUFFERPROPERTIES {
  uint32_t                         u32Register;
  stc_VIDEOSS_FETCHDECODE4_BURSTBUFFERPROPERTIES_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_FETCHDECODE4_BURSTBUFFERPROPERTIES_t;

/**
  * \brief Status information. (VIDEOSS_FETCHDECODE4_STATUS)
  */
typedef struct stc_VIDEOSS_FETCHDECODE4_STATUS_field {
  uint32_t                         u1WRITETIMEOUT:1;
  uint32_t                         :3;
  uint32_t                         u1READTIMEOUT:1;
  uint32_t                         :27;
} stc_VIDEOSS_FETCHDECODE4_STATUS_field_t;

typedef union un_VIDEOSS_FETCHDECODE4_STATUS {
  uint32_t                         u32Register;
  stc_VIDEOSS_FETCHDECODE4_STATUS_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_FETCHDECODE4_STATUS_t;



/**
  * \brief Common static control options. (VIDEOSS_FETCHECO4_STATICCONTROL)
  */
typedef struct stc_VIDEOSS_FETCHECO4_STATICCONTROL_field {
  uint32_t                         u1SHDEN:1;
  uint32_t                         :15;
  uint32_t                         u8BASEADDRESSAUTOUPDATE:8;
  uint32_t                         :8;
} stc_VIDEOSS_FETCHECO4_STATICCONTROL_field_t;

typedef union un_VIDEOSS_FETCHECO4_STATICCONTROL {
  uint32_t                         u32Register;
  stc_VIDEOSS_FETCHECO4_STATICCONTROL_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_FETCHECO4_STATICCONTROL_t;

/**
  * \brief AXI interface buffer management register (VIDEOSS_FETCHECO4_BURSTBUFFERMANAGEMENT)
  */
typedef struct stc_VIDEOSS_FETCHECO4_BURSTBUFFERMANAGEMENT_field {
  uint32_t                         u8SETNUMBUFFERS:8;
  uint32_t                         u5SETBURSTLENGTH:5;
  uint32_t                         :18;
  uint32_t                         u1LINEMODE:1;
} stc_VIDEOSS_FETCHECO4_BURSTBUFFERMANAGEMENT_field_t;

typedef union un_VIDEOSS_FETCHECO4_BURSTBUFFERMANAGEMENT {
  uint32_t                         u32Register;
  stc_VIDEOSS_FETCHECO4_BURSTBUFFERMANAGEMENT_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_FETCHECO4_BURSTBUFFERMANAGEMENT_t;

/**
  * \brief Source buffer base address of layer 0. (VIDEOSS_FETCHECO4_BASEADDRESS0)
  */
typedef struct stc_VIDEOSS_FETCHECO4_BASEADDRESS0_field {
  uint32_t                         u32BASEADDRESS0:32;
} stc_VIDEOSS_FETCHECO4_BASEADDRESS0_field_t;

typedef union un_VIDEOSS_FETCHECO4_BASEADDRESS0 {
  uint32_t                         u32Register;
  stc_VIDEOSS_FETCHECO4_BASEADDRESS0_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_FETCHECO4_BASEADDRESS0_t;

/**
  * \brief Source buffer attributes for layer 0. (VIDEOSS_FETCHECO4_SOURCEBUFFERATTRIBUTES0)
  */
typedef struct stc_VIDEOSS_FETCHECO4_SOURCEBUFFERATTRIBUTES0_field {
  uint32_t                         u16STRIDE0:16;
  uint32_t                         u6BITSPERPIXEL0:6;
  uint32_t                         :10;
} stc_VIDEOSS_FETCHECO4_SOURCEBUFFERATTRIBUTES0_field_t;

typedef union un_VIDEOSS_FETCHECO4_SOURCEBUFFERATTRIBUTES0 {
  uint32_t                         u32Register;
  stc_VIDEOSS_FETCHECO4_SOURCEBUFFERATTRIBUTES0_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_FETCHECO4_SOURCEBUFFERATTRIBUTES0_t;

/**
  * \brief Source buffer dimension of layer 0. (VIDEOSS_FETCHECO4_SOURCEBUFFERDIMENSION0)
  */
typedef struct stc_VIDEOSS_FETCHECO4_SOURCEBUFFERDIMENSION0_field {
  uint32_t                         u14LINEWIDTH0:14;
  uint32_t                         :2;
  uint32_t                         u14LINECOUNT0:14;
  uint32_t                         :2;
} stc_VIDEOSS_FETCHECO4_SOURCEBUFFERDIMENSION0_field_t;

typedef union un_VIDEOSS_FETCHECO4_SOURCEBUFFERDIMENSION0 {
  uint32_t                         u32Register;
  stc_VIDEOSS_FETCHECO4_SOURCEBUFFERDIMENSION0_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_FETCHECO4_SOURCEBUFFERDIMENSION0_t;

/**
  * \brief Size of color components for RGB, YUV and index formats (layer 0). (VIDEOSS_FETCHECO4_COLORCOMPONENTBITS0)
  */
typedef struct stc_VIDEOSS_FETCHECO4_COLORCOMPONENTBITS0_field {
  uint32_t                         u4COMPONENTBITSALPHA0:4;
  uint32_t                         :4;
  uint32_t                         u4COMPONENTBITSBLUE0:4;
  uint32_t                         :4;
  uint32_t                         u4COMPONENTBITSGREEN0:4;
  uint32_t                         :4;
  uint32_t                         u4COMPONENTBITSRED0:4;
  uint32_t                         :3;
  uint32_t                         u1ITUFORMAT0:1;
} stc_VIDEOSS_FETCHECO4_COLORCOMPONENTBITS0_field_t;

typedef union un_VIDEOSS_FETCHECO4_COLORCOMPONENTBITS0 {
  uint32_t                         u32Register;
  stc_VIDEOSS_FETCHECO4_COLORCOMPONENTBITS0_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_FETCHECO4_COLORCOMPONENTBITS0_t;

/**
  * \brief Bit position of color components for RGB, YUV and index formats (layer 0). (VIDEOSS_FETCHECO4_COLORCOMPONENTSHIFT0)
  */
typedef struct stc_VIDEOSS_FETCHECO4_COLORCOMPONENTSHIFT0_field {
  uint32_t                         u5COMPONENTSHIFTALPHA0:5;
  uint32_t                         :3;
  uint32_t                         u5COMPONENTSHIFTBLUE0:5;
  uint32_t                         :3;
  uint32_t                         u5COMPONENTSHIFTGREEN0:5;
  uint32_t                         :3;
  uint32_t                         u5COMPONENTSHIFTRED0:5;
  uint32_t                         :3;
} stc_VIDEOSS_FETCHECO4_COLORCOMPONENTSHIFT0_field_t;

typedef union un_VIDEOSS_FETCHECO4_COLORCOMPONENTSHIFT0 {
  uint32_t                         u32Register;
  stc_VIDEOSS_FETCHECO4_COLORCOMPONENTSHIFT0_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_FETCHECO4_COLORCOMPONENTSHIFT0_t;

/**
  * \brief Position of layer 0 within the destination frame. (VIDEOSS_FETCHECO4_LAYEROFFSET0)
  */
typedef struct stc_VIDEOSS_FETCHECO4_LAYEROFFSET0_field {
  uint32_t                         u15LAYERXOFFSET0:15;
  uint32_t                         :1;
  uint32_t                         u15LAYERYOFFSET0:15;
} stc_VIDEOSS_FETCHECO4_LAYEROFFSET0_field_t;

typedef union un_VIDEOSS_FETCHECO4_LAYEROFFSET0 {
  uint32_t                         u32Register;
  stc_VIDEOSS_FETCHECO4_LAYEROFFSET0_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_FETCHECO4_LAYEROFFSET0_t;

/**
  * \brief Clip window position for layer 0. (VIDEOSS_FETCHECO4_CLIPWINDOWOFFSET0)
  */
typedef struct stc_VIDEOSS_FETCHECO4_CLIPWINDOWOFFSET0_field {
  uint32_t                         u15CLIPWINDOWXOFFSET0:15;
  uint32_t                         :1;
  uint32_t                         u15CLIPWINDOWYOFFSET0:15;
} stc_VIDEOSS_FETCHECO4_CLIPWINDOWOFFSET0_field_t;

typedef union un_VIDEOSS_FETCHECO4_CLIPWINDOWOFFSET0 {
  uint32_t                         u32Register;
  stc_VIDEOSS_FETCHECO4_CLIPWINDOWOFFSET0_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_FETCHECO4_CLIPWINDOWOFFSET0_t;

/**
  * \brief Clip window size for layer 0. (VIDEOSS_FETCHECO4_CLIPWINDOWDIMENSIONS0)
  */
typedef struct stc_VIDEOSS_FETCHECO4_CLIPWINDOWDIMENSIONS0_field {
  uint32_t                         u14CLIPWINDOWWIDTH0:14;
  uint32_t                         :2;
  uint32_t                         u14CLIPWINDOWHEIGHT0:14;
  uint32_t                         :2;
} stc_VIDEOSS_FETCHECO4_CLIPWINDOWDIMENSIONS0_field_t;

typedef union un_VIDEOSS_FETCHECO4_CLIPWINDOWDIMENSIONS0 {
  uint32_t                         u32Register;
  stc_VIDEOSS_FETCHECO4_CLIPWINDOWDIMENSIONS0_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_FETCHECO4_CLIPWINDOWDIMENSIONS0_t;

/**
  * \brief Constant color for layer 0. (VIDEOSS_FETCHECO4_CONSTANTCOLOR0)
  */
typedef struct stc_VIDEOSS_FETCHECO4_CONSTANTCOLOR0_field {
  uint32_t                         u8CONSTANTALPHA0:8;
  uint32_t                         u8CONSTANTBLUE0:8;
  uint32_t                         u8CONSTANTGREEN0:8;
  uint32_t                         u8CONSTANTRED0:8;
} stc_VIDEOSS_FETCHECO4_CONSTANTCOLOR0_field_t;

typedef union un_VIDEOSS_FETCHECO4_CONSTANTCOLOR0 {
  uint32_t                         u32Register;
  stc_VIDEOSS_FETCHECO4_CONSTANTCOLOR0_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_FETCHECO4_CONSTANTCOLOR0_t;

/**
  * \brief Common properties of layer 0. (VIDEOSS_FETCHECO4_LAYERPROPERTY0)
  */
typedef struct stc_VIDEOSS_FETCHECO4_LAYERPROPERTY0_field {
  uint32_t                         :1;
  uint32_t                         u2TILEMODE0:2;
  uint32_t                         :27;
  uint32_t                         u1CLIPWINDOWENABLE0:1;
  uint32_t                         u1SOURCEBUFFERENABLE0:1;
} stc_VIDEOSS_FETCHECO4_LAYERPROPERTY0_field_t;

typedef union un_VIDEOSS_FETCHECO4_LAYERPROPERTY0 {
  uint32_t                         u32Register;
  stc_VIDEOSS_FETCHECO4_LAYERPROPERTY0_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_FETCHECO4_LAYERPROPERTY0_t;

/**
  * \brief Output frame dimension. (VIDEOSS_FETCHECO4_FRAMEDIMENSIONS)
  */
typedef struct stc_VIDEOSS_FETCHECO4_FRAMEDIMENSIONS_field {
  uint32_t                         u14FRAMEWIDTH:14;
  uint32_t                         :2;
  uint32_t                         u14FRAMEHEIGHT:14;
  uint32_t                         :1;
  uint32_t                         u1EMPTYFRAME:1;
} stc_VIDEOSS_FETCHECO4_FRAMEDIMENSIONS_field_t;

typedef union un_VIDEOSS_FETCHECO4_FRAMEDIMENSIONS {
  uint32_t                         u32Register;
  stc_VIDEOSS_FETCHECO4_FRAMEDIMENSIONS_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_FETCHECO4_FRAMEDIMENSIONS_t;

/**
  * \brief Resampling options for output frame. (VIDEOSS_FETCHECO4_FRAMERESAMPLING)
  */
typedef struct stc_VIDEOSS_FETCHECO4_FRAMERESAMPLING_field {
  uint32_t                         u6STARTX:6;
  uint32_t                         u6STARTY:6;
  uint32_t                         u6DELTAX:6;
  uint32_t                         u6DELTAY:6;
  uint32_t                         u1SWAPDIRECTION:1;
  uint32_t                         :7;
} stc_VIDEOSS_FETCHECO4_FRAMERESAMPLING_field_t;

typedef union un_VIDEOSS_FETCHECO4_FRAMERESAMPLING {
  uint32_t                         u32Register;
  stc_VIDEOSS_FETCHECO4_FRAMERESAMPLING_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_FETCHECO4_FRAMERESAMPLING_t;

/**
  * \brief Shared common control settings for all layers. (VIDEOSS_FETCHECO4_CONTROL)
  */
typedef struct stc_VIDEOSS_FETCHECO4_CONTROL_field {
  uint32_t                         :7;
  uint32_t                         u1RAWPIXEL:1;
  uint32_t                         :8;
  uint32_t                         u1CLIPCOLOR:1;
  uint32_t                         :15;
} stc_VIDEOSS_FETCHECO4_CONTROL_field_t;

typedef union un_VIDEOSS_FETCHECO4_CONTROL {
  uint32_t                         u32Register;
  stc_VIDEOSS_FETCHECO4_CONTROL_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_FETCHECO4_CONTROL_t;

/**
  * \brief Shadow load trigger. (VIDEOSS_FETCHECO4_CONTROLTRIGGER)
  */
typedef struct stc_VIDEOSS_FETCHECO4_CONTROLTRIGGER_field {
  uint32_t                         u1SHDTOKGEN:1;
  uint32_t                         :31;
} stc_VIDEOSS_FETCHECO4_CONTROLTRIGGER_field_t;

typedef union un_VIDEOSS_FETCHECO4_CONTROLTRIGGER {
  uint32_t                         u32Register;
  stc_VIDEOSS_FETCHECO4_CONTROLTRIGGER_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_FETCHECO4_CONTROLTRIGGER_t;

/**
  * \brief Frame start trigger. (VIDEOSS_FETCHECO4_START)
  */
typedef struct stc_VIDEOSS_FETCHECO4_START_field {
  uint32_t                         u1START:1;
  uint32_t                         :31;
} stc_VIDEOSS_FETCHECO4_START_field_t;

typedef union un_VIDEOSS_FETCHECO4_START {
  uint32_t                         u32Register;
  stc_VIDEOSS_FETCHECO4_START_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_FETCHECO4_START_t;

/**
  * \brief Fetch unit type. (VIDEOSS_FETCHECO4_FETCHTYPE)
  */
typedef struct stc_VIDEOSS_FETCHECO4_FETCHTYPE_field {
  uint32_t                         u4FETCHTYPE:4;
  uint32_t                         :28;
} stc_VIDEOSS_FETCHECO4_FETCHTYPE_field_t;

typedef union un_VIDEOSS_FETCHECO4_FETCHTYPE {
  uint32_t                         u32Register;
  stc_VIDEOSS_FETCHECO4_FETCHTYPE_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_FETCHECO4_FETCHTYPE_t;

/**
  * \brief Burst buffer properties. (VIDEOSS_FETCHECO4_BURSTBUFFERPROPERTIES)
  */
typedef struct stc_VIDEOSS_FETCHECO4_BURSTBUFFERPROPERTIES_field {
  uint32_t                         u8MANAGEDBURSTBUFFERS:8;
  uint32_t                         u5BURSTLENGTHFORMAXBUFFERS:5;
  uint32_t                         :19;
} stc_VIDEOSS_FETCHECO4_BURSTBUFFERPROPERTIES_field_t;

typedef union un_VIDEOSS_FETCHECO4_BURSTBUFFERPROPERTIES {
  uint32_t                         u32Register;
  stc_VIDEOSS_FETCHECO4_BURSTBUFFERPROPERTIES_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_FETCHECO4_BURSTBUFFERPROPERTIES_t;



/**
  * \brief Common static control options. (VIDEOSS_FETCHWARP1_STATICCONTROL)
  */
typedef struct stc_VIDEOSS_FETCHWARP1_STATICCONTROL_field {
  uint32_t                         u1SHDEN:1;
  uint32_t                         u1LBHSHDEN:1;
  uint32_t                         :14;
  uint32_t                         u8BASEADDRESSAUTOUPDATE:8;
  uint32_t                         u8SHDLDREQSTICKY:8;
} stc_VIDEOSS_FETCHWARP1_STATICCONTROL_field_t;

typedef union un_VIDEOSS_FETCHWARP1_STATICCONTROL {
  uint32_t                         u32Register;
  stc_VIDEOSS_FETCHWARP1_STATICCONTROL_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_FETCHWARP1_STATICCONTROL_t;

/**
  * \brief AXI interface buffer management register (VIDEOSS_FETCHWARP1_BURSTBUFFERMANAGEMENT)
  */
typedef struct stc_VIDEOSS_FETCHWARP1_BURSTBUFFERMANAGEMENT_field {
  uint32_t                         u8SETNUMBUFFERS:8;
  uint32_t                         u5SETBURSTLENGTH:5;
  uint32_t                         :18;
  uint32_t                         u1LINEMODE:1;
} stc_VIDEOSS_FETCHWARP1_BURSTBUFFERMANAGEMENT_field_t;

typedef union un_VIDEOSS_FETCHWARP1_BURSTBUFFERMANAGEMENT {
  uint32_t                         u32Register;
  stc_VIDEOSS_FETCHWARP1_BURSTBUFFERMANAGEMENT_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_FETCHWARP1_BURSTBUFFERMANAGEMENT_t;

/**
  * \brief Source buffer base address of layer 0. (VIDEOSS_FETCHWARP1_BASEADDRESS0)
  */
typedef struct stc_VIDEOSS_FETCHWARP1_BASEADDRESS0_field {
  uint32_t                         u32BASEADDRESS0:32;
} stc_VIDEOSS_FETCHWARP1_BASEADDRESS0_field_t;

typedef union un_VIDEOSS_FETCHWARP1_BASEADDRESS0 {
  uint32_t                         u32Register;
  stc_VIDEOSS_FETCHWARP1_BASEADDRESS0_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_FETCHWARP1_BASEADDRESS0_t;

/**
  * \brief Source buffer attributes for layer 0. (VIDEOSS_FETCHWARP1_SOURCEBUFFERATTRIBUTES0)
  */
typedef struct stc_VIDEOSS_FETCHWARP1_SOURCEBUFFERATTRIBUTES0_field {
  uint32_t                         u16STRIDE0:16;
  uint32_t                         u6BITSPERPIXEL0:6;
  uint32_t                         :10;
} stc_VIDEOSS_FETCHWARP1_SOURCEBUFFERATTRIBUTES0_field_t;

typedef union un_VIDEOSS_FETCHWARP1_SOURCEBUFFERATTRIBUTES0 {
  uint32_t                         u32Register;
  stc_VIDEOSS_FETCHWARP1_SOURCEBUFFERATTRIBUTES0_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_FETCHWARP1_SOURCEBUFFERATTRIBUTES0_t;

/**
  * \brief Source buffer dimension of layer 0. (VIDEOSS_FETCHWARP1_SOURCEBUFFERDIMENSION0)
  */
typedef struct stc_VIDEOSS_FETCHWARP1_SOURCEBUFFERDIMENSION0_field {
  uint32_t                         u14LINEWIDTH0:14;
  uint32_t                         :2;
  uint32_t                         u14LINECOUNT0:14;
  uint32_t                         :2;
} stc_VIDEOSS_FETCHWARP1_SOURCEBUFFERDIMENSION0_field_t;

typedef union un_VIDEOSS_FETCHWARP1_SOURCEBUFFERDIMENSION0 {
  uint32_t                         u32Register;
  stc_VIDEOSS_FETCHWARP1_SOURCEBUFFERDIMENSION0_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_FETCHWARP1_SOURCEBUFFERDIMENSION0_t;

/**
  * \brief Size of color components for RGB, YUV and index formats (layer 0). (VIDEOSS_FETCHWARP1_COLORCOMPONENTBITS0)
  */
typedef struct stc_VIDEOSS_FETCHWARP1_COLORCOMPONENTBITS0_field {
  uint32_t                         u4COMPONENTBITSALPHA0:4;
  uint32_t                         :4;
  uint32_t                         u4COMPONENTBITSBLUE0:4;
  uint32_t                         :4;
  uint32_t                         u4COMPONENTBITSGREEN0:4;
  uint32_t                         :4;
  uint32_t                         u4COMPONENTBITSRED0:4;
  uint32_t                         :3;
  uint32_t                         u1ITUFORMAT0:1;
} stc_VIDEOSS_FETCHWARP1_COLORCOMPONENTBITS0_field_t;

typedef union un_VIDEOSS_FETCHWARP1_COLORCOMPONENTBITS0 {
  uint32_t                         u32Register;
  stc_VIDEOSS_FETCHWARP1_COLORCOMPONENTBITS0_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_FETCHWARP1_COLORCOMPONENTBITS0_t;

/**
  * \brief Bit position of color components for RGB, YUV and index formats (layer 0). (VIDEOSS_FETCHWARP1_COLORCOMPONENTSHIFT0)
  */
typedef struct stc_VIDEOSS_FETCHWARP1_COLORCOMPONENTSHIFT0_field {
  uint32_t                         u5COMPONENTSHIFTALPHA0:5;
  uint32_t                         :3;
  uint32_t                         u5COMPONENTSHIFTBLUE0:5;
  uint32_t                         :3;
  uint32_t                         u5COMPONENTSHIFTGREEN0:5;
  uint32_t                         :3;
  uint32_t                         u5COMPONENTSHIFTRED0:5;
  uint32_t                         :3;
} stc_VIDEOSS_FETCHWARP1_COLORCOMPONENTSHIFT0_field_t;

typedef union un_VIDEOSS_FETCHWARP1_COLORCOMPONENTSHIFT0 {
  uint32_t                         u32Register;
  stc_VIDEOSS_FETCHWARP1_COLORCOMPONENTSHIFT0_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_FETCHWARP1_COLORCOMPONENTSHIFT0_t;

/**
  * \brief Position of layer 0 within the destination frame. (VIDEOSS_FETCHWARP1_LAYEROFFSET0)
  */
typedef struct stc_VIDEOSS_FETCHWARP1_LAYEROFFSET0_field {
  uint32_t                         u15LAYERXOFFSET0:15;
  uint32_t                         :1;
  uint32_t                         u15LAYERYOFFSET0:15;
} stc_VIDEOSS_FETCHWARP1_LAYEROFFSET0_field_t;

typedef union un_VIDEOSS_FETCHWARP1_LAYEROFFSET0 {
  uint32_t                         u32Register;
  stc_VIDEOSS_FETCHWARP1_LAYEROFFSET0_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_FETCHWARP1_LAYEROFFSET0_t;

/**
  * \brief Clip window position for layer 0. (VIDEOSS_FETCHWARP1_CLIPWINDOWOFFSET0)
  */
typedef struct stc_VIDEOSS_FETCHWARP1_CLIPWINDOWOFFSET0_field {
  uint32_t                         u15CLIPWINDOWXOFFSET0:15;
  uint32_t                         :1;
  uint32_t                         u15CLIPWINDOWYOFFSET0:15;
} stc_VIDEOSS_FETCHWARP1_CLIPWINDOWOFFSET0_field_t;

typedef union un_VIDEOSS_FETCHWARP1_CLIPWINDOWOFFSET0 {
  uint32_t                         u32Register;
  stc_VIDEOSS_FETCHWARP1_CLIPWINDOWOFFSET0_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_FETCHWARP1_CLIPWINDOWOFFSET0_t;

/**
  * \brief Clip window size for layer 0. (VIDEOSS_FETCHWARP1_CLIPWINDOWDIMENSIONS0)
  */
typedef struct stc_VIDEOSS_FETCHWARP1_CLIPWINDOWDIMENSIONS0_field {
  uint32_t                         u14CLIPWINDOWWIDTH0:14;
  uint32_t                         :2;
  uint32_t                         u14CLIPWINDOWHEIGHT0:14;
  uint32_t                         :2;
} stc_VIDEOSS_FETCHWARP1_CLIPWINDOWDIMENSIONS0_field_t;

typedef union un_VIDEOSS_FETCHWARP1_CLIPWINDOWDIMENSIONS0 {
  uint32_t                         u32Register;
  stc_VIDEOSS_FETCHWARP1_CLIPWINDOWDIMENSIONS0_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_FETCHWARP1_CLIPWINDOWDIMENSIONS0_t;

/**
  * \brief Constant color for layer 0. (VIDEOSS_FETCHWARP1_CONSTANTCOLOR0)
  */
typedef struct stc_VIDEOSS_FETCHWARP1_CONSTANTCOLOR0_field {
  uint32_t                         u8CONSTANTALPHA0:8;
  uint32_t                         u8CONSTANTBLUE0:8;
  uint32_t                         u8CONSTANTGREEN0:8;
  uint32_t                         u8CONSTANTRED0:8;
} stc_VIDEOSS_FETCHWARP1_CONSTANTCOLOR0_field_t;

typedef union un_VIDEOSS_FETCHWARP1_CONSTANTCOLOR0 {
  uint32_t                         u32Register;
  stc_VIDEOSS_FETCHWARP1_CONSTANTCOLOR0_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_FETCHWARP1_CONSTANTCOLOR0_t;

/**
  * \brief Common properties of layer 0. (VIDEOSS_FETCHWARP1_LAYERPROPERTY0)
  */
typedef struct stc_VIDEOSS_FETCHWARP1_LAYERPROPERTY0_field {
  uint32_t                         :1;
  uint32_t                         u2TILEMODE0:2;
  uint32_t                         u1ALPHASRCENABLE0:1;
  uint32_t                         u1ALPHACONSTENABLE0:1;
  uint32_t                         u1ALPHAMASKENABLE0:1;
  uint32_t                         u1ALPHATRANSENABLE0:1;
  uint32_t                         u1RGBALPHASRCENABLE0:1;
  uint32_t                         u1RGBALPHACONSTENABLE0:1;
  uint32_t                         u1RGBALPHAMASKENABLE0:1;
  uint32_t                         u1RGBALPHATRANSENABLE0:1;
  uint32_t                         u1PREMULCONSTRGB0:1;
  uint32_t                         u2YUVCONVERSIONMODE0:2;
  uint32_t                         u1GAMMAREMOVEENABLE0:1;
  uint32_t                         :15;
  uint32_t                         u1CLIPWINDOWENABLE0:1;
  uint32_t                         u1SOURCEBUFFERENABLE0:1;
} stc_VIDEOSS_FETCHWARP1_LAYERPROPERTY0_field_t;

typedef union un_VIDEOSS_FETCHWARP1_LAYERPROPERTY0 {
  uint32_t                         u32Register;
  stc_VIDEOSS_FETCHWARP1_LAYERPROPERTY0_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_FETCHWARP1_LAYERPROPERTY0_t;

/**
  * \brief Source buffer base address of layer 1. (VIDEOSS_FETCHWARP1_BASEADDRESS1)
  */
typedef struct stc_VIDEOSS_FETCHWARP1_BASEADDRESS1_field {
  uint32_t                         u32BASEADDRESS1:32;
} stc_VIDEOSS_FETCHWARP1_BASEADDRESS1_field_t;

typedef union un_VIDEOSS_FETCHWARP1_BASEADDRESS1 {
  uint32_t                         u32Register;
  stc_VIDEOSS_FETCHWARP1_BASEADDRESS1_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_FETCHWARP1_BASEADDRESS1_t;

/**
  * \brief Source buffer attributes for layer 1. (VIDEOSS_FETCHWARP1_SOURCEBUFFERATTRIBUTES1)
  */
typedef struct stc_VIDEOSS_FETCHWARP1_SOURCEBUFFERATTRIBUTES1_field {
  uint32_t                         u16STRIDE1:16;
  uint32_t                         u6BITSPERPIXEL1:6;
  uint32_t                         :10;
} stc_VIDEOSS_FETCHWARP1_SOURCEBUFFERATTRIBUTES1_field_t;

typedef union un_VIDEOSS_FETCHWARP1_SOURCEBUFFERATTRIBUTES1 {
  uint32_t                         u32Register;
  stc_VIDEOSS_FETCHWARP1_SOURCEBUFFERATTRIBUTES1_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_FETCHWARP1_SOURCEBUFFERATTRIBUTES1_t;

/**
  * \brief Source buffer dimensions of layer 1, (VIDEOSS_FETCHWARP1_SOURCEBUFFERDIMENSION1)
  */
typedef struct stc_VIDEOSS_FETCHWARP1_SOURCEBUFFERDIMENSION1_field {
  uint32_t                         u14LINEWIDTH1:14;
  uint32_t                         :2;
  uint32_t                         u14LINECOUNT1:14;
  uint32_t                         :2;
} stc_VIDEOSS_FETCHWARP1_SOURCEBUFFERDIMENSION1_field_t;

typedef union un_VIDEOSS_FETCHWARP1_SOURCEBUFFERDIMENSION1 {
  uint32_t                         u32Register;
  stc_VIDEOSS_FETCHWARP1_SOURCEBUFFERDIMENSION1_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_FETCHWARP1_SOURCEBUFFERDIMENSION1_t;

/**
  * \brief Size of color components for RGB, YUV and index formats (layer 1). (VIDEOSS_FETCHWARP1_COLORCOMPONENTBITS1)
  */
typedef struct stc_VIDEOSS_FETCHWARP1_COLORCOMPONENTBITS1_field {
  uint32_t                         u4COMPONENTBITSALPHA1:4;
  uint32_t                         :4;
  uint32_t                         u4COMPONENTBITSBLUE1:4;
  uint32_t                         :4;
  uint32_t                         u4COMPONENTBITSGREEN1:4;
  uint32_t                         :4;
  uint32_t                         u4COMPONENTBITSRED1:4;
  uint32_t                         :3;
  uint32_t                         u1ITUFORMAT1:1;
} stc_VIDEOSS_FETCHWARP1_COLORCOMPONENTBITS1_field_t;

typedef union un_VIDEOSS_FETCHWARP1_COLORCOMPONENTBITS1 {
  uint32_t                         u32Register;
  stc_VIDEOSS_FETCHWARP1_COLORCOMPONENTBITS1_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_FETCHWARP1_COLORCOMPONENTBITS1_t;

/**
  * \brief Bit position of color components for RGB, YUV and index formats (layer 1). (VIDEOSS_FETCHWARP1_COLORCOMPONENTSHIFT1)
  */
typedef struct stc_VIDEOSS_FETCHWARP1_COLORCOMPONENTSHIFT1_field {
  uint32_t                         u5COMPONENTSHIFTALPHA1:5;
  uint32_t                         :3;
  uint32_t                         u5COMPONENTSHIFTBLUE1:5;
  uint32_t                         :3;
  uint32_t                         u5COMPONENTSHIFTGREEN1:5;
  uint32_t                         :3;
  uint32_t                         u5COMPONENTSHIFTRED1:5;
  uint32_t                         :3;
} stc_VIDEOSS_FETCHWARP1_COLORCOMPONENTSHIFT1_field_t;

typedef union un_VIDEOSS_FETCHWARP1_COLORCOMPONENTSHIFT1 {
  uint32_t                         u32Register;
  stc_VIDEOSS_FETCHWARP1_COLORCOMPONENTSHIFT1_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_FETCHWARP1_COLORCOMPONENTSHIFT1_t;

/**
  * \brief Position of layer 1 within the destination frame. (VIDEOSS_FETCHWARP1_LAYEROFFSET1)
  */
typedef struct stc_VIDEOSS_FETCHWARP1_LAYEROFFSET1_field {
  uint32_t                         u15LAYERXOFFSET1:15;
  uint32_t                         :1;
  uint32_t                         u15LAYERYOFFSET1:15;
} stc_VIDEOSS_FETCHWARP1_LAYEROFFSET1_field_t;

typedef union un_VIDEOSS_FETCHWARP1_LAYEROFFSET1 {
  uint32_t                         u32Register;
  stc_VIDEOSS_FETCHWARP1_LAYEROFFSET1_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_FETCHWARP1_LAYEROFFSET1_t;

/**
  * \brief Clip window position for layer 1. (VIDEOSS_FETCHWARP1_CLIPWINDOWOFFSET1)
  */
typedef struct stc_VIDEOSS_FETCHWARP1_CLIPWINDOWOFFSET1_field {
  uint32_t                         u15CLIPWINDOWXOFFSET1:15;
  uint32_t                         :1;
  uint32_t                         u15CLIPWINDOWYOFFSET1:15;
} stc_VIDEOSS_FETCHWARP1_CLIPWINDOWOFFSET1_field_t;

typedef union un_VIDEOSS_FETCHWARP1_CLIPWINDOWOFFSET1 {
  uint32_t                         u32Register;
  stc_VIDEOSS_FETCHWARP1_CLIPWINDOWOFFSET1_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_FETCHWARP1_CLIPWINDOWOFFSET1_t;

/**
  * \brief Clip window size for layer 1. (VIDEOSS_FETCHWARP1_CLIPWINDOWDIMENSIONS1)
  */
typedef struct stc_VIDEOSS_FETCHWARP1_CLIPWINDOWDIMENSIONS1_field {
  uint32_t                         u14CLIPWINDOWWIDTH1:14;
  uint32_t                         :2;
  uint32_t                         u14CLIPWINDOWHEIGHT1:14;
  uint32_t                         :2;
} stc_VIDEOSS_FETCHWARP1_CLIPWINDOWDIMENSIONS1_field_t;

typedef union un_VIDEOSS_FETCHWARP1_CLIPWINDOWDIMENSIONS1 {
  uint32_t                         u32Register;
  stc_VIDEOSS_FETCHWARP1_CLIPWINDOWDIMENSIONS1_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_FETCHWARP1_CLIPWINDOWDIMENSIONS1_t;

/**
  * \brief Constant color for layer 1. (VIDEOSS_FETCHWARP1_CONSTANTCOLOR1)
  */
typedef struct stc_VIDEOSS_FETCHWARP1_CONSTANTCOLOR1_field {
  uint32_t                         u8CONSTANTALPHA1:8;
  uint32_t                         u8CONSTANTBLUE1:8;
  uint32_t                         u8CONSTANTGREEN1:8;
  uint32_t                         u8CONSTANTRED1:8;
} stc_VIDEOSS_FETCHWARP1_CONSTANTCOLOR1_field_t;

typedef union un_VIDEOSS_FETCHWARP1_CONSTANTCOLOR1 {
  uint32_t                         u32Register;
  stc_VIDEOSS_FETCHWARP1_CONSTANTCOLOR1_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_FETCHWARP1_CONSTANTCOLOR1_t;

/**
  * \brief Common properties of layer 1. (VIDEOSS_FETCHWARP1_LAYERPROPERTY1)
  */
typedef struct stc_VIDEOSS_FETCHWARP1_LAYERPROPERTY1_field {
  uint32_t                         :1;
  uint32_t                         u2TILEMODE1:2;
  uint32_t                         u1ALPHASRCENABLE1:1;
  uint32_t                         u1ALPHACONSTENABLE1:1;
  uint32_t                         u1ALPHAMASKENABLE1:1;
  uint32_t                         u1ALPHATRANSENABLE1:1;
  uint32_t                         u1RGBALPHASRCENABLE1:1;
  uint32_t                         u1RGBALPHACONSTENABLE1:1;
  uint32_t                         u1RGBALPHAMASKENABLE1:1;
  uint32_t                         u1RGBALPHATRANSENABLE1:1;
  uint32_t                         u1PREMULCONSTRGB1:1;
  uint32_t                         u2YUVCONVERSIONMODE1:2;
  uint32_t                         u1GAMMAREMOVEENABLE1:1;
  uint32_t                         :15;
  uint32_t                         u1CLIPWINDOWENABLE1:1;
  uint32_t                         u1SOURCEBUFFERENABLE1:1;
} stc_VIDEOSS_FETCHWARP1_LAYERPROPERTY1_field_t;

typedef union un_VIDEOSS_FETCHWARP1_LAYERPROPERTY1 {
  uint32_t                         u32Register;
  stc_VIDEOSS_FETCHWARP1_LAYERPROPERTY1_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_FETCHWARP1_LAYERPROPERTY1_t;

/**
  * \brief Source buffer base address of layer 2. (VIDEOSS_FETCHWARP1_BASEADDRESS2)
  */
typedef struct stc_VIDEOSS_FETCHWARP1_BASEADDRESS2_field {
  uint32_t                         u32BASEADDRESS2:32;
} stc_VIDEOSS_FETCHWARP1_BASEADDRESS2_field_t;

typedef union un_VIDEOSS_FETCHWARP1_BASEADDRESS2 {
  uint32_t                         u32Register;
  stc_VIDEOSS_FETCHWARP1_BASEADDRESS2_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_FETCHWARP1_BASEADDRESS2_t;

/**
  * \brief Source buffer attributes for layer 2. (VIDEOSS_FETCHWARP1_SOURCEBUFFERATTRIBUTES2)
  */
typedef struct stc_VIDEOSS_FETCHWARP1_SOURCEBUFFERATTRIBUTES2_field {
  uint32_t                         u16STRIDE2:16;
  uint32_t                         u6BITSPERPIXEL2:6;
  uint32_t                         :10;
} stc_VIDEOSS_FETCHWARP1_SOURCEBUFFERATTRIBUTES2_field_t;

typedef union un_VIDEOSS_FETCHWARP1_SOURCEBUFFERATTRIBUTES2 {
  uint32_t                         u32Register;
  stc_VIDEOSS_FETCHWARP1_SOURCEBUFFERATTRIBUTES2_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_FETCHWARP1_SOURCEBUFFERATTRIBUTES2_t;

/**
  * \brief Source buffer dimension of layer 2. (VIDEOSS_FETCHWARP1_SOURCEBUFFERDIMENSION2)
  */
typedef struct stc_VIDEOSS_FETCHWARP1_SOURCEBUFFERDIMENSION2_field {
  uint32_t                         u14LINEWIDTH2:14;
  uint32_t                         :2;
  uint32_t                         u14LINECOUNT2:14;
  uint32_t                         :2;
} stc_VIDEOSS_FETCHWARP1_SOURCEBUFFERDIMENSION2_field_t;

typedef union un_VIDEOSS_FETCHWARP1_SOURCEBUFFERDIMENSION2 {
  uint32_t                         u32Register;
  stc_VIDEOSS_FETCHWARP1_SOURCEBUFFERDIMENSION2_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_FETCHWARP1_SOURCEBUFFERDIMENSION2_t;

/**
  * \brief Size of color components for RGB, YUV and index formats (layer 2). (VIDEOSS_FETCHWARP1_COLORCOMPONENTBITS2)
  */
typedef struct stc_VIDEOSS_FETCHWARP1_COLORCOMPONENTBITS2_field {
  uint32_t                         u4COMPONENTBITSALPHA2:4;
  uint32_t                         :4;
  uint32_t                         u4COMPONENTBITSBLUE2:4;
  uint32_t                         :4;
  uint32_t                         u4COMPONENTBITSGREEN2:4;
  uint32_t                         :4;
  uint32_t                         u4COMPONENTBITSRED2:4;
  uint32_t                         :3;
  uint32_t                         u1ITUFORMAT2:1;
} stc_VIDEOSS_FETCHWARP1_COLORCOMPONENTBITS2_field_t;

typedef union un_VIDEOSS_FETCHWARP1_COLORCOMPONENTBITS2 {
  uint32_t                         u32Register;
  stc_VIDEOSS_FETCHWARP1_COLORCOMPONENTBITS2_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_FETCHWARP1_COLORCOMPONENTBITS2_t;

/**
  * \brief Bit position of color components for RGB, YUV and index formats (layer 2). (VIDEOSS_FETCHWARP1_COLORCOMPONENTSHIFT2)
  */
typedef struct stc_VIDEOSS_FETCHWARP1_COLORCOMPONENTSHIFT2_field {
  uint32_t                         u5COMPONENTSHIFTALPHA2:5;
  uint32_t                         :3;
  uint32_t                         u5COMPONENTSHIFTBLUE2:5;
  uint32_t                         :3;
  uint32_t                         u5COMPONENTSHIFTGREEN2:5;
  uint32_t                         :3;
  uint32_t                         u5COMPONENTSHIFTRED2:5;
  uint32_t                         :3;
} stc_VIDEOSS_FETCHWARP1_COLORCOMPONENTSHIFT2_field_t;

typedef union un_VIDEOSS_FETCHWARP1_COLORCOMPONENTSHIFT2 {
  uint32_t                         u32Register;
  stc_VIDEOSS_FETCHWARP1_COLORCOMPONENTSHIFT2_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_FETCHWARP1_COLORCOMPONENTSHIFT2_t;

/**
  * \brief Position of layer 2 within the destination frame. (VIDEOSS_FETCHWARP1_LAYEROFFSET2)
  */
typedef struct stc_VIDEOSS_FETCHWARP1_LAYEROFFSET2_field {
  uint32_t                         u15LAYERXOFFSET2:15;
  uint32_t                         :1;
  uint32_t                         u15LAYERYOFFSET2:15;
} stc_VIDEOSS_FETCHWARP1_LAYEROFFSET2_field_t;

typedef union un_VIDEOSS_FETCHWARP1_LAYEROFFSET2 {
  uint32_t                         u32Register;
  stc_VIDEOSS_FETCHWARP1_LAYEROFFSET2_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_FETCHWARP1_LAYEROFFSET2_t;

/**
  * \brief Clip window position for layer 2. (VIDEOSS_FETCHWARP1_CLIPWINDOWOFFSET2)
  */
typedef struct stc_VIDEOSS_FETCHWARP1_CLIPWINDOWOFFSET2_field {
  uint32_t                         u15CLIPWINDOWXOFFSET2:15;
  uint32_t                         :1;
  uint32_t                         u15CLIPWINDOWYOFFSET2:15;
} stc_VIDEOSS_FETCHWARP1_CLIPWINDOWOFFSET2_field_t;

typedef union un_VIDEOSS_FETCHWARP1_CLIPWINDOWOFFSET2 {
  uint32_t                         u32Register;
  stc_VIDEOSS_FETCHWARP1_CLIPWINDOWOFFSET2_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_FETCHWARP1_CLIPWINDOWOFFSET2_t;

/**
  * \brief Clip window size for layer 2. (VIDEOSS_FETCHWARP1_CLIPWINDOWDIMENSIONS2)
  */
typedef struct stc_VIDEOSS_FETCHWARP1_CLIPWINDOWDIMENSIONS2_field {
  uint32_t                         u14CLIPWINDOWWIDTH2:14;
  uint32_t                         :2;
  uint32_t                         u14CLIPWINDOWHEIGHT2:14;
  uint32_t                         :2;
} stc_VIDEOSS_FETCHWARP1_CLIPWINDOWDIMENSIONS2_field_t;

typedef union un_VIDEOSS_FETCHWARP1_CLIPWINDOWDIMENSIONS2 {
  uint32_t                         u32Register;
  stc_VIDEOSS_FETCHWARP1_CLIPWINDOWDIMENSIONS2_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_FETCHWARP1_CLIPWINDOWDIMENSIONS2_t;

/**
  * \brief Constant color for layer 2. (VIDEOSS_FETCHWARP1_CONSTANTCOLOR2)
  */
typedef struct stc_VIDEOSS_FETCHWARP1_CONSTANTCOLOR2_field {
  uint32_t                         u8CONSTANTALPHA2:8;
  uint32_t                         u8CONSTANTBLUE2:8;
  uint32_t                         u8CONSTANTGREEN2:8;
  uint32_t                         u8CONSTANTRED2:8;
} stc_VIDEOSS_FETCHWARP1_CONSTANTCOLOR2_field_t;

typedef union un_VIDEOSS_FETCHWARP1_CONSTANTCOLOR2 {
  uint32_t                         u32Register;
  stc_VIDEOSS_FETCHWARP1_CONSTANTCOLOR2_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_FETCHWARP1_CONSTANTCOLOR2_t;

/**
  * \brief Common properties of layer 2. (VIDEOSS_FETCHWARP1_LAYERPROPERTY2)
  */
typedef struct stc_VIDEOSS_FETCHWARP1_LAYERPROPERTY2_field {
  uint32_t                         :1;
  uint32_t                         u2TILEMODE2:2;
  uint32_t                         u1ALPHASRCENABLE2:1;
  uint32_t                         u1ALPHACONSTENABLE2:1;
  uint32_t                         u1ALPHAMASKENABLE2:1;
  uint32_t                         u1ALPHATRANSENABLE2:1;
  uint32_t                         u1RGBALPHASRCENABLE2:1;
  uint32_t                         u1RGBALPHACONSTENABLE2:1;
  uint32_t                         u1RGBALPHAMASKENABLE2:1;
  uint32_t                         u1RGBALPHATRANSENABLE2:1;
  uint32_t                         u1PREMULCONSTRGB2:1;
  uint32_t                         u2YUVCONVERSIONMODE2:2;
  uint32_t                         u1GAMMAREMOVEENABLE2:1;
  uint32_t                         :15;
  uint32_t                         u1CLIPWINDOWENABLE2:1;
  uint32_t                         u1SOURCEBUFFERENABLE2:1;
} stc_VIDEOSS_FETCHWARP1_LAYERPROPERTY2_field_t;

typedef union un_VIDEOSS_FETCHWARP1_LAYERPROPERTY2 {
  uint32_t                         u32Register;
  stc_VIDEOSS_FETCHWARP1_LAYERPROPERTY2_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_FETCHWARP1_LAYERPROPERTY2_t;

/**
  * \brief Source buffer base address of layer 3. (VIDEOSS_FETCHWARP1_BASEADDRESS3)
  */
typedef struct stc_VIDEOSS_FETCHWARP1_BASEADDRESS3_field {
  uint32_t                         u32BASEADDRESS3:32;
} stc_VIDEOSS_FETCHWARP1_BASEADDRESS3_field_t;

typedef union un_VIDEOSS_FETCHWARP1_BASEADDRESS3 {
  uint32_t                         u32Register;
  stc_VIDEOSS_FETCHWARP1_BASEADDRESS3_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_FETCHWARP1_BASEADDRESS3_t;

/**
  * \brief Source buffer attributes for layer 3. (VIDEOSS_FETCHWARP1_SOURCEBUFFERATTRIBUTES3)
  */
typedef struct stc_VIDEOSS_FETCHWARP1_SOURCEBUFFERATTRIBUTES3_field {
  uint32_t                         u16STRIDE3:16;
  uint32_t                         u6BITSPERPIXEL3:6;
  uint32_t                         :10;
} stc_VIDEOSS_FETCHWARP1_SOURCEBUFFERATTRIBUTES3_field_t;

typedef union un_VIDEOSS_FETCHWARP1_SOURCEBUFFERATTRIBUTES3 {
  uint32_t                         u32Register;
  stc_VIDEOSS_FETCHWARP1_SOURCEBUFFERATTRIBUTES3_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_FETCHWARP1_SOURCEBUFFERATTRIBUTES3_t;

/**
  * \brief Source buffer dimension of layer 3. (VIDEOSS_FETCHWARP1_SOURCEBUFFERDIMENSION3)
  */
typedef struct stc_VIDEOSS_FETCHWARP1_SOURCEBUFFERDIMENSION3_field {
  uint32_t                         u14LINEWIDTH3:14;
  uint32_t                         :2;
  uint32_t                         u14LINECOUNT3:14;
  uint32_t                         :2;
} stc_VIDEOSS_FETCHWARP1_SOURCEBUFFERDIMENSION3_field_t;

typedef union un_VIDEOSS_FETCHWARP1_SOURCEBUFFERDIMENSION3 {
  uint32_t                         u32Register;
  stc_VIDEOSS_FETCHWARP1_SOURCEBUFFERDIMENSION3_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_FETCHWARP1_SOURCEBUFFERDIMENSION3_t;

/**
  * \brief Size of color components for RGB, YUV and index formats (layer 3). (VIDEOSS_FETCHWARP1_COLORCOMPONENTBITS3)
  */
typedef struct stc_VIDEOSS_FETCHWARP1_COLORCOMPONENTBITS3_field {
  uint32_t                         u4COMPONENTBITSALPHA3:4;
  uint32_t                         :4;
  uint32_t                         u4COMPONENTBITSBLUE3:4;
  uint32_t                         :4;
  uint32_t                         u4COMPONENTBITSGREEN3:4;
  uint32_t                         :4;
  uint32_t                         u4COMPONENTBITSRED3:4;
  uint32_t                         :3;
  uint32_t                         u1ITUFORMAT3:1;
} stc_VIDEOSS_FETCHWARP1_COLORCOMPONENTBITS3_field_t;

typedef union un_VIDEOSS_FETCHWARP1_COLORCOMPONENTBITS3 {
  uint32_t                         u32Register;
  stc_VIDEOSS_FETCHWARP1_COLORCOMPONENTBITS3_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_FETCHWARP1_COLORCOMPONENTBITS3_t;

/**
  * \brief Bit position of color components for RGB, YUV and index formats (layer 3). (VIDEOSS_FETCHWARP1_COLORCOMPONENTSHIFT3)
  */
typedef struct stc_VIDEOSS_FETCHWARP1_COLORCOMPONENTSHIFT3_field {
  uint32_t                         u5COMPONENTSHIFTALPHA3:5;
  uint32_t                         :3;
  uint32_t                         u5COMPONENTSHIFTBLUE3:5;
  uint32_t                         :3;
  uint32_t                         u5COMPONENTSHIFTGREEN3:5;
  uint32_t                         :3;
  uint32_t                         u5COMPONENTSHIFTRED3:5;
  uint32_t                         :3;
} stc_VIDEOSS_FETCHWARP1_COLORCOMPONENTSHIFT3_field_t;

typedef union un_VIDEOSS_FETCHWARP1_COLORCOMPONENTSHIFT3 {
  uint32_t                         u32Register;
  stc_VIDEOSS_FETCHWARP1_COLORCOMPONENTSHIFT3_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_FETCHWARP1_COLORCOMPONENTSHIFT3_t;

/**
  * \brief Position of layer 3 within the destination frame. (VIDEOSS_FETCHWARP1_LAYEROFFSET3)
  */
typedef struct stc_VIDEOSS_FETCHWARP1_LAYEROFFSET3_field {
  uint32_t                         u15LAYERXOFFSET3:15;
  uint32_t                         :1;
  uint32_t                         u15LAYERYOFFSET3:15;
} stc_VIDEOSS_FETCHWARP1_LAYEROFFSET3_field_t;

typedef union un_VIDEOSS_FETCHWARP1_LAYEROFFSET3 {
  uint32_t                         u32Register;
  stc_VIDEOSS_FETCHWARP1_LAYEROFFSET3_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_FETCHWARP1_LAYEROFFSET3_t;

/**
  * \brief Clip window position for layer 3. (VIDEOSS_FETCHWARP1_CLIPWINDOWOFFSET3)
  */
typedef struct stc_VIDEOSS_FETCHWARP1_CLIPWINDOWOFFSET3_field {
  uint32_t                         u15CLIPWINDOWXOFFSET3:15;
  uint32_t                         :1;
  uint32_t                         u15CLIPWINDOWYOFFSET3:15;
} stc_VIDEOSS_FETCHWARP1_CLIPWINDOWOFFSET3_field_t;

typedef union un_VIDEOSS_FETCHWARP1_CLIPWINDOWOFFSET3 {
  uint32_t                         u32Register;
  stc_VIDEOSS_FETCHWARP1_CLIPWINDOWOFFSET3_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_FETCHWARP1_CLIPWINDOWOFFSET3_t;

/**
  * \brief Clip window size for layer 3. (VIDEOSS_FETCHWARP1_CLIPWINDOWDIMENSIONS3)
  */
typedef struct stc_VIDEOSS_FETCHWARP1_CLIPWINDOWDIMENSIONS3_field {
  uint32_t                         u14CLIPWINDOWWIDTH3:14;
  uint32_t                         :2;
  uint32_t                         u14CLIPWINDOWHEIGHT3:14;
  uint32_t                         :2;
} stc_VIDEOSS_FETCHWARP1_CLIPWINDOWDIMENSIONS3_field_t;

typedef union un_VIDEOSS_FETCHWARP1_CLIPWINDOWDIMENSIONS3 {
  uint32_t                         u32Register;
  stc_VIDEOSS_FETCHWARP1_CLIPWINDOWDIMENSIONS3_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_FETCHWARP1_CLIPWINDOWDIMENSIONS3_t;

/**
  * \brief Constant color for layer 3. (VIDEOSS_FETCHWARP1_CONSTANTCOLOR3)
  */
typedef struct stc_VIDEOSS_FETCHWARP1_CONSTANTCOLOR3_field {
  uint32_t                         u8CONSTANTALPHA3:8;
  uint32_t                         u8CONSTANTBLUE3:8;
  uint32_t                         u8CONSTANTGREEN3:8;
  uint32_t                         u8CONSTANTRED3:8;
} stc_VIDEOSS_FETCHWARP1_CONSTANTCOLOR3_field_t;

typedef union un_VIDEOSS_FETCHWARP1_CONSTANTCOLOR3 {
  uint32_t                         u32Register;
  stc_VIDEOSS_FETCHWARP1_CONSTANTCOLOR3_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_FETCHWARP1_CONSTANTCOLOR3_t;

/**
  * \brief Common properties of layer 3. (VIDEOSS_FETCHWARP1_LAYERPROPERTY3)
  */
typedef struct stc_VIDEOSS_FETCHWARP1_LAYERPROPERTY3_field {
  uint32_t                         :1;
  uint32_t                         u2TILEMODE3:2;
  uint32_t                         u1ALPHASRCENABLE3:1;
  uint32_t                         u1ALPHACONSTENABLE3:1;
  uint32_t                         u1ALPHAMASKENABLE3:1;
  uint32_t                         u1ALPHATRANSENABLE3:1;
  uint32_t                         u1RGBALPHASRCENABLE3:1;
  uint32_t                         u1RGBALPHACONSTENABLE3:1;
  uint32_t                         u1RGBALPHAMASKENABLE3:1;
  uint32_t                         u1RGBALPHATRANSENABLE3:1;
  uint32_t                         u1PREMULCONSTRGB3:1;
  uint32_t                         u2YUVCONVERSIONMODE3:2;
  uint32_t                         u1GAMMAREMOVEENABLE3:1;
  uint32_t                         :15;
  uint32_t                         u1CLIPWINDOWENABLE3:1;
  uint32_t                         u1SOURCEBUFFERENABLE3:1;
} stc_VIDEOSS_FETCHWARP1_LAYERPROPERTY3_field_t;

typedef union un_VIDEOSS_FETCHWARP1_LAYERPROPERTY3 {
  uint32_t                         u32Register;
  stc_VIDEOSS_FETCHWARP1_LAYERPROPERTY3_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_FETCHWARP1_LAYERPROPERTY3_t;

/**
  * \brief Source buffer base address of layer 4. (VIDEOSS_FETCHWARP1_BASEADDRESS4)
  */
typedef struct stc_VIDEOSS_FETCHWARP1_BASEADDRESS4_field {
  uint32_t                         u32BASEADDRESS4:32;
} stc_VIDEOSS_FETCHWARP1_BASEADDRESS4_field_t;

typedef union un_VIDEOSS_FETCHWARP1_BASEADDRESS4 {
  uint32_t                         u32Register;
  stc_VIDEOSS_FETCHWARP1_BASEADDRESS4_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_FETCHWARP1_BASEADDRESS4_t;

/**
  * \brief Source buffer attributes for layer 4. (VIDEOSS_FETCHWARP1_SOURCEBUFFERATTRIBUTES4)
  */
typedef struct stc_VIDEOSS_FETCHWARP1_SOURCEBUFFERATTRIBUTES4_field {
  uint32_t                         u16STRIDE4:16;
  uint32_t                         u6BITSPERPIXEL4:6;
  uint32_t                         :10;
} stc_VIDEOSS_FETCHWARP1_SOURCEBUFFERATTRIBUTES4_field_t;

typedef union un_VIDEOSS_FETCHWARP1_SOURCEBUFFERATTRIBUTES4 {
  uint32_t                         u32Register;
  stc_VIDEOSS_FETCHWARP1_SOURCEBUFFERATTRIBUTES4_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_FETCHWARP1_SOURCEBUFFERATTRIBUTES4_t;

/**
  * \brief Source buffer dimension of layer 4. (VIDEOSS_FETCHWARP1_SOURCEBUFFERDIMENSION4)
  */
typedef struct stc_VIDEOSS_FETCHWARP1_SOURCEBUFFERDIMENSION4_field {
  uint32_t                         u14LINEWIDTH4:14;
  uint32_t                         :2;
  uint32_t                         u14LINECOUNT4:14;
  uint32_t                         :2;
} stc_VIDEOSS_FETCHWARP1_SOURCEBUFFERDIMENSION4_field_t;

typedef union un_VIDEOSS_FETCHWARP1_SOURCEBUFFERDIMENSION4 {
  uint32_t                         u32Register;
  stc_VIDEOSS_FETCHWARP1_SOURCEBUFFERDIMENSION4_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_FETCHWARP1_SOURCEBUFFERDIMENSION4_t;

/**
  * \brief Size of color components for RGB, YUV and index formats (layer 4). (VIDEOSS_FETCHWARP1_COLORCOMPONENTBITS4)
  */
typedef struct stc_VIDEOSS_FETCHWARP1_COLORCOMPONENTBITS4_field {
  uint32_t                         u4COMPONENTBITSALPHA4:4;
  uint32_t                         :4;
  uint32_t                         u4COMPONENTBITSBLUE4:4;
  uint32_t                         :4;
  uint32_t                         u4COMPONENTBITSGREEN4:4;
  uint32_t                         :4;
  uint32_t                         u4COMPONENTBITSRED4:4;
  uint32_t                         :3;
  uint32_t                         u1ITUFORMAT4:1;
} stc_VIDEOSS_FETCHWARP1_COLORCOMPONENTBITS4_field_t;

typedef union un_VIDEOSS_FETCHWARP1_COLORCOMPONENTBITS4 {
  uint32_t                         u32Register;
  stc_VIDEOSS_FETCHWARP1_COLORCOMPONENTBITS4_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_FETCHWARP1_COLORCOMPONENTBITS4_t;

/**
  * \brief Bit position of color components for RGB, YUV and index formats (layer 4). (VIDEOSS_FETCHWARP1_COLORCOMPONENTSHIFT4)
  */
typedef struct stc_VIDEOSS_FETCHWARP1_COLORCOMPONENTSHIFT4_field {
  uint32_t                         u5COMPONENTSHIFTALPHA4:5;
  uint32_t                         :3;
  uint32_t                         u5COMPONENTSHIFTBLUE4:5;
  uint32_t                         :3;
  uint32_t                         u5COMPONENTSHIFTGREEN4:5;
  uint32_t                         :3;
  uint32_t                         u5COMPONENTSHIFTRED4:5;
  uint32_t                         :3;
} stc_VIDEOSS_FETCHWARP1_COLORCOMPONENTSHIFT4_field_t;

typedef union un_VIDEOSS_FETCHWARP1_COLORCOMPONENTSHIFT4 {
  uint32_t                         u32Register;
  stc_VIDEOSS_FETCHWARP1_COLORCOMPONENTSHIFT4_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_FETCHWARP1_COLORCOMPONENTSHIFT4_t;

/**
  * \brief Position of layer 4 within the destination frame. (VIDEOSS_FETCHWARP1_LAYEROFFSET4)
  */
typedef struct stc_VIDEOSS_FETCHWARP1_LAYEROFFSET4_field {
  uint32_t                         u15LAYERXOFFSET4:15;
  uint32_t                         :1;
  uint32_t                         u15LAYERYOFFSET4:15;
} stc_VIDEOSS_FETCHWARP1_LAYEROFFSET4_field_t;

typedef union un_VIDEOSS_FETCHWARP1_LAYEROFFSET4 {
  uint32_t                         u32Register;
  stc_VIDEOSS_FETCHWARP1_LAYEROFFSET4_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_FETCHWARP1_LAYEROFFSET4_t;

/**
  * \brief Clip window position for layer 4. (VIDEOSS_FETCHWARP1_CLIPWINDOWOFFSET4)
  */
typedef struct stc_VIDEOSS_FETCHWARP1_CLIPWINDOWOFFSET4_field {
  uint32_t                         u15CLIPWINDOWXOFFSET4:15;
  uint32_t                         :1;
  uint32_t                         u15CLIPWINDOWYOFFSET4:15;
} stc_VIDEOSS_FETCHWARP1_CLIPWINDOWOFFSET4_field_t;

typedef union un_VIDEOSS_FETCHWARP1_CLIPWINDOWOFFSET4 {
  uint32_t                         u32Register;
  stc_VIDEOSS_FETCHWARP1_CLIPWINDOWOFFSET4_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_FETCHWARP1_CLIPWINDOWOFFSET4_t;

/**
  * \brief Clip window size for layer 4. (VIDEOSS_FETCHWARP1_CLIPWINDOWDIMENSIONS4)
  */
typedef struct stc_VIDEOSS_FETCHWARP1_CLIPWINDOWDIMENSIONS4_field {
  uint32_t                         u14CLIPWINDOWWIDTH4:14;
  uint32_t                         :2;
  uint32_t                         u14CLIPWINDOWHEIGHT4:14;
  uint32_t                         :2;
} stc_VIDEOSS_FETCHWARP1_CLIPWINDOWDIMENSIONS4_field_t;

typedef union un_VIDEOSS_FETCHWARP1_CLIPWINDOWDIMENSIONS4 {
  uint32_t                         u32Register;
  stc_VIDEOSS_FETCHWARP1_CLIPWINDOWDIMENSIONS4_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_FETCHWARP1_CLIPWINDOWDIMENSIONS4_t;

/**
  * \brief Constant color for layer 4. (VIDEOSS_FETCHWARP1_CONSTANTCOLOR4)
  */
typedef struct stc_VIDEOSS_FETCHWARP1_CONSTANTCOLOR4_field {
  uint32_t                         u8CONSTANTALPHA4:8;
  uint32_t                         u8CONSTANTBLUE4:8;
  uint32_t                         u8CONSTANTGREEN4:8;
  uint32_t                         u8CONSTANTRED4:8;
} stc_VIDEOSS_FETCHWARP1_CONSTANTCOLOR4_field_t;

typedef union un_VIDEOSS_FETCHWARP1_CONSTANTCOLOR4 {
  uint32_t                         u32Register;
  stc_VIDEOSS_FETCHWARP1_CONSTANTCOLOR4_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_FETCHWARP1_CONSTANTCOLOR4_t;

/**
  * \brief Common properties of layer 4. (VIDEOSS_FETCHWARP1_LAYERPROPERTY4)
  */
typedef struct stc_VIDEOSS_FETCHWARP1_LAYERPROPERTY4_field {
  uint32_t                         :1;
  uint32_t                         u2TILEMODE4:2;
  uint32_t                         u1ALPHASRCENABLE4:1;
  uint32_t                         u1ALPHACONSTENABLE4:1;
  uint32_t                         u1ALPHAMASKENABLE4:1;
  uint32_t                         u1ALPHATRANSENABLE4:1;
  uint32_t                         u1RGBALPHASRCENABLE4:1;
  uint32_t                         u1RGBALPHACONSTENABLE4:1;
  uint32_t                         u1RGBALPHAMASKENABLE4:1;
  uint32_t                         u1RGBALPHATRANSENABLE4:1;
  uint32_t                         u1PREMULCONSTRGB4:1;
  uint32_t                         u2YUVCONVERSIONMODE4:2;
  uint32_t                         u1GAMMAREMOVEENABLE4:1;
  uint32_t                         :15;
  uint32_t                         u1CLIPWINDOWENABLE4:1;
  uint32_t                         u1SOURCEBUFFERENABLE4:1;
} stc_VIDEOSS_FETCHWARP1_LAYERPROPERTY4_field_t;

typedef union un_VIDEOSS_FETCHWARP1_LAYERPROPERTY4 {
  uint32_t                         u32Register;
  stc_VIDEOSS_FETCHWARP1_LAYERPROPERTY4_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_FETCHWARP1_LAYERPROPERTY4_t;

/**
  * \brief Source buffer base address of layer 5. (VIDEOSS_FETCHWARP1_BASEADDRESS5)
  */
typedef struct stc_VIDEOSS_FETCHWARP1_BASEADDRESS5_field {
  uint32_t                         u32BASEADDRESS5:32;
} stc_VIDEOSS_FETCHWARP1_BASEADDRESS5_field_t;

typedef union un_VIDEOSS_FETCHWARP1_BASEADDRESS5 {
  uint32_t                         u32Register;
  stc_VIDEOSS_FETCHWARP1_BASEADDRESS5_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_FETCHWARP1_BASEADDRESS5_t;

/**
  * \brief Source buffer attributes for layer 5. (VIDEOSS_FETCHWARP1_SOURCEBUFFERATTRIBUTES5)
  */
typedef struct stc_VIDEOSS_FETCHWARP1_SOURCEBUFFERATTRIBUTES5_field {
  uint32_t                         u16STRIDE5:16;
  uint32_t                         u6BITSPERPIXEL5:6;
  uint32_t                         :10;
} stc_VIDEOSS_FETCHWARP1_SOURCEBUFFERATTRIBUTES5_field_t;

typedef union un_VIDEOSS_FETCHWARP1_SOURCEBUFFERATTRIBUTES5 {
  uint32_t                         u32Register;
  stc_VIDEOSS_FETCHWARP1_SOURCEBUFFERATTRIBUTES5_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_FETCHWARP1_SOURCEBUFFERATTRIBUTES5_t;

/**
  * \brief Source buffer dimension of layer 5. (VIDEOSS_FETCHWARP1_SOURCEBUFFERDIMENSION5)
  */
typedef struct stc_VIDEOSS_FETCHWARP1_SOURCEBUFFERDIMENSION5_field {
  uint32_t                         u14LINEWIDTH5:14;
  uint32_t                         :2;
  uint32_t                         u14LINECOUNT5:14;
  uint32_t                         :2;
} stc_VIDEOSS_FETCHWARP1_SOURCEBUFFERDIMENSION5_field_t;

typedef union un_VIDEOSS_FETCHWARP1_SOURCEBUFFERDIMENSION5 {
  uint32_t                         u32Register;
  stc_VIDEOSS_FETCHWARP1_SOURCEBUFFERDIMENSION5_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_FETCHWARP1_SOURCEBUFFERDIMENSION5_t;

/**
  * \brief Size of color components for RGB, YUV and index formats (layer 5). (VIDEOSS_FETCHWARP1_COLORCOMPONENTBITS5)
  */
typedef struct stc_VIDEOSS_FETCHWARP1_COLORCOMPONENTBITS5_field {
  uint32_t                         u4COMPONENTBITSALPHA5:4;
  uint32_t                         :4;
  uint32_t                         u4COMPONENTBITSBLUE5:4;
  uint32_t                         :4;
  uint32_t                         u4COMPONENTBITSGREEN5:4;
  uint32_t                         :4;
  uint32_t                         u4COMPONENTBITSRED5:4;
  uint32_t                         :3;
  uint32_t                         u1ITUFORMAT5:1;
} stc_VIDEOSS_FETCHWARP1_COLORCOMPONENTBITS5_field_t;

typedef union un_VIDEOSS_FETCHWARP1_COLORCOMPONENTBITS5 {
  uint32_t                         u32Register;
  stc_VIDEOSS_FETCHWARP1_COLORCOMPONENTBITS5_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_FETCHWARP1_COLORCOMPONENTBITS5_t;

/**
  * \brief Bit position of color components for RGB, YUV and index formats (layer 5). (VIDEOSS_FETCHWARP1_COLORCOMPONENTSHIFT5)
  */
typedef struct stc_VIDEOSS_FETCHWARP1_COLORCOMPONENTSHIFT5_field {
  uint32_t                         u5COMPONENTSHIFTALPHA5:5;
  uint32_t                         :3;
  uint32_t                         u5COMPONENTSHIFTBLUE5:5;
  uint32_t                         :3;
  uint32_t                         u5COMPONENTSHIFTGREEN5:5;
  uint32_t                         :3;
  uint32_t                         u5COMPONENTSHIFTRED5:5;
  uint32_t                         :3;
} stc_VIDEOSS_FETCHWARP1_COLORCOMPONENTSHIFT5_field_t;

typedef union un_VIDEOSS_FETCHWARP1_COLORCOMPONENTSHIFT5 {
  uint32_t                         u32Register;
  stc_VIDEOSS_FETCHWARP1_COLORCOMPONENTSHIFT5_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_FETCHWARP1_COLORCOMPONENTSHIFT5_t;

/**
  * \brief Position of layer 5 within the destination frame. (VIDEOSS_FETCHWARP1_LAYEROFFSET5)
  */
typedef struct stc_VIDEOSS_FETCHWARP1_LAYEROFFSET5_field {
  uint32_t                         u15LAYERXOFFSET5:15;
  uint32_t                         :1;
  uint32_t                         u15LAYERYOFFSET5:15;
} stc_VIDEOSS_FETCHWARP1_LAYEROFFSET5_field_t;

typedef union un_VIDEOSS_FETCHWARP1_LAYEROFFSET5 {
  uint32_t                         u32Register;
  stc_VIDEOSS_FETCHWARP1_LAYEROFFSET5_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_FETCHWARP1_LAYEROFFSET5_t;

/**
  * \brief Clip window position for layer 5. (VIDEOSS_FETCHWARP1_CLIPWINDOWOFFSET5)
  */
typedef struct stc_VIDEOSS_FETCHWARP1_CLIPWINDOWOFFSET5_field {
  uint32_t                         u15CLIPWINDOWXOFFSET5:15;
  uint32_t                         :1;
  uint32_t                         u15CLIPWINDOWYOFFSET5:15;
} stc_VIDEOSS_FETCHWARP1_CLIPWINDOWOFFSET5_field_t;

typedef union un_VIDEOSS_FETCHWARP1_CLIPWINDOWOFFSET5 {
  uint32_t                         u32Register;
  stc_VIDEOSS_FETCHWARP1_CLIPWINDOWOFFSET5_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_FETCHWARP1_CLIPWINDOWOFFSET5_t;

/**
  * \brief Clip window size for layer 5. (VIDEOSS_FETCHWARP1_CLIPWINDOWDIMENSIONS5)
  */
typedef struct stc_VIDEOSS_FETCHWARP1_CLIPWINDOWDIMENSIONS5_field {
  uint32_t                         u14CLIPWINDOWWIDTH5:14;
  uint32_t                         :2;
  uint32_t                         u14CLIPWINDOWHEIGHT5:14;
  uint32_t                         :2;
} stc_VIDEOSS_FETCHWARP1_CLIPWINDOWDIMENSIONS5_field_t;

typedef union un_VIDEOSS_FETCHWARP1_CLIPWINDOWDIMENSIONS5 {
  uint32_t                         u32Register;
  stc_VIDEOSS_FETCHWARP1_CLIPWINDOWDIMENSIONS5_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_FETCHWARP1_CLIPWINDOWDIMENSIONS5_t;

/**
  * \brief Constant color for layer 5. (VIDEOSS_FETCHWARP1_CONSTANTCOLOR5)
  */
typedef struct stc_VIDEOSS_FETCHWARP1_CONSTANTCOLOR5_field {
  uint32_t                         u8CONSTANTALPHA5:8;
  uint32_t                         u8CONSTANTBLUE5:8;
  uint32_t                         u8CONSTANTGREEN5:8;
  uint32_t                         u8CONSTANTRED5:8;
} stc_VIDEOSS_FETCHWARP1_CONSTANTCOLOR5_field_t;

typedef union un_VIDEOSS_FETCHWARP1_CONSTANTCOLOR5 {
  uint32_t                         u32Register;
  stc_VIDEOSS_FETCHWARP1_CONSTANTCOLOR5_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_FETCHWARP1_CONSTANTCOLOR5_t;

/**
  * \brief Common properties of layer 5. (VIDEOSS_FETCHWARP1_LAYERPROPERTY5)
  */
typedef struct stc_VIDEOSS_FETCHWARP1_LAYERPROPERTY5_field {
  uint32_t                         :1;
  uint32_t                         u2TILEMODE5:2;
  uint32_t                         u1ALPHASRCENABLE5:1;
  uint32_t                         u1ALPHACONSTENABLE5:1;
  uint32_t                         u1ALPHAMASKENABLE5:1;
  uint32_t                         u1ALPHATRANSENABLE5:1;
  uint32_t                         u1RGBALPHASRCENABLE5:1;
  uint32_t                         u1RGBALPHACONSTENABLE5:1;
  uint32_t                         u1RGBALPHAMASKENABLE5:1;
  uint32_t                         u1RGBALPHATRANSENABLE5:1;
  uint32_t                         u1PREMULCONSTRGB5:1;
  uint32_t                         u2YUVCONVERSIONMODE5:2;
  uint32_t                         u1GAMMAREMOVEENABLE5:1;
  uint32_t                         :15;
  uint32_t                         u1CLIPWINDOWENABLE5:1;
  uint32_t                         u1SOURCEBUFFERENABLE5:1;
} stc_VIDEOSS_FETCHWARP1_LAYERPROPERTY5_field_t;

typedef union un_VIDEOSS_FETCHWARP1_LAYERPROPERTY5 {
  uint32_t                         u32Register;
  stc_VIDEOSS_FETCHWARP1_LAYERPROPERTY5_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_FETCHWARP1_LAYERPROPERTY5_t;

/**
  * \brief Source buffer base address of layer 6. (VIDEOSS_FETCHWARP1_BASEADDRESS6)
  */
typedef struct stc_VIDEOSS_FETCHWARP1_BASEADDRESS6_field {
  uint32_t                         u32BASEADDRESS6:32;
} stc_VIDEOSS_FETCHWARP1_BASEADDRESS6_field_t;

typedef union un_VIDEOSS_FETCHWARP1_BASEADDRESS6 {
  uint32_t                         u32Register;
  stc_VIDEOSS_FETCHWARP1_BASEADDRESS6_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_FETCHWARP1_BASEADDRESS6_t;

/**
  * \brief Source buffer attributes for layer 6. (VIDEOSS_FETCHWARP1_SOURCEBUFFERATTRIBUTES6)
  */
typedef struct stc_VIDEOSS_FETCHWARP1_SOURCEBUFFERATTRIBUTES6_field {
  uint32_t                         u16STRIDE6:16;
  uint32_t                         u6BITSPERPIXEL6:6;
  uint32_t                         :10;
} stc_VIDEOSS_FETCHWARP1_SOURCEBUFFERATTRIBUTES6_field_t;

typedef union un_VIDEOSS_FETCHWARP1_SOURCEBUFFERATTRIBUTES6 {
  uint32_t                         u32Register;
  stc_VIDEOSS_FETCHWARP1_SOURCEBUFFERATTRIBUTES6_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_FETCHWARP1_SOURCEBUFFERATTRIBUTES6_t;

/**
  * \brief Source buffer dimension of layer 6. (VIDEOSS_FETCHWARP1_SOURCEBUFFERDIMENSION6)
  */
typedef struct stc_VIDEOSS_FETCHWARP1_SOURCEBUFFERDIMENSION6_field {
  uint32_t                         u14LINEWIDTH6:14;
  uint32_t                         :2;
  uint32_t                         u14LINECOUNT6:14;
  uint32_t                         :2;
} stc_VIDEOSS_FETCHWARP1_SOURCEBUFFERDIMENSION6_field_t;

typedef union un_VIDEOSS_FETCHWARP1_SOURCEBUFFERDIMENSION6 {
  uint32_t                         u32Register;
  stc_VIDEOSS_FETCHWARP1_SOURCEBUFFERDIMENSION6_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_FETCHWARP1_SOURCEBUFFERDIMENSION6_t;

/**
  * \brief Size of color components for RGB, YUV and index formats (layer 6). (VIDEOSS_FETCHWARP1_COLORCOMPONENTBITS6)
  */
typedef struct stc_VIDEOSS_FETCHWARP1_COLORCOMPONENTBITS6_field {
  uint32_t                         u4COMPONENTBITSALPHA6:4;
  uint32_t                         :4;
  uint32_t                         u4COMPONENTBITSBLUE6:4;
  uint32_t                         :4;
  uint32_t                         u4COMPONENTBITSGREEN6:4;
  uint32_t                         :4;
  uint32_t                         u4COMPONENTBITSRED6:4;
  uint32_t                         :3;
  uint32_t                         u1ITUFORMAT6:1;
} stc_VIDEOSS_FETCHWARP1_COLORCOMPONENTBITS6_field_t;

typedef union un_VIDEOSS_FETCHWARP1_COLORCOMPONENTBITS6 {
  uint32_t                         u32Register;
  stc_VIDEOSS_FETCHWARP1_COLORCOMPONENTBITS6_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_FETCHWARP1_COLORCOMPONENTBITS6_t;

/**
  * \brief Bit position of color components for RGB, YUV and index formats (layer 6). (VIDEOSS_FETCHWARP1_COLORCOMPONENTSHIFT6)
  */
typedef struct stc_VIDEOSS_FETCHWARP1_COLORCOMPONENTSHIFT6_field {
  uint32_t                         u5COMPONENTSHIFTALPHA6:5;
  uint32_t                         :3;
  uint32_t                         u5COMPONENTSHIFTBLUE6:5;
  uint32_t                         :3;
  uint32_t                         u5COMPONENTSHIFTGREEN6:5;
  uint32_t                         :3;
  uint32_t                         u5COMPONENTSHIFTRED6:5;
  uint32_t                         :3;
} stc_VIDEOSS_FETCHWARP1_COLORCOMPONENTSHIFT6_field_t;

typedef union un_VIDEOSS_FETCHWARP1_COLORCOMPONENTSHIFT6 {
  uint32_t                         u32Register;
  stc_VIDEOSS_FETCHWARP1_COLORCOMPONENTSHIFT6_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_FETCHWARP1_COLORCOMPONENTSHIFT6_t;

/**
  * \brief Position of layer 1 within the destination frame. (VIDEOSS_FETCHWARP1_LAYEROFFSET6)
  */
typedef struct stc_VIDEOSS_FETCHWARP1_LAYEROFFSET6_field {
  uint32_t                         u15LAYERXOFFSET6:15;
  uint32_t                         :1;
  uint32_t                         u15LAYERYOFFSET6:15;
} stc_VIDEOSS_FETCHWARP1_LAYEROFFSET6_field_t;

typedef union un_VIDEOSS_FETCHWARP1_LAYEROFFSET6 {
  uint32_t                         u32Register;
  stc_VIDEOSS_FETCHWARP1_LAYEROFFSET6_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_FETCHWARP1_LAYEROFFSET6_t;

/**
  * \brief Clip window position for layer 6. (VIDEOSS_FETCHWARP1_CLIPWINDOWOFFSET6)
  */
typedef struct stc_VIDEOSS_FETCHWARP1_CLIPWINDOWOFFSET6_field {
  uint32_t                         u15CLIPWINDOWXOFFSET6:15;
  uint32_t                         :1;
  uint32_t                         u15CLIPWINDOWYOFFSET6:15;
} stc_VIDEOSS_FETCHWARP1_CLIPWINDOWOFFSET6_field_t;

typedef union un_VIDEOSS_FETCHWARP1_CLIPWINDOWOFFSET6 {
  uint32_t                         u32Register;
  stc_VIDEOSS_FETCHWARP1_CLIPWINDOWOFFSET6_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_FETCHWARP1_CLIPWINDOWOFFSET6_t;

/**
  * \brief Clip window size for layer 6. (VIDEOSS_FETCHWARP1_CLIPWINDOWDIMENSIONS6)
  */
typedef struct stc_VIDEOSS_FETCHWARP1_CLIPWINDOWDIMENSIONS6_field {
  uint32_t                         u14CLIPWINDOWWIDTH6:14;
  uint32_t                         :2;
  uint32_t                         u14CLIPWINDOWHEIGHT6:14;
  uint32_t                         :2;
} stc_VIDEOSS_FETCHWARP1_CLIPWINDOWDIMENSIONS6_field_t;

typedef union un_VIDEOSS_FETCHWARP1_CLIPWINDOWDIMENSIONS6 {
  uint32_t                         u32Register;
  stc_VIDEOSS_FETCHWARP1_CLIPWINDOWDIMENSIONS6_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_FETCHWARP1_CLIPWINDOWDIMENSIONS6_t;

/**
  * \brief Constant color for layer 6. (VIDEOSS_FETCHWARP1_CONSTANTCOLOR6)
  */
typedef struct stc_VIDEOSS_FETCHWARP1_CONSTANTCOLOR6_field {
  uint32_t                         u8CONSTANTALPHA6:8;
  uint32_t                         u8CONSTANTBLUE6:8;
  uint32_t                         u8CONSTANTGREEN6:8;
  uint32_t                         u8CONSTANTRED6:8;
} stc_VIDEOSS_FETCHWARP1_CONSTANTCOLOR6_field_t;

typedef union un_VIDEOSS_FETCHWARP1_CONSTANTCOLOR6 {
  uint32_t                         u32Register;
  stc_VIDEOSS_FETCHWARP1_CONSTANTCOLOR6_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_FETCHWARP1_CONSTANTCOLOR6_t;

/**
  * \brief Common properties of layer 6. (VIDEOSS_FETCHWARP1_LAYERPROPERTY6)
  */
typedef struct stc_VIDEOSS_FETCHWARP1_LAYERPROPERTY6_field {
  uint32_t                         :1;
  uint32_t                         u2TILEMODE6:2;
  uint32_t                         u1ALPHASRCENABLE6:1;
  uint32_t                         u1ALPHACONSTENABLE6:1;
  uint32_t                         u1ALPHAMASKENABLE6:1;
  uint32_t                         u1ALPHATRANSENABLE6:1;
  uint32_t                         u1RGBALPHASRCENABLE6:1;
  uint32_t                         u1RGBALPHACONSTENABLE6:1;
  uint32_t                         u1RGBALPHAMASKENABLE6:1;
  uint32_t                         u1RGBALPHATRANSENABLE6:1;
  uint32_t                         u1PREMULCONSTRGB6:1;
  uint32_t                         u2YUVCONVERSIONMODE6:2;
  uint32_t                         u1GAMMAREMOVEENABLE6:1;
  uint32_t                         :15;
  uint32_t                         u1CLIPWINDOWENABLE6:1;
  uint32_t                         u1SOURCEBUFFERENABLE6:1;
} stc_VIDEOSS_FETCHWARP1_LAYERPROPERTY6_field_t;

typedef union un_VIDEOSS_FETCHWARP1_LAYERPROPERTY6 {
  uint32_t                         u32Register;
  stc_VIDEOSS_FETCHWARP1_LAYERPROPERTY6_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_FETCHWARP1_LAYERPROPERTY6_t;

/**
  * \brief Source buffer base address of layer 7. (VIDEOSS_FETCHWARP1_BASEADDRESS7)
  */
typedef struct stc_VIDEOSS_FETCHWARP1_BASEADDRESS7_field {
  uint32_t                         u32BASEADDRESS7:32;
} stc_VIDEOSS_FETCHWARP1_BASEADDRESS7_field_t;

typedef union un_VIDEOSS_FETCHWARP1_BASEADDRESS7 {
  uint32_t                         u32Register;
  stc_VIDEOSS_FETCHWARP1_BASEADDRESS7_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_FETCHWARP1_BASEADDRESS7_t;

/**
  * \brief Source buffer stride for layer 7. (VIDEOSS_FETCHWARP1_SOURCEBUFFERATTRIBUTES7)
  */
typedef struct stc_VIDEOSS_FETCHWARP1_SOURCEBUFFERATTRIBUTES7_field {
  uint32_t                         u16STRIDE7:16;
  uint32_t                         u6BITSPERPIXEL7:6;
  uint32_t                         :10;
} stc_VIDEOSS_FETCHWARP1_SOURCEBUFFERATTRIBUTES7_field_t;

typedef union un_VIDEOSS_FETCHWARP1_SOURCEBUFFERATTRIBUTES7 {
  uint32_t                         u32Register;
  stc_VIDEOSS_FETCHWARP1_SOURCEBUFFERATTRIBUTES7_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_FETCHWARP1_SOURCEBUFFERATTRIBUTES7_t;

/**
  * \brief Source buffer dimension of layer 7. (VIDEOSS_FETCHWARP1_SOURCEBUFFERDIMENSION7)
  */
typedef struct stc_VIDEOSS_FETCHWARP1_SOURCEBUFFERDIMENSION7_field {
  uint32_t                         u14LINEWIDTH7:14;
  uint32_t                         :2;
  uint32_t                         u14LINECOUNT7:14;
  uint32_t                         :2;
} stc_VIDEOSS_FETCHWARP1_SOURCEBUFFERDIMENSION7_field_t;

typedef union un_VIDEOSS_FETCHWARP1_SOURCEBUFFERDIMENSION7 {
  uint32_t                         u32Register;
  stc_VIDEOSS_FETCHWARP1_SOURCEBUFFERDIMENSION7_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_FETCHWARP1_SOURCEBUFFERDIMENSION7_t;

/**
  * \brief Size of color components for RGB, YUV and index formats (layer 7). (VIDEOSS_FETCHWARP1_COLORCOMPONENTBITS7)
  */
typedef struct stc_VIDEOSS_FETCHWARP1_COLORCOMPONENTBITS7_field {
  uint32_t                         u4COMPONENTBITSALPHA7:4;
  uint32_t                         :4;
  uint32_t                         u4COMPONENTBITSBLUE7:4;
  uint32_t                         :4;
  uint32_t                         u4COMPONENTBITSGREEN7:4;
  uint32_t                         :4;
  uint32_t                         u4COMPONENTBITSRED7:4;
  uint32_t                         :3;
  uint32_t                         u1ITUFORMAT7:1;
} stc_VIDEOSS_FETCHWARP1_COLORCOMPONENTBITS7_field_t;

typedef union un_VIDEOSS_FETCHWARP1_COLORCOMPONENTBITS7 {
  uint32_t                         u32Register;
  stc_VIDEOSS_FETCHWARP1_COLORCOMPONENTBITS7_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_FETCHWARP1_COLORCOMPONENTBITS7_t;

/**
  * \brief Bit position of color components for RGB, YUV and index formats (layer 7). (VIDEOSS_FETCHWARP1_COLORCOMPONENTSHIFT7)
  */
typedef struct stc_VIDEOSS_FETCHWARP1_COLORCOMPONENTSHIFT7_field {
  uint32_t                         u5COMPONENTSHIFTALPHA7:5;
  uint32_t                         :3;
  uint32_t                         u5COMPONENTSHIFTBLUE7:5;
  uint32_t                         :3;
  uint32_t                         u5COMPONENTSHIFTGREEN7:5;
  uint32_t                         :3;
  uint32_t                         u5COMPONENTSHIFTRED7:5;
  uint32_t                         :3;
} stc_VIDEOSS_FETCHWARP1_COLORCOMPONENTSHIFT7_field_t;

typedef union un_VIDEOSS_FETCHWARP1_COLORCOMPONENTSHIFT7 {
  uint32_t                         u32Register;
  stc_VIDEOSS_FETCHWARP1_COLORCOMPONENTSHIFT7_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_FETCHWARP1_COLORCOMPONENTSHIFT7_t;

/**
  * \brief Position of layer 7 within the destination frame. (VIDEOSS_FETCHWARP1_LAYEROFFSET7)
  */
typedef struct stc_VIDEOSS_FETCHWARP1_LAYEROFFSET7_field {
  uint32_t                         u15LAYERXOFFSET7:15;
  uint32_t                         :1;
  uint32_t                         u15LAYERYOFFSET7:15;
} stc_VIDEOSS_FETCHWARP1_LAYEROFFSET7_field_t;

typedef union un_VIDEOSS_FETCHWARP1_LAYEROFFSET7 {
  uint32_t                         u32Register;
  stc_VIDEOSS_FETCHWARP1_LAYEROFFSET7_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_FETCHWARP1_LAYEROFFSET7_t;

/**
  * \brief Clip window position for layer 7. (VIDEOSS_FETCHWARP1_CLIPWINDOWOFFSET7)
  */
typedef struct stc_VIDEOSS_FETCHWARP1_CLIPWINDOWOFFSET7_field {
  uint32_t                         u15CLIPWINDOWXOFFSET7:15;
  uint32_t                         :1;
  uint32_t                         u15CLIPWINDOWYOFFSET7:15;
} stc_VIDEOSS_FETCHWARP1_CLIPWINDOWOFFSET7_field_t;

typedef union un_VIDEOSS_FETCHWARP1_CLIPWINDOWOFFSET7 {
  uint32_t                         u32Register;
  stc_VIDEOSS_FETCHWARP1_CLIPWINDOWOFFSET7_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_FETCHWARP1_CLIPWINDOWOFFSET7_t;

/**
  * \brief Clip window size for layer 7. (VIDEOSS_FETCHWARP1_CLIPWINDOWDIMENSIONS7)
  */
typedef struct stc_VIDEOSS_FETCHWARP1_CLIPWINDOWDIMENSIONS7_field {
  uint32_t                         u14CLIPWINDOWWIDTH7:14;
  uint32_t                         :2;
  uint32_t                         u14CLIPWINDOWHEIGHT7:14;
  uint32_t                         :2;
} stc_VIDEOSS_FETCHWARP1_CLIPWINDOWDIMENSIONS7_field_t;

typedef union un_VIDEOSS_FETCHWARP1_CLIPWINDOWDIMENSIONS7 {
  uint32_t                         u32Register;
  stc_VIDEOSS_FETCHWARP1_CLIPWINDOWDIMENSIONS7_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_FETCHWARP1_CLIPWINDOWDIMENSIONS7_t;

/**
  * \brief Constant color for layer 7. (VIDEOSS_FETCHWARP1_CONSTANTCOLOR7)
  */
typedef struct stc_VIDEOSS_FETCHWARP1_CONSTANTCOLOR7_field {
  uint32_t                         u8CONSTANTALPHA7:8;
  uint32_t                         u8CONSTANTBLUE7:8;
  uint32_t                         u8CONSTANTGREEN7:8;
  uint32_t                         u8CONSTANTRED7:8;
} stc_VIDEOSS_FETCHWARP1_CONSTANTCOLOR7_field_t;

typedef union un_VIDEOSS_FETCHWARP1_CONSTANTCOLOR7 {
  uint32_t                         u32Register;
  stc_VIDEOSS_FETCHWARP1_CONSTANTCOLOR7_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_FETCHWARP1_CONSTANTCOLOR7_t;

/**
  * \brief Common properties of layer 7. (VIDEOSS_FETCHWARP1_LAYERPROPERTY7)
  */
typedef struct stc_VIDEOSS_FETCHWARP1_LAYERPROPERTY7_field {
  uint32_t                         :1;
  uint32_t                         u2TILEMODE7:2;
  uint32_t                         u1ALPHASRCENABLE7:1;
  uint32_t                         u1ALPHACONSTENABLE7:1;
  uint32_t                         u1ALPHAMASKENABLE7:1;
  uint32_t                         u1ALPHATRANSENABLE7:1;
  uint32_t                         u1RGBALPHASRCENABLE7:1;
  uint32_t                         u1RGBALPHACONSTENABLE7:1;
  uint32_t                         u1RGBALPHAMASKENABLE7:1;
  uint32_t                         u1RGBALPHATRANSENABLE7:1;
  uint32_t                         u1PREMULCONSTRGB7:1;
  uint32_t                         u2YUVCONVERSIONMODE7:2;
  uint32_t                         u1GAMMAREMOVEENABLE7:1;
  uint32_t                         :15;
  uint32_t                         u1CLIPWINDOWENABLE7:1;
  uint32_t                         u1SOURCEBUFFERENABLE7:1;
} stc_VIDEOSS_FETCHWARP1_LAYERPROPERTY7_field_t;

typedef union un_VIDEOSS_FETCHWARP1_LAYERPROPERTY7 {
  uint32_t                         u32Register;
  stc_VIDEOSS_FETCHWARP1_LAYERPROPERTY7_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_FETCHWARP1_LAYERPROPERTY7_t;

/**
  * \brief Output frame dimension. (VIDEOSS_FETCHWARP1_FRAMEDIMENSIONS)
  */
typedef struct stc_VIDEOSS_FETCHWARP1_FRAMEDIMENSIONS_field {
  uint32_t                         u14FRAMEWIDTH:14;
  uint32_t                         :2;
  uint32_t                         u14FRAMEHEIGHT:14;
  uint32_t                         :1;
  uint32_t                         u1EMPTYFRAME:1;
} stc_VIDEOSS_FETCHWARP1_FRAMEDIMENSIONS_field_t;

typedef union un_VIDEOSS_FETCHWARP1_FRAMEDIMENSIONS {
  uint32_t                         u32Register;
  stc_VIDEOSS_FETCHWARP1_FRAMEDIMENSIONS_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_FETCHWARP1_FRAMEDIMENSIONS_t;

/**
  * \brief Resampling options for output frame. (VIDEOSS_FETCHWARP1_FRAMERESAMPLING)
  */
typedef struct stc_VIDEOSS_FETCHWARP1_FRAMERESAMPLING_field {
  uint32_t                         u6STARTX:6;
  uint32_t                         u6STARTY:6;
  uint32_t                         u6DELTAX:6;
  uint32_t                         u6DELTAY:6;
  uint32_t                         u1SWAPDIRECTION:1;
  uint32_t                         :7;
} stc_VIDEOSS_FETCHWARP1_FRAMERESAMPLING_field_t;

typedef union un_VIDEOSS_FETCHWARP1_FRAMERESAMPLING {
  uint32_t                         u32Register;
  stc_VIDEOSS_FETCHWARP1_FRAMERESAMPLING_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_FETCHWARP1_FRAMERESAMPLING_t;

/**
  * \brief Warping control options. (VIDEOSS_FETCHWARP1_WARPCONTROL)
  */
typedef struct stc_VIDEOSS_FETCHWARP1_WARPCONTROL_field {
  uint32_t                         u6WARPBITSPERPIXEL:6;
  uint32_t                         :2;
  uint32_t                         u2WARPCOORDINATEMODE:2;
  uint32_t                         :2;
  uint32_t                         u1WARPSYMMETRICOFFSET:1;
  uint32_t                         :19;
} stc_VIDEOSS_FETCHWARP1_WARPCONTROL_field_t;

typedef union un_VIDEOSS_FETCHWARP1_WARPCONTROL {
  uint32_t                         u32Register;
  stc_VIDEOSS_FETCHWARP1_WARPCONTROL_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_FETCHWARP1_WARPCONTROL_t;

/**
  * \brief Start value X for arbitrary warping. (VIDEOSS_FETCHWARP1_ARBSTARTX)
  */
typedef struct stc_VIDEOSS_FETCHWARP1_ARBSTARTX_field {
  uint32_t                         u21ARBSTARTX:21;
  uint32_t                         :11;
} stc_VIDEOSS_FETCHWARP1_ARBSTARTX_field_t;

typedef union un_VIDEOSS_FETCHWARP1_ARBSTARTX {
  uint32_t                         u32Register;
  stc_VIDEOSS_FETCHWARP1_ARBSTARTX_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_FETCHWARP1_ARBSTARTX_t;

/**
  * \brief Start value Y for arbitrary warping. (VIDEOSS_FETCHWARP1_ARBSTARTY)
  */
typedef struct stc_VIDEOSS_FETCHWARP1_ARBSTARTY_field {
  uint32_t                         u21ARBSTARTY:21;
  uint32_t                         :11;
} stc_VIDEOSS_FETCHWARP1_ARBSTARTY_field_t;

typedef union un_VIDEOSS_FETCHWARP1_ARBSTARTY {
  uint32_t                         u32Register;
  stc_VIDEOSS_FETCHWARP1_ARBSTARTY_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_FETCHWARP1_ARBSTARTY_t;

/**
  * \brief Start values for delta incrementation of arbitrary warping. (VIDEOSS_FETCHWARP1_ARBDELTA)
  */
typedef struct stc_VIDEOSS_FETCHWARP1_ARBDELTA_field {
  uint32_t                         u8ARBDELTAXX:8;
  uint32_t                         u8ARBDELTAXY:8;
  uint32_t                         u8ARBDELTAYX:8;
  uint32_t                         u8ARBDELTAYY:8;
} stc_VIDEOSS_FETCHWARP1_ARBDELTA_field_t;

typedef union un_VIDEOSS_FETCHWARP1_ARBDELTA {
  uint32_t                         u32Register;
  stc_VIDEOSS_FETCHWARP1_ARBDELTA_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_FETCHWARP1_ARBDELTA_t;

/**
  * \brief FIR sequence control register. (VIDEOSS_FETCHWARP1_FIRPOSITIONS)
  */
typedef struct stc_VIDEOSS_FETCHWARP1_FIRPOSITIONS_field {
  uint32_t                         u4FIR0POSITION:4;
  uint32_t                         u4FIR1POSITION:4;
  uint32_t                         u4FIR2POSITION:4;
  uint32_t                         u4FIR3POSITION:4;
  uint32_t                         :16;
} stc_VIDEOSS_FETCHWARP1_FIRPOSITIONS_field_t;

typedef union un_VIDEOSS_FETCHWARP1_FIRPOSITIONS {
  uint32_t                         u32Register;
  stc_VIDEOSS_FETCHWARP1_FIRPOSITIONS_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_FETCHWARP1_FIRPOSITIONS_t;

/**
  * \brief FIR coefficients register. (VIDEOSS_FETCHWARP1_FIRCOEFFICIENTS)
  */
typedef struct stc_VIDEOSS_FETCHWARP1_FIRCOEFFICIENTS_field {
  uint32_t                         u8FIR0COEFFICIENT:8;
  uint32_t                         u8FIR1COEFFICIENT:8;
  uint32_t                         u8FIR2COEFFICIENT:8;
  uint32_t                         u8FIR3COEFFICIENT:8;
} stc_VIDEOSS_FETCHWARP1_FIRCOEFFICIENTS_field_t;

typedef union un_VIDEOSS_FETCHWARP1_FIRCOEFFICIENTS {
  uint32_t                         u32Register;
  stc_VIDEOSS_FETCHWARP1_FIRCOEFFICIENTS_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_FETCHWARP1_FIRCOEFFICIENTS_t;

/**
  * \brief Shared common control settings for all layers. (VIDEOSS_FETCHWARP1_CONTROL)
  */
typedef struct stc_VIDEOSS_FETCHWARP1_CONTROL_field {
  uint32_t                         u3RASTERMODE:3;
  uint32_t                         u2INPUTSELECT:2;
  uint32_t                         :2;
  uint32_t                         u1RAWPIXEL:1;
  uint32_t                         :8;
  uint32_t                         u1CLIPCOLOR:1;
  uint32_t                         u3CLIPLAYER:3;
  uint32_t                         u3FILTERMODE:3;
  uint32_t                         :1;
  uint32_t                         u3LINEBUFLAYER:3;
  uint32_t                         :5;
} stc_VIDEOSS_FETCHWARP1_CONTROL_field_t;

typedef union un_VIDEOSS_FETCHWARP1_CONTROL {
  uint32_t                         u32Register;
  stc_VIDEOSS_FETCHWARP1_CONTROL_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_FETCHWARP1_CONTROL_t;

/**
  * \brief Shadow load enable flags for all layers. (VIDEOSS_FETCHWARP1_TRIGGERENABLE)
  */
typedef struct stc_VIDEOSS_FETCHWARP1_TRIGGERENABLE_field {
  uint32_t                         u8SHDLDREQ:8;
  uint32_t                         :24;
} stc_VIDEOSS_FETCHWARP1_TRIGGERENABLE_field_t;

typedef union un_VIDEOSS_FETCHWARP1_TRIGGERENABLE {
  uint32_t                         u32Register;
  stc_VIDEOSS_FETCHWARP1_TRIGGERENABLE_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_FETCHWARP1_TRIGGERENABLE_t;

/**
  * \brief Shadow load trigger. (VIDEOSS_FETCHWARP1_CONTROLTRIGGER)
  */
typedef struct stc_VIDEOSS_FETCHWARP1_CONTROLTRIGGER_field {
  uint32_t                         u1SHDTOKGEN:1;
  uint32_t                         :31;
} stc_VIDEOSS_FETCHWARP1_CONTROLTRIGGER_field_t;

typedef union un_VIDEOSS_FETCHWARP1_CONTROLTRIGGER {
  uint32_t                         u32Register;
  stc_VIDEOSS_FETCHWARP1_CONTROLTRIGGER_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_FETCHWARP1_CONTROLTRIGGER_t;

/**
  * \brief Frame start trigger. (VIDEOSS_FETCHWARP1_START)
  */
typedef struct stc_VIDEOSS_FETCHWARP1_START_field {
  uint32_t                         u1START:1;
  uint32_t                         :31;
} stc_VIDEOSS_FETCHWARP1_START_field_t;

typedef union un_VIDEOSS_FETCHWARP1_START {
  uint32_t                         u32Register;
  stc_VIDEOSS_FETCHWARP1_START_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_FETCHWARP1_START_t;

/**
  * \brief Fetch unit type. (VIDEOSS_FETCHWARP1_FETCHTYPE)
  */
typedef struct stc_VIDEOSS_FETCHWARP1_FETCHTYPE_field {
  uint32_t                         u4FETCHTYPE:4;
  uint32_t                         :28;
} stc_VIDEOSS_FETCHWARP1_FETCHTYPE_field_t;

typedef union un_VIDEOSS_FETCHWARP1_FETCHTYPE {
  uint32_t                         u32Register;
  stc_VIDEOSS_FETCHWARP1_FETCHTYPE_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_FETCHWARP1_FETCHTYPE_t;

/**
  * \brief Burst buffer properties. (VIDEOSS_FETCHWARP1_BURSTBUFFERPROPERTIES)
  */
typedef struct stc_VIDEOSS_FETCHWARP1_BURSTBUFFERPROPERTIES_field {
  uint32_t                         u8MANAGEDBURSTBUFFERS:8;
  uint32_t                         u5BURSTLENGTHFORMAXBUFFERS:5;
  uint32_t                         :19;
} stc_VIDEOSS_FETCHWARP1_BURSTBUFFERPROPERTIES_field_t;

typedef union un_VIDEOSS_FETCHWARP1_BURSTBUFFERPROPERTIES {
  uint32_t                         u32Register;
  stc_VIDEOSS_FETCHWARP1_BURSTBUFFERPROPERTIES_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_FETCHWARP1_BURSTBUFFERPROPERTIES_t;

/**
  * \brief Status information. (VIDEOSS_FETCHWARP1_STATUS)
  */
typedef struct stc_VIDEOSS_FETCHWARP1_STATUS_field {
  uint32_t                         u1WRITETIMEOUT:1;
  uint32_t                         :3;
  uint32_t                         u1READTIMEOUT:1;
  uint32_t                         :27;
} stc_VIDEOSS_FETCHWARP1_STATUS_field_t;

typedef union un_VIDEOSS_FETCHWARP1_STATUS {
  uint32_t                         u32Register;
  stc_VIDEOSS_FETCHWARP1_STATUS_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_FETCHWARP1_STATUS_t;



/**
  * \brief Common static control options. (VIDEOSS_FETCHECO1_STATICCONTROL)
  */
typedef struct stc_VIDEOSS_FETCHECO1_STATICCONTROL_field {
  uint32_t                         u1SHDEN:1;
  uint32_t                         :15;
  uint32_t                         u8BASEADDRESSAUTOUPDATE:8;
  uint32_t                         :8;
} stc_VIDEOSS_FETCHECO1_STATICCONTROL_field_t;

typedef union un_VIDEOSS_FETCHECO1_STATICCONTROL {
  uint32_t                         u32Register;
  stc_VIDEOSS_FETCHECO1_STATICCONTROL_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_FETCHECO1_STATICCONTROL_t;

/**
  * \brief AXI interface buffer management register (VIDEOSS_FETCHECO1_BURSTBUFFERMANAGEMENT)
  */
typedef struct stc_VIDEOSS_FETCHECO1_BURSTBUFFERMANAGEMENT_field {
  uint32_t                         u8SETNUMBUFFERS:8;
  uint32_t                         u5SETBURSTLENGTH:5;
  uint32_t                         :18;
  uint32_t                         u1LINEMODE:1;
} stc_VIDEOSS_FETCHECO1_BURSTBUFFERMANAGEMENT_field_t;

typedef union un_VIDEOSS_FETCHECO1_BURSTBUFFERMANAGEMENT {
  uint32_t                         u32Register;
  stc_VIDEOSS_FETCHECO1_BURSTBUFFERMANAGEMENT_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_FETCHECO1_BURSTBUFFERMANAGEMENT_t;

/**
  * \brief Source buffer base address of layer 0. (VIDEOSS_FETCHECO1_BASEADDRESS0)
  */
typedef struct stc_VIDEOSS_FETCHECO1_BASEADDRESS0_field {
  uint32_t                         u32BASEADDRESS0:32;
} stc_VIDEOSS_FETCHECO1_BASEADDRESS0_field_t;

typedef union un_VIDEOSS_FETCHECO1_BASEADDRESS0 {
  uint32_t                         u32Register;
  stc_VIDEOSS_FETCHECO1_BASEADDRESS0_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_FETCHECO1_BASEADDRESS0_t;

/**
  * \brief Source buffer attributes for layer 0. (VIDEOSS_FETCHECO1_SOURCEBUFFERATTRIBUTES0)
  */
typedef struct stc_VIDEOSS_FETCHECO1_SOURCEBUFFERATTRIBUTES0_field {
  uint32_t                         u16STRIDE0:16;
  uint32_t                         u6BITSPERPIXEL0:6;
  uint32_t                         :10;
} stc_VIDEOSS_FETCHECO1_SOURCEBUFFERATTRIBUTES0_field_t;

typedef union un_VIDEOSS_FETCHECO1_SOURCEBUFFERATTRIBUTES0 {
  uint32_t                         u32Register;
  stc_VIDEOSS_FETCHECO1_SOURCEBUFFERATTRIBUTES0_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_FETCHECO1_SOURCEBUFFERATTRIBUTES0_t;

/**
  * \brief Source buffer dimension of layer 0. (VIDEOSS_FETCHECO1_SOURCEBUFFERDIMENSION0)
  */
typedef struct stc_VIDEOSS_FETCHECO1_SOURCEBUFFERDIMENSION0_field {
  uint32_t                         u14LINEWIDTH0:14;
  uint32_t                         :2;
  uint32_t                         u14LINECOUNT0:14;
  uint32_t                         :2;
} stc_VIDEOSS_FETCHECO1_SOURCEBUFFERDIMENSION0_field_t;

typedef union un_VIDEOSS_FETCHECO1_SOURCEBUFFERDIMENSION0 {
  uint32_t                         u32Register;
  stc_VIDEOSS_FETCHECO1_SOURCEBUFFERDIMENSION0_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_FETCHECO1_SOURCEBUFFERDIMENSION0_t;

/**
  * \brief Size of color components for RGB, YUV and index formats (layer 0). (VIDEOSS_FETCHECO1_COLORCOMPONENTBITS0)
  */
typedef struct stc_VIDEOSS_FETCHECO1_COLORCOMPONENTBITS0_field {
  uint32_t                         u4COMPONENTBITSALPHA0:4;
  uint32_t                         :4;
  uint32_t                         u4COMPONENTBITSBLUE0:4;
  uint32_t                         :4;
  uint32_t                         u4COMPONENTBITSGREEN0:4;
  uint32_t                         :4;
  uint32_t                         u4COMPONENTBITSRED0:4;
  uint32_t                         :3;
  uint32_t                         u1ITUFORMAT0:1;
} stc_VIDEOSS_FETCHECO1_COLORCOMPONENTBITS0_field_t;

typedef union un_VIDEOSS_FETCHECO1_COLORCOMPONENTBITS0 {
  uint32_t                         u32Register;
  stc_VIDEOSS_FETCHECO1_COLORCOMPONENTBITS0_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_FETCHECO1_COLORCOMPONENTBITS0_t;

/**
  * \brief Bit position of color components for RGB, YUV and index formats (layer 0). (VIDEOSS_FETCHECO1_COLORCOMPONENTSHIFT0)
  */
typedef struct stc_VIDEOSS_FETCHECO1_COLORCOMPONENTSHIFT0_field {
  uint32_t                         u5COMPONENTSHIFTALPHA0:5;
  uint32_t                         :3;
  uint32_t                         u5COMPONENTSHIFTBLUE0:5;
  uint32_t                         :3;
  uint32_t                         u5COMPONENTSHIFTGREEN0:5;
  uint32_t                         :3;
  uint32_t                         u5COMPONENTSHIFTRED0:5;
  uint32_t                         :3;
} stc_VIDEOSS_FETCHECO1_COLORCOMPONENTSHIFT0_field_t;

typedef union un_VIDEOSS_FETCHECO1_COLORCOMPONENTSHIFT0 {
  uint32_t                         u32Register;
  stc_VIDEOSS_FETCHECO1_COLORCOMPONENTSHIFT0_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_FETCHECO1_COLORCOMPONENTSHIFT0_t;

/**
  * \brief Position of layer 0 within the destination frame. (VIDEOSS_FETCHECO1_LAYEROFFSET0)
  */
typedef struct stc_VIDEOSS_FETCHECO1_LAYEROFFSET0_field {
  uint32_t                         u15LAYERXOFFSET0:15;
  uint32_t                         :1;
  uint32_t                         u15LAYERYOFFSET0:15;
} stc_VIDEOSS_FETCHECO1_LAYEROFFSET0_field_t;

typedef union un_VIDEOSS_FETCHECO1_LAYEROFFSET0 {
  uint32_t                         u32Register;
  stc_VIDEOSS_FETCHECO1_LAYEROFFSET0_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_FETCHECO1_LAYEROFFSET0_t;

/**
  * \brief Clip window position for layer 0. (VIDEOSS_FETCHECO1_CLIPWINDOWOFFSET0)
  */
typedef struct stc_VIDEOSS_FETCHECO1_CLIPWINDOWOFFSET0_field {
  uint32_t                         u15CLIPWINDOWXOFFSET0:15;
  uint32_t                         :1;
  uint32_t                         u15CLIPWINDOWYOFFSET0:15;
} stc_VIDEOSS_FETCHECO1_CLIPWINDOWOFFSET0_field_t;

typedef union un_VIDEOSS_FETCHECO1_CLIPWINDOWOFFSET0 {
  uint32_t                         u32Register;
  stc_VIDEOSS_FETCHECO1_CLIPWINDOWOFFSET0_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_FETCHECO1_CLIPWINDOWOFFSET0_t;

/**
  * \brief Clip window size for layer 0. (VIDEOSS_FETCHECO1_CLIPWINDOWDIMENSIONS0)
  */
typedef struct stc_VIDEOSS_FETCHECO1_CLIPWINDOWDIMENSIONS0_field {
  uint32_t                         u14CLIPWINDOWWIDTH0:14;
  uint32_t                         :2;
  uint32_t                         u14CLIPWINDOWHEIGHT0:14;
  uint32_t                         :2;
} stc_VIDEOSS_FETCHECO1_CLIPWINDOWDIMENSIONS0_field_t;

typedef union un_VIDEOSS_FETCHECO1_CLIPWINDOWDIMENSIONS0 {
  uint32_t                         u32Register;
  stc_VIDEOSS_FETCHECO1_CLIPWINDOWDIMENSIONS0_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_FETCHECO1_CLIPWINDOWDIMENSIONS0_t;

/**
  * \brief Constant color for layer 0. (VIDEOSS_FETCHECO1_CONSTANTCOLOR0)
  */
typedef struct stc_VIDEOSS_FETCHECO1_CONSTANTCOLOR0_field {
  uint32_t                         u8CONSTANTALPHA0:8;
  uint32_t                         u8CONSTANTBLUE0:8;
  uint32_t                         u8CONSTANTGREEN0:8;
  uint32_t                         u8CONSTANTRED0:8;
} stc_VIDEOSS_FETCHECO1_CONSTANTCOLOR0_field_t;

typedef union un_VIDEOSS_FETCHECO1_CONSTANTCOLOR0 {
  uint32_t                         u32Register;
  stc_VIDEOSS_FETCHECO1_CONSTANTCOLOR0_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_FETCHECO1_CONSTANTCOLOR0_t;

/**
  * \brief Common properties of layer 0. (VIDEOSS_FETCHECO1_LAYERPROPERTY0)
  */
typedef struct stc_VIDEOSS_FETCHECO1_LAYERPROPERTY0_field {
  uint32_t                         :1;
  uint32_t                         u2TILEMODE0:2;
  uint32_t                         :27;
  uint32_t                         u1CLIPWINDOWENABLE0:1;
  uint32_t                         u1SOURCEBUFFERENABLE0:1;
} stc_VIDEOSS_FETCHECO1_LAYERPROPERTY0_field_t;

typedef union un_VIDEOSS_FETCHECO1_LAYERPROPERTY0 {
  uint32_t                         u32Register;
  stc_VIDEOSS_FETCHECO1_LAYERPROPERTY0_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_FETCHECO1_LAYERPROPERTY0_t;

/**
  * \brief Output frame dimension. (VIDEOSS_FETCHECO1_FRAMEDIMENSIONS)
  */
typedef struct stc_VIDEOSS_FETCHECO1_FRAMEDIMENSIONS_field {
  uint32_t                         u14FRAMEWIDTH:14;
  uint32_t                         :2;
  uint32_t                         u14FRAMEHEIGHT:14;
  uint32_t                         :1;
  uint32_t                         u1EMPTYFRAME:1;
} stc_VIDEOSS_FETCHECO1_FRAMEDIMENSIONS_field_t;

typedef union un_VIDEOSS_FETCHECO1_FRAMEDIMENSIONS {
  uint32_t                         u32Register;
  stc_VIDEOSS_FETCHECO1_FRAMEDIMENSIONS_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_FETCHECO1_FRAMEDIMENSIONS_t;

/**
  * \brief Resampling options for output frame. (VIDEOSS_FETCHECO1_FRAMERESAMPLING)
  */
typedef struct stc_VIDEOSS_FETCHECO1_FRAMERESAMPLING_field {
  uint32_t                         u6STARTX:6;
  uint32_t                         u6STARTY:6;
  uint32_t                         u6DELTAX:6;
  uint32_t                         u6DELTAY:6;
  uint32_t                         u1SWAPDIRECTION:1;
  uint32_t                         :7;
} stc_VIDEOSS_FETCHECO1_FRAMERESAMPLING_field_t;

typedef union un_VIDEOSS_FETCHECO1_FRAMERESAMPLING {
  uint32_t                         u32Register;
  stc_VIDEOSS_FETCHECO1_FRAMERESAMPLING_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_FETCHECO1_FRAMERESAMPLING_t;

/**
  * \brief Shared common control settings for all layers. (VIDEOSS_FETCHECO1_CONTROL)
  */
typedef struct stc_VIDEOSS_FETCHECO1_CONTROL_field {
  uint32_t                         :7;
  uint32_t                         u1RAWPIXEL:1;
  uint32_t                         :8;
  uint32_t                         u1CLIPCOLOR:1;
  uint32_t                         :15;
} stc_VIDEOSS_FETCHECO1_CONTROL_field_t;

typedef union un_VIDEOSS_FETCHECO1_CONTROL {
  uint32_t                         u32Register;
  stc_VIDEOSS_FETCHECO1_CONTROL_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_FETCHECO1_CONTROL_t;

/**
  * \brief Shadow load trigger. (VIDEOSS_FETCHECO1_CONTROLTRIGGER)
  */
typedef struct stc_VIDEOSS_FETCHECO1_CONTROLTRIGGER_field {
  uint32_t                         u1SHDTOKGEN:1;
  uint32_t                         :31;
} stc_VIDEOSS_FETCHECO1_CONTROLTRIGGER_field_t;

typedef union un_VIDEOSS_FETCHECO1_CONTROLTRIGGER {
  uint32_t                         u32Register;
  stc_VIDEOSS_FETCHECO1_CONTROLTRIGGER_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_FETCHECO1_CONTROLTRIGGER_t;

/**
  * \brief Frame start trigger. (VIDEOSS_FETCHECO1_START)
  */
typedef struct stc_VIDEOSS_FETCHECO1_START_field {
  uint32_t                         u1START:1;
  uint32_t                         :31;
} stc_VIDEOSS_FETCHECO1_START_field_t;

typedef union un_VIDEOSS_FETCHECO1_START {
  uint32_t                         u32Register;
  stc_VIDEOSS_FETCHECO1_START_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_FETCHECO1_START_t;

/**
  * \brief Fetch unit type. (VIDEOSS_FETCHECO1_FETCHTYPE)
  */
typedef struct stc_VIDEOSS_FETCHECO1_FETCHTYPE_field {
  uint32_t                         u4FETCHTYPE:4;
  uint32_t                         :28;
} stc_VIDEOSS_FETCHECO1_FETCHTYPE_field_t;

typedef union un_VIDEOSS_FETCHECO1_FETCHTYPE {
  uint32_t                         u32Register;
  stc_VIDEOSS_FETCHECO1_FETCHTYPE_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_FETCHECO1_FETCHTYPE_t;

/**
  * \brief Burst buffer properties. (VIDEOSS_FETCHECO1_BURSTBUFFERPROPERTIES)
  */
typedef struct stc_VIDEOSS_FETCHECO1_BURSTBUFFERPROPERTIES_field {
  uint32_t                         u8MANAGEDBURSTBUFFERS:8;
  uint32_t                         u5BURSTLENGTHFORMAXBUFFERS:5;
  uint32_t                         :19;
} stc_VIDEOSS_FETCHECO1_BURSTBUFFERPROPERTIES_field_t;

typedef union un_VIDEOSS_FETCHECO1_BURSTBUFFERPROPERTIES {
  uint32_t                         u32Register;
  stc_VIDEOSS_FETCHECO1_BURSTBUFFERPROPERTIES_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_FETCHECO1_BURSTBUFFERPROPERTIES_t;



/**
  * \brief Common static control options. (VIDEOSS_FETCHLAYER1_STATICCONTROL)
  */
typedef struct stc_VIDEOSS_FETCHLAYER1_STATICCONTROL_field {
  uint32_t                         u1SHDEN:1;
  uint32_t                         u1LBHSHDEN:1;
  uint32_t                         :14;
  uint32_t                         u8BASEADDRESSAUTOUPDATE:8;
  uint32_t                         u8SHDLDREQSTICKY:8;
} stc_VIDEOSS_FETCHLAYER1_STATICCONTROL_field_t;

typedef union un_VIDEOSS_FETCHLAYER1_STATICCONTROL {
  uint32_t                         u32Register;
  stc_VIDEOSS_FETCHLAYER1_STATICCONTROL_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_FETCHLAYER1_STATICCONTROL_t;

/**
  * \brief AXI interface buffer management register (VIDEOSS_FETCHLAYER1_BURSTBUFFERMANAGEMENT)
  */
typedef struct stc_VIDEOSS_FETCHLAYER1_BURSTBUFFERMANAGEMENT_field {
  uint32_t                         u8SETNUMBUFFERS:8;
  uint32_t                         u5SETBURSTLENGTH:5;
  uint32_t                         :18;
  uint32_t                         u1LINEMODE:1;
} stc_VIDEOSS_FETCHLAYER1_BURSTBUFFERMANAGEMENT_field_t;

typedef union un_VIDEOSS_FETCHLAYER1_BURSTBUFFERMANAGEMENT {
  uint32_t                         u32Register;
  stc_VIDEOSS_FETCHLAYER1_BURSTBUFFERMANAGEMENT_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_FETCHLAYER1_BURSTBUFFERMANAGEMENT_t;

/**
  * \brief Source buffer base address of layer 0. (VIDEOSS_FETCHLAYER1_BASEADDRESS0)
  */
typedef struct stc_VIDEOSS_FETCHLAYER1_BASEADDRESS0_field {
  uint32_t                         u32BASEADDRESS0:32;
} stc_VIDEOSS_FETCHLAYER1_BASEADDRESS0_field_t;

typedef union un_VIDEOSS_FETCHLAYER1_BASEADDRESS0 {
  uint32_t                         u32Register;
  stc_VIDEOSS_FETCHLAYER1_BASEADDRESS0_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_FETCHLAYER1_BASEADDRESS0_t;

/**
  * \brief Source buffer attributes for layer 0. (VIDEOSS_FETCHLAYER1_SOURCEBUFFERATTRIBUTES0)
  */
typedef struct stc_VIDEOSS_FETCHLAYER1_SOURCEBUFFERATTRIBUTES0_field {
  uint32_t                         u16STRIDE0:16;
  uint32_t                         u6BITSPERPIXEL0:6;
  uint32_t                         :10;
} stc_VIDEOSS_FETCHLAYER1_SOURCEBUFFERATTRIBUTES0_field_t;

typedef union un_VIDEOSS_FETCHLAYER1_SOURCEBUFFERATTRIBUTES0 {
  uint32_t                         u32Register;
  stc_VIDEOSS_FETCHLAYER1_SOURCEBUFFERATTRIBUTES0_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_FETCHLAYER1_SOURCEBUFFERATTRIBUTES0_t;

/**
  * \brief Source buffer dimension of layer 0. (VIDEOSS_FETCHLAYER1_SOURCEBUFFERDIMENSION0)
  */
typedef struct stc_VIDEOSS_FETCHLAYER1_SOURCEBUFFERDIMENSION0_field {
  uint32_t                         u14LINEWIDTH0:14;
  uint32_t                         :2;
  uint32_t                         u14LINECOUNT0:14;
  uint32_t                         :2;
} stc_VIDEOSS_FETCHLAYER1_SOURCEBUFFERDIMENSION0_field_t;

typedef union un_VIDEOSS_FETCHLAYER1_SOURCEBUFFERDIMENSION0 {
  uint32_t                         u32Register;
  stc_VIDEOSS_FETCHLAYER1_SOURCEBUFFERDIMENSION0_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_FETCHLAYER1_SOURCEBUFFERDIMENSION0_t;

/**
  * \brief Size of color components for RGB, YUV and index formats (layer 0). (VIDEOSS_FETCHLAYER1_COLORCOMPONENTBITS0)
  */
typedef struct stc_VIDEOSS_FETCHLAYER1_COLORCOMPONENTBITS0_field {
  uint32_t                         u4COMPONENTBITSALPHA0:4;
  uint32_t                         :4;
  uint32_t                         u4COMPONENTBITSBLUE0:4;
  uint32_t                         :4;
  uint32_t                         u4COMPONENTBITSGREEN0:4;
  uint32_t                         :4;
  uint32_t                         u4COMPONENTBITSRED0:4;
  uint32_t                         :3;
  uint32_t                         u1ITUFORMAT0:1;
} stc_VIDEOSS_FETCHLAYER1_COLORCOMPONENTBITS0_field_t;

typedef union un_VIDEOSS_FETCHLAYER1_COLORCOMPONENTBITS0 {
  uint32_t                         u32Register;
  stc_VIDEOSS_FETCHLAYER1_COLORCOMPONENTBITS0_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_FETCHLAYER1_COLORCOMPONENTBITS0_t;

/**
  * \brief Bit position of color components for RGB, YUV and index formats (layer 0). (VIDEOSS_FETCHLAYER1_COLORCOMPONENTSHIFT0)
  */
typedef struct stc_VIDEOSS_FETCHLAYER1_COLORCOMPONENTSHIFT0_field {
  uint32_t                         u5COMPONENTSHIFTALPHA0:5;
  uint32_t                         :3;
  uint32_t                         u5COMPONENTSHIFTBLUE0:5;
  uint32_t                         :3;
  uint32_t                         u5COMPONENTSHIFTGREEN0:5;
  uint32_t                         :3;
  uint32_t                         u5COMPONENTSHIFTRED0:5;
  uint32_t                         :3;
} stc_VIDEOSS_FETCHLAYER1_COLORCOMPONENTSHIFT0_field_t;

typedef union un_VIDEOSS_FETCHLAYER1_COLORCOMPONENTSHIFT0 {
  uint32_t                         u32Register;
  stc_VIDEOSS_FETCHLAYER1_COLORCOMPONENTSHIFT0_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_FETCHLAYER1_COLORCOMPONENTSHIFT0_t;

/**
  * \brief Position of layer 0 within the destination frame. (VIDEOSS_FETCHLAYER1_LAYEROFFSET0)
  */
typedef struct stc_VIDEOSS_FETCHLAYER1_LAYEROFFSET0_field {
  uint32_t                         u15LAYERXOFFSET0:15;
  uint32_t                         :1;
  uint32_t                         u15LAYERYOFFSET0:15;
} stc_VIDEOSS_FETCHLAYER1_LAYEROFFSET0_field_t;

typedef union un_VIDEOSS_FETCHLAYER1_LAYEROFFSET0 {
  uint32_t                         u32Register;
  stc_VIDEOSS_FETCHLAYER1_LAYEROFFSET0_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_FETCHLAYER1_LAYEROFFSET0_t;

/**
  * \brief Clip window position for layer 0. (VIDEOSS_FETCHLAYER1_CLIPWINDOWOFFSET0)
  */
typedef struct stc_VIDEOSS_FETCHLAYER1_CLIPWINDOWOFFSET0_field {
  uint32_t                         u15CLIPWINDOWXOFFSET0:15;
  uint32_t                         :1;
  uint32_t                         u15CLIPWINDOWYOFFSET0:15;
} stc_VIDEOSS_FETCHLAYER1_CLIPWINDOWOFFSET0_field_t;

typedef union un_VIDEOSS_FETCHLAYER1_CLIPWINDOWOFFSET0 {
  uint32_t                         u32Register;
  stc_VIDEOSS_FETCHLAYER1_CLIPWINDOWOFFSET0_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_FETCHLAYER1_CLIPWINDOWOFFSET0_t;

/**
  * \brief Clip window size for layer 0. (VIDEOSS_FETCHLAYER1_CLIPWINDOWDIMENSIONS0)
  */
typedef struct stc_VIDEOSS_FETCHLAYER1_CLIPWINDOWDIMENSIONS0_field {
  uint32_t                         u14CLIPWINDOWWIDTH0:14;
  uint32_t                         :2;
  uint32_t                         u14CLIPWINDOWHEIGHT0:14;
  uint32_t                         :2;
} stc_VIDEOSS_FETCHLAYER1_CLIPWINDOWDIMENSIONS0_field_t;

typedef union un_VIDEOSS_FETCHLAYER1_CLIPWINDOWDIMENSIONS0 {
  uint32_t                         u32Register;
  stc_VIDEOSS_FETCHLAYER1_CLIPWINDOWDIMENSIONS0_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_FETCHLAYER1_CLIPWINDOWDIMENSIONS0_t;

/**
  * \brief Constant color for layer 0. (VIDEOSS_FETCHLAYER1_CONSTANTCOLOR0)
  */
typedef struct stc_VIDEOSS_FETCHLAYER1_CONSTANTCOLOR0_field {
  uint32_t                         u8CONSTANTALPHA0:8;
  uint32_t                         u8CONSTANTBLUE0:8;
  uint32_t                         u8CONSTANTGREEN0:8;
  uint32_t                         u8CONSTANTRED0:8;
} stc_VIDEOSS_FETCHLAYER1_CONSTANTCOLOR0_field_t;

typedef union un_VIDEOSS_FETCHLAYER1_CONSTANTCOLOR0 {
  uint32_t                         u32Register;
  stc_VIDEOSS_FETCHLAYER1_CONSTANTCOLOR0_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_FETCHLAYER1_CONSTANTCOLOR0_t;

/**
  * \brief Common properties of layer 0. (VIDEOSS_FETCHLAYER1_LAYERPROPERTY0)
  */
typedef struct stc_VIDEOSS_FETCHLAYER1_LAYERPROPERTY0_field {
  uint32_t                         u1PALETTEENABLE0:1;
  uint32_t                         u2TILEMODE0:2;
  uint32_t                         u1ALPHASRCENABLE0:1;
  uint32_t                         u1ALPHACONSTENABLE0:1;
  uint32_t                         :1;
  uint32_t                         u1ALPHATRANSENABLE0:1;
  uint32_t                         u1RGBALPHASRCENABLE0:1;
  uint32_t                         u1RGBALPHACONSTENABLE0:1;
  uint32_t                         :1;
  uint32_t                         u1RGBALPHATRANSENABLE0:1;
  uint32_t                         u1PREMULCONSTRGB0:1;
  uint32_t                         u2YUVCONVERSIONMODE0:2;
  uint32_t                         u1GAMMAREMOVEENABLE0:1;
  uint32_t                         :1;
  uint32_t                         u11PALETTEOFFSET0:11;
  uint32_t                         u3PALETTEIDWIDTH0:3;
  uint32_t                         u1CLIPWINDOWENABLE0:1;
  uint32_t                         u1SOURCEBUFFERENABLE0:1;
} stc_VIDEOSS_FETCHLAYER1_LAYERPROPERTY0_field_t;

typedef union un_VIDEOSS_FETCHLAYER1_LAYERPROPERTY0 {
  uint32_t                         u32Register;
  stc_VIDEOSS_FETCHLAYER1_LAYERPROPERTY0_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_FETCHLAYER1_LAYERPROPERTY0_t;

/**
  * \brief Source buffer base address of layer 1. (VIDEOSS_FETCHLAYER1_BASEADDRESS1)
  */
typedef struct stc_VIDEOSS_FETCHLAYER1_BASEADDRESS1_field {
  uint32_t                         u32BASEADDRESS1:32;
} stc_VIDEOSS_FETCHLAYER1_BASEADDRESS1_field_t;

typedef union un_VIDEOSS_FETCHLAYER1_BASEADDRESS1 {
  uint32_t                         u32Register;
  stc_VIDEOSS_FETCHLAYER1_BASEADDRESS1_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_FETCHLAYER1_BASEADDRESS1_t;

/**
  * \brief Source buffer attributes for layer 1. (VIDEOSS_FETCHLAYER1_SOURCEBUFFERATTRIBUTES1)
  */
typedef struct stc_VIDEOSS_FETCHLAYER1_SOURCEBUFFERATTRIBUTES1_field {
  uint32_t                         u16STRIDE1:16;
  uint32_t                         u6BITSPERPIXEL1:6;
  uint32_t                         :10;
} stc_VIDEOSS_FETCHLAYER1_SOURCEBUFFERATTRIBUTES1_field_t;

typedef union un_VIDEOSS_FETCHLAYER1_SOURCEBUFFERATTRIBUTES1 {
  uint32_t                         u32Register;
  stc_VIDEOSS_FETCHLAYER1_SOURCEBUFFERATTRIBUTES1_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_FETCHLAYER1_SOURCEBUFFERATTRIBUTES1_t;

/**
  * \brief Source buffer dimensions of layer 1, (VIDEOSS_FETCHLAYER1_SOURCEBUFFERDIMENSION1)
  */
typedef struct stc_VIDEOSS_FETCHLAYER1_SOURCEBUFFERDIMENSION1_field {
  uint32_t                         u14LINEWIDTH1:14;
  uint32_t                         :2;
  uint32_t                         u14LINECOUNT1:14;
  uint32_t                         :2;
} stc_VIDEOSS_FETCHLAYER1_SOURCEBUFFERDIMENSION1_field_t;

typedef union un_VIDEOSS_FETCHLAYER1_SOURCEBUFFERDIMENSION1 {
  uint32_t                         u32Register;
  stc_VIDEOSS_FETCHLAYER1_SOURCEBUFFERDIMENSION1_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_FETCHLAYER1_SOURCEBUFFERDIMENSION1_t;

/**
  * \brief Size of color components for RGB, YUV and index formats (layer 1). (VIDEOSS_FETCHLAYER1_COLORCOMPONENTBITS1)
  */
typedef struct stc_VIDEOSS_FETCHLAYER1_COLORCOMPONENTBITS1_field {
  uint32_t                         u4COMPONENTBITSALPHA1:4;
  uint32_t                         :4;
  uint32_t                         u4COMPONENTBITSBLUE1:4;
  uint32_t                         :4;
  uint32_t                         u4COMPONENTBITSGREEN1:4;
  uint32_t                         :4;
  uint32_t                         u4COMPONENTBITSRED1:4;
  uint32_t                         :3;
  uint32_t                         u1ITUFORMAT1:1;
} stc_VIDEOSS_FETCHLAYER1_COLORCOMPONENTBITS1_field_t;

typedef union un_VIDEOSS_FETCHLAYER1_COLORCOMPONENTBITS1 {
  uint32_t                         u32Register;
  stc_VIDEOSS_FETCHLAYER1_COLORCOMPONENTBITS1_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_FETCHLAYER1_COLORCOMPONENTBITS1_t;

/**
  * \brief Bit position of color components for RGB, YUV and index formats (layer 1). (VIDEOSS_FETCHLAYER1_COLORCOMPONENTSHIFT1)
  */
typedef struct stc_VIDEOSS_FETCHLAYER1_COLORCOMPONENTSHIFT1_field {
  uint32_t                         u5COMPONENTSHIFTALPHA1:5;
  uint32_t                         :3;
  uint32_t                         u5COMPONENTSHIFTBLUE1:5;
  uint32_t                         :3;
  uint32_t                         u5COMPONENTSHIFTGREEN1:5;
  uint32_t                         :3;
  uint32_t                         u5COMPONENTSHIFTRED1:5;
  uint32_t                         :3;
} stc_VIDEOSS_FETCHLAYER1_COLORCOMPONENTSHIFT1_field_t;

typedef union un_VIDEOSS_FETCHLAYER1_COLORCOMPONENTSHIFT1 {
  uint32_t                         u32Register;
  stc_VIDEOSS_FETCHLAYER1_COLORCOMPONENTSHIFT1_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_FETCHLAYER1_COLORCOMPONENTSHIFT1_t;

/**
  * \brief Position of layer 1 within the destination frame. (VIDEOSS_FETCHLAYER1_LAYEROFFSET1)
  */
typedef struct stc_VIDEOSS_FETCHLAYER1_LAYEROFFSET1_field {
  uint32_t                         u15LAYERXOFFSET1:15;
  uint32_t                         :1;
  uint32_t                         u15LAYERYOFFSET1:15;
} stc_VIDEOSS_FETCHLAYER1_LAYEROFFSET1_field_t;

typedef union un_VIDEOSS_FETCHLAYER1_LAYEROFFSET1 {
  uint32_t                         u32Register;
  stc_VIDEOSS_FETCHLAYER1_LAYEROFFSET1_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_FETCHLAYER1_LAYEROFFSET1_t;

/**
  * \brief Clip window position for layer 1. (VIDEOSS_FETCHLAYER1_CLIPWINDOWOFFSET1)
  */
typedef struct stc_VIDEOSS_FETCHLAYER1_CLIPWINDOWOFFSET1_field {
  uint32_t                         u15CLIPWINDOWXOFFSET1:15;
  uint32_t                         :1;
  uint32_t                         u15CLIPWINDOWYOFFSET1:15;
} stc_VIDEOSS_FETCHLAYER1_CLIPWINDOWOFFSET1_field_t;

typedef union un_VIDEOSS_FETCHLAYER1_CLIPWINDOWOFFSET1 {
  uint32_t                         u32Register;
  stc_VIDEOSS_FETCHLAYER1_CLIPWINDOWOFFSET1_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_FETCHLAYER1_CLIPWINDOWOFFSET1_t;

/**
  * \brief Clip window size for layer 1. (VIDEOSS_FETCHLAYER1_CLIPWINDOWDIMENSIONS1)
  */
typedef struct stc_VIDEOSS_FETCHLAYER1_CLIPWINDOWDIMENSIONS1_field {
  uint32_t                         u14CLIPWINDOWWIDTH1:14;
  uint32_t                         :2;
  uint32_t                         u14CLIPWINDOWHEIGHT1:14;
  uint32_t                         :2;
} stc_VIDEOSS_FETCHLAYER1_CLIPWINDOWDIMENSIONS1_field_t;

typedef union un_VIDEOSS_FETCHLAYER1_CLIPWINDOWDIMENSIONS1 {
  uint32_t                         u32Register;
  stc_VIDEOSS_FETCHLAYER1_CLIPWINDOWDIMENSIONS1_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_FETCHLAYER1_CLIPWINDOWDIMENSIONS1_t;

/**
  * \brief Constant color for layer 1. (VIDEOSS_FETCHLAYER1_CONSTANTCOLOR1)
  */
typedef struct stc_VIDEOSS_FETCHLAYER1_CONSTANTCOLOR1_field {
  uint32_t                         u8CONSTANTALPHA1:8;
  uint32_t                         u8CONSTANTBLUE1:8;
  uint32_t                         u8CONSTANTGREEN1:8;
  uint32_t                         u8CONSTANTRED1:8;
} stc_VIDEOSS_FETCHLAYER1_CONSTANTCOLOR1_field_t;

typedef union un_VIDEOSS_FETCHLAYER1_CONSTANTCOLOR1 {
  uint32_t                         u32Register;
  stc_VIDEOSS_FETCHLAYER1_CONSTANTCOLOR1_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_FETCHLAYER1_CONSTANTCOLOR1_t;

/**
  * \brief Common properties of layer 1. (VIDEOSS_FETCHLAYER1_LAYERPROPERTY1)
  */
typedef struct stc_VIDEOSS_FETCHLAYER1_LAYERPROPERTY1_field {
  uint32_t                         u1PALETTEENABLE1:1;
  uint32_t                         u2TILEMODE1:2;
  uint32_t                         u1ALPHASRCENABLE1:1;
  uint32_t                         u1ALPHACONSTENABLE1:1;
  uint32_t                         :1;
  uint32_t                         u1ALPHATRANSENABLE1:1;
  uint32_t                         u1RGBALPHASRCENABLE1:1;
  uint32_t                         u1RGBALPHACONSTENABLE1:1;
  uint32_t                         :1;
  uint32_t                         u1RGBALPHATRANSENABLE1:1;
  uint32_t                         u1PREMULCONSTRGB1:1;
  uint32_t                         u2YUVCONVERSIONMODE1:2;
  uint32_t                         u1GAMMAREMOVEENABLE1:1;
  uint32_t                         :1;
  uint32_t                         u11PALETTEOFFSET1:11;
  uint32_t                         u3PALETTEIDWIDTH1:3;
  uint32_t                         u1CLIPWINDOWENABLE1:1;
  uint32_t                         u1SOURCEBUFFERENABLE1:1;
} stc_VIDEOSS_FETCHLAYER1_LAYERPROPERTY1_field_t;

typedef union un_VIDEOSS_FETCHLAYER1_LAYERPROPERTY1 {
  uint32_t                         u32Register;
  stc_VIDEOSS_FETCHLAYER1_LAYERPROPERTY1_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_FETCHLAYER1_LAYERPROPERTY1_t;

/**
  * \brief Source buffer base address of layer 2. (VIDEOSS_FETCHLAYER1_BASEADDRESS2)
  */
typedef struct stc_VIDEOSS_FETCHLAYER1_BASEADDRESS2_field {
  uint32_t                         u32BASEADDRESS2:32;
} stc_VIDEOSS_FETCHLAYER1_BASEADDRESS2_field_t;

typedef union un_VIDEOSS_FETCHLAYER1_BASEADDRESS2 {
  uint32_t                         u32Register;
  stc_VIDEOSS_FETCHLAYER1_BASEADDRESS2_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_FETCHLAYER1_BASEADDRESS2_t;

/**
  * \brief Source buffer attributes for layer 2. (VIDEOSS_FETCHLAYER1_SOURCEBUFFERATTRIBUTES2)
  */
typedef struct stc_VIDEOSS_FETCHLAYER1_SOURCEBUFFERATTRIBUTES2_field {
  uint32_t                         u16STRIDE2:16;
  uint32_t                         u6BITSPERPIXEL2:6;
  uint32_t                         :10;
} stc_VIDEOSS_FETCHLAYER1_SOURCEBUFFERATTRIBUTES2_field_t;

typedef union un_VIDEOSS_FETCHLAYER1_SOURCEBUFFERATTRIBUTES2 {
  uint32_t                         u32Register;
  stc_VIDEOSS_FETCHLAYER1_SOURCEBUFFERATTRIBUTES2_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_FETCHLAYER1_SOURCEBUFFERATTRIBUTES2_t;

/**
  * \brief Source buffer dimension of layer 2. (VIDEOSS_FETCHLAYER1_SOURCEBUFFERDIMENSION2)
  */
typedef struct stc_VIDEOSS_FETCHLAYER1_SOURCEBUFFERDIMENSION2_field {
  uint32_t                         u14LINEWIDTH2:14;
  uint32_t                         :2;
  uint32_t                         u14LINECOUNT2:14;
  uint32_t                         :2;
} stc_VIDEOSS_FETCHLAYER1_SOURCEBUFFERDIMENSION2_field_t;

typedef union un_VIDEOSS_FETCHLAYER1_SOURCEBUFFERDIMENSION2 {
  uint32_t                         u32Register;
  stc_VIDEOSS_FETCHLAYER1_SOURCEBUFFERDIMENSION2_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_FETCHLAYER1_SOURCEBUFFERDIMENSION2_t;

/**
  * \brief Size of color components for RGB, YUV and index formats (layer 2). (VIDEOSS_FETCHLAYER1_COLORCOMPONENTBITS2)
  */
typedef struct stc_VIDEOSS_FETCHLAYER1_COLORCOMPONENTBITS2_field {
  uint32_t                         u4COMPONENTBITSALPHA2:4;
  uint32_t                         :4;
  uint32_t                         u4COMPONENTBITSBLUE2:4;
  uint32_t                         :4;
  uint32_t                         u4COMPONENTBITSGREEN2:4;
  uint32_t                         :4;
  uint32_t                         u4COMPONENTBITSRED2:4;
  uint32_t                         :3;
  uint32_t                         u1ITUFORMAT2:1;
} stc_VIDEOSS_FETCHLAYER1_COLORCOMPONENTBITS2_field_t;

typedef union un_VIDEOSS_FETCHLAYER1_COLORCOMPONENTBITS2 {
  uint32_t                         u32Register;
  stc_VIDEOSS_FETCHLAYER1_COLORCOMPONENTBITS2_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_FETCHLAYER1_COLORCOMPONENTBITS2_t;

/**
  * \brief Bit position of color components for RGB, YUV and index formats (layer 2). (VIDEOSS_FETCHLAYER1_COLORCOMPONENTSHIFT2)
  */
typedef struct stc_VIDEOSS_FETCHLAYER1_COLORCOMPONENTSHIFT2_field {
  uint32_t                         u5COMPONENTSHIFTALPHA2:5;
  uint32_t                         :3;
  uint32_t                         u5COMPONENTSHIFTBLUE2:5;
  uint32_t                         :3;
  uint32_t                         u5COMPONENTSHIFTGREEN2:5;
  uint32_t                         :3;
  uint32_t                         u5COMPONENTSHIFTRED2:5;
  uint32_t                         :3;
} stc_VIDEOSS_FETCHLAYER1_COLORCOMPONENTSHIFT2_field_t;

typedef union un_VIDEOSS_FETCHLAYER1_COLORCOMPONENTSHIFT2 {
  uint32_t                         u32Register;
  stc_VIDEOSS_FETCHLAYER1_COLORCOMPONENTSHIFT2_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_FETCHLAYER1_COLORCOMPONENTSHIFT2_t;

/**
  * \brief Position of layer 2 within the destination frame. (VIDEOSS_FETCHLAYER1_LAYEROFFSET2)
  */
typedef struct stc_VIDEOSS_FETCHLAYER1_LAYEROFFSET2_field {
  uint32_t                         u15LAYERXOFFSET2:15;
  uint32_t                         :1;
  uint32_t                         u15LAYERYOFFSET2:15;
} stc_VIDEOSS_FETCHLAYER1_LAYEROFFSET2_field_t;

typedef union un_VIDEOSS_FETCHLAYER1_LAYEROFFSET2 {
  uint32_t                         u32Register;
  stc_VIDEOSS_FETCHLAYER1_LAYEROFFSET2_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_FETCHLAYER1_LAYEROFFSET2_t;

/**
  * \brief Clip window position for layer 2. (VIDEOSS_FETCHLAYER1_CLIPWINDOWOFFSET2)
  */
typedef struct stc_VIDEOSS_FETCHLAYER1_CLIPWINDOWOFFSET2_field {
  uint32_t                         u15CLIPWINDOWXOFFSET2:15;
  uint32_t                         :1;
  uint32_t                         u15CLIPWINDOWYOFFSET2:15;
} stc_VIDEOSS_FETCHLAYER1_CLIPWINDOWOFFSET2_field_t;

typedef union un_VIDEOSS_FETCHLAYER1_CLIPWINDOWOFFSET2 {
  uint32_t                         u32Register;
  stc_VIDEOSS_FETCHLAYER1_CLIPWINDOWOFFSET2_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_FETCHLAYER1_CLIPWINDOWOFFSET2_t;

/**
  * \brief Clip window size for layer 2. (VIDEOSS_FETCHLAYER1_CLIPWINDOWDIMENSIONS2)
  */
typedef struct stc_VIDEOSS_FETCHLAYER1_CLIPWINDOWDIMENSIONS2_field {
  uint32_t                         u14CLIPWINDOWWIDTH2:14;
  uint32_t                         :2;
  uint32_t                         u14CLIPWINDOWHEIGHT2:14;
  uint32_t                         :2;
} stc_VIDEOSS_FETCHLAYER1_CLIPWINDOWDIMENSIONS2_field_t;

typedef union un_VIDEOSS_FETCHLAYER1_CLIPWINDOWDIMENSIONS2 {
  uint32_t                         u32Register;
  stc_VIDEOSS_FETCHLAYER1_CLIPWINDOWDIMENSIONS2_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_FETCHLAYER1_CLIPWINDOWDIMENSIONS2_t;

/**
  * \brief Constant color for layer 2. (VIDEOSS_FETCHLAYER1_CONSTANTCOLOR2)
  */
typedef struct stc_VIDEOSS_FETCHLAYER1_CONSTANTCOLOR2_field {
  uint32_t                         u8CONSTANTALPHA2:8;
  uint32_t                         u8CONSTANTBLUE2:8;
  uint32_t                         u8CONSTANTGREEN2:8;
  uint32_t                         u8CONSTANTRED2:8;
} stc_VIDEOSS_FETCHLAYER1_CONSTANTCOLOR2_field_t;

typedef union un_VIDEOSS_FETCHLAYER1_CONSTANTCOLOR2 {
  uint32_t                         u32Register;
  stc_VIDEOSS_FETCHLAYER1_CONSTANTCOLOR2_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_FETCHLAYER1_CONSTANTCOLOR2_t;

/**
  * \brief Common properties of layer 2. (VIDEOSS_FETCHLAYER1_LAYERPROPERTY2)
  */
typedef struct stc_VIDEOSS_FETCHLAYER1_LAYERPROPERTY2_field {
  uint32_t                         u1PALETTEENABLE2:1;
  uint32_t                         u2TILEMODE2:2;
  uint32_t                         u1ALPHASRCENABLE2:1;
  uint32_t                         u1ALPHACONSTENABLE2:1;
  uint32_t                         :1;
  uint32_t                         u1ALPHATRANSENABLE2:1;
  uint32_t                         u1RGBALPHASRCENABLE2:1;
  uint32_t                         u1RGBALPHACONSTENABLE2:1;
  uint32_t                         :1;
  uint32_t                         u1RGBALPHATRANSENABLE2:1;
  uint32_t                         u1PREMULCONSTRGB2:1;
  uint32_t                         u2YUVCONVERSIONMODE2:2;
  uint32_t                         u1GAMMAREMOVEENABLE2:1;
  uint32_t                         :1;
  uint32_t                         u11PALETTEOFFSET2:11;
  uint32_t                         u3PALETTEIDWIDTH2:3;
  uint32_t                         u1CLIPWINDOWENABLE2:1;
  uint32_t                         u1SOURCEBUFFERENABLE2:1;
} stc_VIDEOSS_FETCHLAYER1_LAYERPROPERTY2_field_t;

typedef union un_VIDEOSS_FETCHLAYER1_LAYERPROPERTY2 {
  uint32_t                         u32Register;
  stc_VIDEOSS_FETCHLAYER1_LAYERPROPERTY2_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_FETCHLAYER1_LAYERPROPERTY2_t;

/**
  * \brief Source buffer base address of layer 3. (VIDEOSS_FETCHLAYER1_BASEADDRESS3)
  */
typedef struct stc_VIDEOSS_FETCHLAYER1_BASEADDRESS3_field {
  uint32_t                         u32BASEADDRESS3:32;
} stc_VIDEOSS_FETCHLAYER1_BASEADDRESS3_field_t;

typedef union un_VIDEOSS_FETCHLAYER1_BASEADDRESS3 {
  uint32_t                         u32Register;
  stc_VIDEOSS_FETCHLAYER1_BASEADDRESS3_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_FETCHLAYER1_BASEADDRESS3_t;

/**
  * \brief Source buffer attributes for layer 3. (VIDEOSS_FETCHLAYER1_SOURCEBUFFERATTRIBUTES3)
  */
typedef struct stc_VIDEOSS_FETCHLAYER1_SOURCEBUFFERATTRIBUTES3_field {
  uint32_t                         u16STRIDE3:16;
  uint32_t                         u6BITSPERPIXEL3:6;
  uint32_t                         :10;
} stc_VIDEOSS_FETCHLAYER1_SOURCEBUFFERATTRIBUTES3_field_t;

typedef union un_VIDEOSS_FETCHLAYER1_SOURCEBUFFERATTRIBUTES3 {
  uint32_t                         u32Register;
  stc_VIDEOSS_FETCHLAYER1_SOURCEBUFFERATTRIBUTES3_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_FETCHLAYER1_SOURCEBUFFERATTRIBUTES3_t;

/**
  * \brief Source buffer dimension of layer 3. (VIDEOSS_FETCHLAYER1_SOURCEBUFFERDIMENSION3)
  */
typedef struct stc_VIDEOSS_FETCHLAYER1_SOURCEBUFFERDIMENSION3_field {
  uint32_t                         u14LINEWIDTH3:14;
  uint32_t                         :2;
  uint32_t                         u14LINECOUNT3:14;
  uint32_t                         :2;
} stc_VIDEOSS_FETCHLAYER1_SOURCEBUFFERDIMENSION3_field_t;

typedef union un_VIDEOSS_FETCHLAYER1_SOURCEBUFFERDIMENSION3 {
  uint32_t                         u32Register;
  stc_VIDEOSS_FETCHLAYER1_SOURCEBUFFERDIMENSION3_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_FETCHLAYER1_SOURCEBUFFERDIMENSION3_t;

/**
  * \brief Size of color components for RGB, YUV and index formats (layer 3). (VIDEOSS_FETCHLAYER1_COLORCOMPONENTBITS3)
  */
typedef struct stc_VIDEOSS_FETCHLAYER1_COLORCOMPONENTBITS3_field {
  uint32_t                         u4COMPONENTBITSALPHA3:4;
  uint32_t                         :4;
  uint32_t                         u4COMPONENTBITSBLUE3:4;
  uint32_t                         :4;
  uint32_t                         u4COMPONENTBITSGREEN3:4;
  uint32_t                         :4;
  uint32_t                         u4COMPONENTBITSRED3:4;
  uint32_t                         :3;
  uint32_t                         u1ITUFORMAT3:1;
} stc_VIDEOSS_FETCHLAYER1_COLORCOMPONENTBITS3_field_t;

typedef union un_VIDEOSS_FETCHLAYER1_COLORCOMPONENTBITS3 {
  uint32_t                         u32Register;
  stc_VIDEOSS_FETCHLAYER1_COLORCOMPONENTBITS3_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_FETCHLAYER1_COLORCOMPONENTBITS3_t;

/**
  * \brief Bit position of color components for RGB, YUV and index formats (layer 3). (VIDEOSS_FETCHLAYER1_COLORCOMPONENTSHIFT3)
  */
typedef struct stc_VIDEOSS_FETCHLAYER1_COLORCOMPONENTSHIFT3_field {
  uint32_t                         u5COMPONENTSHIFTALPHA3:5;
  uint32_t                         :3;
  uint32_t                         u5COMPONENTSHIFTBLUE3:5;
  uint32_t                         :3;
  uint32_t                         u5COMPONENTSHIFTGREEN3:5;
  uint32_t                         :3;
  uint32_t                         u5COMPONENTSHIFTRED3:5;
  uint32_t                         :3;
} stc_VIDEOSS_FETCHLAYER1_COLORCOMPONENTSHIFT3_field_t;

typedef union un_VIDEOSS_FETCHLAYER1_COLORCOMPONENTSHIFT3 {
  uint32_t                         u32Register;
  stc_VIDEOSS_FETCHLAYER1_COLORCOMPONENTSHIFT3_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_FETCHLAYER1_COLORCOMPONENTSHIFT3_t;

/**
  * \brief Position of layer 3 within the destination frame. (VIDEOSS_FETCHLAYER1_LAYEROFFSET3)
  */
typedef struct stc_VIDEOSS_FETCHLAYER1_LAYEROFFSET3_field {
  uint32_t                         u15LAYERXOFFSET3:15;
  uint32_t                         :1;
  uint32_t                         u15LAYERYOFFSET3:15;
} stc_VIDEOSS_FETCHLAYER1_LAYEROFFSET3_field_t;

typedef union un_VIDEOSS_FETCHLAYER1_LAYEROFFSET3 {
  uint32_t                         u32Register;
  stc_VIDEOSS_FETCHLAYER1_LAYEROFFSET3_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_FETCHLAYER1_LAYEROFFSET3_t;

/**
  * \brief Clip window position for layer 3. (VIDEOSS_FETCHLAYER1_CLIPWINDOWOFFSET3)
  */
typedef struct stc_VIDEOSS_FETCHLAYER1_CLIPWINDOWOFFSET3_field {
  uint32_t                         u15CLIPWINDOWXOFFSET3:15;
  uint32_t                         :1;
  uint32_t                         u15CLIPWINDOWYOFFSET3:15;
} stc_VIDEOSS_FETCHLAYER1_CLIPWINDOWOFFSET3_field_t;

typedef union un_VIDEOSS_FETCHLAYER1_CLIPWINDOWOFFSET3 {
  uint32_t                         u32Register;
  stc_VIDEOSS_FETCHLAYER1_CLIPWINDOWOFFSET3_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_FETCHLAYER1_CLIPWINDOWOFFSET3_t;

/**
  * \brief Clip window size for layer 3. (VIDEOSS_FETCHLAYER1_CLIPWINDOWDIMENSIONS3)
  */
typedef struct stc_VIDEOSS_FETCHLAYER1_CLIPWINDOWDIMENSIONS3_field {
  uint32_t                         u14CLIPWINDOWWIDTH3:14;
  uint32_t                         :2;
  uint32_t                         u14CLIPWINDOWHEIGHT3:14;
  uint32_t                         :2;
} stc_VIDEOSS_FETCHLAYER1_CLIPWINDOWDIMENSIONS3_field_t;

typedef union un_VIDEOSS_FETCHLAYER1_CLIPWINDOWDIMENSIONS3 {
  uint32_t                         u32Register;
  stc_VIDEOSS_FETCHLAYER1_CLIPWINDOWDIMENSIONS3_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_FETCHLAYER1_CLIPWINDOWDIMENSIONS3_t;

/**
  * \brief Constant color for layer 3. (VIDEOSS_FETCHLAYER1_CONSTANTCOLOR3)
  */
typedef struct stc_VIDEOSS_FETCHLAYER1_CONSTANTCOLOR3_field {
  uint32_t                         u8CONSTANTALPHA3:8;
  uint32_t                         u8CONSTANTBLUE3:8;
  uint32_t                         u8CONSTANTGREEN3:8;
  uint32_t                         u8CONSTANTRED3:8;
} stc_VIDEOSS_FETCHLAYER1_CONSTANTCOLOR3_field_t;

typedef union un_VIDEOSS_FETCHLAYER1_CONSTANTCOLOR3 {
  uint32_t                         u32Register;
  stc_VIDEOSS_FETCHLAYER1_CONSTANTCOLOR3_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_FETCHLAYER1_CONSTANTCOLOR3_t;

/**
  * \brief Common properties of layer 3. (VIDEOSS_FETCHLAYER1_LAYERPROPERTY3)
  */
typedef struct stc_VIDEOSS_FETCHLAYER1_LAYERPROPERTY3_field {
  uint32_t                         u1PALETTEENABLE3:1;
  uint32_t                         u2TILEMODE3:2;
  uint32_t                         u1ALPHASRCENABLE3:1;
  uint32_t                         u1ALPHACONSTENABLE3:1;
  uint32_t                         :1;
  uint32_t                         u1ALPHATRANSENABLE3:1;
  uint32_t                         u1RGBALPHASRCENABLE3:1;
  uint32_t                         u1RGBALPHACONSTENABLE3:1;
  uint32_t                         :1;
  uint32_t                         u1RGBALPHATRANSENABLE3:1;
  uint32_t                         u1PREMULCONSTRGB3:1;
  uint32_t                         u2YUVCONVERSIONMODE3:2;
  uint32_t                         u1GAMMAREMOVEENABLE3:1;
  uint32_t                         :1;
  uint32_t                         u11PALETTEOFFSET3:11;
  uint32_t                         u3PALETTEIDWIDTH3:3;
  uint32_t                         u1CLIPWINDOWENABLE3:1;
  uint32_t                         u1SOURCEBUFFERENABLE3:1;
} stc_VIDEOSS_FETCHLAYER1_LAYERPROPERTY3_field_t;

typedef union un_VIDEOSS_FETCHLAYER1_LAYERPROPERTY3 {
  uint32_t                         u32Register;
  stc_VIDEOSS_FETCHLAYER1_LAYERPROPERTY3_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_FETCHLAYER1_LAYERPROPERTY3_t;

/**
  * \brief Source buffer base address of layer 4. (VIDEOSS_FETCHLAYER1_BASEADDRESS4)
  */
typedef struct stc_VIDEOSS_FETCHLAYER1_BASEADDRESS4_field {
  uint32_t                         u32BASEADDRESS4:32;
} stc_VIDEOSS_FETCHLAYER1_BASEADDRESS4_field_t;

typedef union un_VIDEOSS_FETCHLAYER1_BASEADDRESS4 {
  uint32_t                         u32Register;
  stc_VIDEOSS_FETCHLAYER1_BASEADDRESS4_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_FETCHLAYER1_BASEADDRESS4_t;

/**
  * \brief Source buffer attributes for layer 4. (VIDEOSS_FETCHLAYER1_SOURCEBUFFERATTRIBUTES4)
  */
typedef struct stc_VIDEOSS_FETCHLAYER1_SOURCEBUFFERATTRIBUTES4_field {
  uint32_t                         u16STRIDE4:16;
  uint32_t                         u6BITSPERPIXEL4:6;
  uint32_t                         :10;
} stc_VIDEOSS_FETCHLAYER1_SOURCEBUFFERATTRIBUTES4_field_t;

typedef union un_VIDEOSS_FETCHLAYER1_SOURCEBUFFERATTRIBUTES4 {
  uint32_t                         u32Register;
  stc_VIDEOSS_FETCHLAYER1_SOURCEBUFFERATTRIBUTES4_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_FETCHLAYER1_SOURCEBUFFERATTRIBUTES4_t;

/**
  * \brief Source buffer dimension of layer 4. (VIDEOSS_FETCHLAYER1_SOURCEBUFFERDIMENSION4)
  */
typedef struct stc_VIDEOSS_FETCHLAYER1_SOURCEBUFFERDIMENSION4_field {
  uint32_t                         u14LINEWIDTH4:14;
  uint32_t                         :2;
  uint32_t                         u14LINECOUNT4:14;
  uint32_t                         :2;
} stc_VIDEOSS_FETCHLAYER1_SOURCEBUFFERDIMENSION4_field_t;

typedef union un_VIDEOSS_FETCHLAYER1_SOURCEBUFFERDIMENSION4 {
  uint32_t                         u32Register;
  stc_VIDEOSS_FETCHLAYER1_SOURCEBUFFERDIMENSION4_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_FETCHLAYER1_SOURCEBUFFERDIMENSION4_t;

/**
  * \brief Size of color components for RGB, YUV and index formats (layer 4). (VIDEOSS_FETCHLAYER1_COLORCOMPONENTBITS4)
  */
typedef struct stc_VIDEOSS_FETCHLAYER1_COLORCOMPONENTBITS4_field {
  uint32_t                         u4COMPONENTBITSALPHA4:4;
  uint32_t                         :4;
  uint32_t                         u4COMPONENTBITSBLUE4:4;
  uint32_t                         :4;
  uint32_t                         u4COMPONENTBITSGREEN4:4;
  uint32_t                         :4;
  uint32_t                         u4COMPONENTBITSRED4:4;
  uint32_t                         :3;
  uint32_t                         u1ITUFORMAT4:1;
} stc_VIDEOSS_FETCHLAYER1_COLORCOMPONENTBITS4_field_t;

typedef union un_VIDEOSS_FETCHLAYER1_COLORCOMPONENTBITS4 {
  uint32_t                         u32Register;
  stc_VIDEOSS_FETCHLAYER1_COLORCOMPONENTBITS4_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_FETCHLAYER1_COLORCOMPONENTBITS4_t;

/**
  * \brief Bit position of color components for RGB, YUV and index formats (layer 4). (VIDEOSS_FETCHLAYER1_COLORCOMPONENTSHIFT4)
  */
typedef struct stc_VIDEOSS_FETCHLAYER1_COLORCOMPONENTSHIFT4_field {
  uint32_t                         u5COMPONENTSHIFTALPHA4:5;
  uint32_t                         :3;
  uint32_t                         u5COMPONENTSHIFTBLUE4:5;
  uint32_t                         :3;
  uint32_t                         u5COMPONENTSHIFTGREEN4:5;
  uint32_t                         :3;
  uint32_t                         u5COMPONENTSHIFTRED4:5;
  uint32_t                         :3;
} stc_VIDEOSS_FETCHLAYER1_COLORCOMPONENTSHIFT4_field_t;

typedef union un_VIDEOSS_FETCHLAYER1_COLORCOMPONENTSHIFT4 {
  uint32_t                         u32Register;
  stc_VIDEOSS_FETCHLAYER1_COLORCOMPONENTSHIFT4_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_FETCHLAYER1_COLORCOMPONENTSHIFT4_t;

/**
  * \brief Position of layer 4 within the destination frame. (VIDEOSS_FETCHLAYER1_LAYEROFFSET4)
  */
typedef struct stc_VIDEOSS_FETCHLAYER1_LAYEROFFSET4_field {
  uint32_t                         u15LAYERXOFFSET4:15;
  uint32_t                         :1;
  uint32_t                         u15LAYERYOFFSET4:15;
} stc_VIDEOSS_FETCHLAYER1_LAYEROFFSET4_field_t;

typedef union un_VIDEOSS_FETCHLAYER1_LAYEROFFSET4 {
  uint32_t                         u32Register;
  stc_VIDEOSS_FETCHLAYER1_LAYEROFFSET4_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_FETCHLAYER1_LAYEROFFSET4_t;

/**
  * \brief Clip window position for layer 4. (VIDEOSS_FETCHLAYER1_CLIPWINDOWOFFSET4)
  */
typedef struct stc_VIDEOSS_FETCHLAYER1_CLIPWINDOWOFFSET4_field {
  uint32_t                         u15CLIPWINDOWXOFFSET4:15;
  uint32_t                         :1;
  uint32_t                         u15CLIPWINDOWYOFFSET4:15;
} stc_VIDEOSS_FETCHLAYER1_CLIPWINDOWOFFSET4_field_t;

typedef union un_VIDEOSS_FETCHLAYER1_CLIPWINDOWOFFSET4 {
  uint32_t                         u32Register;
  stc_VIDEOSS_FETCHLAYER1_CLIPWINDOWOFFSET4_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_FETCHLAYER1_CLIPWINDOWOFFSET4_t;

/**
  * \brief Clip window size for layer 4. (VIDEOSS_FETCHLAYER1_CLIPWINDOWDIMENSIONS4)
  */
typedef struct stc_VIDEOSS_FETCHLAYER1_CLIPWINDOWDIMENSIONS4_field {
  uint32_t                         u14CLIPWINDOWWIDTH4:14;
  uint32_t                         :2;
  uint32_t                         u14CLIPWINDOWHEIGHT4:14;
  uint32_t                         :2;
} stc_VIDEOSS_FETCHLAYER1_CLIPWINDOWDIMENSIONS4_field_t;

typedef union un_VIDEOSS_FETCHLAYER1_CLIPWINDOWDIMENSIONS4 {
  uint32_t                         u32Register;
  stc_VIDEOSS_FETCHLAYER1_CLIPWINDOWDIMENSIONS4_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_FETCHLAYER1_CLIPWINDOWDIMENSIONS4_t;

/**
  * \brief Constant color for layer 4. (VIDEOSS_FETCHLAYER1_CONSTANTCOLOR4)
  */
typedef struct stc_VIDEOSS_FETCHLAYER1_CONSTANTCOLOR4_field {
  uint32_t                         u8CONSTANTALPHA4:8;
  uint32_t                         u8CONSTANTBLUE4:8;
  uint32_t                         u8CONSTANTGREEN4:8;
  uint32_t                         u8CONSTANTRED4:8;
} stc_VIDEOSS_FETCHLAYER1_CONSTANTCOLOR4_field_t;

typedef union un_VIDEOSS_FETCHLAYER1_CONSTANTCOLOR4 {
  uint32_t                         u32Register;
  stc_VIDEOSS_FETCHLAYER1_CONSTANTCOLOR4_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_FETCHLAYER1_CONSTANTCOLOR4_t;

/**
  * \brief Common properties of layer 4. (VIDEOSS_FETCHLAYER1_LAYERPROPERTY4)
  */
typedef struct stc_VIDEOSS_FETCHLAYER1_LAYERPROPERTY4_field {
  uint32_t                         u1PALETTEENABLE4:1;
  uint32_t                         u2TILEMODE4:2;
  uint32_t                         u1ALPHASRCENABLE4:1;
  uint32_t                         u1ALPHACONSTENABLE4:1;
  uint32_t                         :1;
  uint32_t                         u1ALPHATRANSENABLE4:1;
  uint32_t                         u1RGBALPHASRCENABLE4:1;
  uint32_t                         u1RGBALPHACONSTENABLE4:1;
  uint32_t                         :1;
  uint32_t                         u1RGBALPHATRANSENABLE4:1;
  uint32_t                         u1PREMULCONSTRGB4:1;
  uint32_t                         u2YUVCONVERSIONMODE4:2;
  uint32_t                         u1GAMMAREMOVEENABLE4:1;
  uint32_t                         :1;
  uint32_t                         u11PALETTEOFFSET4:11;
  uint32_t                         u3PALETTEIDWIDTH4:3;
  uint32_t                         u1CLIPWINDOWENABLE4:1;
  uint32_t                         u1SOURCEBUFFERENABLE4:1;
} stc_VIDEOSS_FETCHLAYER1_LAYERPROPERTY4_field_t;

typedef union un_VIDEOSS_FETCHLAYER1_LAYERPROPERTY4 {
  uint32_t                         u32Register;
  stc_VIDEOSS_FETCHLAYER1_LAYERPROPERTY4_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_FETCHLAYER1_LAYERPROPERTY4_t;

/**
  * \brief Source buffer base address of layer 5. (VIDEOSS_FETCHLAYER1_BASEADDRESS5)
  */
typedef struct stc_VIDEOSS_FETCHLAYER1_BASEADDRESS5_field {
  uint32_t                         u32BASEADDRESS5:32;
} stc_VIDEOSS_FETCHLAYER1_BASEADDRESS5_field_t;

typedef union un_VIDEOSS_FETCHLAYER1_BASEADDRESS5 {
  uint32_t                         u32Register;
  stc_VIDEOSS_FETCHLAYER1_BASEADDRESS5_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_FETCHLAYER1_BASEADDRESS5_t;

/**
  * \brief Source buffer attributes for layer 5. (VIDEOSS_FETCHLAYER1_SOURCEBUFFERATTRIBUTES5)
  */
typedef struct stc_VIDEOSS_FETCHLAYER1_SOURCEBUFFERATTRIBUTES5_field {
  uint32_t                         u16STRIDE5:16;
  uint32_t                         u6BITSPERPIXEL5:6;
  uint32_t                         :10;
} stc_VIDEOSS_FETCHLAYER1_SOURCEBUFFERATTRIBUTES5_field_t;

typedef union un_VIDEOSS_FETCHLAYER1_SOURCEBUFFERATTRIBUTES5 {
  uint32_t                         u32Register;
  stc_VIDEOSS_FETCHLAYER1_SOURCEBUFFERATTRIBUTES5_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_FETCHLAYER1_SOURCEBUFFERATTRIBUTES5_t;

/**
  * \brief Source buffer dimension of layer 5. (VIDEOSS_FETCHLAYER1_SOURCEBUFFERDIMENSION5)
  */
typedef struct stc_VIDEOSS_FETCHLAYER1_SOURCEBUFFERDIMENSION5_field {
  uint32_t                         u14LINEWIDTH5:14;
  uint32_t                         :2;
  uint32_t                         u14LINECOUNT5:14;
  uint32_t                         :2;
} stc_VIDEOSS_FETCHLAYER1_SOURCEBUFFERDIMENSION5_field_t;

typedef union un_VIDEOSS_FETCHLAYER1_SOURCEBUFFERDIMENSION5 {
  uint32_t                         u32Register;
  stc_VIDEOSS_FETCHLAYER1_SOURCEBUFFERDIMENSION5_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_FETCHLAYER1_SOURCEBUFFERDIMENSION5_t;

/**
  * \brief Size of color components for RGB, YUV and index formats (layer 5). (VIDEOSS_FETCHLAYER1_COLORCOMPONENTBITS5)
  */
typedef struct stc_VIDEOSS_FETCHLAYER1_COLORCOMPONENTBITS5_field {
  uint32_t                         u4COMPONENTBITSALPHA5:4;
  uint32_t                         :4;
  uint32_t                         u4COMPONENTBITSBLUE5:4;
  uint32_t                         :4;
  uint32_t                         u4COMPONENTBITSGREEN5:4;
  uint32_t                         :4;
  uint32_t                         u4COMPONENTBITSRED5:4;
  uint32_t                         :3;
  uint32_t                         u1ITUFORMAT5:1;
} stc_VIDEOSS_FETCHLAYER1_COLORCOMPONENTBITS5_field_t;

typedef union un_VIDEOSS_FETCHLAYER1_COLORCOMPONENTBITS5 {
  uint32_t                         u32Register;
  stc_VIDEOSS_FETCHLAYER1_COLORCOMPONENTBITS5_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_FETCHLAYER1_COLORCOMPONENTBITS5_t;

/**
  * \brief Bit position of color components for RGB, YUV and index formats (layer 5). (VIDEOSS_FETCHLAYER1_COLORCOMPONENTSHIFT5)
  */
typedef struct stc_VIDEOSS_FETCHLAYER1_COLORCOMPONENTSHIFT5_field {
  uint32_t                         u5COMPONENTSHIFTALPHA5:5;
  uint32_t                         :3;
  uint32_t                         u5COMPONENTSHIFTBLUE5:5;
  uint32_t                         :3;
  uint32_t                         u5COMPONENTSHIFTGREEN5:5;
  uint32_t                         :3;
  uint32_t                         u5COMPONENTSHIFTRED5:5;
  uint32_t                         :3;
} stc_VIDEOSS_FETCHLAYER1_COLORCOMPONENTSHIFT5_field_t;

typedef union un_VIDEOSS_FETCHLAYER1_COLORCOMPONENTSHIFT5 {
  uint32_t                         u32Register;
  stc_VIDEOSS_FETCHLAYER1_COLORCOMPONENTSHIFT5_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_FETCHLAYER1_COLORCOMPONENTSHIFT5_t;

/**
  * \brief Position of layer 5 within the destination frame. (VIDEOSS_FETCHLAYER1_LAYEROFFSET5)
  */
typedef struct stc_VIDEOSS_FETCHLAYER1_LAYEROFFSET5_field {
  uint32_t                         u15LAYERXOFFSET5:15;
  uint32_t                         :1;
  uint32_t                         u15LAYERYOFFSET5:15;
} stc_VIDEOSS_FETCHLAYER1_LAYEROFFSET5_field_t;

typedef union un_VIDEOSS_FETCHLAYER1_LAYEROFFSET5 {
  uint32_t                         u32Register;
  stc_VIDEOSS_FETCHLAYER1_LAYEROFFSET5_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_FETCHLAYER1_LAYEROFFSET5_t;

/**
  * \brief Clip window position for layer 5. (VIDEOSS_FETCHLAYER1_CLIPWINDOWOFFSET5)
  */
typedef struct stc_VIDEOSS_FETCHLAYER1_CLIPWINDOWOFFSET5_field {
  uint32_t                         u15CLIPWINDOWXOFFSET5:15;
  uint32_t                         :1;
  uint32_t                         u15CLIPWINDOWYOFFSET5:15;
} stc_VIDEOSS_FETCHLAYER1_CLIPWINDOWOFFSET5_field_t;

typedef union un_VIDEOSS_FETCHLAYER1_CLIPWINDOWOFFSET5 {
  uint32_t                         u32Register;
  stc_VIDEOSS_FETCHLAYER1_CLIPWINDOWOFFSET5_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_FETCHLAYER1_CLIPWINDOWOFFSET5_t;

/**
  * \brief Clip window size for layer 5. (VIDEOSS_FETCHLAYER1_CLIPWINDOWDIMENSIONS5)
  */
typedef struct stc_VIDEOSS_FETCHLAYER1_CLIPWINDOWDIMENSIONS5_field {
  uint32_t                         u14CLIPWINDOWWIDTH5:14;
  uint32_t                         :2;
  uint32_t                         u14CLIPWINDOWHEIGHT5:14;
  uint32_t                         :2;
} stc_VIDEOSS_FETCHLAYER1_CLIPWINDOWDIMENSIONS5_field_t;

typedef union un_VIDEOSS_FETCHLAYER1_CLIPWINDOWDIMENSIONS5 {
  uint32_t                         u32Register;
  stc_VIDEOSS_FETCHLAYER1_CLIPWINDOWDIMENSIONS5_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_FETCHLAYER1_CLIPWINDOWDIMENSIONS5_t;

/**
  * \brief Constant color for layer 5. (VIDEOSS_FETCHLAYER1_CONSTANTCOLOR5)
  */
typedef struct stc_VIDEOSS_FETCHLAYER1_CONSTANTCOLOR5_field {
  uint32_t                         u8CONSTANTALPHA5:8;
  uint32_t                         u8CONSTANTBLUE5:8;
  uint32_t                         u8CONSTANTGREEN5:8;
  uint32_t                         u8CONSTANTRED5:8;
} stc_VIDEOSS_FETCHLAYER1_CONSTANTCOLOR5_field_t;

typedef union un_VIDEOSS_FETCHLAYER1_CONSTANTCOLOR5 {
  uint32_t                         u32Register;
  stc_VIDEOSS_FETCHLAYER1_CONSTANTCOLOR5_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_FETCHLAYER1_CONSTANTCOLOR5_t;

/**
  * \brief Common properties of layer 5. (VIDEOSS_FETCHLAYER1_LAYERPROPERTY5)
  */
typedef struct stc_VIDEOSS_FETCHLAYER1_LAYERPROPERTY5_field {
  uint32_t                         u1PALETTEENABLE5:1;
  uint32_t                         u2TILEMODE5:2;
  uint32_t                         u1ALPHASRCENABLE5:1;
  uint32_t                         u1ALPHACONSTENABLE5:1;
  uint32_t                         :1;
  uint32_t                         u1ALPHATRANSENABLE5:1;
  uint32_t                         u1RGBALPHASRCENABLE5:1;
  uint32_t                         u1RGBALPHACONSTENABLE5:1;
  uint32_t                         :1;
  uint32_t                         u1RGBALPHATRANSENABLE5:1;
  uint32_t                         u1PREMULCONSTRGB5:1;
  uint32_t                         u2YUVCONVERSIONMODE5:2;
  uint32_t                         u1GAMMAREMOVEENABLE5:1;
  uint32_t                         :1;
  uint32_t                         u11PALETTEOFFSET5:11;
  uint32_t                         u3PALETTEIDWIDTH5:3;
  uint32_t                         u1CLIPWINDOWENABLE5:1;
  uint32_t                         u1SOURCEBUFFERENABLE5:1;
} stc_VIDEOSS_FETCHLAYER1_LAYERPROPERTY5_field_t;

typedef union un_VIDEOSS_FETCHLAYER1_LAYERPROPERTY5 {
  uint32_t                         u32Register;
  stc_VIDEOSS_FETCHLAYER1_LAYERPROPERTY5_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_FETCHLAYER1_LAYERPROPERTY5_t;

/**
  * \brief Source buffer base address of layer 6. (VIDEOSS_FETCHLAYER1_BASEADDRESS6)
  */
typedef struct stc_VIDEOSS_FETCHLAYER1_BASEADDRESS6_field {
  uint32_t                         u32BASEADDRESS6:32;
} stc_VIDEOSS_FETCHLAYER1_BASEADDRESS6_field_t;

typedef union un_VIDEOSS_FETCHLAYER1_BASEADDRESS6 {
  uint32_t                         u32Register;
  stc_VIDEOSS_FETCHLAYER1_BASEADDRESS6_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_FETCHLAYER1_BASEADDRESS6_t;

/**
  * \brief Source buffer attributes for layer 6. (VIDEOSS_FETCHLAYER1_SOURCEBUFFERATTRIBUTES6)
  */
typedef struct stc_VIDEOSS_FETCHLAYER1_SOURCEBUFFERATTRIBUTES6_field {
  uint32_t                         u16STRIDE6:16;
  uint32_t                         u6BITSPERPIXEL6:6;
  uint32_t                         :10;
} stc_VIDEOSS_FETCHLAYER1_SOURCEBUFFERATTRIBUTES6_field_t;

typedef union un_VIDEOSS_FETCHLAYER1_SOURCEBUFFERATTRIBUTES6 {
  uint32_t                         u32Register;
  stc_VIDEOSS_FETCHLAYER1_SOURCEBUFFERATTRIBUTES6_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_FETCHLAYER1_SOURCEBUFFERATTRIBUTES6_t;

/**
  * \brief Source buffer dimension of layer 6. (VIDEOSS_FETCHLAYER1_SOURCEBUFFERDIMENSION6)
  */
typedef struct stc_VIDEOSS_FETCHLAYER1_SOURCEBUFFERDIMENSION6_field {
  uint32_t                         u14LINEWIDTH6:14;
  uint32_t                         :2;
  uint32_t                         u14LINECOUNT6:14;
  uint32_t                         :2;
} stc_VIDEOSS_FETCHLAYER1_SOURCEBUFFERDIMENSION6_field_t;

typedef union un_VIDEOSS_FETCHLAYER1_SOURCEBUFFERDIMENSION6 {
  uint32_t                         u32Register;
  stc_VIDEOSS_FETCHLAYER1_SOURCEBUFFERDIMENSION6_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_FETCHLAYER1_SOURCEBUFFERDIMENSION6_t;

/**
  * \brief Size of color components for RGB, YUV and index formats (layer 6). (VIDEOSS_FETCHLAYER1_COLORCOMPONENTBITS6)
  */
typedef struct stc_VIDEOSS_FETCHLAYER1_COLORCOMPONENTBITS6_field {
  uint32_t                         u4COMPONENTBITSALPHA6:4;
  uint32_t                         :4;
  uint32_t                         u4COMPONENTBITSBLUE6:4;
  uint32_t                         :4;
  uint32_t                         u4COMPONENTBITSGREEN6:4;
  uint32_t                         :4;
  uint32_t                         u4COMPONENTBITSRED6:4;
  uint32_t                         :3;
  uint32_t                         u1ITUFORMAT6:1;
} stc_VIDEOSS_FETCHLAYER1_COLORCOMPONENTBITS6_field_t;

typedef union un_VIDEOSS_FETCHLAYER1_COLORCOMPONENTBITS6 {
  uint32_t                         u32Register;
  stc_VIDEOSS_FETCHLAYER1_COLORCOMPONENTBITS6_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_FETCHLAYER1_COLORCOMPONENTBITS6_t;

/**
  * \brief Bit position of color components for RGB, YUV and index formats (layer 6). (VIDEOSS_FETCHLAYER1_COLORCOMPONENTSHIFT6)
  */
typedef struct stc_VIDEOSS_FETCHLAYER1_COLORCOMPONENTSHIFT6_field {
  uint32_t                         u5COMPONENTSHIFTALPHA6:5;
  uint32_t                         :3;
  uint32_t                         u5COMPONENTSHIFTBLUE6:5;
  uint32_t                         :3;
  uint32_t                         u5COMPONENTSHIFTGREEN6:5;
  uint32_t                         :3;
  uint32_t                         u5COMPONENTSHIFTRED6:5;
  uint32_t                         :3;
} stc_VIDEOSS_FETCHLAYER1_COLORCOMPONENTSHIFT6_field_t;

typedef union un_VIDEOSS_FETCHLAYER1_COLORCOMPONENTSHIFT6 {
  uint32_t                         u32Register;
  stc_VIDEOSS_FETCHLAYER1_COLORCOMPONENTSHIFT6_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_FETCHLAYER1_COLORCOMPONENTSHIFT6_t;

/**
  * \brief Position of layer 1 within the destination frame. (VIDEOSS_FETCHLAYER1_LAYEROFFSET6)
  */
typedef struct stc_VIDEOSS_FETCHLAYER1_LAYEROFFSET6_field {
  uint32_t                         u15LAYERXOFFSET6:15;
  uint32_t                         :1;
  uint32_t                         u15LAYERYOFFSET6:15;
} stc_VIDEOSS_FETCHLAYER1_LAYEROFFSET6_field_t;

typedef union un_VIDEOSS_FETCHLAYER1_LAYEROFFSET6 {
  uint32_t                         u32Register;
  stc_VIDEOSS_FETCHLAYER1_LAYEROFFSET6_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_FETCHLAYER1_LAYEROFFSET6_t;

/**
  * \brief Clip window position for layer 6. (VIDEOSS_FETCHLAYER1_CLIPWINDOWOFFSET6)
  */
typedef struct stc_VIDEOSS_FETCHLAYER1_CLIPWINDOWOFFSET6_field {
  uint32_t                         u15CLIPWINDOWXOFFSET6:15;
  uint32_t                         :1;
  uint32_t                         u15CLIPWINDOWYOFFSET6:15;
} stc_VIDEOSS_FETCHLAYER1_CLIPWINDOWOFFSET6_field_t;

typedef union un_VIDEOSS_FETCHLAYER1_CLIPWINDOWOFFSET6 {
  uint32_t                         u32Register;
  stc_VIDEOSS_FETCHLAYER1_CLIPWINDOWOFFSET6_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_FETCHLAYER1_CLIPWINDOWOFFSET6_t;

/**
  * \brief Clip window size for layer 6. (VIDEOSS_FETCHLAYER1_CLIPWINDOWDIMENSIONS6)
  */
typedef struct stc_VIDEOSS_FETCHLAYER1_CLIPWINDOWDIMENSIONS6_field {
  uint32_t                         u14CLIPWINDOWWIDTH6:14;
  uint32_t                         :2;
  uint32_t                         u14CLIPWINDOWHEIGHT6:14;
  uint32_t                         :2;
} stc_VIDEOSS_FETCHLAYER1_CLIPWINDOWDIMENSIONS6_field_t;

typedef union un_VIDEOSS_FETCHLAYER1_CLIPWINDOWDIMENSIONS6 {
  uint32_t                         u32Register;
  stc_VIDEOSS_FETCHLAYER1_CLIPWINDOWDIMENSIONS6_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_FETCHLAYER1_CLIPWINDOWDIMENSIONS6_t;

/**
  * \brief Constant color for layer 6. (VIDEOSS_FETCHLAYER1_CONSTANTCOLOR6)
  */
typedef struct stc_VIDEOSS_FETCHLAYER1_CONSTANTCOLOR6_field {
  uint32_t                         u8CONSTANTALPHA6:8;
  uint32_t                         u8CONSTANTBLUE6:8;
  uint32_t                         u8CONSTANTGREEN6:8;
  uint32_t                         u8CONSTANTRED6:8;
} stc_VIDEOSS_FETCHLAYER1_CONSTANTCOLOR6_field_t;

typedef union un_VIDEOSS_FETCHLAYER1_CONSTANTCOLOR6 {
  uint32_t                         u32Register;
  stc_VIDEOSS_FETCHLAYER1_CONSTANTCOLOR6_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_FETCHLAYER1_CONSTANTCOLOR6_t;

/**
  * \brief Common properties of layer 6. (VIDEOSS_FETCHLAYER1_LAYERPROPERTY6)
  */
typedef struct stc_VIDEOSS_FETCHLAYER1_LAYERPROPERTY6_field {
  uint32_t                         u1PALETTEENABLE6:1;
  uint32_t                         u2TILEMODE6:2;
  uint32_t                         u1ALPHASRCENABLE6:1;
  uint32_t                         u1ALPHACONSTENABLE6:1;
  uint32_t                         :1;
  uint32_t                         u1ALPHATRANSENABLE6:1;
  uint32_t                         u1RGBALPHASRCENABLE6:1;
  uint32_t                         u1RGBALPHACONSTENABLE6:1;
  uint32_t                         :1;
  uint32_t                         u1RGBALPHATRANSENABLE6:1;
  uint32_t                         u1PREMULCONSTRGB6:1;
  uint32_t                         u2YUVCONVERSIONMODE6:2;
  uint32_t                         u1GAMMAREMOVEENABLE6:1;
  uint32_t                         :1;
  uint32_t                         u11PALETTEOFFSET6:11;
  uint32_t                         u3PALETTEIDWIDTH6:3;
  uint32_t                         u1CLIPWINDOWENABLE6:1;
  uint32_t                         u1SOURCEBUFFERENABLE6:1;
} stc_VIDEOSS_FETCHLAYER1_LAYERPROPERTY6_field_t;

typedef union un_VIDEOSS_FETCHLAYER1_LAYERPROPERTY6 {
  uint32_t                         u32Register;
  stc_VIDEOSS_FETCHLAYER1_LAYERPROPERTY6_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_FETCHLAYER1_LAYERPROPERTY6_t;

/**
  * \brief Source buffer base address of layer 7. (VIDEOSS_FETCHLAYER1_BASEADDRESS7)
  */
typedef struct stc_VIDEOSS_FETCHLAYER1_BASEADDRESS7_field {
  uint32_t                         u32BASEADDRESS7:32;
} stc_VIDEOSS_FETCHLAYER1_BASEADDRESS7_field_t;

typedef union un_VIDEOSS_FETCHLAYER1_BASEADDRESS7 {
  uint32_t                         u32Register;
  stc_VIDEOSS_FETCHLAYER1_BASEADDRESS7_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_FETCHLAYER1_BASEADDRESS7_t;

/**
  * \brief Source buffer stride for layer 7. (VIDEOSS_FETCHLAYER1_SOURCEBUFFERATTRIBUTES7)
  */
typedef struct stc_VIDEOSS_FETCHLAYER1_SOURCEBUFFERATTRIBUTES7_field {
  uint32_t                         u16STRIDE7:16;
  uint32_t                         u6BITSPERPIXEL7:6;
  uint32_t                         :10;
} stc_VIDEOSS_FETCHLAYER1_SOURCEBUFFERATTRIBUTES7_field_t;

typedef union un_VIDEOSS_FETCHLAYER1_SOURCEBUFFERATTRIBUTES7 {
  uint32_t                         u32Register;
  stc_VIDEOSS_FETCHLAYER1_SOURCEBUFFERATTRIBUTES7_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_FETCHLAYER1_SOURCEBUFFERATTRIBUTES7_t;

/**
  * \brief Source buffer dimension of layer 7. (VIDEOSS_FETCHLAYER1_SOURCEBUFFERDIMENSION7)
  */
typedef struct stc_VIDEOSS_FETCHLAYER1_SOURCEBUFFERDIMENSION7_field {
  uint32_t                         u14LINEWIDTH7:14;
  uint32_t                         :2;
  uint32_t                         u14LINECOUNT7:14;
  uint32_t                         :2;
} stc_VIDEOSS_FETCHLAYER1_SOURCEBUFFERDIMENSION7_field_t;

typedef union un_VIDEOSS_FETCHLAYER1_SOURCEBUFFERDIMENSION7 {
  uint32_t                         u32Register;
  stc_VIDEOSS_FETCHLAYER1_SOURCEBUFFERDIMENSION7_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_FETCHLAYER1_SOURCEBUFFERDIMENSION7_t;

/**
  * \brief Size of color components for RGB, YUV and index formats (layer 7). (VIDEOSS_FETCHLAYER1_COLORCOMPONENTBITS7)
  */
typedef struct stc_VIDEOSS_FETCHLAYER1_COLORCOMPONENTBITS7_field {
  uint32_t                         u4COMPONENTBITSALPHA7:4;
  uint32_t                         :4;
  uint32_t                         u4COMPONENTBITSBLUE7:4;
  uint32_t                         :4;
  uint32_t                         u4COMPONENTBITSGREEN7:4;
  uint32_t                         :4;
  uint32_t                         u4COMPONENTBITSRED7:4;
  uint32_t                         :3;
  uint32_t                         u1ITUFORMAT7:1;
} stc_VIDEOSS_FETCHLAYER1_COLORCOMPONENTBITS7_field_t;

typedef union un_VIDEOSS_FETCHLAYER1_COLORCOMPONENTBITS7 {
  uint32_t                         u32Register;
  stc_VIDEOSS_FETCHLAYER1_COLORCOMPONENTBITS7_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_FETCHLAYER1_COLORCOMPONENTBITS7_t;

/**
  * \brief Bit position of color components for RGB, YUV and index formats (layer 7). (VIDEOSS_FETCHLAYER1_COLORCOMPONENTSHIFT7)
  */
typedef struct stc_VIDEOSS_FETCHLAYER1_COLORCOMPONENTSHIFT7_field {
  uint32_t                         u5COMPONENTSHIFTALPHA7:5;
  uint32_t                         :3;
  uint32_t                         u5COMPONENTSHIFTBLUE7:5;
  uint32_t                         :3;
  uint32_t                         u5COMPONENTSHIFTGREEN7:5;
  uint32_t                         :3;
  uint32_t                         u5COMPONENTSHIFTRED7:5;
  uint32_t                         :3;
} stc_VIDEOSS_FETCHLAYER1_COLORCOMPONENTSHIFT7_field_t;

typedef union un_VIDEOSS_FETCHLAYER1_COLORCOMPONENTSHIFT7 {
  uint32_t                         u32Register;
  stc_VIDEOSS_FETCHLAYER1_COLORCOMPONENTSHIFT7_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_FETCHLAYER1_COLORCOMPONENTSHIFT7_t;

/**
  * \brief Position of layer 7 within the destination frame. (VIDEOSS_FETCHLAYER1_LAYEROFFSET7)
  */
typedef struct stc_VIDEOSS_FETCHLAYER1_LAYEROFFSET7_field {
  uint32_t                         u15LAYERXOFFSET7:15;
  uint32_t                         :1;
  uint32_t                         u15LAYERYOFFSET7:15;
} stc_VIDEOSS_FETCHLAYER1_LAYEROFFSET7_field_t;

typedef union un_VIDEOSS_FETCHLAYER1_LAYEROFFSET7 {
  uint32_t                         u32Register;
  stc_VIDEOSS_FETCHLAYER1_LAYEROFFSET7_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_FETCHLAYER1_LAYEROFFSET7_t;

/**
  * \brief Clip window position for layer 7. (VIDEOSS_FETCHLAYER1_CLIPWINDOWOFFSET7)
  */
typedef struct stc_VIDEOSS_FETCHLAYER1_CLIPWINDOWOFFSET7_field {
  uint32_t                         u15CLIPWINDOWXOFFSET7:15;
  uint32_t                         :1;
  uint32_t                         u15CLIPWINDOWYOFFSET7:15;
} stc_VIDEOSS_FETCHLAYER1_CLIPWINDOWOFFSET7_field_t;

typedef union un_VIDEOSS_FETCHLAYER1_CLIPWINDOWOFFSET7 {
  uint32_t                         u32Register;
  stc_VIDEOSS_FETCHLAYER1_CLIPWINDOWOFFSET7_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_FETCHLAYER1_CLIPWINDOWOFFSET7_t;

/**
  * \brief Clip window size for layer 7. (VIDEOSS_FETCHLAYER1_CLIPWINDOWDIMENSIONS7)
  */
typedef struct stc_VIDEOSS_FETCHLAYER1_CLIPWINDOWDIMENSIONS7_field {
  uint32_t                         u14CLIPWINDOWWIDTH7:14;
  uint32_t                         :2;
  uint32_t                         u14CLIPWINDOWHEIGHT7:14;
  uint32_t                         :2;
} stc_VIDEOSS_FETCHLAYER1_CLIPWINDOWDIMENSIONS7_field_t;

typedef union un_VIDEOSS_FETCHLAYER1_CLIPWINDOWDIMENSIONS7 {
  uint32_t                         u32Register;
  stc_VIDEOSS_FETCHLAYER1_CLIPWINDOWDIMENSIONS7_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_FETCHLAYER1_CLIPWINDOWDIMENSIONS7_t;

/**
  * \brief Constant color for layer 7. (VIDEOSS_FETCHLAYER1_CONSTANTCOLOR7)
  */
typedef struct stc_VIDEOSS_FETCHLAYER1_CONSTANTCOLOR7_field {
  uint32_t                         u8CONSTANTALPHA7:8;
  uint32_t                         u8CONSTANTBLUE7:8;
  uint32_t                         u8CONSTANTGREEN7:8;
  uint32_t                         u8CONSTANTRED7:8;
} stc_VIDEOSS_FETCHLAYER1_CONSTANTCOLOR7_field_t;

typedef union un_VIDEOSS_FETCHLAYER1_CONSTANTCOLOR7 {
  uint32_t                         u32Register;
  stc_VIDEOSS_FETCHLAYER1_CONSTANTCOLOR7_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_FETCHLAYER1_CONSTANTCOLOR7_t;

/**
  * \brief Common properties of layer 7. (VIDEOSS_FETCHLAYER1_LAYERPROPERTY7)
  */
typedef struct stc_VIDEOSS_FETCHLAYER1_LAYERPROPERTY7_field {
  uint32_t                         u1PALETTEENABLE7:1;
  uint32_t                         u2TILEMODE7:2;
  uint32_t                         u1ALPHASRCENABLE7:1;
  uint32_t                         u1ALPHACONSTENABLE7:1;
  uint32_t                         :1;
  uint32_t                         u1ALPHATRANSENABLE7:1;
  uint32_t                         u1RGBALPHASRCENABLE7:1;
  uint32_t                         u1RGBALPHACONSTENABLE7:1;
  uint32_t                         :1;
  uint32_t                         u1RGBALPHATRANSENABLE7:1;
  uint32_t                         u1PREMULCONSTRGB7:1;
  uint32_t                         u2YUVCONVERSIONMODE7:2;
  uint32_t                         u1GAMMAREMOVEENABLE7:1;
  uint32_t                         :1;
  uint32_t                         u11PALETTEOFFSET7:11;
  uint32_t                         u3PALETTEIDWIDTH7:3;
  uint32_t                         u1CLIPWINDOWENABLE7:1;
  uint32_t                         u1SOURCEBUFFERENABLE7:1;
} stc_VIDEOSS_FETCHLAYER1_LAYERPROPERTY7_field_t;

typedef union un_VIDEOSS_FETCHLAYER1_LAYERPROPERTY7 {
  uint32_t                         u32Register;
  stc_VIDEOSS_FETCHLAYER1_LAYERPROPERTY7_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_FETCHLAYER1_LAYERPROPERTY7_t;

/**
  * \brief Output frame dimension. (VIDEOSS_FETCHLAYER1_FRAMEDIMENSIONS)
  */
typedef struct stc_VIDEOSS_FETCHLAYER1_FRAMEDIMENSIONS_field {
  uint32_t                         u14FRAMEWIDTH:14;
  uint32_t                         :2;
  uint32_t                         u14FRAMEHEIGHT:14;
  uint32_t                         :1;
  uint32_t                         u1EMPTYFRAME:1;
} stc_VIDEOSS_FETCHLAYER1_FRAMEDIMENSIONS_field_t;

typedef union un_VIDEOSS_FETCHLAYER1_FRAMEDIMENSIONS {
  uint32_t                         u32Register;
  stc_VIDEOSS_FETCHLAYER1_FRAMEDIMENSIONS_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_FETCHLAYER1_FRAMEDIMENSIONS_t;

/**
  * \brief Resampling options for output frame. (VIDEOSS_FETCHLAYER1_FRAMERESAMPLING)
  */
typedef struct stc_VIDEOSS_FETCHLAYER1_FRAMERESAMPLING_field {
  uint32_t                         u6STARTX:6;
  uint32_t                         u6STARTY:6;
  uint32_t                         u6DELTAX:6;
  uint32_t                         u6DELTAY:6;
  uint32_t                         u1SWAPDIRECTION:1;
  uint32_t                         :7;
} stc_VIDEOSS_FETCHLAYER1_FRAMERESAMPLING_field_t;

typedef union un_VIDEOSS_FETCHLAYER1_FRAMERESAMPLING {
  uint32_t                         u32Register;
  stc_VIDEOSS_FETCHLAYER1_FRAMERESAMPLING_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_FETCHLAYER1_FRAMERESAMPLING_t;

/**
  * \brief Shared common control settings for all layers. (VIDEOSS_FETCHLAYER1_CONTROL)
  */
typedef struct stc_VIDEOSS_FETCHLAYER1_CONTROL_field {
  uint32_t                         :7;
  uint32_t                         u1RAWPIXEL:1;
  uint32_t                         :8;
  uint32_t                         u1CLIPCOLOR:1;
  uint32_t                         u3CLIPLAYER:3;
  uint32_t                         :4;
  uint32_t                         u3LINEBUFLAYER:3;
  uint32_t                         :5;
} stc_VIDEOSS_FETCHLAYER1_CONTROL_field_t;

typedef union un_VIDEOSS_FETCHLAYER1_CONTROL {
  uint32_t                         u32Register;
  stc_VIDEOSS_FETCHLAYER1_CONTROL_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_FETCHLAYER1_CONTROL_t;

/**
  * \brief Shadow load enable flags for all layers. (VIDEOSS_FETCHLAYER1_TRIGGERENABLE)
  */
typedef struct stc_VIDEOSS_FETCHLAYER1_TRIGGERENABLE_field {
  uint32_t                         u8SHDLDREQ:8;
  uint32_t                         :24;
} stc_VIDEOSS_FETCHLAYER1_TRIGGERENABLE_field_t;

typedef union un_VIDEOSS_FETCHLAYER1_TRIGGERENABLE {
  uint32_t                         u32Register;
  stc_VIDEOSS_FETCHLAYER1_TRIGGERENABLE_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_FETCHLAYER1_TRIGGERENABLE_t;

/**
  * \brief Shadow load trigger. (VIDEOSS_FETCHLAYER1_CONTROLTRIGGER)
  */
typedef struct stc_VIDEOSS_FETCHLAYER1_CONTROLTRIGGER_field {
  uint32_t                         u1SHDTOKGEN:1;
  uint32_t                         :31;
} stc_VIDEOSS_FETCHLAYER1_CONTROLTRIGGER_field_t;

typedef union un_VIDEOSS_FETCHLAYER1_CONTROLTRIGGER {
  uint32_t                         u32Register;
  stc_VIDEOSS_FETCHLAYER1_CONTROLTRIGGER_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_FETCHLAYER1_CONTROLTRIGGER_t;

/**
  * \brief Frame start trigger. (VIDEOSS_FETCHLAYER1_START)
  */
typedef struct stc_VIDEOSS_FETCHLAYER1_START_field {
  uint32_t                         u1START:1;
  uint32_t                         :31;
} stc_VIDEOSS_FETCHLAYER1_START_field_t;

typedef union un_VIDEOSS_FETCHLAYER1_START {
  uint32_t                         u32Register;
  stc_VIDEOSS_FETCHLAYER1_START_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_FETCHLAYER1_START_t;

/**
  * \brief Fetch unit type. (VIDEOSS_FETCHLAYER1_FETCHTYPE)
  */
typedef struct stc_VIDEOSS_FETCHLAYER1_FETCHTYPE_field {
  uint32_t                         u4FETCHTYPE:4;
  uint32_t                         :28;
} stc_VIDEOSS_FETCHLAYER1_FETCHTYPE_field_t;

typedef union un_VIDEOSS_FETCHLAYER1_FETCHTYPE {
  uint32_t                         u32Register;
  stc_VIDEOSS_FETCHLAYER1_FETCHTYPE_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_FETCHLAYER1_FETCHTYPE_t;

/**
  * \brief Burst buffer properties. (VIDEOSS_FETCHLAYER1_BURSTBUFFERPROPERTIES)
  */
typedef struct stc_VIDEOSS_FETCHLAYER1_BURSTBUFFERPROPERTIES_field {
  uint32_t                         u8MANAGEDBURSTBUFFERS:8;
  uint32_t                         u5BURSTLENGTHFORMAXBUFFERS:5;
  uint32_t                         :19;
} stc_VIDEOSS_FETCHLAYER1_BURSTBUFFERPROPERTIES_field_t;

typedef union un_VIDEOSS_FETCHLAYER1_BURSTBUFFERPROPERTIES {
  uint32_t                         u32Register;
  stc_VIDEOSS_FETCHLAYER1_BURSTBUFFERPROPERTIES_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_FETCHLAYER1_BURSTBUFFERPROPERTIES_t;

/**
  * \brief Status information. (VIDEOSS_FETCHLAYER1_STATUS)
  */
typedef struct stc_VIDEOSS_FETCHLAYER1_STATUS_field {
  uint32_t                         u1WRITETIMEOUT:1;
  uint32_t                         :3;
  uint32_t                         u1READTIMEOUT:1;
  uint32_t                         :27;
} stc_VIDEOSS_FETCHLAYER1_STATUS_field_t;

typedef union un_VIDEOSS_FETCHLAYER1_STATUS {
  uint32_t                         u32Register;
  stc_VIDEOSS_FETCHLAYER1_STATUS_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_FETCHLAYER1_STATUS_t;



/**
  * \brief Common static control options. (VIDEOSS_FETCHDECODE0_STATICCONTROL)
  */
typedef struct stc_VIDEOSS_FETCHDECODE0_STATICCONTROL_field {
  uint32_t                         u1SHDEN:1;
  uint32_t                         u1LBHSHDEN:1;
  uint32_t                         :14;
  uint32_t                         u8BASEADDRESSAUTOUPDATE:8;
  uint32_t                         :8;
} stc_VIDEOSS_FETCHDECODE0_STATICCONTROL_field_t;

typedef union un_VIDEOSS_FETCHDECODE0_STATICCONTROL {
  uint32_t                         u32Register;
  stc_VIDEOSS_FETCHDECODE0_STATICCONTROL_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_FETCHDECODE0_STATICCONTROL_t;

/**
  * \brief AXI interface buffer management register (VIDEOSS_FETCHDECODE0_BURSTBUFFERMANAGEMENT)
  */
typedef struct stc_VIDEOSS_FETCHDECODE0_BURSTBUFFERMANAGEMENT_field {
  uint32_t                         u8SETNUMBUFFERS:8;
  uint32_t                         u5SETBURSTLENGTH:5;
  uint32_t                         :18;
  uint32_t                         u1LINEMODE:1;
} stc_VIDEOSS_FETCHDECODE0_BURSTBUFFERMANAGEMENT_field_t;

typedef union un_VIDEOSS_FETCHDECODE0_BURSTBUFFERMANAGEMENT {
  uint32_t                         u32Register;
  stc_VIDEOSS_FETCHDECODE0_BURSTBUFFERMANAGEMENT_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_FETCHDECODE0_BURSTBUFFERMANAGEMENT_t;

/**
  * \brief Ring buffer setup for layer 0. (VIDEOSS_FETCHDECODE0_RINGBUFSTARTADDR0)
  */
typedef struct stc_VIDEOSS_FETCHDECODE0_RINGBUFSTARTADDR0_field {
  uint32_t                         u32RINGBUFSTARTADDR0:32;
} stc_VIDEOSS_FETCHDECODE0_RINGBUFSTARTADDR0_field_t;

typedef union un_VIDEOSS_FETCHDECODE0_RINGBUFSTARTADDR0 {
  uint32_t                         u32Register;
  stc_VIDEOSS_FETCHDECODE0_RINGBUFSTARTADDR0_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_FETCHDECODE0_RINGBUFSTARTADDR0_t;

/**
  * \brief Ring buffer setup for layer 0. (VIDEOSS_FETCHDECODE0_RINGBUFWRAPADDR0)
  */
typedef struct stc_VIDEOSS_FETCHDECODE0_RINGBUFWRAPADDR0_field {
  uint32_t                         u32RINGBUFWRAPADDR0:32;
} stc_VIDEOSS_FETCHDECODE0_RINGBUFWRAPADDR0_field_t;

typedef union un_VIDEOSS_FETCHDECODE0_RINGBUFWRAPADDR0 {
  uint32_t                         u32Register;
  stc_VIDEOSS_FETCHDECODE0_RINGBUFWRAPADDR0_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_FETCHDECODE0_RINGBUFWRAPADDR0_t;

/**
  * \brief Frame property setup for layer 0. (VIDEOSS_FETCHDECODE0_FRAMEPROPERTIES0)
  */
typedef struct stc_VIDEOSS_FETCHDECODE0_FRAMEPROPERTIES0_field {
  uint32_t                         u1FIELDID0:1;
  uint32_t                         :31;
} stc_VIDEOSS_FETCHDECODE0_FRAMEPROPERTIES0_field_t;

typedef union un_VIDEOSS_FETCHDECODE0_FRAMEPROPERTIES0 {
  uint32_t                         u32Register;
  stc_VIDEOSS_FETCHDECODE0_FRAMEPROPERTIES0_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_FETCHDECODE0_FRAMEPROPERTIES0_t;

/**
  * \brief Source buffer base address of layer 0. (VIDEOSS_FETCHDECODE0_BASEADDRESS0)
  */
typedef struct stc_VIDEOSS_FETCHDECODE0_BASEADDRESS0_field {
  uint32_t                         u32BASEADDRESS0:32;
} stc_VIDEOSS_FETCHDECODE0_BASEADDRESS0_field_t;

typedef union un_VIDEOSS_FETCHDECODE0_BASEADDRESS0 {
  uint32_t                         u32Register;
  stc_VIDEOSS_FETCHDECODE0_BASEADDRESS0_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_FETCHDECODE0_BASEADDRESS0_t;

/**
  * \brief Source buffer attributes for layer 0. (VIDEOSS_FETCHDECODE0_SOURCEBUFFERATTRIBUTES0)
  */
typedef struct stc_VIDEOSS_FETCHDECODE0_SOURCEBUFFERATTRIBUTES0_field {
  uint32_t                         u16STRIDE0:16;
  uint32_t                         u6BITSPERPIXEL0:6;
  uint32_t                         :10;
} stc_VIDEOSS_FETCHDECODE0_SOURCEBUFFERATTRIBUTES0_field_t;

typedef union un_VIDEOSS_FETCHDECODE0_SOURCEBUFFERATTRIBUTES0 {
  uint32_t                         u32Register;
  stc_VIDEOSS_FETCHDECODE0_SOURCEBUFFERATTRIBUTES0_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_FETCHDECODE0_SOURCEBUFFERATTRIBUTES0_t;

/**
  * \brief Source buffer dimension of layer 0. (VIDEOSS_FETCHDECODE0_SOURCEBUFFERDIMENSION0)
  */
typedef struct stc_VIDEOSS_FETCHDECODE0_SOURCEBUFFERDIMENSION0_field {
  uint32_t                         u14LINEWIDTH0:14;
  uint32_t                         :2;
  uint32_t                         u14LINECOUNT0:14;
  uint32_t                         :2;
} stc_VIDEOSS_FETCHDECODE0_SOURCEBUFFERDIMENSION0_field_t;

typedef union un_VIDEOSS_FETCHDECODE0_SOURCEBUFFERDIMENSION0 {
  uint32_t                         u32Register;
  stc_VIDEOSS_FETCHDECODE0_SOURCEBUFFERDIMENSION0_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_FETCHDECODE0_SOURCEBUFFERDIMENSION0_t;

/**
  * \brief Size of color components for RGB, YUV and index formats (layer 0). (VIDEOSS_FETCHDECODE0_COLORCOMPONENTBITS0)
  */
typedef struct stc_VIDEOSS_FETCHDECODE0_COLORCOMPONENTBITS0_field {
  uint32_t                         u4COMPONENTBITSALPHA0:4;
  uint32_t                         :4;
  uint32_t                         u4COMPONENTBITSBLUE0:4;
  uint32_t                         :4;
  uint32_t                         u4COMPONENTBITSGREEN0:4;
  uint32_t                         :4;
  uint32_t                         u4COMPONENTBITSRED0:4;
  uint32_t                         :3;
  uint32_t                         u1ITUFORMAT0:1;
} stc_VIDEOSS_FETCHDECODE0_COLORCOMPONENTBITS0_field_t;

typedef union un_VIDEOSS_FETCHDECODE0_COLORCOMPONENTBITS0 {
  uint32_t                         u32Register;
  stc_VIDEOSS_FETCHDECODE0_COLORCOMPONENTBITS0_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_FETCHDECODE0_COLORCOMPONENTBITS0_t;

/**
  * \brief Bit position of color components for RGB, YUV and index formats (layer 0). (VIDEOSS_FETCHDECODE0_COLORCOMPONENTSHIFT0)
  */
typedef struct stc_VIDEOSS_FETCHDECODE0_COLORCOMPONENTSHIFT0_field {
  uint32_t                         u5COMPONENTSHIFTALPHA0:5;
  uint32_t                         :3;
  uint32_t                         u5COMPONENTSHIFTBLUE0:5;
  uint32_t                         :3;
  uint32_t                         u5COMPONENTSHIFTGREEN0:5;
  uint32_t                         :3;
  uint32_t                         u5COMPONENTSHIFTRED0:5;
  uint32_t                         :3;
} stc_VIDEOSS_FETCHDECODE0_COLORCOMPONENTSHIFT0_field_t;

typedef union un_VIDEOSS_FETCHDECODE0_COLORCOMPONENTSHIFT0 {
  uint32_t                         u32Register;
  stc_VIDEOSS_FETCHDECODE0_COLORCOMPONENTSHIFT0_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_FETCHDECODE0_COLORCOMPONENTSHIFT0_t;

/**
  * \brief Position of layer 0 within the destination frame. (VIDEOSS_FETCHDECODE0_LAYEROFFSET0)
  */
typedef struct stc_VIDEOSS_FETCHDECODE0_LAYEROFFSET0_field {
  uint32_t                         u15LAYERXOFFSET0:15;
  uint32_t                         :1;
  uint32_t                         u15LAYERYOFFSET0:15;
} stc_VIDEOSS_FETCHDECODE0_LAYEROFFSET0_field_t;

typedef union un_VIDEOSS_FETCHDECODE0_LAYEROFFSET0 {
  uint32_t                         u32Register;
  stc_VIDEOSS_FETCHDECODE0_LAYEROFFSET0_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_FETCHDECODE0_LAYEROFFSET0_t;

/**
  * \brief Clip window position for layer 0. (VIDEOSS_FETCHDECODE0_CLIPWINDOWOFFSET0)
  */
typedef struct stc_VIDEOSS_FETCHDECODE0_CLIPWINDOWOFFSET0_field {
  uint32_t                         u15CLIPWINDOWXOFFSET0:15;
  uint32_t                         :1;
  uint32_t                         u15CLIPWINDOWYOFFSET0:15;
} stc_VIDEOSS_FETCHDECODE0_CLIPWINDOWOFFSET0_field_t;

typedef union un_VIDEOSS_FETCHDECODE0_CLIPWINDOWOFFSET0 {
  uint32_t                         u32Register;
  stc_VIDEOSS_FETCHDECODE0_CLIPWINDOWOFFSET0_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_FETCHDECODE0_CLIPWINDOWOFFSET0_t;

/**
  * \brief Clip window size for layer 0. (VIDEOSS_FETCHDECODE0_CLIPWINDOWDIMENSIONS0)
  */
typedef struct stc_VIDEOSS_FETCHDECODE0_CLIPWINDOWDIMENSIONS0_field {
  uint32_t                         u14CLIPWINDOWWIDTH0:14;
  uint32_t                         :2;
  uint32_t                         u14CLIPWINDOWHEIGHT0:14;
  uint32_t                         :2;
} stc_VIDEOSS_FETCHDECODE0_CLIPWINDOWDIMENSIONS0_field_t;

typedef union un_VIDEOSS_FETCHDECODE0_CLIPWINDOWDIMENSIONS0 {
  uint32_t                         u32Register;
  stc_VIDEOSS_FETCHDECODE0_CLIPWINDOWDIMENSIONS0_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_FETCHDECODE0_CLIPWINDOWDIMENSIONS0_t;

/**
  * \brief Constant color for layer 0. (VIDEOSS_FETCHDECODE0_CONSTANTCOLOR0)
  */
typedef struct stc_VIDEOSS_FETCHDECODE0_CONSTANTCOLOR0_field {
  uint32_t                         u8CONSTANTALPHA0:8;
  uint32_t                         u8CONSTANTBLUE0:8;
  uint32_t                         u8CONSTANTGREEN0:8;
  uint32_t                         u8CONSTANTRED0:8;
} stc_VIDEOSS_FETCHDECODE0_CONSTANTCOLOR0_field_t;

typedef union un_VIDEOSS_FETCHDECODE0_CONSTANTCOLOR0 {
  uint32_t                         u32Register;
  stc_VIDEOSS_FETCHDECODE0_CONSTANTCOLOR0_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_FETCHDECODE0_CONSTANTCOLOR0_t;

/**
  * \brief Common properties of layer 0. (VIDEOSS_FETCHDECODE0_LAYERPROPERTY0)
  */
typedef struct stc_VIDEOSS_FETCHDECODE0_LAYERPROPERTY0_field {
  uint32_t                         u1PALETTEENABLE0:1;
  uint32_t                         u2TILEMODE0:2;
  uint32_t                         u1ALPHASRCENABLE0:1;
  uint32_t                         u1ALPHACONSTENABLE0:1;
  uint32_t                         u1ALPHAMASKENABLE0:1;
  uint32_t                         u1ALPHATRANSENABLE0:1;
  uint32_t                         u1RGBALPHASRCENABLE0:1;
  uint32_t                         u1RGBALPHACONSTENABLE0:1;
  uint32_t                         u1RGBALPHAMASKENABLE0:1;
  uint32_t                         u1RGBALPHATRANSENABLE0:1;
  uint32_t                         u1PREMULCONSTRGB0:1;
  uint32_t                         u2YUVCONVERSIONMODE0:2;
  uint32_t                         u1GAMMAREMOVEENABLE0:1;
  uint32_t                         :1;
  uint32_t                         u11PALETTEOFFSET0:11;
  uint32_t                         u3PALETTEIDWIDTH0:3;
  uint32_t                         u1CLIPWINDOWENABLE0:1;
  uint32_t                         u1SOURCEBUFFERENABLE0:1;
} stc_VIDEOSS_FETCHDECODE0_LAYERPROPERTY0_field_t;

typedef union un_VIDEOSS_FETCHDECODE0_LAYERPROPERTY0 {
  uint32_t                         u32Register;
  stc_VIDEOSS_FETCHDECODE0_LAYERPROPERTY0_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_FETCHDECODE0_LAYERPROPERTY0_t;

/**
  * \brief Output frame dimension. (VIDEOSS_FETCHDECODE0_FRAMEDIMENSIONS)
  */
typedef struct stc_VIDEOSS_FETCHDECODE0_FRAMEDIMENSIONS_field {
  uint32_t                         u14FRAMEWIDTH:14;
  uint32_t                         :2;
  uint32_t                         u14FRAMEHEIGHT:14;
  uint32_t                         :1;
  uint32_t                         u1EMPTYFRAME:1;
} stc_VIDEOSS_FETCHDECODE0_FRAMEDIMENSIONS_field_t;

typedef union un_VIDEOSS_FETCHDECODE0_FRAMEDIMENSIONS {
  uint32_t                         u32Register;
  stc_VIDEOSS_FETCHDECODE0_FRAMEDIMENSIONS_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_FETCHDECODE0_FRAMEDIMENSIONS_t;

/**
  * \brief Resampling options for output frame. (VIDEOSS_FETCHDECODE0_FRAMERESAMPLING)
  */
typedef struct stc_VIDEOSS_FETCHDECODE0_FRAMERESAMPLING_field {
  uint32_t                         u6STARTX:6;
  uint32_t                         u6STARTY:6;
  uint32_t                         u6DELTAX:6;
  uint32_t                         u6DELTAY:6;
  uint32_t                         u1SWAPDIRECTION:1;
  uint32_t                         :7;
} stc_VIDEOSS_FETCHDECODE0_FRAMERESAMPLING_field_t;

typedef union un_VIDEOSS_FETCHDECODE0_FRAMERESAMPLING {
  uint32_t                         u32Register;
  stc_VIDEOSS_FETCHDECODE0_FRAMERESAMPLING_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_FETCHDECODE0_FRAMERESAMPLING_t;

/**
  * \brief Control options for RLAD decompression. (VIDEOSS_FETCHDECODE0_DECODECONTROL)
  */
typedef struct stc_VIDEOSS_FETCHDECODE0_DECODECONTROL_field {
  uint32_t                         u2COMPRESSIONMODE:2;
  uint32_t                         :14;
  uint32_t                         u4RLADCOMPBITSRED:4;
  uint32_t                         u4RLADCOMPBITSGREEN:4;
  uint32_t                         u4RLADCOMPBITSBLUE:4;
  uint32_t                         u4RLADCOMPBITSALPHA:4;
} stc_VIDEOSS_FETCHDECODE0_DECODECONTROL_field_t;

typedef union un_VIDEOSS_FETCHDECODE0_DECODECONTROL {
  uint32_t                         u32Register;
  stc_VIDEOSS_FETCHDECODE0_DECODECONTROL_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_FETCHDECODE0_DECODECONTROL_t;

/**
  * \brief Source buffer length for compressed data. (VIDEOSS_FETCHDECODE0_SOURCEBUFFERLENGTH)
  */
typedef struct stc_VIDEOSS_FETCHDECODE0_SOURCEBUFFERLENGTH_field {
  uint32_t                         u29RLEWORDS:29;
  uint32_t                         :3;
} stc_VIDEOSS_FETCHDECODE0_SOURCEBUFFERLENGTH_field_t;

typedef union un_VIDEOSS_FETCHDECODE0_SOURCEBUFFERLENGTH {
  uint32_t                         u32Register;
  stc_VIDEOSS_FETCHDECODE0_SOURCEBUFFERLENGTH_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_FETCHDECODE0_SOURCEBUFFERLENGTH_t;

/**
  * \brief Shared common control settings for all layers. (VIDEOSS_FETCHDECODE0_CONTROL)
  */
typedef struct stc_VIDEOSS_FETCHDECODE0_CONTROL_field {
  uint32_t                         u3RASTERMODE:3;
  uint32_t                         u2INPUTSELECT:2;
  uint32_t                         u1YUV422UPSAMPLINGMODE:1;
  uint32_t                         :1;
  uint32_t                         u1RAWPIXEL:1;
  uint32_t                         :8;
  uint32_t                         u1CLIPCOLOR:1;
  uint32_t                         :15;
} stc_VIDEOSS_FETCHDECODE0_CONTROL_field_t;

typedef union un_VIDEOSS_FETCHDECODE0_CONTROL {
  uint32_t                         u32Register;
  stc_VIDEOSS_FETCHDECODE0_CONTROL_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_FETCHDECODE0_CONTROL_t;

/**
  * \brief Shadow load trigger. (VIDEOSS_FETCHDECODE0_CONTROLTRIGGER)
  */
typedef struct stc_VIDEOSS_FETCHDECODE0_CONTROLTRIGGER_field {
  uint32_t                         u1SHDTOKGEN:1;
  uint32_t                         :31;
} stc_VIDEOSS_FETCHDECODE0_CONTROLTRIGGER_field_t;

typedef union un_VIDEOSS_FETCHDECODE0_CONTROLTRIGGER {
  uint32_t                         u32Register;
  stc_VIDEOSS_FETCHDECODE0_CONTROLTRIGGER_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_FETCHDECODE0_CONTROLTRIGGER_t;

/**
  * \brief Frame start trigger. (VIDEOSS_FETCHDECODE0_START)
  */
typedef struct stc_VIDEOSS_FETCHDECODE0_START_field {
  uint32_t                         u1START:1;
  uint32_t                         :31;
} stc_VIDEOSS_FETCHDECODE0_START_field_t;

typedef union un_VIDEOSS_FETCHDECODE0_START {
  uint32_t                         u32Register;
  stc_VIDEOSS_FETCHDECODE0_START_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_FETCHDECODE0_START_t;

/**
  * \brief Fetch unit type. (VIDEOSS_FETCHDECODE0_FETCHTYPE)
  */
typedef struct stc_VIDEOSS_FETCHDECODE0_FETCHTYPE_field {
  uint32_t                         u4FETCHTYPE:4;
  uint32_t                         :28;
} stc_VIDEOSS_FETCHDECODE0_FETCHTYPE_field_t;

typedef union un_VIDEOSS_FETCHDECODE0_FETCHTYPE {
  uint32_t                         u32Register;
  stc_VIDEOSS_FETCHDECODE0_FETCHTYPE_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_FETCHDECODE0_FETCHTYPE_t;

/**
  * \brief Status information of the RLAD decoder. (VIDEOSS_FETCHDECODE0_DECODERSTATUS)
  */
typedef struct stc_VIDEOSS_FETCHDECODE0_DECODERSTATUS_field {
  uint32_t                         u1BUFFERTOOSMALL:1;
  uint32_t                         u1BUFFERTOOLARGE:1;
  uint32_t                         :30;
} stc_VIDEOSS_FETCHDECODE0_DECODERSTATUS_field_t;

typedef union un_VIDEOSS_FETCHDECODE0_DECODERSTATUS {
  uint32_t                         u32Register;
  stc_VIDEOSS_FETCHDECODE0_DECODERSTATUS_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_FETCHDECODE0_DECODERSTATUS_t;

/**
  * \brief Ring buffer synchronization for layer 0. (VIDEOSS_FETCHDECODE0_READADDRESS0)
  */
typedef struct stc_VIDEOSS_FETCHDECODE0_READADDRESS0_field {
  uint32_t                         u32READADDRESS0:32;
} stc_VIDEOSS_FETCHDECODE0_READADDRESS0_field_t;

typedef union un_VIDEOSS_FETCHDECODE0_READADDRESS0 {
  uint32_t                         u32Register;
  stc_VIDEOSS_FETCHDECODE0_READADDRESS0_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_FETCHDECODE0_READADDRESS0_t;

/**
  * \brief Burst buffer properties. (VIDEOSS_FETCHDECODE0_BURSTBUFFERPROPERTIES)
  */
typedef struct stc_VIDEOSS_FETCHDECODE0_BURSTBUFFERPROPERTIES_field {
  uint32_t                         u8MANAGEDBURSTBUFFERS:8;
  uint32_t                         u5BURSTLENGTHFORMAXBUFFERS:5;
  uint32_t                         :19;
} stc_VIDEOSS_FETCHDECODE0_BURSTBUFFERPROPERTIES_field_t;

typedef union un_VIDEOSS_FETCHDECODE0_BURSTBUFFERPROPERTIES {
  uint32_t                         u32Register;
  stc_VIDEOSS_FETCHDECODE0_BURSTBUFFERPROPERTIES_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_FETCHDECODE0_BURSTBUFFERPROPERTIES_t;

/**
  * \brief Status information. (VIDEOSS_FETCHDECODE0_STATUS)
  */
typedef struct stc_VIDEOSS_FETCHDECODE0_STATUS_field {
  uint32_t                         u1WRITETIMEOUT:1;
  uint32_t                         :3;
  uint32_t                         u1READTIMEOUT:1;
  uint32_t                         :27;
} stc_VIDEOSS_FETCHDECODE0_STATUS_field_t;

typedef union un_VIDEOSS_FETCHDECODE0_STATUS {
  uint32_t                         u32Register;
  stc_VIDEOSS_FETCHDECODE0_STATUS_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_FETCHDECODE0_STATUS_t;



/**
  * \brief Static control settings. (VIDEOSS_GAMMACOR4_STATICCONTROL)
  */
typedef struct stc_VIDEOSS_GAMMACOR4_STATICCONTROL_field {
  uint32_t                         u1SHDEN:1;
  uint32_t                         u1BLUEWRITEENABLE:1;
  uint32_t                         u1GREENWRITEENABLE:1;
  uint32_t                         u1REDWRITEENABLE:1;
  uint32_t                         :28;
} stc_VIDEOSS_GAMMACOR4_STATICCONTROL_field_t;

typedef union un_VIDEOSS_GAMMACOR4_STATICCONTROL {
  uint32_t                         u32Register;
  stc_VIDEOSS_GAMMACOR4_STATICCONTROL_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_GAMMACOR4_STATICCONTROL_t;

/**
  * \brief Start values for look-up table programming. (VIDEOSS_GAMMACOR4_LUTSTART)
  */
typedef struct stc_VIDEOSS_GAMMACOR4_LUTSTART_field {
  uint32_t                         u10STARTBLUE:10;
  uint32_t                         u10STARTGREEN:10;
  uint32_t                         u10STARTRED:10;
  uint32_t                         :2;
} stc_VIDEOSS_GAMMACOR4_LUTSTART_field_t;

typedef union un_VIDEOSS_GAMMACOR4_LUTSTART {
  uint32_t                         u32Register;
  stc_VIDEOSS_GAMMACOR4_LUTSTART_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_GAMMACOR4_LUTSTART_t;

/**
  * \brief Delta values for look-up table programming. (VIDEOSS_GAMMACOR4_LUTDELTAS)
  */
typedef struct stc_VIDEOSS_GAMMACOR4_LUTDELTAS_field {
  uint32_t                         u10DELTABLUE:10;
  uint32_t                         u10DELTAGREEN:10;
  uint32_t                         u10DELTARED:10;
  uint32_t                         :2;
} stc_VIDEOSS_GAMMACOR4_LUTDELTAS_field_t;

typedef union un_VIDEOSS_GAMMACOR4_LUTDELTAS {
  uint32_t                         u32Register;
  stc_VIDEOSS_GAMMACOR4_LUTDELTAS_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_GAMMACOR4_LUTDELTAS_t;

/**
  * \brief Dynamic control settings. (VIDEOSS_GAMMACOR4_CONTROL)
  */
typedef struct stc_VIDEOSS_GAMMACOR4_CONTROL_field {
  uint32_t                         u1MODE:1;
  uint32_t                         :3;
  uint32_t                         u1ALPHAMASK:1;
  uint32_t                         u1ALPHAINVERT:1;
  uint32_t                         :26;
} stc_VIDEOSS_GAMMACOR4_CONTROL_field_t;

typedef union un_VIDEOSS_GAMMACOR4_CONTROL {
  uint32_t                         u32Register;
  stc_VIDEOSS_GAMMACOR4_CONTROL_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_GAMMACOR4_CONTROL_t;



/**
  * \brief Color Matrix static control register (VIDEOSS_MATRIX4_STATICCONTROL)
  */
typedef struct stc_VIDEOSS_MATRIX4_STATICCONTROL_field {
  uint32_t                         u1SHDEN:1;
  uint32_t                         :31;
} stc_VIDEOSS_MATRIX4_STATICCONTROL_field_t;

typedef union un_VIDEOSS_MATRIX4_STATICCONTROL {
  uint32_t                         u32Register;
  stc_VIDEOSS_MATRIX4_STATICCONTROL_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_MATRIX4_STATICCONTROL_t;

/**
  * \brief Color Matrix control register (VIDEOSS_MATRIX4_CONTROL)
  */
typedef struct stc_VIDEOSS_MATRIX4_CONTROL_field {
  uint32_t                         u2MODE:2;
  uint32_t                         :2;
  uint32_t                         u1ALPHAMASK:1;
  uint32_t                         u1ALPHAINVERT:1;
  uint32_t                         :26;
} stc_VIDEOSS_MATRIX4_CONTROL_field_t;

typedef union un_VIDEOSS_MATRIX4_CONTROL {
  uint32_t                         u32Register;
  stc_VIDEOSS_MATRIX4_CONTROL_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_MATRIX4_CONTROL_t;

/**
  * \brief Matrix values for calculation of the red output value. (VIDEOSS_MATRIX4_RED0)
  */
typedef struct stc_VIDEOSS_MATRIX4_RED0_field {
  uint32_t                         u13A11:13;
  uint32_t                         :3;
  uint32_t                         u13A12:13;
  uint32_t                         :3;
} stc_VIDEOSS_MATRIX4_RED0_field_t;

typedef union un_VIDEOSS_MATRIX4_RED0 {
  uint32_t                         u32Register;
  stc_VIDEOSS_MATRIX4_RED0_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_MATRIX4_RED0_t;

/**
  * \brief Matrix values for calculation of the red output value. (VIDEOSS_MATRIX4_RED1)
  */
typedef struct stc_VIDEOSS_MATRIX4_RED1_field {
  uint32_t                         u13A13:13;
  uint32_t                         :3;
  uint32_t                         u13A14:13;
  uint32_t                         :3;
} stc_VIDEOSS_MATRIX4_RED1_field_t;

typedef union un_VIDEOSS_MATRIX4_RED1 {
  uint32_t                         u32Register;
  stc_VIDEOSS_MATRIX4_RED1_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_MATRIX4_RED1_t;

/**
  * \brief Matrix values for calculation of the green output value. (VIDEOSS_MATRIX4_GREEN0)
  */
typedef struct stc_VIDEOSS_MATRIX4_GREEN0_field {
  uint32_t                         u13A21:13;
  uint32_t                         :3;
  uint32_t                         u13A22:13;
  uint32_t                         :3;
} stc_VIDEOSS_MATRIX4_GREEN0_field_t;

typedef union un_VIDEOSS_MATRIX4_GREEN0 {
  uint32_t                         u32Register;
  stc_VIDEOSS_MATRIX4_GREEN0_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_MATRIX4_GREEN0_t;

/**
  * \brief Matrix values for calculation of the green output value. (VIDEOSS_MATRIX4_GREEN1)
  */
typedef struct stc_VIDEOSS_MATRIX4_GREEN1_field {
  uint32_t                         u13A23:13;
  uint32_t                         :3;
  uint32_t                         u13A24:13;
  uint32_t                         :3;
} stc_VIDEOSS_MATRIX4_GREEN1_field_t;

typedef union un_VIDEOSS_MATRIX4_GREEN1 {
  uint32_t                         u32Register;
  stc_VIDEOSS_MATRIX4_GREEN1_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_MATRIX4_GREEN1_t;

/**
  * \brief Matrix values for calculation of the blue output value. (VIDEOSS_MATRIX4_BLUE0)
  */
typedef struct stc_VIDEOSS_MATRIX4_BLUE0_field {
  uint32_t                         u13A31:13;
  uint32_t                         :3;
  uint32_t                         u13A32:13;
  uint32_t                         :3;
} stc_VIDEOSS_MATRIX4_BLUE0_field_t;

typedef union un_VIDEOSS_MATRIX4_BLUE0 {
  uint32_t                         u32Register;
  stc_VIDEOSS_MATRIX4_BLUE0_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_MATRIX4_BLUE0_t;

/**
  * \brief Matrix values for calculation of the blue output value. (VIDEOSS_MATRIX4_BLUE1)
  */
typedef struct stc_VIDEOSS_MATRIX4_BLUE1_field {
  uint32_t                         u13A33:13;
  uint32_t                         :3;
  uint32_t                         u13A34:13;
  uint32_t                         :3;
} stc_VIDEOSS_MATRIX4_BLUE1_field_t;

typedef union un_VIDEOSS_MATRIX4_BLUE1 {
  uint32_t                         u32Register;
  stc_VIDEOSS_MATRIX4_BLUE1_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_MATRIX4_BLUE1_t;

/**
  * \brief Matrix values for calculation of the alpha output value. (VIDEOSS_MATRIX4_ALPHA0)
  */
typedef struct stc_VIDEOSS_MATRIX4_ALPHA0_field {
  uint32_t                         u13A41:13;
  uint32_t                         :3;
  uint32_t                         u13A42:13;
  uint32_t                         :3;
} stc_VIDEOSS_MATRIX4_ALPHA0_field_t;

typedef union un_VIDEOSS_MATRIX4_ALPHA0 {
  uint32_t                         u32Register;
  stc_VIDEOSS_MATRIX4_ALPHA0_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_MATRIX4_ALPHA0_t;

/**
  * \brief Matrix values for calculation of the alpha output value. (VIDEOSS_MATRIX4_ALPHA1)
  */
typedef struct stc_VIDEOSS_MATRIX4_ALPHA1_field {
  uint32_t                         u13A43:13;
  uint32_t                         :3;
  uint32_t                         u13A44:13;
  uint32_t                         :3;
} stc_VIDEOSS_MATRIX4_ALPHA1_field_t;

typedef union un_VIDEOSS_MATRIX4_ALPHA1 {
  uint32_t                         u32Register;
  stc_VIDEOSS_MATRIX4_ALPHA1_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_MATRIX4_ALPHA1_t;

/**
  * \brief Offset vectors for red and green output. (VIDEOSS_MATRIX4_OFFSETVECTOR0)
  */
typedef struct stc_VIDEOSS_MATRIX4_OFFSETVECTOR0_field {
  uint32_t                         u13C1:13;
  uint32_t                         :3;
  uint32_t                         u13C2:13;
  uint32_t                         :3;
} stc_VIDEOSS_MATRIX4_OFFSETVECTOR0_field_t;

typedef union un_VIDEOSS_MATRIX4_OFFSETVECTOR0 {
  uint32_t                         u32Register;
  stc_VIDEOSS_MATRIX4_OFFSETVECTOR0_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_MATRIX4_OFFSETVECTOR0_t;

/**
  * \brief Offset vectors for blue and alpha output. (VIDEOSS_MATRIX4_OFFSETVECTOR1)
  */
typedef struct stc_VIDEOSS_MATRIX4_OFFSETVECTOR1_field {
  uint32_t                         u13C3:13;
  uint32_t                         :3;
  uint32_t                         u13C4:13;
  uint32_t                         :3;
} stc_VIDEOSS_MATRIX4_OFFSETVECTOR1_field_t;

typedef union un_VIDEOSS_MATRIX4_OFFSETVECTOR1 {
  uint32_t                         u32Register;
  stc_VIDEOSS_MATRIX4_OFFSETVECTOR1_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_MATRIX4_OFFSETVECTOR1_t;



/**
  * \brief Static control settings that must typically be setup once only. (VIDEOSS_GPSCALER4_STATICCONTROL)
  */
typedef struct stc_VIDEOSS_GPSCALER4_STATICCONTROL_field {
  uint32_t                         u1SHDEN:1;
  uint32_t                         :31;
} stc_VIDEOSS_GPSCALER4_STATICCONTROL_field_t;

typedef union un_VIDEOSS_GPSCALER4_STATICCONTROL {
  uint32_t                         u32Register;
  stc_VIDEOSS_GPSCALER4_STATICCONTROL_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_GPSCALER4_STATICCONTROL_t;

/**
  * \brief Global operation control. (VIDEOSS_GPSCALER4_CONTROL)
  */
typedef struct stc_VIDEOSS_GPSCALER4_CONTROL_field {
  uint32_t                         u4MODE:4;
  uint32_t                         :4;
  uint32_t                         u1OPERATION_MODE:1;
  uint32_t                         :23;
} stc_VIDEOSS_GPSCALER4_CONTROL_field_t;

typedef union un_VIDEOSS_GPSCALER4_CONTROL {
  uint32_t                         u32Register;
  stc_VIDEOSS_GPSCALER4_CONTROL_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_GPSCALER4_CONTROL_t;

/**
  * \brief Dimensions of the output frame or fame slice. This values are required for both FIR filter and scaler, since their output may have other dimension than input. The dimension of scaler's output is defined by the scale factor. The dimension of FIR filter's output depends on the tiling at the begin and the end of the slice. (VIDEOSS_GPSCALER4_OUTPUTDIMENSION)
  */
typedef struct stc_VIDEOSS_GPSCALER4_OUTPUTDIMENSION_field {
  uint32_t                         u14OUTPUT_WIDTH:14;
  uint32_t                         :2;
  uint32_t                         u14OUTPUT_HEIGHT:14;
  uint32_t                         :2;
} stc_VIDEOSS_GPSCALER4_OUTPUTDIMENSION_field_t;

typedef union un_VIDEOSS_GPSCALER4_OUTPUTDIMENSION {
  uint32_t                         u32Register;
  stc_VIDEOSS_GPSCALER4_OUTPUTDIMENSION_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_GPSCALER4_OUTPUTDIMENSION_t;

/**
  * \brief Scaler operation control. (VIDEOSS_GPSCALER4_SCALERCONTROL)
  */
typedef struct stc_VIDEOSS_GPSCALER4_SCALERCONTROL_field {
  uint32_t                         u1SCALE_MODE_H:1;
  uint32_t                         :3;
  uint32_t                         u1SCALE_MODE_V:1;
  uint32_t                         :3;
  uint32_t                         u1FILTER_MODE_H:1;
  uint32_t                         :3;
  uint32_t                         u1FILTER_MODE_V:1;
  uint32_t                         :3;
  uint32_t                         u2FIELD_MODE:2;
  uint32_t                         :2;
  uint32_t                         u8ALPHA_VALUE:8;
  uint32_t                         :4;
} stc_VIDEOSS_GPSCALER4_SCALERCONTROL_field_t;

typedef union un_VIDEOSS_GPSCALER4_SCALERCONTROL {
  uint32_t                         u32Register;
  stc_VIDEOSS_GPSCALER4_SCALERCONTROL_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_GPSCALER4_SCALERCONTROL_t;

/**
  * \brief Phase interpolator setup. (VIDEOSS_GPSCALER4_SCALERSETUPH0)
  */
typedef struct stc_VIDEOSS_GPSCALER4_SCALERSETUPH0_field {
  uint32_t                         u20SCALE_FACTOR_H:20;
  uint32_t                         :12;
} stc_VIDEOSS_GPSCALER4_SCALERSETUPH0_field_t;

typedef union un_VIDEOSS_GPSCALER4_SCALERSETUPH0 {
  uint32_t                         u32Register;
  stc_VIDEOSS_GPSCALER4_SCALERSETUPH0_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_GPSCALER4_SCALERSETUPH0_t;

/**
  * \brief Phase interpolator setup. (VIDEOSS_GPSCALER4_SCALERSETUPH1)
  */
typedef struct stc_VIDEOSS_GPSCALER4_SCALERSETUPH1_field {
  uint32_t                         u21PHASE_OFFSET_H:21;
  uint32_t                         :11;
} stc_VIDEOSS_GPSCALER4_SCALERSETUPH1_field_t;

typedef union un_VIDEOSS_GPSCALER4_SCALERSETUPH1 {
  uint32_t                         u32Register;
  stc_VIDEOSS_GPSCALER4_SCALERSETUPH1_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_GPSCALER4_SCALERSETUPH1_t;

/**
  * \brief Phase interpolator setup. (VIDEOSS_GPSCALER4_SCALERSETUPV0)
  */
typedef struct stc_VIDEOSS_GPSCALER4_SCALERSETUPV0_field {
  uint32_t                         u20SCALE_FACTOR_V:20;
  uint32_t                         :12;
} stc_VIDEOSS_GPSCALER4_SCALERSETUPV0_field_t;

typedef union un_VIDEOSS_GPSCALER4_SCALERSETUPV0 {
  uint32_t                         u32Register;
  stc_VIDEOSS_GPSCALER4_SCALERSETUPV0_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_GPSCALER4_SCALERSETUPV0_t;

/**
  * \brief Phase interpolator setup, selected if input and output field polarity is 0. (VIDEOSS_GPSCALER4_SCALERSETUPV1)
  */
typedef struct stc_VIDEOSS_GPSCALER4_SCALERSETUPV1_field {
  uint32_t                         u21PHASE_OFFSET_V:21;
  uint32_t                         :11;
} stc_VIDEOSS_GPSCALER4_SCALERSETUPV1_field_t;

typedef union un_VIDEOSS_GPSCALER4_SCALERSETUPV1 {
  uint32_t                         u32Register;
  stc_VIDEOSS_GPSCALER4_SCALERSETUPV1_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_GPSCALER4_SCALERSETUPV1_t;

/**
  * \brief Phase interpolator setup, selected if input field polarity is 1 and output field polarity is 0. (VIDEOSS_GPSCALER4_SCALERSETUPV2)
  */
typedef struct stc_VIDEOSS_GPSCALER4_SCALERSETUPV2_field {
  uint32_t                         u21PHASE_OFFSET_V1:21;
  uint32_t                         :11;
} stc_VIDEOSS_GPSCALER4_SCALERSETUPV2_field_t;

typedef union un_VIDEOSS_GPSCALER4_SCALERSETUPV2 {
  uint32_t                         u32Register;
  stc_VIDEOSS_GPSCALER4_SCALERSETUPV2_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_GPSCALER4_SCALERSETUPV2_t;

/**
  * \brief Phase interpolator setup, selected if input field polarity is 0 and output field polarity is 1. (VIDEOSS_GPSCALER4_SCALERSETUPV3)
  */
typedef struct stc_VIDEOSS_GPSCALER4_SCALERSETUPV3_field {
  uint32_t                         u21PHASE_OFFSET_V2:21;
  uint32_t                         :11;
} stc_VIDEOSS_GPSCALER4_SCALERSETUPV3_field_t;

typedef union un_VIDEOSS_GPSCALER4_SCALERSETUPV3 {
  uint32_t                         u32Register;
  stc_VIDEOSS_GPSCALER4_SCALERSETUPV3_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_GPSCALER4_SCALERSETUPV3_t;

/**
  * \brief Phase interpolator setup, selected if input and output field polarity is 1. (VIDEOSS_GPSCALER4_SCALERSETUPV4)
  */
typedef struct stc_VIDEOSS_GPSCALER4_SCALERSETUPV4_field {
  uint32_t                         u21PHASE_OFFSET_V3:21;
  uint32_t                         :11;
} stc_VIDEOSS_GPSCALER4_SCALERSETUPV4_field_t;

typedef union un_VIDEOSS_GPSCALER4_SCALERSETUPV4 {
  uint32_t                         u32Register;
  stc_VIDEOSS_GPSCALER4_SCALERSETUPV4_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_GPSCALER4_SCALERSETUPV4_t;

/**
  * \brief Filter operation control. (VIDEOSS_GPSCALER4_FILTERCONTROL)
  */
typedef struct stc_VIDEOSS_GPSCALER4_FILTERCONTROL_field {
  uint32_t                         u3TAPS_H:3;
  uint32_t                         :1;
  uint32_t                         u3TAPS_V:3;
  uint32_t                         :1;
  uint32_t                         u1BYPASS_MODE_R:1;
  uint32_t                         u1BYPASS_MODE_G:1;
  uint32_t                         u1BYPASS_MODE_B:1;
  uint32_t                         u1BYPASS_MODE_A:1;
  uint32_t                         u4EXPONENT_FIR:4;
  uint32_t                         u2TILE_MODE:2;
  uint32_t                         :2;
  uint32_t                         u1TILING_AT_BEGIN_H:1;
  uint32_t                         u1TILING_AT_BEGIN_V:1;
  uint32_t                         :2;
  uint32_t                         u8TILE_COLOR_ALPHA:8;
} stc_VIDEOSS_GPSCALER4_FILTERCONTROL_field_t;

typedef union un_VIDEOSS_GPSCALER4_FILTERCONTROL {
  uint32_t                         u32Register;
  stc_VIDEOSS_GPSCALER4_FILTERCONTROL_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_GPSCALER4_FILTERCONTROL_t;

/**
  * \brief Color for outside of the slice. (VIDEOSS_GPSCALER4_TILECOLORRGB)
  */
typedef struct stc_VIDEOSS_GPSCALER4_TILECOLORRGB_field {
  uint32_t                         u10TILE_COLOR_RED:10;
  uint32_t                         u10TILE_COLOR_GREEN:10;
  uint32_t                         u10TILE_COLOR_BLUE:10;
  uint32_t                         :2;
} stc_VIDEOSS_GPSCALER4_TILECOLORRGB_field_t;

typedef union un_VIDEOSS_GPSCALER4_TILECOLORRGB {
  uint32_t                         u32Register;
  stc_VIDEOSS_GPSCALER4_TILECOLORRGB_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_GPSCALER4_TILECOLORRGB_t;

/**
  * \brief Horizontal coefficients for filter_mode FIR. (VIDEOSS_GPSCALER4_COEFFICIENTSH0)
  */
typedef struct stc_VIDEOSS_GPSCALER4_COEFFICIENTSH0_field {
  uint32_t                         u8COEFF_H3:8;
  uint32_t                         u8COEFF_H2:8;
  uint32_t                         u8COEFF_H1:8;
  uint32_t                         u8COEFF_H0:8;
} stc_VIDEOSS_GPSCALER4_COEFFICIENTSH0_field_t;

typedef union un_VIDEOSS_GPSCALER4_COEFFICIENTSH0 {
  uint32_t                         u32Register;
  stc_VIDEOSS_GPSCALER4_COEFFICIENTSH0_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_GPSCALER4_COEFFICIENTSH0_t;

/**
  * \brief Horizontal coefficients for filter_mode FIR. (VIDEOSS_GPSCALER4_COEFFICIENTSH1)
  */
typedef struct stc_VIDEOSS_GPSCALER4_COEFFICIENTSH1_field {
  uint32_t                         u8COEFF_H7:8;
  uint32_t                         u8COEFF_H6:8;
  uint32_t                         u8COEFF_H5:8;
  uint32_t                         u8COEFF_H4:8;
} stc_VIDEOSS_GPSCALER4_COEFFICIENTSH1_field_t;

typedef union un_VIDEOSS_GPSCALER4_COEFFICIENTSH1 {
  uint32_t                         u32Register;
  stc_VIDEOSS_GPSCALER4_COEFFICIENTSH1_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_GPSCALER4_COEFFICIENTSH1_t;

/**
  * \brief Horizontal coefficients for filter_mode FIR. (VIDEOSS_GPSCALER4_COEFFICIENTSH2)
  */
typedef struct stc_VIDEOSS_GPSCALER4_COEFFICIENTSH2_field {
  uint32_t                         u8COEFF_H11:8;
  uint32_t                         u8COEFF_H10:8;
  uint32_t                         u8COEFF_H9:8;
  uint32_t                         u8COEFF_H8:8;
} stc_VIDEOSS_GPSCALER4_COEFFICIENTSH2_field_t;

typedef union un_VIDEOSS_GPSCALER4_COEFFICIENTSH2 {
  uint32_t                         u32Register;
  stc_VIDEOSS_GPSCALER4_COEFFICIENTSH2_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_GPSCALER4_COEFFICIENTSH2_t;

/**
  * \brief Horizontal coefficients for filter_mode FIR. (VIDEOSS_GPSCALER4_COEFFICIENTSH3)
  */
typedef struct stc_VIDEOSS_GPSCALER4_COEFFICIENTSH3_field {
  uint32_t                         :8;
  uint32_t                         u8COEFF_H14:8;
  uint32_t                         u8COEFF_H13:8;
  uint32_t                         u8COEFF_H12:8;
} stc_VIDEOSS_GPSCALER4_COEFFICIENTSH3_field_t;

typedef union un_VIDEOSS_GPSCALER4_COEFFICIENTSH3 {
  uint32_t                         u32Register;
  stc_VIDEOSS_GPSCALER4_COEFFICIENTSH3_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_GPSCALER4_COEFFICIENTSH3_t;

/**
  * \brief Vertical coefficients for filter_mode FIR. (VIDEOSS_GPSCALER4_COEFFICIENTSV0)
  */
typedef struct stc_VIDEOSS_GPSCALER4_COEFFICIENTSV0_field {
  uint32_t                         u8COEFF_V3:8;
  uint32_t                         u8COEFF_V2:8;
  uint32_t                         u8COEFF_V1:8;
  uint32_t                         u8COEFF_V0:8;
} stc_VIDEOSS_GPSCALER4_COEFFICIENTSV0_field_t;

typedef union un_VIDEOSS_GPSCALER4_COEFFICIENTSV0 {
  uint32_t                         u32Register;
  stc_VIDEOSS_GPSCALER4_COEFFICIENTSV0_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_GPSCALER4_COEFFICIENTSV0_t;

/**
  * \brief Vertical coefficients for filter_mode FIR. (VIDEOSS_GPSCALER4_COEFFICIENTSV1)
  */
typedef struct stc_VIDEOSS_GPSCALER4_COEFFICIENTSV1_field {
  uint32_t                         u8COEFF_V7:8;
  uint32_t                         u8COEFF_V6:8;
  uint32_t                         u8COEFF_V5:8;
  uint32_t                         u8COEFF_V4:8;
} stc_VIDEOSS_GPSCALER4_COEFFICIENTSV1_field_t;

typedef union un_VIDEOSS_GPSCALER4_COEFFICIENTSV1 {
  uint32_t                         u32Register;
  stc_VIDEOSS_GPSCALER4_COEFFICIENTSV1_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_GPSCALER4_COEFFICIENTSV1_t;

/**
  * \brief Vertical coefficients for filter_mode FIR. (VIDEOSS_GPSCALER4_COEFFICIENTSV2)
  */
typedef struct stc_VIDEOSS_GPSCALER4_COEFFICIENTSV2_field {
  uint32_t                         u8COEFF_V11:8;
  uint32_t                         u8COEFF_V10:8;
  uint32_t                         u8COEFF_V9:8;
  uint32_t                         u8COEFF_V8:8;
} stc_VIDEOSS_GPSCALER4_COEFFICIENTSV2_field_t;

typedef union un_VIDEOSS_GPSCALER4_COEFFICIENTSV2 {
  uint32_t                         u32Register;
  stc_VIDEOSS_GPSCALER4_COEFFICIENTSV2_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_GPSCALER4_COEFFICIENTSV2_t;

/**
  * \brief Vertical coefficients for filter_mode FIR. (VIDEOSS_GPSCALER4_COEFFICIENTSV3)
  */
typedef struct stc_VIDEOSS_GPSCALER4_COEFFICIENTSV3_field {
  uint32_t                         :8;
  uint32_t                         u8COEFF_V14:8;
  uint32_t                         u8COEFF_V13:8;
  uint32_t                         u8COEFF_V12:8;
} stc_VIDEOSS_GPSCALER4_COEFFICIENTSV3_field_t;

typedef union un_VIDEOSS_GPSCALER4_COEFFICIENTSV3 {
  uint32_t                         u32Register;
  stc_VIDEOSS_GPSCALER4_COEFFICIENTSV3_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_GPSCALER4_COEFFICIENTSV3_t;



/**
  * \brief Controls some settings concerning input components and alpha mask. (VIDEOSS_HISTOGRAM4_CONTROL)
  */
typedef struct stc_VIDEOSS_HISTOGRAM4_CONTROL_field {
  uint32_t                         u1CLIP_EN:1;
  uint32_t                         :3;
  uint32_t                         u2COLOR_SPACE_MODE:2;
  uint32_t                         :2;
  uint32_t                         u2LUM_MODE:2;
  uint32_t                         :2;
  uint32_t                         u1ALPHAMASK:1;
  uint32_t                         u1ALPHAINVERT:1;
  uint32_t                         :18;
} stc_VIDEOSS_HISTOGRAM4_CONTROL_field_t;

typedef union un_VIDEOSS_HISTOGRAM4_CONTROL {
  uint32_t                         u32Register;
  stc_VIDEOSS_HISTOGRAM4_CONTROL_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_HISTOGRAM4_CONTROL_t;

/**
  * \brief Configures the histogram bins. (VIDEOSS_HISTOGRAM4_BINPROPERTIES)
  */
typedef struct stc_VIDEOSS_HISTOGRAM4_BINPROPERTIES_field {
  uint32_t                         u3BINNUM_WIDTH:3;
  uint32_t                         :1;
  uint32_t                         u1CNT_MODE:1;
  uint32_t                         :3;
  uint32_t                         u1BINCNT_RD_MODE:1;
  uint32_t                         :23;
} stc_VIDEOSS_HISTOGRAM4_BINPROPERTIES_field_t;

typedef union un_VIDEOSS_HISTOGRAM4_BINPROPERTIES {
  uint32_t                         u32Register;
  stc_VIDEOSS_HISTOGRAM4_BINPROPERTIES_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_HISTOGRAM4_BINPROPERTIES_t;

/**
  * \brief Bin counter threshold value. (VIDEOSS_HISTOGRAM4_BINCNTTHRESH)
  */
typedef struct stc_VIDEOSS_HISTOGRAM4_BINCNTTHRESH_field {
  uint32_t                         u29BINCNT_THRESH:29;
  uint32_t                         :3;
} stc_VIDEOSS_HISTOGRAM4_BINCNTTHRESH_field_t;

typedef union un_VIDEOSS_HISTOGRAM4_BINCNTTHRESH {
  uint32_t                         u32Register;
  stc_VIDEOSS_HISTOGRAM4_BINCNTTHRESH_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_HISTOGRAM4_BINCNTTHRESH_t;

/**
  * \brief Coordinates of upper left corner of clip window. (VIDEOSS_HISTOGRAM4_CLIPWINUPPERLEFT)
  */
typedef struct stc_VIDEOSS_HISTOGRAM4_CLIPWINUPPERLEFT_field {
  uint32_t                         u14CLIP_X:14;
  uint32_t                         :2;
  uint32_t                         u14CLIP_Y:14;
  uint32_t                         :2;
} stc_VIDEOSS_HISTOGRAM4_CLIPWINUPPERLEFT_field_t;

typedef union un_VIDEOSS_HISTOGRAM4_CLIPWINUPPERLEFT {
  uint32_t                         u32Register;
  stc_VIDEOSS_HISTOGRAM4_CLIPWINUPPERLEFT_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_HISTOGRAM4_CLIPWINUPPERLEFT_t;

/**
  * \brief Dimensions of clip window. (VIDEOSS_HISTOGRAM4_CLIPWINSIZE)
  */
typedef struct stc_VIDEOSS_HISTOGRAM4_CLIPWINSIZE_field {
  uint32_t                         u14CLIP_WIDTH:14;
  uint32_t                         :2;
  uint32_t                         u14CLIP_HEIGHT:14;
  uint32_t                         :2;
} stc_VIDEOSS_HISTOGRAM4_CLIPWINSIZE_field_t;

typedef union un_VIDEOSS_HISTOGRAM4_CLIPWINSIZE {
  uint32_t                         u32Register;
  stc_VIDEOSS_HISTOGRAM4_CLIPWINSIZE_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_HISTOGRAM4_CLIPWINSIZE_t;

/**
  * \brief Measurement result status. (VIDEOSS_HISTOGRAM4_RSLTRDY)
  */
typedef struct stc_VIDEOSS_HISTOGRAM4_RSLTRDY_field {
  uint32_t                         u1RSLT_RDY:1;
  uint32_t                         :31;
} stc_VIDEOSS_HISTOGRAM4_RSLTRDY_field_t;

typedef union un_VIDEOSS_HISTOGRAM4_RSLTRDY {
  uint32_t                         u32Register;
  stc_VIDEOSS_HISTOGRAM4_RSLTRDY_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_HISTOGRAM4_RSLTRDY_t;

/**
  * \brief Additional information on the measurement results. (VIDEOSS_HISTOGRAM4_RSLTFRMINF)
  */
typedef struct stc_VIDEOSS_HISTOGRAM4_RSLTFRMINF_field {
  uint32_t                         u8FRM_IDX:8;
  uint32_t                         :8;
  uint32_t                         u1FLD_POLARITY:1;
  uint32_t                         :15;
} stc_VIDEOSS_HISTOGRAM4_RSLTFRMINF_field_t;

typedef union un_VIDEOSS_HISTOGRAM4_RSLTFRMINF {
  uint32_t                         u32Register;
  stc_VIDEOSS_HISTOGRAM4_RSLTFRMINF_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_HISTOGRAM4_RSLTFRMINF_t;

/**
  * \brief Results of frame measurement for component 0. (VIDEOSS_HISTOGRAM4_RSLTCOMP0BINIDX)
  */
typedef struct stc_VIDEOSS_HISTOGRAM4_RSLTCOMP0BINIDX_field {
  uint32_t                         u6COMP0_BINIDX_MAXCNT:6;
  uint32_t                         :10;
  uint32_t                         u6COMP0_BINIDX_NXT:6;
  uint32_t                         :10;
} stc_VIDEOSS_HISTOGRAM4_RSLTCOMP0BINIDX_field_t;

typedef union un_VIDEOSS_HISTOGRAM4_RSLTCOMP0BINIDX {
  uint32_t                         u32Register;
  stc_VIDEOSS_HISTOGRAM4_RSLTCOMP0BINIDX_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_HISTOGRAM4_RSLTCOMP0BINIDX_t;

/**
  * \brief Results of frame measurement for component 1. (VIDEOSS_HISTOGRAM4_RSLTCOMP1BINIDX)
  */
typedef struct stc_VIDEOSS_HISTOGRAM4_RSLTCOMP1BINIDX_field {
  uint32_t                         u6COMP1_BINIDX_MAXCNT:6;
  uint32_t                         :10;
  uint32_t                         u6COMP1_BINIDX_NXT:6;
  uint32_t                         :10;
} stc_VIDEOSS_HISTOGRAM4_RSLTCOMP1BINIDX_field_t;

typedef union un_VIDEOSS_HISTOGRAM4_RSLTCOMP1BINIDX {
  uint32_t                         u32Register;
  stc_VIDEOSS_HISTOGRAM4_RSLTCOMP1BINIDX_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_HISTOGRAM4_RSLTCOMP1BINIDX_t;

/**
  * \brief Results of frame measurement for component 2. (VIDEOSS_HISTOGRAM4_RSLTCOMP2BINIDX)
  */
typedef struct stc_VIDEOSS_HISTOGRAM4_RSLTCOMP2BINIDX_field {
  uint32_t                         u6COMP2_BINIDX_MAXCNT:6;
  uint32_t                         :10;
  uint32_t                         u6COMP2_BINIDX_NXT:6;
  uint32_t                         :10;
} stc_VIDEOSS_HISTOGRAM4_RSLTCOMP2BINIDX_field_t;

typedef union un_VIDEOSS_HISTOGRAM4_RSLTCOMP2BINIDX {
  uint32_t                         u32Register;
  stc_VIDEOSS_HISTOGRAM4_RSLTCOMP2BINIDX_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_HISTOGRAM4_RSLTCOMP2BINIDX_t;

/**
  * \brief Sum of all component 0 values. (VIDEOSS_HISTOGRAM4_RSLTCOMP0SUM)
  */
typedef struct stc_VIDEOSS_HISTOGRAM4_RSLTCOMP0SUM_field {
  uint32_t                         u32COMP0_SUM:32;
} stc_VIDEOSS_HISTOGRAM4_RSLTCOMP0SUM_field_t;

typedef union un_VIDEOSS_HISTOGRAM4_RSLTCOMP0SUM {
  uint32_t                         u32Register;
  stc_VIDEOSS_HISTOGRAM4_RSLTCOMP0SUM_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_HISTOGRAM4_RSLTCOMP0SUM_t;

/**
  * \brief Sum of all component 1 values. (VIDEOSS_HISTOGRAM4_RSLTCOMP1SUM)
  */
typedef struct stc_VIDEOSS_HISTOGRAM4_RSLTCOMP1SUM_field {
  uint32_t                         u32COMP1_SUM:32;
} stc_VIDEOSS_HISTOGRAM4_RSLTCOMP1SUM_field_t;

typedef union un_VIDEOSS_HISTOGRAM4_RSLTCOMP1SUM {
  uint32_t                         u32Register;
  stc_VIDEOSS_HISTOGRAM4_RSLTCOMP1SUM_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_HISTOGRAM4_RSLTCOMP1SUM_t;

/**
  * \brief Sum of all component 2 values. (VIDEOSS_HISTOGRAM4_RSLTCOMP2SUM)
  */
typedef struct stc_VIDEOSS_HISTOGRAM4_RSLTCOMP2SUM_field {
  uint32_t                         u32COMP2_SUM:32;
} stc_VIDEOSS_HISTOGRAM4_RSLTCOMP2SUM_field_t;

typedef union un_VIDEOSS_HISTOGRAM4_RSLTCOMP2SUM {
  uint32_t                         u32Register;
  stc_VIDEOSS_HISTOGRAM4_RSLTCOMP2SUM_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_HISTOGRAM4_RSLTCOMP2SUM_t;

/**
  * \brief Bin counters of component 0 histogram. This register do NOT support debugger access followed by software access (they clear on read) (VIDEOSS_HISTOGRAM4_RSLTCOMP0BINCNT)
  */
typedef struct stc_VIDEOSS_HISTOGRAM4_RSLTCOMP0BINCNT_field {
  uint32_t                         u29COMP0_BINCNT:29;
  uint32_t                         :3;
} stc_VIDEOSS_HISTOGRAM4_RSLTCOMP0BINCNT_field_t;

typedef union un_VIDEOSS_HISTOGRAM4_RSLTCOMP0BINCNT {
  uint32_t                         u32Register;
  stc_VIDEOSS_HISTOGRAM4_RSLTCOMP0BINCNT_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_HISTOGRAM4_RSLTCOMP0BINCNT_t;

/**
  * \brief Bin counters of component 1 histogram. This register do NOT support debugger access followed by software access (they clear on read) (VIDEOSS_HISTOGRAM4_RSLTCOMP1BINCNT)
  */
typedef struct stc_VIDEOSS_HISTOGRAM4_RSLTCOMP1BINCNT_field {
  uint32_t                         u29COMP1_BINCNT:29;
  uint32_t                         :3;
} stc_VIDEOSS_HISTOGRAM4_RSLTCOMP1BINCNT_field_t;

typedef union un_VIDEOSS_HISTOGRAM4_RSLTCOMP1BINCNT {
  uint32_t                         u32Register;
  stc_VIDEOSS_HISTOGRAM4_RSLTCOMP1BINCNT_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_HISTOGRAM4_RSLTCOMP1BINCNT_t;

/**
  * \brief Bin counters of component 2 histogram. This register do NOT support debugger access followed by software access (they clear on read) (VIDEOSS_HISTOGRAM4_RSLTCOMP2BINCNT)
  */
typedef struct stc_VIDEOSS_HISTOGRAM4_RSLTCOMP2BINCNT_field {
  uint32_t                         u29COMP2_BINCNT:29;
  uint32_t                         :3;
} stc_VIDEOSS_HISTOGRAM4_RSLTCOMP2BINCNT_field_t;

typedef union un_VIDEOSS_HISTOGRAM4_RSLTCOMP2BINCNT {
  uint32_t                         u32Register;
  stc_VIDEOSS_HISTOGRAM4_RSLTCOMP2BINCNT_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_HISTOGRAM4_RSLTCOMP2BINCNT_t;

/**
  * \brief Triggers for loading shadow registers and starting measurement with next input frame. (VIDEOSS_HISTOGRAM4_FRMSTRTTRIG)
  */
typedef struct stc_VIDEOSS_HISTOGRAM4_FRMSTRTTRIG_field {
  uint32_t                         u1MSRMNT_STRT_TRIG:1;
  uint32_t                         :31;
} stc_VIDEOSS_HISTOGRAM4_FRMSTRTTRIG_field_t;

typedef union un_VIDEOSS_HISTOGRAM4_FRMSTRTTRIG {
  uint32_t                         u32Register;
  stc_VIDEOSS_HISTOGRAM4_FRMSTRTTRIG_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_HISTOGRAM4_FRMSTRTTRIG_t;



/**
  * \brief Static control settings. (VIDEOSS_LAYERBLEND1_STATICCONTROL)
  */
typedef struct stc_VIDEOSS_LAYERBLEND1_STATICCONTROL_field {
  uint32_t                         u1SHDEN:1;
  uint32_t                         u2SHDLDSEL:2;
  uint32_t                         u2SHDTOKSEL:2;
  uint32_t                         :27;
} stc_VIDEOSS_LAYERBLEND1_STATICCONTROL_field_t;

typedef union un_VIDEOSS_LAYERBLEND1_STATICCONTROL {
  uint32_t                         u32Register;
  stc_VIDEOSS_LAYERBLEND1_STATICCONTROL_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_LAYERBLEND1_STATICCONTROL_t;

/**
  * \brief Common control settings. (VIDEOSS_LAYERBLEND1_CONTROL)
  */
typedef struct stc_VIDEOSS_LAYERBLEND1_CONTROL_field {
  uint32_t                         u1MODE:1;
  uint32_t                         :1;
  uint32_t                         u1ALPHAMASKENABLE:1;
  uint32_t                         :1;
  uint32_t                         u3ALPHAMASKMODE:3;
  uint32_t                         :1;
  uint32_t                         u1SECLOWPASSEN:1;
  uint32_t                         u1SECREPLICATEEN:1;
  uint32_t                         u4SECEVENROWEVENCOLDIS:4;
  uint32_t                         u4SECEVENROWODDCOLDIS:4;
  uint32_t                         u4SECODDROWEVENCOLDIS:4;
  uint32_t                         u4SECODDROWODDCOLDIS:4;
  uint32_t                         :6;
} stc_VIDEOSS_LAYERBLEND1_CONTROL_field_t;

typedef union un_VIDEOSS_LAYERBLEND1_CONTROL {
  uint32_t                         u32Register;
  stc_VIDEOSS_LAYERBLEND1_CONTROL_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_LAYERBLEND1_CONTROL_t;

/**
  * \brief Options for blend operations (VIDEOSS_LAYERBLEND1_BLENDCONTROL)
  */
typedef struct stc_VIDEOSS_LAYERBLEND1_BLENDCONTROL_field {
  uint32_t                         u3PRIM_C_BLD_FUNC:3;
  uint32_t                         :1;
  uint32_t                         u3SEC_C_BLD_FUNC:3;
  uint32_t                         :1;
  uint32_t                         u3PRIM_A_BLD_FUNC:3;
  uint32_t                         :1;
  uint32_t                         u3SEC_A_BLD_FUNC:3;
  uint32_t                         :1;
  uint32_t                         u8BLENDALPHA:8;
  uint32_t                         :8;
} stc_VIDEOSS_LAYERBLEND1_BLENDCONTROL_field_t;

typedef union un_VIDEOSS_LAYERBLEND1_BLENDCONTROL {
  uint32_t                         u32Register;
  stc_VIDEOSS_LAYERBLEND1_BLENDCONTROL_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_LAYERBLEND1_BLENDCONTROL_t;

/**
  * \brief Position of secondary (overlay) input frame (VIDEOSS_LAYERBLEND1_POSITION)
  */
typedef struct stc_VIDEOSS_LAYERBLEND1_POSITION_field {
  uint32_t                         u16XPOS:16;
  uint32_t                         u16YPOS:16;
} stc_VIDEOSS_LAYERBLEND1_POSITION_field_t;

typedef union un_VIDEOSS_LAYERBLEND1_POSITION {
  uint32_t                         u32Register;
  stc_VIDEOSS_LAYERBLEND1_POSITION_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_LAYERBLEND1_POSITION_t;



/**
  * \brief Static control settings. (VIDEOSS_LAYERBLEND2_STATICCONTROL)
  */
typedef struct stc_VIDEOSS_LAYERBLEND2_STATICCONTROL_field {
  uint32_t                         u1SHDEN:1;
  uint32_t                         u2SHDLDSEL:2;
  uint32_t                         u2SHDTOKSEL:2;
  uint32_t                         :27;
} stc_VIDEOSS_LAYERBLEND2_STATICCONTROL_field_t;

typedef union un_VIDEOSS_LAYERBLEND2_STATICCONTROL {
  uint32_t                         u32Register;
  stc_VIDEOSS_LAYERBLEND2_STATICCONTROL_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_LAYERBLEND2_STATICCONTROL_t;

/**
  * \brief Common control settings. (VIDEOSS_LAYERBLEND2_CONTROL)
  */
typedef struct stc_VIDEOSS_LAYERBLEND2_CONTROL_field {
  uint32_t                         u1MODE:1;
  uint32_t                         :1;
  uint32_t                         u1ALPHAMASKENABLE:1;
  uint32_t                         :1;
  uint32_t                         u3ALPHAMASKMODE:3;
  uint32_t                         :1;
  uint32_t                         u1SECLOWPASSEN:1;
  uint32_t                         u1SECREPLICATEEN:1;
  uint32_t                         u4SECEVENROWEVENCOLDIS:4;
  uint32_t                         u4SECEVENROWODDCOLDIS:4;
  uint32_t                         u4SECODDROWEVENCOLDIS:4;
  uint32_t                         u4SECODDROWODDCOLDIS:4;
  uint32_t                         :6;
} stc_VIDEOSS_LAYERBLEND2_CONTROL_field_t;

typedef union un_VIDEOSS_LAYERBLEND2_CONTROL {
  uint32_t                         u32Register;
  stc_VIDEOSS_LAYERBLEND2_CONTROL_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_LAYERBLEND2_CONTROL_t;

/**
  * \brief Options for blend operations (VIDEOSS_LAYERBLEND2_BLENDCONTROL)
  */
typedef struct stc_VIDEOSS_LAYERBLEND2_BLENDCONTROL_field {
  uint32_t                         u3PRIM_C_BLD_FUNC:3;
  uint32_t                         :1;
  uint32_t                         u3SEC_C_BLD_FUNC:3;
  uint32_t                         :1;
  uint32_t                         u3PRIM_A_BLD_FUNC:3;
  uint32_t                         :1;
  uint32_t                         u3SEC_A_BLD_FUNC:3;
  uint32_t                         :1;
  uint32_t                         u8BLENDALPHA:8;
  uint32_t                         :8;
} stc_VIDEOSS_LAYERBLEND2_BLENDCONTROL_field_t;

typedef union un_VIDEOSS_LAYERBLEND2_BLENDCONTROL {
  uint32_t                         u32Register;
  stc_VIDEOSS_LAYERBLEND2_BLENDCONTROL_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_LAYERBLEND2_BLENDCONTROL_t;

/**
  * \brief Position of secondary (overlay) input frame (VIDEOSS_LAYERBLEND2_POSITION)
  */
typedef struct stc_VIDEOSS_LAYERBLEND2_POSITION_field {
  uint32_t                         u16XPOS:16;
  uint32_t                         u16YPOS:16;
} stc_VIDEOSS_LAYERBLEND2_POSITION_field_t;

typedef union un_VIDEOSS_LAYERBLEND2_POSITION {
  uint32_t                         u32Register;
  stc_VIDEOSS_LAYERBLEND2_POSITION_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_LAYERBLEND2_POSITION_t;



/**
  * \brief Static control settings. (VIDEOSS_LAYERBLEND3_STATICCONTROL)
  */
typedef struct stc_VIDEOSS_LAYERBLEND3_STATICCONTROL_field {
  uint32_t                         u1SHDEN:1;
  uint32_t                         u2SHDLDSEL:2;
  uint32_t                         u2SHDTOKSEL:2;
  uint32_t                         :27;
} stc_VIDEOSS_LAYERBLEND3_STATICCONTROL_field_t;

typedef union un_VIDEOSS_LAYERBLEND3_STATICCONTROL {
  uint32_t                         u32Register;
  stc_VIDEOSS_LAYERBLEND3_STATICCONTROL_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_LAYERBLEND3_STATICCONTROL_t;

/**
  * \brief Common control settings. (VIDEOSS_LAYERBLEND3_CONTROL)
  */
typedef struct stc_VIDEOSS_LAYERBLEND3_CONTROL_field {
  uint32_t                         u1MODE:1;
  uint32_t                         :1;
  uint32_t                         u1ALPHAMASKENABLE:1;
  uint32_t                         :1;
  uint32_t                         u3ALPHAMASKMODE:3;
  uint32_t                         :1;
  uint32_t                         u1SECLOWPASSEN:1;
  uint32_t                         u1SECREPLICATEEN:1;
  uint32_t                         u4SECEVENROWEVENCOLDIS:4;
  uint32_t                         u4SECEVENROWODDCOLDIS:4;
  uint32_t                         u4SECODDROWEVENCOLDIS:4;
  uint32_t                         u4SECODDROWODDCOLDIS:4;
  uint32_t                         :6;
} stc_VIDEOSS_LAYERBLEND3_CONTROL_field_t;

typedef union un_VIDEOSS_LAYERBLEND3_CONTROL {
  uint32_t                         u32Register;
  stc_VIDEOSS_LAYERBLEND3_CONTROL_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_LAYERBLEND3_CONTROL_t;

/**
  * \brief Options for blend operations (VIDEOSS_LAYERBLEND3_BLENDCONTROL)
  */
typedef struct stc_VIDEOSS_LAYERBLEND3_BLENDCONTROL_field {
  uint32_t                         u3PRIM_C_BLD_FUNC:3;
  uint32_t                         :1;
  uint32_t                         u3SEC_C_BLD_FUNC:3;
  uint32_t                         :1;
  uint32_t                         u3PRIM_A_BLD_FUNC:3;
  uint32_t                         :1;
  uint32_t                         u3SEC_A_BLD_FUNC:3;
  uint32_t                         :1;
  uint32_t                         u8BLENDALPHA:8;
  uint32_t                         :8;
} stc_VIDEOSS_LAYERBLEND3_BLENDCONTROL_field_t;

typedef union un_VIDEOSS_LAYERBLEND3_BLENDCONTROL {
  uint32_t                         u32Register;
  stc_VIDEOSS_LAYERBLEND3_BLENDCONTROL_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_LAYERBLEND3_BLENDCONTROL_t;

/**
  * \brief Position of secondary (overlay) input frame (VIDEOSS_LAYERBLEND3_POSITION)
  */
typedef struct stc_VIDEOSS_LAYERBLEND3_POSITION_field {
  uint32_t                         u16XPOS:16;
  uint32_t                         u16YPOS:16;
} stc_VIDEOSS_LAYERBLEND3_POSITION_field_t;

typedef union un_VIDEOSS_LAYERBLEND3_POSITION {
  uint32_t                         u32Register;
  stc_VIDEOSS_LAYERBLEND3_POSITION_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_LAYERBLEND3_POSITION_t;



/**
  * \brief Static control settings. (VIDEOSS_LAYERBLEND4_STATICCONTROL)
  */
typedef struct stc_VIDEOSS_LAYERBLEND4_STATICCONTROL_field {
  uint32_t                         u1SHDEN:1;
  uint32_t                         u2SHDLDSEL:2;
  uint32_t                         u2SHDTOKSEL:2;
  uint32_t                         :27;
} stc_VIDEOSS_LAYERBLEND4_STATICCONTROL_field_t;

typedef union un_VIDEOSS_LAYERBLEND4_STATICCONTROL {
  uint32_t                         u32Register;
  stc_VIDEOSS_LAYERBLEND4_STATICCONTROL_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_LAYERBLEND4_STATICCONTROL_t;

/**
  * \brief Common control settings. (VIDEOSS_LAYERBLEND4_CONTROL)
  */
typedef struct stc_VIDEOSS_LAYERBLEND4_CONTROL_field {
  uint32_t                         u1MODE:1;
  uint32_t                         :1;
  uint32_t                         u1ALPHAMASKENABLE:1;
  uint32_t                         :1;
  uint32_t                         u3ALPHAMASKMODE:3;
  uint32_t                         :1;
  uint32_t                         u1SECLOWPASSEN:1;
  uint32_t                         u1SECREPLICATEEN:1;
  uint32_t                         u4SECEVENROWEVENCOLDIS:4;
  uint32_t                         u4SECEVENROWODDCOLDIS:4;
  uint32_t                         u4SECODDROWEVENCOLDIS:4;
  uint32_t                         u4SECODDROWODDCOLDIS:4;
  uint32_t                         :6;
} stc_VIDEOSS_LAYERBLEND4_CONTROL_field_t;

typedef union un_VIDEOSS_LAYERBLEND4_CONTROL {
  uint32_t                         u32Register;
  stc_VIDEOSS_LAYERBLEND4_CONTROL_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_LAYERBLEND4_CONTROL_t;

/**
  * \brief Options for blend operations (VIDEOSS_LAYERBLEND4_BLENDCONTROL)
  */
typedef struct stc_VIDEOSS_LAYERBLEND4_BLENDCONTROL_field {
  uint32_t                         u3PRIM_C_BLD_FUNC:3;
  uint32_t                         :1;
  uint32_t                         u3SEC_C_BLD_FUNC:3;
  uint32_t                         :1;
  uint32_t                         u3PRIM_A_BLD_FUNC:3;
  uint32_t                         :1;
  uint32_t                         u3SEC_A_BLD_FUNC:3;
  uint32_t                         :1;
  uint32_t                         u8BLENDALPHA:8;
  uint32_t                         :8;
} stc_VIDEOSS_LAYERBLEND4_BLENDCONTROL_field_t;

typedef union un_VIDEOSS_LAYERBLEND4_BLENDCONTROL {
  uint32_t                         u32Register;
  stc_VIDEOSS_LAYERBLEND4_BLENDCONTROL_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_LAYERBLEND4_BLENDCONTROL_t;

/**
  * \brief Position of secondary (overlay) input frame (VIDEOSS_LAYERBLEND4_POSITION)
  */
typedef struct stc_VIDEOSS_LAYERBLEND4_POSITION_field {
  uint32_t                         u16XPOS:16;
  uint32_t                         u16YPOS:16;
} stc_VIDEOSS_LAYERBLEND4_POSITION_field_t;

typedef union un_VIDEOSS_LAYERBLEND4_POSITION {
  uint32_t                         u32Register;
  stc_VIDEOSS_LAYERBLEND4_POSITION_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_LAYERBLEND4_POSITION_t;



/**
  * \brief Static control settings. (VIDEOSS_LAYERBLEND5_STATICCONTROL)
  */
typedef struct stc_VIDEOSS_LAYERBLEND5_STATICCONTROL_field {
  uint32_t                         u1SHDEN:1;
  uint32_t                         u2SHDLDSEL:2;
  uint32_t                         u2SHDTOKSEL:2;
  uint32_t                         :27;
} stc_VIDEOSS_LAYERBLEND5_STATICCONTROL_field_t;

typedef union un_VIDEOSS_LAYERBLEND5_STATICCONTROL {
  uint32_t                         u32Register;
  stc_VIDEOSS_LAYERBLEND5_STATICCONTROL_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_LAYERBLEND5_STATICCONTROL_t;

/**
  * \brief Common control settings. (VIDEOSS_LAYERBLEND5_CONTROL)
  */
typedef struct stc_VIDEOSS_LAYERBLEND5_CONTROL_field {
  uint32_t                         u1MODE:1;
  uint32_t                         :1;
  uint32_t                         u1ALPHAMASKENABLE:1;
  uint32_t                         :1;
  uint32_t                         u3ALPHAMASKMODE:3;
  uint32_t                         :1;
  uint32_t                         u1SECLOWPASSEN:1;
  uint32_t                         u1SECREPLICATEEN:1;
  uint32_t                         u4SECEVENROWEVENCOLDIS:4;
  uint32_t                         u4SECEVENROWODDCOLDIS:4;
  uint32_t                         u4SECODDROWEVENCOLDIS:4;
  uint32_t                         u4SECODDROWODDCOLDIS:4;
  uint32_t                         :6;
} stc_VIDEOSS_LAYERBLEND5_CONTROL_field_t;

typedef union un_VIDEOSS_LAYERBLEND5_CONTROL {
  uint32_t                         u32Register;
  stc_VIDEOSS_LAYERBLEND5_CONTROL_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_LAYERBLEND5_CONTROL_t;

/**
  * \brief Options for blend operations (VIDEOSS_LAYERBLEND5_BLENDCONTROL)
  */
typedef struct stc_VIDEOSS_LAYERBLEND5_BLENDCONTROL_field {
  uint32_t                         u3PRIM_C_BLD_FUNC:3;
  uint32_t                         :1;
  uint32_t                         u3SEC_C_BLD_FUNC:3;
  uint32_t                         :1;
  uint32_t                         u3PRIM_A_BLD_FUNC:3;
  uint32_t                         :1;
  uint32_t                         u3SEC_A_BLD_FUNC:3;
  uint32_t                         :1;
  uint32_t                         u8BLENDALPHA:8;
  uint32_t                         :8;
} stc_VIDEOSS_LAYERBLEND5_BLENDCONTROL_field_t;

typedef union un_VIDEOSS_LAYERBLEND5_BLENDCONTROL {
  uint32_t                         u32Register;
  stc_VIDEOSS_LAYERBLEND5_BLENDCONTROL_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_LAYERBLEND5_BLENDCONTROL_t;

/**
  * \brief Position of secondary (overlay) input frame (VIDEOSS_LAYERBLEND5_POSITION)
  */
typedef struct stc_VIDEOSS_LAYERBLEND5_POSITION_field {
  uint32_t                         u16XPOS:16;
  uint32_t                         u16YPOS:16;
} stc_VIDEOSS_LAYERBLEND5_POSITION_field_t;

typedef union un_VIDEOSS_LAYERBLEND5_POSITION {
  uint32_t                         u32Register;
  stc_VIDEOSS_LAYERBLEND5_POSITION_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_LAYERBLEND5_POSITION_t;



/**
  * \brief ExtSrc static control register (VIDEOSS_EXTSRC8_STATICCONTROL)
  */
typedef struct stc_VIDEOSS_EXTSRC8_STATICCONTROL_field {
  uint32_t                         u1SHDEN:1;
  uint32_t                         :7;
  uint32_t                         u1STARTSEL:1;
  uint32_t                         :23;
} stc_VIDEOSS_EXTSRC8_STATICCONTROL_field_t;

typedef union un_VIDEOSS_EXTSRC8_STATICCONTROL {
  uint32_t                         u32Register;
  stc_VIDEOSS_EXTSRC8_STATICCONTROL_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_EXTSRC8_STATICCONTROL_t;

/**
  * \brief Clip window offset, to generate a clipping of the frame. It has to be within the input frame. (VIDEOSS_EXTSRC8_CLIPWINDOWOFFSET)
  */
typedef struct stc_VIDEOSS_EXTSRC8_CLIPWINDOWOFFSET_field {
  uint32_t                         u14CLIPWINDOWXOFFSET:14;
  uint32_t                         :2;
  uint32_t                         u14CLIPWINDOWYOFFSET:14;
  uint32_t                         :2;
} stc_VIDEOSS_EXTSRC8_CLIPWINDOWOFFSET_field_t;

typedef union un_VIDEOSS_EXTSRC8_CLIPWINDOWOFFSET {
  uint32_t                         u32Register;
  stc_VIDEOSS_EXTSRC8_CLIPWINDOWOFFSET_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_EXTSRC8_CLIPWINDOWOFFSET_t;

/**
  * \brief Define the clip window dimension. If the clip window feature is enabled this dimension is used for the new frame dimension. Note that the clip window has to be smaller or equal to the original frame dimensions. The new frame has to be within the active area of the original frame. (VIDEOSS_EXTSRC8_CLIPWINDOWDIMENSION)
  */
typedef struct stc_VIDEOSS_EXTSRC8_CLIPWINDOWDIMENSION_field {
  uint32_t                         u14CLIPWINDOWWIDTH:14;
  uint32_t                         :2;
  uint32_t                         u14CLIPWINDOWHEIGHT:14;
  uint32_t                         :2;
} stc_VIDEOSS_EXTSRC8_CLIPWINDOWDIMENSION_field_t;

typedef union un_VIDEOSS_EXTSRC8_CLIPWINDOWDIMENSION {
  uint32_t                         u32Register;
  stc_VIDEOSS_EXTSRC8_CLIPWINDOWDIMENSION_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_EXTSRC8_CLIPWINDOWDIMENSION_t;

/**
  * \brief Color component size of raw input data. Please note that the width must be equal or lower than the output width. (VIDEOSS_EXTSRC8_COLORCOMPONENTBITS)
  */
typedef struct stc_VIDEOSS_EXTSRC8_COLORCOMPONENTBITS_field {
  uint32_t                         u4COMPONENTBITSALPHA:4;
  uint32_t                         :4;
  uint32_t                         u4COMPONENTBITSBLUE:4;
  uint32_t                         :4;
  uint32_t                         u4COMPONENTBITSGREEN:4;
  uint32_t                         :4;
  uint32_t                         u4COMPONENTBITSRED:4;
  uint32_t                         :3;
  uint32_t                         u1ITUFORMAT:1;
} stc_VIDEOSS_EXTSRC8_COLORCOMPONENTBITS_field_t;

typedef union un_VIDEOSS_EXTSRC8_COLORCOMPONENTBITS {
  uint32_t                         u32Register;
  stc_VIDEOSS_EXTSRC8_COLORCOMPONENTBITS_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_EXTSRC8_COLORCOMPONENTBITS_t;

/**
  * \brief Color component offset of raw input data. (VIDEOSS_EXTSRC8_COLORCOMPONENTSHIFT)
  */
typedef struct stc_VIDEOSS_EXTSRC8_COLORCOMPONENTSHIFT_field {
  uint32_t                         u6COMPONENTSHIFTALPHA:6;
  uint32_t                         :2;
  uint32_t                         u6COMPONENTSHIFTBLUE:6;
  uint32_t                         :2;
  uint32_t                         u6COMPONENTSHIFTGREEN:6;
  uint32_t                         :2;
  uint32_t                         u6COMPONENTSHIFTRED:6;
  uint32_t                         :2;
} stc_VIDEOSS_EXTSRC8_COLORCOMPONENTSHIFT_field_t;

typedef union un_VIDEOSS_EXTSRC8_COLORCOMPONENTSHIFT {
  uint32_t                         u32Register;
  stc_VIDEOSS_EXTSRC8_COLORCOMPONENTSHIFT_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_EXTSRC8_COLORCOMPONENTSHIFT_t;

/**
  * \brief Constant color register (VIDEOSS_EXTSRC8_CONSTANTCOLOR)
  */
typedef struct stc_VIDEOSS_EXTSRC8_CONSTANTCOLOR_field {
  uint32_t                         u8CONSTANTALPHA:8;
  uint32_t                         u8CONSTANTBLUE:8;
  uint32_t                         u8CONSTANTGREEN:8;
  uint32_t                         u8CONSTANTRED:8;
} stc_VIDEOSS_EXTSRC8_CONSTANTCOLOR_field_t;

typedef union un_VIDEOSS_EXTSRC8_CONSTANTCOLOR {
  uint32_t                         u32Register;
  stc_VIDEOSS_EXTSRC8_CONSTANTCOLOR_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_EXTSRC8_CONSTANTCOLOR_t;

/**
  * \brief Common control settings. (VIDEOSS_EXTSRC8_CONTROL)
  */
typedef struct stc_VIDEOSS_EXTSRC8_CONTROL_field {
  uint32_t                         u1CLIPWINDOWENABLE:1;
  uint32_t                         :3;
  uint32_t                         u1RASTERMODE:1;
  uint32_t                         u1YUV422UPSAMPLINGMODE:1;
  uint32_t                         u2YUVCONVERSIONMODE:2;
  uint32_t                         u1RGBALPHASRCENABLE:1;
  uint32_t                         u1RGBALPHACONSTENABLE:1;
  uint32_t                         u1RGBALPHATRANSENABLE:1;
  uint32_t                         u1PREMULCONSTRGB:1;
  uint32_t                         u1ALPHASRCENABLE:1;
  uint32_t                         u1ALPHACONSTENABLE:1;
  uint32_t                         u1ALPHATRANSENABLE:1;
  uint32_t                         :1;
  uint32_t                         u1GAMMAREMOVEENABLE:1;
  uint32_t                         :15;
} stc_VIDEOSS_EXTSRC8_CONTROL_field_t;

typedef union un_VIDEOSS_EXTSRC8_CONTROL {
  uint32_t                         u32Register;
  stc_VIDEOSS_EXTSRC8_CONTROL_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_EXTSRC8_CONTROL_t;

/**
  * \brief ExtSrc unit trigger token generation (VIDEOSS_EXTSRC8_CONTROLTRIGGER)
  */
typedef struct stc_VIDEOSS_EXTSRC8_CONTROLTRIGGER_field {
  uint32_t                         u1SHDTOKGEN:1;
  uint32_t                         :31;
} stc_VIDEOSS_EXTSRC8_CONTROLTRIGGER_field_t;

typedef union un_VIDEOSS_EXTSRC8_CONTROLTRIGGER {
  uint32_t                         u32Register;
  stc_VIDEOSS_EXTSRC8_CONTROLTRIGGER_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_EXTSRC8_CONTROLTRIGGER_t;

/**
  * \brief ExtSrc unit start register (VIDEOSS_EXTSRC8_START)
  */
typedef struct stc_VIDEOSS_EXTSRC8_START_field {
  uint32_t                         u1START:1;
  uint32_t                         :31;
} stc_VIDEOSS_EXTSRC8_START_field_t;

typedef union un_VIDEOSS_EXTSRC8_START {
  uint32_t                         u32Register;
  stc_VIDEOSS_EXTSRC8_START_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_EXTSRC8_START_t;



/**
  * \brief Display engine control register. (VIDEOSS_DISENGCFG0_CTL)
  */
typedef struct stc_VIDEOSS_DISENGCFG0_CTL_field {
  uint32_t                         u1DSPCLKDIVIDE:1;
  uint32_t                         :31;
} stc_VIDEOSS_DISENGCFG0_CTL_field_t;

typedef union un_VIDEOSS_DISENGCFG0_CTL {
  uint32_t                         u32Register;
  stc_VIDEOSS_DISENGCFG0_CTL_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_DISENGCFG0_CTL_t;

/**
  * \brief Polarity control for TCon input and corresponding top-level output (TCon by-pass port). (VIDEOSS_DISENGCFG0_POLARITYCTRL)
  */
typedef struct stc_VIDEOSS_DISENGCFG0_POLARITYCTRL_field {
  uint32_t                         u1POLHS:1;
  uint32_t                         u1POLVS:1;
  uint32_t                         u1POLEN:1;
  uint32_t                         u1PIXINV:1;
  uint32_t                         :28;
} stc_VIDEOSS_DISENGCFG0_POLARITYCTRL_field_t;

typedef union un_VIDEOSS_DISENGCFG0_POLARITYCTRL {
  uint32_t                         u32Register;
  stc_VIDEOSS_DISENGCFG0_POLARITYCTRL_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_DISENGCFG0_POLARITYCTRL_t;

/**
  * \brief Tap selection for Signature. (VIDEOSS_DISENGCFG0_SIGSELECT)
  */
typedef struct stc_VIDEOSS_DISENGCFG0_SIGSELECT_field {
  uint32_t                         u2SIG_SELECT:2;
  uint32_t                         :30;
} stc_VIDEOSS_DISENGCFG0_SIGSELECT_field_t;

typedef union un_VIDEOSS_DISENGCFG0_SIGSELECT {
  uint32_t                         u32Register;
  stc_VIDEOSS_DISENGCFG0_SIGSELECT_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_DISENGCFG0_SIGSELECT_t;

/**
  * \brief Tap selection for Frame Dump. (VIDEOSS_DISENGCFG0_DUMPSELECT)
  */
typedef struct stc_VIDEOSS_DISENGCFG0_DUMPSELECT_field {
  uint32_t                         :8;
  uint32_t                         u2DUMP_SELECT:2;
  uint32_t                         :22;
} stc_VIDEOSS_DISENGCFG0_DUMPSELECT_field_t;

typedef union un_VIDEOSS_DISENGCFG0_DUMPSELECT {
  uint32_t                         u32Register;
  stc_VIDEOSS_DISENGCFG0_DUMPSELECT_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_DISENGCFG0_DUMPSELECT_t;



/**
  * \brief Global configuration shared by all evaluation windows. (VIDEOSS_SIG0_STATICCONTROL)
  */
typedef struct stc_VIDEOSS_SIG0_STATICCONTROL_field {
  uint32_t                         u1SHDEN:1;
  uint32_t                         :3;
  uint32_t                         u1SHDLDSEL:1;
  uint32_t                         :11;
  uint32_t                         u8ERRTHRES:8;
  uint32_t                         u8ERRTHRESRESET:8;
} stc_VIDEOSS_SIG0_STATICCONTROL_field_t;

typedef union un_VIDEOSS_SIG0_STATICCONTROL {
  uint32_t                         u32Register;
  stc_VIDEOSS_SIG0_STATICCONTROL_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_SIG0_STATICCONTROL_t;

/**
  * \brief Overlay color for evaluation windows in panic mode. (VIDEOSS_SIG0_PANICCOLOR)
  */
typedef struct stc_VIDEOSS_SIG0_PANICCOLOR_field {
  uint32_t                         :7;
  uint32_t                         u1PANICALPHA:1;
  uint32_t                         u8PANICBLUE:8;
  uint32_t                         u8PANICGREEN:8;
  uint32_t                         u8PANICRED:8;
} stc_VIDEOSS_SIG0_PANICCOLOR_field_t;

typedef union un_VIDEOSS_SIG0_PANICCOLOR {
  uint32_t                         u32Register;
  stc_VIDEOSS_SIG0_PANICCOLOR_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_SIG0_PANICCOLOR_t;

/**
  * \brief Control settings for evaluation window 0. (VIDEOSS_SIG0_EVALCONTROL0)
  */
typedef struct stc_VIDEOSS_SIG0_EVALCONTROL0_field {
  uint32_t                         u1ENEVALWIN0:1;
  uint32_t                         u1ENCRC0:1;
  uint32_t                         :6;
  uint32_t                         u1ALPHAMASK0:1;
  uint32_t                         u1ALPHAINV0:1;
  uint32_t                         :6;
  uint32_t                         u1ENLOCALPANIC0:1;
  uint32_t                         u1ENGLOBALPANIC0:1;
  uint32_t                         :14;
} stc_VIDEOSS_SIG0_EVALCONTROL0_field_t;

typedef union un_VIDEOSS_SIG0_EVALCONTROL0 {
  uint32_t                         u32Register;
  stc_VIDEOSS_SIG0_EVALCONTROL0_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_SIG0_EVALCONTROL0_t;

/**
  * \brief Upper left corner of evaluation window 0. (VIDEOSS_SIG0_EVALUPPERLEFT0)
  */
typedef struct stc_VIDEOSS_SIG0_EVALUPPERLEFT0_field {
  uint32_t                         u14XEVALUPPERLEFT0:14;
  uint32_t                         :2;
  uint32_t                         u14YEVALUPPERLEFT0:14;
  uint32_t                         :2;
} stc_VIDEOSS_SIG0_EVALUPPERLEFT0_field_t;

typedef union un_VIDEOSS_SIG0_EVALUPPERLEFT0 {
  uint32_t                         u32Register;
  stc_VIDEOSS_SIG0_EVALUPPERLEFT0_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_SIG0_EVALUPPERLEFT0_t;

/**
  * \brief Lower right corner of evaluation window 0. (VIDEOSS_SIG0_EVALLOWERRIGHT0)
  */
typedef struct stc_VIDEOSS_SIG0_EVALLOWERRIGHT0_field {
  uint32_t                         u14XEVALLOWERRIGHT0:14;
  uint32_t                         :2;
  uint32_t                         u14YEVALLOWERRIGHT0:14;
  uint32_t                         :2;
} stc_VIDEOSS_SIG0_EVALLOWERRIGHT0_field_t;

typedef union un_VIDEOSS_SIG0_EVALLOWERRIGHT0 {
  uint32_t                         u32Register;
  stc_VIDEOSS_SIG0_EVALLOWERRIGHT0_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_SIG0_EVALLOWERRIGHT0_t;

/**
  * \brief Reference signature of red channel for evaluation window 0. (VIDEOSS_SIG0_SIGCRCREDREF0)
  */
typedef struct stc_VIDEOSS_SIG0_SIGCRCREDREF0_field {
  uint32_t                         u32SIGCRCREDREF0:32;
} stc_VIDEOSS_SIG0_SIGCRCREDREF0_field_t;

typedef union un_VIDEOSS_SIG0_SIGCRCREDREF0 {
  uint32_t                         u32Register;
  stc_VIDEOSS_SIG0_SIGCRCREDREF0_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_SIG0_SIGCRCREDREF0_t;

/**
  * \brief Reference signature of green channel for evaluation window 0. (VIDEOSS_SIG0_SIGCRCGREENREF0)
  */
typedef struct stc_VIDEOSS_SIG0_SIGCRCGREENREF0_field {
  uint32_t                         u32SIGCRCGREENREF0:32;
} stc_VIDEOSS_SIG0_SIGCRCGREENREF0_field_t;

typedef union un_VIDEOSS_SIG0_SIGCRCGREENREF0 {
  uint32_t                         u32Register;
  stc_VIDEOSS_SIG0_SIGCRCGREENREF0_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_SIG0_SIGCRCGREENREF0_t;

/**
  * \brief Reference signature of blue channel for evaluation window 0. (VIDEOSS_SIG0_SIGCRCBLUEREF0)
  */
typedef struct stc_VIDEOSS_SIG0_SIGCRCBLUEREF0_field {
  uint32_t                         u32SIGCRCBLUEREF0:32;
} stc_VIDEOSS_SIG0_SIGCRCBLUEREF0_field_t;

typedef union un_VIDEOSS_SIG0_SIGCRCBLUEREF0 {
  uint32_t                         u32Register;
  stc_VIDEOSS_SIG0_SIGCRCBLUEREF0_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_SIG0_SIGCRCBLUEREF0_t;

/**
  * \brief Measured signature of red channel for evaluation window 0. (VIDEOSS_SIG0_SIGCRCRED0)
  */
typedef struct stc_VIDEOSS_SIG0_SIGCRCRED0_field {
  uint32_t                         u32SIGCRCRED0:32;
} stc_VIDEOSS_SIG0_SIGCRCRED0_field_t;

typedef union un_VIDEOSS_SIG0_SIGCRCRED0 {
  uint32_t                         u32Register;
  stc_VIDEOSS_SIG0_SIGCRCRED0_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_SIG0_SIGCRCRED0_t;

/**
  * \brief Measured signature of green channel for evaluation window 0. (VIDEOSS_SIG0_SIGCRCGREEN0)
  */
typedef struct stc_VIDEOSS_SIG0_SIGCRCGREEN0_field {
  uint32_t                         u32SIGCRCGREEN0:32;
} stc_VIDEOSS_SIG0_SIGCRCGREEN0_field_t;

typedef union un_VIDEOSS_SIG0_SIGCRCGREEN0 {
  uint32_t                         u32Register;
  stc_VIDEOSS_SIG0_SIGCRCGREEN0_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_SIG0_SIGCRCGREEN0_t;

/**
  * \brief Measured signature of blue channel for evaluation window 0. (VIDEOSS_SIG0_SIGCRCBLUE0)
  */
typedef struct stc_VIDEOSS_SIG0_SIGCRCBLUE0_field {
  uint32_t                         u32SIGCRCBLUE0:32;
} stc_VIDEOSS_SIG0_SIGCRCBLUE0_field_t;

typedef union un_VIDEOSS_SIG0_SIGCRCBLUE0 {
  uint32_t                         u32Register;
  stc_VIDEOSS_SIG0_SIGCRCBLUE0_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_SIG0_SIGCRCBLUE0_t;

/**
  * \brief Control settings for evaluation window 1. (VIDEOSS_SIG0_EVALCONTROL1)
  */
typedef struct stc_VIDEOSS_SIG0_EVALCONTROL1_field {
  uint32_t                         u1ENEVALWIN1:1;
  uint32_t                         u1ENCRC1:1;
  uint32_t                         :6;
  uint32_t                         u1ALPHAMASK1:1;
  uint32_t                         u1ALPHAINV1:1;
  uint32_t                         :6;
  uint32_t                         u1ENLOCALPANIC1:1;
  uint32_t                         u1ENGLOBALPANIC1:1;
  uint32_t                         :14;
} stc_VIDEOSS_SIG0_EVALCONTROL1_field_t;

typedef union un_VIDEOSS_SIG0_EVALCONTROL1 {
  uint32_t                         u32Register;
  stc_VIDEOSS_SIG0_EVALCONTROL1_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_SIG0_EVALCONTROL1_t;

/**
  * \brief Upper left corner of evaluation window 1. (VIDEOSS_SIG0_EVALUPPERLEFT1)
  */
typedef struct stc_VIDEOSS_SIG0_EVALUPPERLEFT1_field {
  uint32_t                         u14XEVALUPPERLEFT1:14;
  uint32_t                         :2;
  uint32_t                         u14YEVALUPPERLEFT1:14;
  uint32_t                         :2;
} stc_VIDEOSS_SIG0_EVALUPPERLEFT1_field_t;

typedef union un_VIDEOSS_SIG0_EVALUPPERLEFT1 {
  uint32_t                         u32Register;
  stc_VIDEOSS_SIG0_EVALUPPERLEFT1_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_SIG0_EVALUPPERLEFT1_t;

/**
  * \brief Lower right corner of evaluation window 1. (VIDEOSS_SIG0_EVALLOWERRIGHT1)
  */
typedef struct stc_VIDEOSS_SIG0_EVALLOWERRIGHT1_field {
  uint32_t                         u14XEVALLOWERRIGHT1:14;
  uint32_t                         :2;
  uint32_t                         u14YEVALLOWERRIGHT1:14;
  uint32_t                         :2;
} stc_VIDEOSS_SIG0_EVALLOWERRIGHT1_field_t;

typedef union un_VIDEOSS_SIG0_EVALLOWERRIGHT1 {
  uint32_t                         u32Register;
  stc_VIDEOSS_SIG0_EVALLOWERRIGHT1_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_SIG0_EVALLOWERRIGHT1_t;

/**
  * \brief Reference signature of red channel for evaluation window 1. (VIDEOSS_SIG0_SIGCRCREDREF1)
  */
typedef struct stc_VIDEOSS_SIG0_SIGCRCREDREF1_field {
  uint32_t                         u32SIGCRCREDREF1:32;
} stc_VIDEOSS_SIG0_SIGCRCREDREF1_field_t;

typedef union un_VIDEOSS_SIG0_SIGCRCREDREF1 {
  uint32_t                         u32Register;
  stc_VIDEOSS_SIG0_SIGCRCREDREF1_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_SIG0_SIGCRCREDREF1_t;

/**
  * \brief Reference signature of green channel for evaluation window 1. (VIDEOSS_SIG0_SIGCRCGREENREF1)
  */
typedef struct stc_VIDEOSS_SIG0_SIGCRCGREENREF1_field {
  uint32_t                         u32SIGCRCGREENREF1:32;
} stc_VIDEOSS_SIG0_SIGCRCGREENREF1_field_t;

typedef union un_VIDEOSS_SIG0_SIGCRCGREENREF1 {
  uint32_t                         u32Register;
  stc_VIDEOSS_SIG0_SIGCRCGREENREF1_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_SIG0_SIGCRCGREENREF1_t;

/**
  * \brief Reference signature of blue channel for evaluation window 1. (VIDEOSS_SIG0_SIGCRCBLUEREF1)
  */
typedef struct stc_VIDEOSS_SIG0_SIGCRCBLUEREF1_field {
  uint32_t                         u32SIGCRCBLUEREF1:32;
} stc_VIDEOSS_SIG0_SIGCRCBLUEREF1_field_t;

typedef union un_VIDEOSS_SIG0_SIGCRCBLUEREF1 {
  uint32_t                         u32Register;
  stc_VIDEOSS_SIG0_SIGCRCBLUEREF1_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_SIG0_SIGCRCBLUEREF1_t;

/**
  * \brief Measured signature of red channel for evaluation window 1. (VIDEOSS_SIG0_SIGCRCRED1)
  */
typedef struct stc_VIDEOSS_SIG0_SIGCRCRED1_field {
  uint32_t                         u32SIGCRCRED1:32;
} stc_VIDEOSS_SIG0_SIGCRCRED1_field_t;

typedef union un_VIDEOSS_SIG0_SIGCRCRED1 {
  uint32_t                         u32Register;
  stc_VIDEOSS_SIG0_SIGCRCRED1_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_SIG0_SIGCRCRED1_t;

/**
  * \brief Measured signature of green channel for evaluation window 1. (VIDEOSS_SIG0_SIGCRCGREEN1)
  */
typedef struct stc_VIDEOSS_SIG0_SIGCRCGREEN1_field {
  uint32_t                         u32SIGCRCGREEN1:32;
} stc_VIDEOSS_SIG0_SIGCRCGREEN1_field_t;

typedef union un_VIDEOSS_SIG0_SIGCRCGREEN1 {
  uint32_t                         u32Register;
  stc_VIDEOSS_SIG0_SIGCRCGREEN1_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_SIG0_SIGCRCGREEN1_t;

/**
  * \brief Measured signature of blue channel for evaluation window 1. (VIDEOSS_SIG0_SIGCRCBLUE1)
  */
typedef struct stc_VIDEOSS_SIG0_SIGCRCBLUE1_field {
  uint32_t                         u32SIGCRCBLUE1:32;
} stc_VIDEOSS_SIG0_SIGCRCBLUE1_field_t;

typedef union un_VIDEOSS_SIG0_SIGCRCBLUE1 {
  uint32_t                         u32Register;
  stc_VIDEOSS_SIG0_SIGCRCBLUE1_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_SIG0_SIGCRCBLUE1_t;

/**
  * \brief Control settings for evaluation window 2. (VIDEOSS_SIG0_EVALCONTROL2)
  */
typedef struct stc_VIDEOSS_SIG0_EVALCONTROL2_field {
  uint32_t                         u1ENEVALWIN2:1;
  uint32_t                         u1ENCRC2:1;
  uint32_t                         :6;
  uint32_t                         u1ALPHAMASK2:1;
  uint32_t                         u1ALPHAINV2:1;
  uint32_t                         :6;
  uint32_t                         u1ENLOCALPANIC2:1;
  uint32_t                         u1ENGLOBALPANIC2:1;
  uint32_t                         :14;
} stc_VIDEOSS_SIG0_EVALCONTROL2_field_t;

typedef union un_VIDEOSS_SIG0_EVALCONTROL2 {
  uint32_t                         u32Register;
  stc_VIDEOSS_SIG0_EVALCONTROL2_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_SIG0_EVALCONTROL2_t;

/**
  * \brief Upper left corner of evaluation window 2. (VIDEOSS_SIG0_EVALUPPERLEFT2)
  */
typedef struct stc_VIDEOSS_SIG0_EVALUPPERLEFT2_field {
  uint32_t                         u14XEVALUPPERLEFT2:14;
  uint32_t                         :2;
  uint32_t                         u14YEVALUPPERLEFT2:14;
  uint32_t                         :2;
} stc_VIDEOSS_SIG0_EVALUPPERLEFT2_field_t;

typedef union un_VIDEOSS_SIG0_EVALUPPERLEFT2 {
  uint32_t                         u32Register;
  stc_VIDEOSS_SIG0_EVALUPPERLEFT2_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_SIG0_EVALUPPERLEFT2_t;

/**
  * \brief Lower right corner of evaluation window 2. (VIDEOSS_SIG0_EVALLOWERRIGHT2)
  */
typedef struct stc_VIDEOSS_SIG0_EVALLOWERRIGHT2_field {
  uint32_t                         u14XEVALLOWERRIGHT2:14;
  uint32_t                         :2;
  uint32_t                         u14YEVALLOWERRIGHT2:14;
  uint32_t                         :2;
} stc_VIDEOSS_SIG0_EVALLOWERRIGHT2_field_t;

typedef union un_VIDEOSS_SIG0_EVALLOWERRIGHT2 {
  uint32_t                         u32Register;
  stc_VIDEOSS_SIG0_EVALLOWERRIGHT2_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_SIG0_EVALLOWERRIGHT2_t;

/**
  * \brief Reference signature of red channel for evaluation window 2. (VIDEOSS_SIG0_SIGCRCREDREF2)
  */
typedef struct stc_VIDEOSS_SIG0_SIGCRCREDREF2_field {
  uint32_t                         u32SIGCRCREDREF2:32;
} stc_VIDEOSS_SIG0_SIGCRCREDREF2_field_t;

typedef union un_VIDEOSS_SIG0_SIGCRCREDREF2 {
  uint32_t                         u32Register;
  stc_VIDEOSS_SIG0_SIGCRCREDREF2_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_SIG0_SIGCRCREDREF2_t;

/**
  * \brief Reference signature of green channel for evaluation window 2. (VIDEOSS_SIG0_SIGCRCGREENREF2)
  */
typedef struct stc_VIDEOSS_SIG0_SIGCRCGREENREF2_field {
  uint32_t                         u32SIGCRCGREENREF2:32;
} stc_VIDEOSS_SIG0_SIGCRCGREENREF2_field_t;

typedef union un_VIDEOSS_SIG0_SIGCRCGREENREF2 {
  uint32_t                         u32Register;
  stc_VIDEOSS_SIG0_SIGCRCGREENREF2_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_SIG0_SIGCRCGREENREF2_t;

/**
  * \brief Reference signature of blue channel for evaluation window 2. (VIDEOSS_SIG0_SIGCRCBLUEREF2)
  */
typedef struct stc_VIDEOSS_SIG0_SIGCRCBLUEREF2_field {
  uint32_t                         u32SIGCRCBLUEREF2:32;
} stc_VIDEOSS_SIG0_SIGCRCBLUEREF2_field_t;

typedef union un_VIDEOSS_SIG0_SIGCRCBLUEREF2 {
  uint32_t                         u32Register;
  stc_VIDEOSS_SIG0_SIGCRCBLUEREF2_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_SIG0_SIGCRCBLUEREF2_t;

/**
  * \brief Measured signature of red channel for evaluation window 2. (VIDEOSS_SIG0_SIGCRCRED2)
  */
typedef struct stc_VIDEOSS_SIG0_SIGCRCRED2_field {
  uint32_t                         u32SIGCRCRED2:32;
} stc_VIDEOSS_SIG0_SIGCRCRED2_field_t;

typedef union un_VIDEOSS_SIG0_SIGCRCRED2 {
  uint32_t                         u32Register;
  stc_VIDEOSS_SIG0_SIGCRCRED2_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_SIG0_SIGCRCRED2_t;

/**
  * \brief Measured signature of green channel for evaluation window 2. (VIDEOSS_SIG0_SIGCRCGREEN2)
  */
typedef struct stc_VIDEOSS_SIG0_SIGCRCGREEN2_field {
  uint32_t                         u32SIGCRCGREEN2:32;
} stc_VIDEOSS_SIG0_SIGCRCGREEN2_field_t;

typedef union un_VIDEOSS_SIG0_SIGCRCGREEN2 {
  uint32_t                         u32Register;
  stc_VIDEOSS_SIG0_SIGCRCGREEN2_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_SIG0_SIGCRCGREEN2_t;

/**
  * \brief Measured signature of blue channel for evaluation window 2. (VIDEOSS_SIG0_SIGCRCBLUE2)
  */
typedef struct stc_VIDEOSS_SIG0_SIGCRCBLUE2_field {
  uint32_t                         u32SIGCRCBLUE2:32;
} stc_VIDEOSS_SIG0_SIGCRCBLUE2_field_t;

typedef union un_VIDEOSS_SIG0_SIGCRCBLUE2 {
  uint32_t                         u32Register;
  stc_VIDEOSS_SIG0_SIGCRCBLUE2_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_SIG0_SIGCRCBLUE2_t;

/**
  * \brief Control settings for evaluation window 3. (VIDEOSS_SIG0_EVALCONTROL3)
  */
typedef struct stc_VIDEOSS_SIG0_EVALCONTROL3_field {
  uint32_t                         u1ENEVALWIN3:1;
  uint32_t                         u1ENCRC3:1;
  uint32_t                         :6;
  uint32_t                         u1ALPHAMASK3:1;
  uint32_t                         u1ALPHAINV3:1;
  uint32_t                         :6;
  uint32_t                         u1ENLOCALPANIC3:1;
  uint32_t                         u1ENGLOBALPANIC3:1;
  uint32_t                         :14;
} stc_VIDEOSS_SIG0_EVALCONTROL3_field_t;

typedef union un_VIDEOSS_SIG0_EVALCONTROL3 {
  uint32_t                         u32Register;
  stc_VIDEOSS_SIG0_EVALCONTROL3_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_SIG0_EVALCONTROL3_t;

/**
  * \brief Upper left corner of evaluation window 3. (VIDEOSS_SIG0_EVALUPPERLEFT3)
  */
typedef struct stc_VIDEOSS_SIG0_EVALUPPERLEFT3_field {
  uint32_t                         u14XEVALUPPERLEFT3:14;
  uint32_t                         :2;
  uint32_t                         u14YEVALUPPERLEFT3:14;
  uint32_t                         :2;
} stc_VIDEOSS_SIG0_EVALUPPERLEFT3_field_t;

typedef union un_VIDEOSS_SIG0_EVALUPPERLEFT3 {
  uint32_t                         u32Register;
  stc_VIDEOSS_SIG0_EVALUPPERLEFT3_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_SIG0_EVALUPPERLEFT3_t;

/**
  * \brief Lower right corner of evaluation window 3. (VIDEOSS_SIG0_EVALLOWERRIGHT3)
  */
typedef struct stc_VIDEOSS_SIG0_EVALLOWERRIGHT3_field {
  uint32_t                         u14XEVALLOWERRIGHT3:14;
  uint32_t                         :2;
  uint32_t                         u14YEVALLOWERRIGHT3:14;
  uint32_t                         :2;
} stc_VIDEOSS_SIG0_EVALLOWERRIGHT3_field_t;

typedef union un_VIDEOSS_SIG0_EVALLOWERRIGHT3 {
  uint32_t                         u32Register;
  stc_VIDEOSS_SIG0_EVALLOWERRIGHT3_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_SIG0_EVALLOWERRIGHT3_t;

/**
  * \brief Reference signature of red channel for evaluation window 3. (VIDEOSS_SIG0_SIGCRCREDREF3)
  */
typedef struct stc_VIDEOSS_SIG0_SIGCRCREDREF3_field {
  uint32_t                         u32SIGCRCREDREF3:32;
} stc_VIDEOSS_SIG0_SIGCRCREDREF3_field_t;

typedef union un_VIDEOSS_SIG0_SIGCRCREDREF3 {
  uint32_t                         u32Register;
  stc_VIDEOSS_SIG0_SIGCRCREDREF3_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_SIG0_SIGCRCREDREF3_t;

/**
  * \brief Reference signature of green channel for evaluation window 3. (VIDEOSS_SIG0_SIGCRCGREENREF3)
  */
typedef struct stc_VIDEOSS_SIG0_SIGCRCGREENREF3_field {
  uint32_t                         u32SIGCRCGREENREF3:32;
} stc_VIDEOSS_SIG0_SIGCRCGREENREF3_field_t;

typedef union un_VIDEOSS_SIG0_SIGCRCGREENREF3 {
  uint32_t                         u32Register;
  stc_VIDEOSS_SIG0_SIGCRCGREENREF3_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_SIG0_SIGCRCGREENREF3_t;

/**
  * \brief Reference signature of blue channel for evaluation window 3. (VIDEOSS_SIG0_SIGCRCBLUEREF3)
  */
typedef struct stc_VIDEOSS_SIG0_SIGCRCBLUEREF3_field {
  uint32_t                         u32SIGCRCBLUEREF3:32;
} stc_VIDEOSS_SIG0_SIGCRCBLUEREF3_field_t;

typedef union un_VIDEOSS_SIG0_SIGCRCBLUEREF3 {
  uint32_t                         u32Register;
  stc_VIDEOSS_SIG0_SIGCRCBLUEREF3_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_SIG0_SIGCRCBLUEREF3_t;

/**
  * \brief Measured signature of red channel for evaluation window 3. (VIDEOSS_SIG0_SIGCRCRED3)
  */
typedef struct stc_VIDEOSS_SIG0_SIGCRCRED3_field {
  uint32_t                         u32SIGCRCRED3:32;
} stc_VIDEOSS_SIG0_SIGCRCRED3_field_t;

typedef union un_VIDEOSS_SIG0_SIGCRCRED3 {
  uint32_t                         u32Register;
  stc_VIDEOSS_SIG0_SIGCRCRED3_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_SIG0_SIGCRCRED3_t;

/**
  * \brief Measured signature of green channel for evaluation window 3. (VIDEOSS_SIG0_SIGCRCGREEN3)
  */
typedef struct stc_VIDEOSS_SIG0_SIGCRCGREEN3_field {
  uint32_t                         u32SIGCRCGREEN3:32;
} stc_VIDEOSS_SIG0_SIGCRCGREEN3_field_t;

typedef union un_VIDEOSS_SIG0_SIGCRCGREEN3 {
  uint32_t                         u32Register;
  stc_VIDEOSS_SIG0_SIGCRCGREEN3_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_SIG0_SIGCRCGREEN3_t;

/**
  * \brief Measured signature of blue channel for evaluation window 3. (VIDEOSS_SIG0_SIGCRCBLUE3)
  */
typedef struct stc_VIDEOSS_SIG0_SIGCRCBLUE3_field {
  uint32_t                         u32SIGCRCBLUE3:32;
} stc_VIDEOSS_SIG0_SIGCRCBLUE3_field_t;

typedef union un_VIDEOSS_SIG0_SIGCRCBLUE3 {
  uint32_t                         u32Register;
  stc_VIDEOSS_SIG0_SIGCRCBLUE3_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_SIG0_SIGCRCBLUE3_t;

/**
  * \brief Control settings for evaluation window 4. (VIDEOSS_SIG0_EVALCONTROL4)
  */
typedef struct stc_VIDEOSS_SIG0_EVALCONTROL4_field {
  uint32_t                         u1ENEVALWIN4:1;
  uint32_t                         u1ENCRC4:1;
  uint32_t                         :6;
  uint32_t                         u1ALPHAMASK4:1;
  uint32_t                         u1ALPHAINV4:1;
  uint32_t                         :6;
  uint32_t                         u1ENLOCALPANIC4:1;
  uint32_t                         u1ENGLOBALPANIC4:1;
  uint32_t                         :14;
} stc_VIDEOSS_SIG0_EVALCONTROL4_field_t;

typedef union un_VIDEOSS_SIG0_EVALCONTROL4 {
  uint32_t                         u32Register;
  stc_VIDEOSS_SIG0_EVALCONTROL4_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_SIG0_EVALCONTROL4_t;

/**
  * \brief Upper left corner of evaluation window 4. (VIDEOSS_SIG0_EVALUPPERLEFT4)
  */
typedef struct stc_VIDEOSS_SIG0_EVALUPPERLEFT4_field {
  uint32_t                         u14XEVALUPPERLEFT4:14;
  uint32_t                         :2;
  uint32_t                         u14YEVALUPPERLEFT4:14;
  uint32_t                         :2;
} stc_VIDEOSS_SIG0_EVALUPPERLEFT4_field_t;

typedef union un_VIDEOSS_SIG0_EVALUPPERLEFT4 {
  uint32_t                         u32Register;
  stc_VIDEOSS_SIG0_EVALUPPERLEFT4_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_SIG0_EVALUPPERLEFT4_t;

/**
  * \brief Lower right corner of evaluation window 4. (VIDEOSS_SIG0_EVALLOWERRIGHT4)
  */
typedef struct stc_VIDEOSS_SIG0_EVALLOWERRIGHT4_field {
  uint32_t                         u14XEVALLOWERRIGHT4:14;
  uint32_t                         :2;
  uint32_t                         u14YEVALLOWERRIGHT4:14;
  uint32_t                         :2;
} stc_VIDEOSS_SIG0_EVALLOWERRIGHT4_field_t;

typedef union un_VIDEOSS_SIG0_EVALLOWERRIGHT4 {
  uint32_t                         u32Register;
  stc_VIDEOSS_SIG0_EVALLOWERRIGHT4_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_SIG0_EVALLOWERRIGHT4_t;

/**
  * \brief Reference signature of red channel for evaluation window 4. (VIDEOSS_SIG0_SIGCRCREDREF4)
  */
typedef struct stc_VIDEOSS_SIG0_SIGCRCREDREF4_field {
  uint32_t                         u32SIGCRCREDREF4:32;
} stc_VIDEOSS_SIG0_SIGCRCREDREF4_field_t;

typedef union un_VIDEOSS_SIG0_SIGCRCREDREF4 {
  uint32_t                         u32Register;
  stc_VIDEOSS_SIG0_SIGCRCREDREF4_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_SIG0_SIGCRCREDREF4_t;

/**
  * \brief Reference signature of green channel for evaluation window 4. (VIDEOSS_SIG0_SIGCRCGREENREF4)
  */
typedef struct stc_VIDEOSS_SIG0_SIGCRCGREENREF4_field {
  uint32_t                         u32SIGCRCGREENREF4:32;
} stc_VIDEOSS_SIG0_SIGCRCGREENREF4_field_t;

typedef union un_VIDEOSS_SIG0_SIGCRCGREENREF4 {
  uint32_t                         u32Register;
  stc_VIDEOSS_SIG0_SIGCRCGREENREF4_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_SIG0_SIGCRCGREENREF4_t;

/**
  * \brief Reference signature of blue channel for evaluation window 4. (VIDEOSS_SIG0_SIGCRCBLUEREF4)
  */
typedef struct stc_VIDEOSS_SIG0_SIGCRCBLUEREF4_field {
  uint32_t                         u32SIGCRCBLUEREF4:32;
} stc_VIDEOSS_SIG0_SIGCRCBLUEREF4_field_t;

typedef union un_VIDEOSS_SIG0_SIGCRCBLUEREF4 {
  uint32_t                         u32Register;
  stc_VIDEOSS_SIG0_SIGCRCBLUEREF4_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_SIG0_SIGCRCBLUEREF4_t;

/**
  * \brief Measured signature of red channel for evaluation window 4. (VIDEOSS_SIG0_SIGCRCRED4)
  */
typedef struct stc_VIDEOSS_SIG0_SIGCRCRED4_field {
  uint32_t                         u32SIGCRCRED4:32;
} stc_VIDEOSS_SIG0_SIGCRCRED4_field_t;

typedef union un_VIDEOSS_SIG0_SIGCRCRED4 {
  uint32_t                         u32Register;
  stc_VIDEOSS_SIG0_SIGCRCRED4_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_SIG0_SIGCRCRED4_t;

/**
  * \brief Measured signature of green channel for evaluation window 4. (VIDEOSS_SIG0_SIGCRCGREEN4)
  */
typedef struct stc_VIDEOSS_SIG0_SIGCRCGREEN4_field {
  uint32_t                         u32SIGCRCGREEN4:32;
} stc_VIDEOSS_SIG0_SIGCRCGREEN4_field_t;

typedef union un_VIDEOSS_SIG0_SIGCRCGREEN4 {
  uint32_t                         u32Register;
  stc_VIDEOSS_SIG0_SIGCRCGREEN4_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_SIG0_SIGCRCGREEN4_t;

/**
  * \brief Measured signature of blue channel for evaluation window 4. (VIDEOSS_SIG0_SIGCRCBLUE4)
  */
typedef struct stc_VIDEOSS_SIG0_SIGCRCBLUE4_field {
  uint32_t                         u32SIGCRCBLUE4:32;
} stc_VIDEOSS_SIG0_SIGCRCBLUE4_field_t;

typedef union un_VIDEOSS_SIG0_SIGCRCBLUE4 {
  uint32_t                         u32Register;
  stc_VIDEOSS_SIG0_SIGCRCBLUE4_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_SIG0_SIGCRCBLUE4_t;

/**
  * \brief Control settings for evaluation window 5. (VIDEOSS_SIG0_EVALCONTROL5)
  */
typedef struct stc_VIDEOSS_SIG0_EVALCONTROL5_field {
  uint32_t                         u1ENEVALWIN5:1;
  uint32_t                         u1ENCRC5:1;
  uint32_t                         :6;
  uint32_t                         u1ALPHAMASK5:1;
  uint32_t                         u1ALPHAINV5:1;
  uint32_t                         :6;
  uint32_t                         u1ENLOCALPANIC5:1;
  uint32_t                         u1ENGLOBALPANIC5:1;
  uint32_t                         :14;
} stc_VIDEOSS_SIG0_EVALCONTROL5_field_t;

typedef union un_VIDEOSS_SIG0_EVALCONTROL5 {
  uint32_t                         u32Register;
  stc_VIDEOSS_SIG0_EVALCONTROL5_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_SIG0_EVALCONTROL5_t;

/**
  * \brief Upper left corner of evaluation window 5. (VIDEOSS_SIG0_EVALUPPERLEFT5)
  */
typedef struct stc_VIDEOSS_SIG0_EVALUPPERLEFT5_field {
  uint32_t                         u14XEVALUPPERLEFT5:14;
  uint32_t                         :2;
  uint32_t                         u14YEVALUPPERLEFT5:14;
  uint32_t                         :2;
} stc_VIDEOSS_SIG0_EVALUPPERLEFT5_field_t;

typedef union un_VIDEOSS_SIG0_EVALUPPERLEFT5 {
  uint32_t                         u32Register;
  stc_VIDEOSS_SIG0_EVALUPPERLEFT5_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_SIG0_EVALUPPERLEFT5_t;

/**
  * \brief Lower right corner of evaluation window 5. (VIDEOSS_SIG0_EVALLOWERRIGHT5)
  */
typedef struct stc_VIDEOSS_SIG0_EVALLOWERRIGHT5_field {
  uint32_t                         u14XEVALLOWERRIGHT5:14;
  uint32_t                         :2;
  uint32_t                         u14YEVALLOWERRIGHT5:14;
  uint32_t                         :2;
} stc_VIDEOSS_SIG0_EVALLOWERRIGHT5_field_t;

typedef union un_VIDEOSS_SIG0_EVALLOWERRIGHT5 {
  uint32_t                         u32Register;
  stc_VIDEOSS_SIG0_EVALLOWERRIGHT5_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_SIG0_EVALLOWERRIGHT5_t;

/**
  * \brief Reference signature of red channel for evaluation window 5. (VIDEOSS_SIG0_SIGCRCREDREF5)
  */
typedef struct stc_VIDEOSS_SIG0_SIGCRCREDREF5_field {
  uint32_t                         u32SIGCRCREDREF5:32;
} stc_VIDEOSS_SIG0_SIGCRCREDREF5_field_t;

typedef union un_VIDEOSS_SIG0_SIGCRCREDREF5 {
  uint32_t                         u32Register;
  stc_VIDEOSS_SIG0_SIGCRCREDREF5_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_SIG0_SIGCRCREDREF5_t;

/**
  * \brief Reference signature of green channel for evaluation window 5. (VIDEOSS_SIG0_SIGCRCGREENREF5)
  */
typedef struct stc_VIDEOSS_SIG0_SIGCRCGREENREF5_field {
  uint32_t                         u32SIGCRCGREENREF5:32;
} stc_VIDEOSS_SIG0_SIGCRCGREENREF5_field_t;

typedef union un_VIDEOSS_SIG0_SIGCRCGREENREF5 {
  uint32_t                         u32Register;
  stc_VIDEOSS_SIG0_SIGCRCGREENREF5_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_SIG0_SIGCRCGREENREF5_t;

/**
  * \brief Reference signature of blue channel for evaluation window 5. (VIDEOSS_SIG0_SIGCRCBLUEREF5)
  */
typedef struct stc_VIDEOSS_SIG0_SIGCRCBLUEREF5_field {
  uint32_t                         u32SIGCRCBLUEREF5:32;
} stc_VIDEOSS_SIG0_SIGCRCBLUEREF5_field_t;

typedef union un_VIDEOSS_SIG0_SIGCRCBLUEREF5 {
  uint32_t                         u32Register;
  stc_VIDEOSS_SIG0_SIGCRCBLUEREF5_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_SIG0_SIGCRCBLUEREF5_t;

/**
  * \brief Measured signature of red channel for evaluation window 5. (VIDEOSS_SIG0_SIGCRCRED5)
  */
typedef struct stc_VIDEOSS_SIG0_SIGCRCRED5_field {
  uint32_t                         u32SIGCRCRED5:32;
} stc_VIDEOSS_SIG0_SIGCRCRED5_field_t;

typedef union un_VIDEOSS_SIG0_SIGCRCRED5 {
  uint32_t                         u32Register;
  stc_VIDEOSS_SIG0_SIGCRCRED5_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_SIG0_SIGCRCRED5_t;

/**
  * \brief Measured signature of green channel for evaluation window 5. (VIDEOSS_SIG0_SIGCRCGREEN5)
  */
typedef struct stc_VIDEOSS_SIG0_SIGCRCGREEN5_field {
  uint32_t                         u32SIGCRCGREEN5:32;
} stc_VIDEOSS_SIG0_SIGCRCGREEN5_field_t;

typedef union un_VIDEOSS_SIG0_SIGCRCGREEN5 {
  uint32_t                         u32Register;
  stc_VIDEOSS_SIG0_SIGCRCGREEN5_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_SIG0_SIGCRCGREEN5_t;

/**
  * \brief Measured signature of blue channel for evaluation window 5. (VIDEOSS_SIG0_SIGCRCBLUE5)
  */
typedef struct stc_VIDEOSS_SIG0_SIGCRCBLUE5_field {
  uint32_t                         u32SIGCRCBLUE5:32;
} stc_VIDEOSS_SIG0_SIGCRCBLUE5_field_t;

typedef union un_VIDEOSS_SIG0_SIGCRCBLUE5 {
  uint32_t                         u32Register;
  stc_VIDEOSS_SIG0_SIGCRCBLUE5_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_SIG0_SIGCRCBLUE5_t;

/**
  * \brief Control settings for evaluation window 6. (VIDEOSS_SIG0_EVALCONTROL6)
  */
typedef struct stc_VIDEOSS_SIG0_EVALCONTROL6_field {
  uint32_t                         u1ENEVALWIN6:1;
  uint32_t                         u1ENCRC6:1;
  uint32_t                         :6;
  uint32_t                         u1ALPHAMASK6:1;
  uint32_t                         u1ALPHAINV6:1;
  uint32_t                         :6;
  uint32_t                         u1ENLOCALPANIC6:1;
  uint32_t                         u1ENGLOBALPANIC6:1;
  uint32_t                         :14;
} stc_VIDEOSS_SIG0_EVALCONTROL6_field_t;

typedef union un_VIDEOSS_SIG0_EVALCONTROL6 {
  uint32_t                         u32Register;
  stc_VIDEOSS_SIG0_EVALCONTROL6_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_SIG0_EVALCONTROL6_t;

/**
  * \brief Upper left corner of evaluation window 6. (VIDEOSS_SIG0_EVALUPPERLEFT6)
  */
typedef struct stc_VIDEOSS_SIG0_EVALUPPERLEFT6_field {
  uint32_t                         u14XEVALUPPERLEFT6:14;
  uint32_t                         :2;
  uint32_t                         u14YEVALUPPERLEFT6:14;
  uint32_t                         :2;
} stc_VIDEOSS_SIG0_EVALUPPERLEFT6_field_t;

typedef union un_VIDEOSS_SIG0_EVALUPPERLEFT6 {
  uint32_t                         u32Register;
  stc_VIDEOSS_SIG0_EVALUPPERLEFT6_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_SIG0_EVALUPPERLEFT6_t;

/**
  * \brief Lower right corner of evaluation window 6. (VIDEOSS_SIG0_EVALLOWERRIGHT6)
  */
typedef struct stc_VIDEOSS_SIG0_EVALLOWERRIGHT6_field {
  uint32_t                         u14XEVALLOWERRIGHT6:14;
  uint32_t                         :2;
  uint32_t                         u14YEVALLOWERRIGHT6:14;
  uint32_t                         :2;
} stc_VIDEOSS_SIG0_EVALLOWERRIGHT6_field_t;

typedef union un_VIDEOSS_SIG0_EVALLOWERRIGHT6 {
  uint32_t                         u32Register;
  stc_VIDEOSS_SIG0_EVALLOWERRIGHT6_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_SIG0_EVALLOWERRIGHT6_t;

/**
  * \brief Reference signature of red channel for evaluation window 6. (VIDEOSS_SIG0_SIGCRCREDREF6)
  */
typedef struct stc_VIDEOSS_SIG0_SIGCRCREDREF6_field {
  uint32_t                         u32SIGCRCREDREF6:32;
} stc_VIDEOSS_SIG0_SIGCRCREDREF6_field_t;

typedef union un_VIDEOSS_SIG0_SIGCRCREDREF6 {
  uint32_t                         u32Register;
  stc_VIDEOSS_SIG0_SIGCRCREDREF6_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_SIG0_SIGCRCREDREF6_t;

/**
  * \brief Reference signature of green channel for evaluation window 6. (VIDEOSS_SIG0_SIGCRCGREENREF6)
  */
typedef struct stc_VIDEOSS_SIG0_SIGCRCGREENREF6_field {
  uint32_t                         u32SIGCRCGREENREF6:32;
} stc_VIDEOSS_SIG0_SIGCRCGREENREF6_field_t;

typedef union un_VIDEOSS_SIG0_SIGCRCGREENREF6 {
  uint32_t                         u32Register;
  stc_VIDEOSS_SIG0_SIGCRCGREENREF6_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_SIG0_SIGCRCGREENREF6_t;

/**
  * \brief Reference signature of blue channel for evaluation window 6. (VIDEOSS_SIG0_SIGCRCBLUEREF6)
  */
typedef struct stc_VIDEOSS_SIG0_SIGCRCBLUEREF6_field {
  uint32_t                         u32SIGCRCBLUEREF6:32;
} stc_VIDEOSS_SIG0_SIGCRCBLUEREF6_field_t;

typedef union un_VIDEOSS_SIG0_SIGCRCBLUEREF6 {
  uint32_t                         u32Register;
  stc_VIDEOSS_SIG0_SIGCRCBLUEREF6_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_SIG0_SIGCRCBLUEREF6_t;

/**
  * \brief Measured signature of red channel for evaluation window 6. (VIDEOSS_SIG0_SIGCRCRED6)
  */
typedef struct stc_VIDEOSS_SIG0_SIGCRCRED6_field {
  uint32_t                         u32SIGCRCRED6:32;
} stc_VIDEOSS_SIG0_SIGCRCRED6_field_t;

typedef union un_VIDEOSS_SIG0_SIGCRCRED6 {
  uint32_t                         u32Register;
  stc_VIDEOSS_SIG0_SIGCRCRED6_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_SIG0_SIGCRCRED6_t;

/**
  * \brief Measured signature of green channel for evaluation window 6. (VIDEOSS_SIG0_SIGCRCGREEN6)
  */
typedef struct stc_VIDEOSS_SIG0_SIGCRCGREEN6_field {
  uint32_t                         u32SIGCRCGREEN6:32;
} stc_VIDEOSS_SIG0_SIGCRCGREEN6_field_t;

typedef union un_VIDEOSS_SIG0_SIGCRCGREEN6 {
  uint32_t                         u32Register;
  stc_VIDEOSS_SIG0_SIGCRCGREEN6_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_SIG0_SIGCRCGREEN6_t;

/**
  * \brief Measured signature of blue channel for evaluation window 6. (VIDEOSS_SIG0_SIGCRCBLUE6)
  */
typedef struct stc_VIDEOSS_SIG0_SIGCRCBLUE6_field {
  uint32_t                         u32SIGCRCBLUE6:32;
} stc_VIDEOSS_SIG0_SIGCRCBLUE6_field_t;

typedef union un_VIDEOSS_SIG0_SIGCRCBLUE6 {
  uint32_t                         u32Register;
  stc_VIDEOSS_SIG0_SIGCRCBLUE6_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_SIG0_SIGCRCBLUE6_t;

/**
  * \brief Control settings for evaluation window 7. (VIDEOSS_SIG0_EVALCONTROL7)
  */
typedef struct stc_VIDEOSS_SIG0_EVALCONTROL7_field {
  uint32_t                         u1ENEVALWIN7:1;
  uint32_t                         u1ENCRC7:1;
  uint32_t                         :6;
  uint32_t                         u1ALPHAMASK7:1;
  uint32_t                         u1ALPHAINV7:1;
  uint32_t                         :6;
  uint32_t                         u1ENLOCALPANIC7:1;
  uint32_t                         u1ENGLOBALPANIC7:1;
  uint32_t                         :14;
} stc_VIDEOSS_SIG0_EVALCONTROL7_field_t;

typedef union un_VIDEOSS_SIG0_EVALCONTROL7 {
  uint32_t                         u32Register;
  stc_VIDEOSS_SIG0_EVALCONTROL7_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_SIG0_EVALCONTROL7_t;

/**
  * \brief Upper left corner of evaluation window 7. (VIDEOSS_SIG0_EVALUPPERLEFT7)
  */
typedef struct stc_VIDEOSS_SIG0_EVALUPPERLEFT7_field {
  uint32_t                         u14XEVALUPPERLEFT7:14;
  uint32_t                         :2;
  uint32_t                         u14YEVALUPPERLEFT7:14;
  uint32_t                         :2;
} stc_VIDEOSS_SIG0_EVALUPPERLEFT7_field_t;

typedef union un_VIDEOSS_SIG0_EVALUPPERLEFT7 {
  uint32_t                         u32Register;
  stc_VIDEOSS_SIG0_EVALUPPERLEFT7_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_SIG0_EVALUPPERLEFT7_t;

/**
  * \brief Lower right corner of evaluation window 7. (VIDEOSS_SIG0_EVALLOWERRIGHT7)
  */
typedef struct stc_VIDEOSS_SIG0_EVALLOWERRIGHT7_field {
  uint32_t                         u14XEVALLOWERRIGHT7:14;
  uint32_t                         :2;
  uint32_t                         u14YEVALLOWERRIGHT7:14;
  uint32_t                         :2;
} stc_VIDEOSS_SIG0_EVALLOWERRIGHT7_field_t;

typedef union un_VIDEOSS_SIG0_EVALLOWERRIGHT7 {
  uint32_t                         u32Register;
  stc_VIDEOSS_SIG0_EVALLOWERRIGHT7_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_SIG0_EVALLOWERRIGHT7_t;

/**
  * \brief Reference signature of red channel for evaluation window 7. (VIDEOSS_SIG0_SIGCRCREDREF7)
  */
typedef struct stc_VIDEOSS_SIG0_SIGCRCREDREF7_field {
  uint32_t                         u32SIGCRCREDREF7:32;
} stc_VIDEOSS_SIG0_SIGCRCREDREF7_field_t;

typedef union un_VIDEOSS_SIG0_SIGCRCREDREF7 {
  uint32_t                         u32Register;
  stc_VIDEOSS_SIG0_SIGCRCREDREF7_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_SIG0_SIGCRCREDREF7_t;

/**
  * \brief Reference signature of green channel for evaluation window 7. (VIDEOSS_SIG0_SIGCRCGREENREF7)
  */
typedef struct stc_VIDEOSS_SIG0_SIGCRCGREENREF7_field {
  uint32_t                         u32SIGCRCGREENREF7:32;
} stc_VIDEOSS_SIG0_SIGCRCGREENREF7_field_t;

typedef union un_VIDEOSS_SIG0_SIGCRCGREENREF7 {
  uint32_t                         u32Register;
  stc_VIDEOSS_SIG0_SIGCRCGREENREF7_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_SIG0_SIGCRCGREENREF7_t;

/**
  * \brief Reference signature of blue channel for evaluation window 7. (VIDEOSS_SIG0_SIGCRCBLUEREF7)
  */
typedef struct stc_VIDEOSS_SIG0_SIGCRCBLUEREF7_field {
  uint32_t                         u32SIGCRCBLUEREF7:32;
} stc_VIDEOSS_SIG0_SIGCRCBLUEREF7_field_t;

typedef union un_VIDEOSS_SIG0_SIGCRCBLUEREF7 {
  uint32_t                         u32Register;
  stc_VIDEOSS_SIG0_SIGCRCBLUEREF7_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_SIG0_SIGCRCBLUEREF7_t;

/**
  * \brief Measured signature of red channel for evaluation window 7. (VIDEOSS_SIG0_SIGCRCRED7)
  */
typedef struct stc_VIDEOSS_SIG0_SIGCRCRED7_field {
  uint32_t                         u32SIGCRCRED7:32;
} stc_VIDEOSS_SIG0_SIGCRCRED7_field_t;

typedef union un_VIDEOSS_SIG0_SIGCRCRED7 {
  uint32_t                         u32Register;
  stc_VIDEOSS_SIG0_SIGCRCRED7_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_SIG0_SIGCRCRED7_t;

/**
  * \brief Measured signature of green channel for evaluation window 7. (VIDEOSS_SIG0_SIGCRCGREEN7)
  */
typedef struct stc_VIDEOSS_SIG0_SIGCRCGREEN7_field {
  uint32_t                         u32SIGCRCGREEN7:32;
} stc_VIDEOSS_SIG0_SIGCRCGREEN7_field_t;

typedef union un_VIDEOSS_SIG0_SIGCRCGREEN7 {
  uint32_t                         u32Register;
  stc_VIDEOSS_SIG0_SIGCRCGREEN7_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_SIG0_SIGCRCGREEN7_t;

/**
  * \brief Measured signature of blue channel for evaluation window 7. (VIDEOSS_SIG0_SIGCRCBLUE7)
  */
typedef struct stc_VIDEOSS_SIG0_SIGCRCBLUE7_field {
  uint32_t                         u32SIGCRCBLUE7:32;
} stc_VIDEOSS_SIG0_SIGCRCBLUE7_field_t;

typedef union un_VIDEOSS_SIG0_SIGCRCBLUE7 {
  uint32_t                         u32Register;
  stc_VIDEOSS_SIG0_SIGCRCBLUE7_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_SIG0_SIGCRCBLUE7_t;

/**
  * \brief Shadow load control register. (VIDEOSS_SIG0_SHADOWLOAD)
  */
typedef struct stc_VIDEOSS_SIG0_SHADOWLOAD_field {
  uint32_t                         u8SHDLDREQ:8;
  uint32_t                         :24;
} stc_VIDEOSS_SIG0_SHADOWLOAD_field_t;

typedef union un_VIDEOSS_SIG0_SHADOWLOAD {
  uint32_t                         u32Register;
  stc_VIDEOSS_SIG0_SHADOWLOAD_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_SIG0_SHADOWLOAD_t;

/**
  * \brief Signature operation mode control. (VIDEOSS_SIG0_CONTINUOUSMODE)
  */
typedef struct stc_VIDEOSS_SIG0_CONTINUOUSMODE_field {
  uint32_t                         u1ENCONT:1;
  uint32_t                         :31;
} stc_VIDEOSS_SIG0_CONTINUOUSMODE_field_t;

typedef union un_VIDEOSS_SIG0_CONTINUOUSMODE {
  uint32_t                         u32Register;
  stc_VIDEOSS_SIG0_CONTINUOUSMODE_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_SIG0_CONTINUOUSMODE_t;

/**
  * \brief Signature measurement trigger. (VIDEOSS_SIG0_SOFTWAREKICK)
  */
typedef struct stc_VIDEOSS_SIG0_SOFTWAREKICK_field {
  uint32_t                         u1KICK:1;
  uint32_t                         :31;
} stc_VIDEOSS_SIG0_SOFTWAREKICK_field_t;

typedef union un_VIDEOSS_SIG0_SOFTWAREKICK {
  uint32_t                         u32Register;
  stc_VIDEOSS_SIG0_SOFTWAREKICK_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_SIG0_SOFTWAREKICK_t;

/**
  * \brief Module status. (VIDEOSS_SIG0_STATUS)
  */
typedef struct stc_VIDEOSS_SIG0_STATUS_field {
  uint32_t                         u8STSSIGERROR:8;
  uint32_t                         :8;
  uint32_t                         u1STSSIGVALID:1;
  uint32_t                         :3;
  uint32_t                         u1STSSIGIDLE:1;
  uint32_t                         :11;
} stc_VIDEOSS_SIG0_STATUS_field_t;

typedef union un_VIDEOSS_SIG0_STATUS {
  uint32_t                         u32Register;
  stc_VIDEOSS_SIG0_STATUS_field_t  stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_SIG0_STATUS_t;



/**
  * \brief FrameGen Static Control Register (VIDEOSS_FRAMEGEN0_FGSTCTRL)
  */
typedef struct stc_VIDEOSS_FRAMEGEN0_FGSTCTRL_field {
  uint32_t                         u1SHDEN:1;
  uint32_t                         u2FGSYNCMODE:2;
  uint32_t                         :29;
} stc_VIDEOSS_FRAMEGEN0_FGSTCTRL_field_t;

typedef union un_VIDEOSS_FRAMEGEN0_FGSTCTRL {
  uint32_t                         u32Register;
  stc_VIDEOSS_FRAMEGEN0_FGSTCTRL_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_FRAMEGEN0_FGSTCTRL_t;

/**
  * \brief FrameGen Horizontal Timing Config Register 1 (VIDEOSS_FRAMEGEN0_HTCFG1)
  */
typedef struct stc_VIDEOSS_FRAMEGEN0_HTCFG1_field {
  uint32_t                         u14HACT:14;
  uint32_t                         :2;
  uint32_t                         u14HTOTAL:14;
  uint32_t                         :2;
} stc_VIDEOSS_FRAMEGEN0_HTCFG1_field_t;

typedef union un_VIDEOSS_FRAMEGEN0_HTCFG1 {
  uint32_t                         u32Register;
  stc_VIDEOSS_FRAMEGEN0_HTCFG1_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_FRAMEGEN0_HTCFG1_t;

/**
  * \brief FrameGen Horizontal Timing Config Register 2 (VIDEOSS_FRAMEGEN0_HTCFG2)
  */
typedef struct stc_VIDEOSS_FRAMEGEN0_HTCFG2_field {
  uint32_t                         u14HSYNC:14;
  uint32_t                         :2;
  uint32_t                         u14HSBP:14;
  uint32_t                         :1;
  uint32_t                         u1HSEN:1;
} stc_VIDEOSS_FRAMEGEN0_HTCFG2_field_t;

typedef union un_VIDEOSS_FRAMEGEN0_HTCFG2 {
  uint32_t                         u32Register;
  stc_VIDEOSS_FRAMEGEN0_HTCFG2_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_FRAMEGEN0_HTCFG2_t;

/**
  * \brief FrameGen Vertical Timing Config Register 1 (VIDEOSS_FRAMEGEN0_VTCFG1)
  */
typedef struct stc_VIDEOSS_FRAMEGEN0_VTCFG1_field {
  uint32_t                         u14VACT:14;
  uint32_t                         :2;
  uint32_t                         u14VTOTAL:14;
  uint32_t                         :2;
} stc_VIDEOSS_FRAMEGEN0_VTCFG1_field_t;

typedef union un_VIDEOSS_FRAMEGEN0_VTCFG1 {
  uint32_t                         u32Register;
  stc_VIDEOSS_FRAMEGEN0_VTCFG1_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_FRAMEGEN0_VTCFG1_t;

/**
  * \brief FrameGen Vertical Timing Config Register 2 (VIDEOSS_FRAMEGEN0_VTCFG2)
  */
typedef struct stc_VIDEOSS_FRAMEGEN0_VTCFG2_field {
  uint32_t                         u14VSYNC:14;
  uint32_t                         :2;
  uint32_t                         u14VSBP:14;
  uint32_t                         :1;
  uint32_t                         u1VSEN:1;
} stc_VIDEOSS_FRAMEGEN0_VTCFG2_field_t;

typedef union un_VIDEOSS_FRAMEGEN0_VTCFG2 {
  uint32_t                         u32Register;
  stc_VIDEOSS_FRAMEGEN0_VTCFG2_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_FRAMEGEN0_VTCFG2_t;

/**
  * \brief Coordinates of the trigger point for generation of the Int0 interrupt signal (VIDEOSS_FRAMEGEN0_INT0CONFIG)
  */
typedef struct stc_VIDEOSS_FRAMEGEN0_INT0CONFIG_field {
  uint32_t                         u14INT0COL:14;
  uint32_t                         :1;
  uint32_t                         u1INT0HSEN:1;
  uint32_t                         u14INT0ROW:14;
  uint32_t                         :1;
  uint32_t                         u1INT0EN:1;
} stc_VIDEOSS_FRAMEGEN0_INT0CONFIG_field_t;

typedef union un_VIDEOSS_FRAMEGEN0_INT0CONFIG {
  uint32_t                         u32Register;
  stc_VIDEOSS_FRAMEGEN0_INT0CONFIG_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_FRAMEGEN0_INT0CONFIG_t;

/**
  * \brief Coordinates of the trigger point for generation of the Int1 interrupt signal (VIDEOSS_FRAMEGEN0_INT1CONFIG)
  */
typedef struct stc_VIDEOSS_FRAMEGEN0_INT1CONFIG_field {
  uint32_t                         u14INT1COL:14;
  uint32_t                         :1;
  uint32_t                         u1INT1HSEN:1;
  uint32_t                         u14INT1ROW:14;
  uint32_t                         :1;
  uint32_t                         u1INT1EN:1;
} stc_VIDEOSS_FRAMEGEN0_INT1CONFIG_field_t;

typedef union un_VIDEOSS_FRAMEGEN0_INT1CONFIG {
  uint32_t                         u32Register;
  stc_VIDEOSS_FRAMEGEN0_INT1CONFIG_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_FRAMEGEN0_INT1CONFIG_t;

/**
  * \brief Coordinates of the trigger point for generation of the Int2 interrupt signal (VIDEOSS_FRAMEGEN0_INT2CONFIG)
  */
typedef struct stc_VIDEOSS_FRAMEGEN0_INT2CONFIG_field {
  uint32_t                         u14INT2COL:14;
  uint32_t                         :1;
  uint32_t                         u1INT2HSEN:1;
  uint32_t                         u14INT2ROW:14;
  uint32_t                         :1;
  uint32_t                         u1INT2EN:1;
} stc_VIDEOSS_FRAMEGEN0_INT2CONFIG_field_t;

typedef union un_VIDEOSS_FRAMEGEN0_INT2CONFIG {
  uint32_t                         u32Register;
  stc_VIDEOSS_FRAMEGEN0_INT2CONFIG_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_FRAMEGEN0_INT2CONFIG_t;

/**
  * \brief Coordinates of the trigger point for generation of the Int3 interrupt signal (VIDEOSS_FRAMEGEN0_INT3CONFIG)
  */
typedef struct stc_VIDEOSS_FRAMEGEN0_INT3CONFIG_field {
  uint32_t                         u14INT3COL:14;
  uint32_t                         :1;
  uint32_t                         u1INT3HSEN:1;
  uint32_t                         u14INT3ROW:14;
  uint32_t                         :1;
  uint32_t                         u1INT3EN:1;
} stc_VIDEOSS_FRAMEGEN0_INT3CONFIG_field_t;

typedef union un_VIDEOSS_FRAMEGEN0_INT3CONFIG {
  uint32_t                         u32Register;
  stc_VIDEOSS_FRAMEGEN0_INT3CONFIG_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_FRAMEGEN0_INT3CONFIG_t;

/**
  * \brief Coordinates of the trigger point for generation of the primary kick signal (VIDEOSS_FRAMEGEN0_PKICKCONFIG)
  */
typedef struct stc_VIDEOSS_FRAMEGEN0_PKICKCONFIG_field {
  uint32_t                         u14PKICKCOL:14;
  uint32_t                         :1;
  uint32_t                         u1PKICKINT0EN:1;
  uint32_t                         u14PKICKROW:14;
  uint32_t                         :1;
  uint32_t                         u1PKICKEN:1;
} stc_VIDEOSS_FRAMEGEN0_PKICKCONFIG_field_t;

typedef union un_VIDEOSS_FRAMEGEN0_PKICKCONFIG {
  uint32_t                         u32Register;
  stc_VIDEOSS_FRAMEGEN0_PKICKCONFIG_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_FRAMEGEN0_PKICKCONFIG_t;

/**
  * \brief Coordinates of the trigger point for generation of the secondary kick signal (VIDEOSS_FRAMEGEN0_SKICKCONFIG)
  */
typedef struct stc_VIDEOSS_FRAMEGEN0_SKICKCONFIG_field {
  uint32_t                         u14SKICKCOL:14;
  uint32_t                         :1;
  uint32_t                         u1SKICKINT1EN:1;
  uint32_t                         u14SKICKROW:14;
  uint32_t                         u1SKICKTRIG:1;
  uint32_t                         u1SKICKEN:1;
} stc_VIDEOSS_FRAMEGEN0_SKICKCONFIG_field_t;

typedef union un_VIDEOSS_FRAMEGEN0_SKICKCONFIG {
  uint32_t                         u32Register;
  stc_VIDEOSS_FRAMEGEN0_SKICKCONFIG_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_FRAMEGEN0_SKICKCONFIG_t;

/**
  * \brief Configuration register for controlling the behavior of the SecSyncStat field in the FgSecChStat register. (VIDEOSS_FRAMEGEN0_SECSTATCONFIG)
  */
typedef struct stc_VIDEOSS_FRAMEGEN0_SECSTATCONFIG_field {
  uint32_t                         u4LEVGOODFRAMES:4;
  uint32_t                         u4LEVBADFRAMES:4;
  uint32_t                         u4LEVSKEWINRANGE:4;
  uint32_t                         :20;
} stc_VIDEOSS_FRAMEGEN0_SECSTATCONFIG_field_t;

typedef union un_VIDEOSS_FRAMEGEN0_SECSTATCONFIG {
  uint32_t                         u32Register;
  stc_VIDEOSS_FRAMEGEN0_SECSTATCONFIG_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_FRAMEGEN0_SECSTATCONFIG_t;

/**
  * \brief FrameGen Skew Regulation Control Register 1. (VIDEOSS_FRAMEGEN0_FGSRCR1)
  */
typedef struct stc_VIDEOSS_FRAMEGEN0_FGSRCR1_field {
  uint32_t                         u1SREN:1;
  uint32_t                         u2SRMODE:2;
  uint32_t                         u1SRADJ:1;
  uint32_t                         u1SREVEN:1;
  uint32_t                         u1SRFASTSYNC:1;
  uint32_t                         u1SRQALIGN:1;
  uint32_t                         u2SRQVAL:2;
  uint32_t                         :7;
  uint32_t                         u1SRDBGDISP:1;
  uint32_t                         u1SREPOFF:1;
  uint32_t                         :14;
} stc_VIDEOSS_FRAMEGEN0_FGSRCR1_field_t;

typedef union un_VIDEOSS_FRAMEGEN0_FGSRCR1 {
  uint32_t                         u32Register;
  stc_VIDEOSS_FRAMEGEN0_FGSRCR1_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_FRAMEGEN0_FGSRCR1_t;

/**
  * \brief FrameGen Skew Regulation Control Register 2 (VIDEOSS_FRAMEGEN0_FGSRCR2)
  */
typedef struct stc_VIDEOSS_FRAMEGEN0_FGSRCR2_field {
  uint32_t                         u14HTOTALMIN:14;
  uint32_t                         :2;
  uint32_t                         u14HTOTALMAX:14;
  uint32_t                         :2;
} stc_VIDEOSS_FRAMEGEN0_FGSRCR2_field_t;

typedef union un_VIDEOSS_FRAMEGEN0_FGSRCR2 {
  uint32_t                         u32Register;
  stc_VIDEOSS_FRAMEGEN0_FGSRCR2_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_FRAMEGEN0_FGSRCR2_t;

/**
  * \brief FrameGen Skew Regulation Control Register 3 (VIDEOSS_FRAMEGEN0_FGSRCR3)
  */
typedef struct stc_VIDEOSS_FRAMEGEN0_FGSRCR3_field {
  uint32_t                         u14VTOTALMIN:14;
  uint32_t                         :2;
  uint32_t                         u14VTOTALMAX:14;
  uint32_t                         :2;
} stc_VIDEOSS_FRAMEGEN0_FGSRCR3_field_t;

typedef union un_VIDEOSS_FRAMEGEN0_FGSRCR3 {
  uint32_t                         u32Register;
  stc_VIDEOSS_FRAMEGEN0_FGSRCR3_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_FRAMEGEN0_FGSRCR3_t;

/**
  * \brief FrameGen Skew Regulation Control Register 4 (VIDEOSS_FRAMEGEN0_FGSRCR4)
  */
typedef struct stc_VIDEOSS_FRAMEGEN0_FGSRCR4_field {
  uint32_t                         u29TARGETSKEW:29;
  uint32_t                         :3;
} stc_VIDEOSS_FRAMEGEN0_FGSRCR4_field_t;

typedef union un_VIDEOSS_FRAMEGEN0_FGSRCR4 {
  uint32_t                         u32Register;
  stc_VIDEOSS_FRAMEGEN0_FGSRCR4_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_FRAMEGEN0_FGSRCR4_t;

/**
  * \brief FrameGen Skew Regulation Control Register 5 (VIDEOSS_FRAMEGEN0_FGSRCR5)
  */
typedef struct stc_VIDEOSS_FRAMEGEN0_FGSRCR5_field {
  uint32_t                         u29SYNCRANGELOW:29;
  uint32_t                         :3;
} stc_VIDEOSS_FRAMEGEN0_FGSRCR5_field_t;

typedef union un_VIDEOSS_FRAMEGEN0_FGSRCR5 {
  uint32_t                         u32Register;
  stc_VIDEOSS_FRAMEGEN0_FGSRCR5_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_FRAMEGEN0_FGSRCR5_t;

/**
  * \brief FrameGen Skew Regulation Control Register 6 (VIDEOSS_FRAMEGEN0_FGSRCR6)
  */
typedef struct stc_VIDEOSS_FRAMEGEN0_FGSRCR6_field {
  uint32_t                         u29SYNCRANGEHIGH:29;
  uint32_t                         :3;
} stc_VIDEOSS_FRAMEGEN0_FGSRCR6_field_t;

typedef union un_VIDEOSS_FRAMEGEN0_FGSRCR6 {
  uint32_t                         u32Register;
  stc_VIDEOSS_FRAMEGEN0_FGSRCR6_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_FRAMEGEN0_FGSRCR6_t;

/**
  * \brief FrameGen Kick System Debug Register (VIDEOSS_FRAMEGEN0_FGKSDR)
  */
typedef struct stc_VIDEOSS_FRAMEGEN0_FGKSDR_field {
  uint32_t                         u3PCNTCPLMAX:3;
  uint32_t                         :13;
  uint32_t                         u3SCNTCPLMAX:3;
  uint32_t                         :13;
} stc_VIDEOSS_FRAMEGEN0_FGKSDR_field_t;

typedef union un_VIDEOSS_FRAMEGEN0_FGKSDR {
  uint32_t                         u32Register;
  stc_VIDEOSS_FRAMEGEN0_FGKSDR_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_FRAMEGEN0_FGKSDR_t;

/**
  * \brief FrameGen Primary Area Config Register 1 (shadowed) (VIDEOSS_FRAMEGEN0_PACFG)
  */
typedef struct stc_VIDEOSS_FRAMEGEN0_PACFG_field {
  uint32_t                         u14PSTARTX:14;
  uint32_t                         :2;
  uint32_t                         u14PSTARTY:14;
  uint32_t                         :2;
} stc_VIDEOSS_FRAMEGEN0_PACFG_field_t;

typedef union un_VIDEOSS_FRAMEGEN0_PACFG {
  uint32_t                         u32Register;
  stc_VIDEOSS_FRAMEGEN0_PACFG_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_FRAMEGEN0_PACFG_t;

/**
  * \brief FrameGen Secondary Area Config Register 1 (shadowed) (VIDEOSS_FRAMEGEN0_SACFG)
  */
typedef struct stc_VIDEOSS_FRAMEGEN0_SACFG_field {
  uint32_t                         u14SSTARTX:14;
  uint32_t                         :2;
  uint32_t                         u14SSTARTY:14;
  uint32_t                         :2;
} stc_VIDEOSS_FRAMEGEN0_SACFG_field_t;

typedef union un_VIDEOSS_FRAMEGEN0_SACFG {
  uint32_t                         u32Register;
  stc_VIDEOSS_FRAMEGEN0_SACFG_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_FRAMEGEN0_SACFG_t;

/**
  * \brief FrameGen Input Control Register (shadowed) (VIDEOSS_FRAMEGEN0_FGINCTRL)
  */
typedef struct stc_VIDEOSS_FRAMEGEN0_FGINCTRL_field {
  uint32_t                         u3FGDM:3;
  uint32_t                         u1ENPRIMALPHA:1;
  uint32_t                         u1ENSECALPHA:1;
  uint32_t                         :27;
} stc_VIDEOSS_FRAMEGEN0_FGINCTRL_field_t;

typedef union un_VIDEOSS_FRAMEGEN0_FGINCTRL {
  uint32_t                         u32Register;
  stc_VIDEOSS_FRAMEGEN0_FGINCTRL_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_FRAMEGEN0_FGINCTRL_t;

/**
  * \brief FrameGen Input Control Panic Register (shadowed) (VIDEOSS_FRAMEGEN0_FGINCTRLPANIC)
  */
typedef struct stc_VIDEOSS_FRAMEGEN0_FGINCTRLPANIC_field {
  uint32_t                         u3FGDMPANIC:3;
  uint32_t                         u1ENPRIMALPHAPANIC:1;
  uint32_t                         u1ENSECALPHAPANIC:1;
  uint32_t                         :27;
} stc_VIDEOSS_FRAMEGEN0_FGINCTRLPANIC_field_t;

typedef union un_VIDEOSS_FRAMEGEN0_FGINCTRLPANIC {
  uint32_t                         u32Register;
  stc_VIDEOSS_FRAMEGEN0_FGINCTRLPANIC_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_FRAMEGEN0_FGINCTRLPANIC_t;

/**
  * \brief FrameGen Constant Color Register (shadowed) (VIDEOSS_FRAMEGEN0_FGCCR)
  */
typedef struct stc_VIDEOSS_FRAMEGEN0_FGCCR_field {
  uint32_t                         u8CCBLUE:8;
  uint32_t                         u8CCGREEN:8;
  uint32_t                         u8CCRED:8;
  uint32_t                         u1CCALPHA:1;
  uint32_t                         :7;
} stc_VIDEOSS_FRAMEGEN0_FGCCR_field_t;

typedef union un_VIDEOSS_FRAMEGEN0_FGCCR {
  uint32_t                         u32Register;
  stc_VIDEOSS_FRAMEGEN0_FGCCR_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_FRAMEGEN0_FGCCR_t;

/**
  * \brief Options for blend operations. (shadowed) (VIDEOSS_FRAMEGEN0_BLENDCONTROL)
  */
typedef struct stc_VIDEOSS_FRAMEGEN0_BLENDCONTROL_field {
  uint32_t                         u3PRIM_C_BLD_FUNC:3;
  uint32_t                         :1;
  uint32_t                         u3SEC_C_BLD_FUNC:3;
  uint32_t                         :1;
  uint32_t                         u3PRIM_A_BLD_FUNC:3;
  uint32_t                         :1;
  uint32_t                         u3SEC_A_BLD_FUNC:3;
  uint32_t                         :1;
  uint32_t                         u8BLENDALPHA:8;
  uint32_t                         :8;
} stc_VIDEOSS_FRAMEGEN0_BLENDCONTROL_field_t;

typedef union un_VIDEOSS_FRAMEGEN0_BLENDCONTROL {
  uint32_t                         u32Register;
  stc_VIDEOSS_FRAMEGEN0_BLENDCONTROL_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_FRAMEGEN0_BLENDCONTROL_t;

/**
  * \brief FrameGen Enable Register (VIDEOSS_FRAMEGEN0_FGENABLE)
  */
typedef struct stc_VIDEOSS_FRAMEGEN0_FGENABLE_field {
  uint32_t                         u1FGEN:1;
  uint32_t                         :31;
} stc_VIDEOSS_FRAMEGEN0_FGENABLE_field_t;

typedef union un_VIDEOSS_FRAMEGEN0_FGENABLE {
  uint32_t                         u32Register;
  stc_VIDEOSS_FRAMEGEN0_FGENABLE_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_FRAMEGEN0_FGENABLE_t;

/**
  * \brief FrameGen Shadow Load Register (VIDEOSS_FRAMEGEN0_FGSLR)
  */
typedef struct stc_VIDEOSS_FRAMEGEN0_FGSLR_field {
  uint32_t                         u1SHDTOKGEN:1;
  uint32_t                         :31;
} stc_VIDEOSS_FRAMEGEN0_FGSLR_field_t;

typedef union un_VIDEOSS_FRAMEGEN0_FGSLR {
  uint32_t                         u32Register;
  stc_VIDEOSS_FRAMEGEN0_FGSLR_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_FRAMEGEN0_FGSLR_t;

/**
  * \brief FrameGen Enable Status Register (VIDEOSS_FRAMEGEN0_FGENSTS)
  */
typedef struct stc_VIDEOSS_FRAMEGEN0_FGENSTS_field {
  uint32_t                         u1ENSTS:1;
  uint32_t                         u1PANICSTAT:1;
  uint32_t                         :30;
} stc_VIDEOSS_FRAMEGEN0_FGENSTS_field_t;

typedef union un_VIDEOSS_FRAMEGEN0_FGENSTS {
  uint32_t                         u32Register;
  stc_VIDEOSS_FRAMEGEN0_FGENSTS_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_FRAMEGEN0_FGENSTS_t;

/**
  * \brief Time stamp status. (VIDEOSS_FRAMEGEN0_FGTIMESTAMP)
  */
typedef struct stc_VIDEOSS_FRAMEGEN0_FGTIMESTAMP_field {
  uint32_t                         u14LINEINDEX:14;
  uint32_t                         u18FRAMEINDEX:18;
} stc_VIDEOSS_FRAMEGEN0_FGTIMESTAMP_field_t;

typedef union un_VIDEOSS_FRAMEGEN0_FGTIMESTAMP {
  uint32_t                         u32Register;
  stc_VIDEOSS_FRAMEGEN0_FGTIMESTAMP_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_FRAMEGEN0_FGTIMESTAMP_t;

/**
  * \brief FrameGen Channel Status Register (VIDEOSS_FRAMEGEN0_FGCHSTAT)
  */
typedef struct stc_VIDEOSS_FRAMEGEN0_FGCHSTAT_field {
  uint32_t                         u1PFIFOEMPTY:1;
  uint32_t                         :7;
  uint32_t                         u1PRIMSYNCSTAT:1;
  uint32_t                         :7;
  uint32_t                         u1SFIFOEMPTY:1;
  uint32_t                         u1SKEWRANGEERR:1;
  uint32_t                         :6;
  uint32_t                         u1SECSYNCSTAT:1;
  uint32_t                         :7;
} stc_VIDEOSS_FRAMEGEN0_FGCHSTAT_field_t;

typedef union un_VIDEOSS_FRAMEGEN0_FGCHSTAT {
  uint32_t                         u32Register;
  stc_VIDEOSS_FRAMEGEN0_FGCHSTAT_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_FRAMEGEN0_FGCHSTAT_t;

/**
  * \brief FrameGen Channel Status Clear Register (VIDEOSS_FRAMEGEN0_FGCHSTATCLR)
  */
typedef struct stc_VIDEOSS_FRAMEGEN0_FGCHSTATCLR_field {
  uint32_t                         u1CLRPRIMSTAT:1;
  uint32_t                         :15;
  uint32_t                         u1CLRSECSTAT:1;
  uint32_t                         :15;
} stc_VIDEOSS_FRAMEGEN0_FGCHSTATCLR_field_t;

typedef union un_VIDEOSS_FRAMEGEN0_FGCHSTATCLR {
  uint32_t                         u32Register;
  stc_VIDEOSS_FRAMEGEN0_FGCHSTATCLR_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_FRAMEGEN0_FGCHSTATCLR_t;

/**
  * \brief FrameGen Skew Monitor Register for Secondary Channel Skew Control (VIDEOSS_FRAMEGEN0_FGSKEWMON)
  */
typedef struct stc_VIDEOSS_FRAMEGEN0_FGSKEWMON_field {
  uint32_t                         u29SKEWMON:29;
  uint32_t                         :3;
} stc_VIDEOSS_FRAMEGEN0_FGSKEWMON_field_t;

typedef union un_VIDEOSS_FRAMEGEN0_FGSKEWMON {
  uint32_t                         u32Register;
  stc_VIDEOSS_FRAMEGEN0_FGSKEWMON_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_FRAMEGEN0_FGSKEWMON_t;

/**
  * \brief FrameGen Secondary FIFO Min Fill Register (VIDEOSS_FRAMEGEN0_FGSFIFOMIN)
  */
typedef struct stc_VIDEOSS_FRAMEGEN0_FGSFIFOMIN_field {
  uint32_t                         u11SFIFOMIN:11;
  uint32_t                         :21;
} stc_VIDEOSS_FRAMEGEN0_FGSFIFOMIN_field_t;

typedef union un_VIDEOSS_FRAMEGEN0_FGSFIFOMIN {
  uint32_t                         u32Register;
  stc_VIDEOSS_FRAMEGEN0_FGSFIFOMIN_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_FRAMEGEN0_FGSFIFOMIN_t;

/**
  * \brief FrameGen Secondary FIFO Max Fill Register (VIDEOSS_FRAMEGEN0_FGSFIFOMAX)
  */
typedef struct stc_VIDEOSS_FRAMEGEN0_FGSFIFOMAX_field {
  uint32_t                         u11SFIFOMAX:11;
  uint32_t                         :21;
} stc_VIDEOSS_FRAMEGEN0_FGSFIFOMAX_field_t;

typedef union un_VIDEOSS_FRAMEGEN0_FGSFIFOMAX {
  uint32_t                         u32Register;
  stc_VIDEOSS_FRAMEGEN0_FGSFIFOMAX_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_FRAMEGEN0_FGSFIFOMAX_t;

/**
  * \brief FrameGen Secondary FIFO Fill Clear Register (VIDEOSS_FRAMEGEN0_FGSFIFOFILLCLR)
  */
typedef struct stc_VIDEOSS_FRAMEGEN0_FGSFIFOFILLCLR_field {
  uint32_t                         u1SFIFOFILLCLR:1;
  uint32_t                         :31;
} stc_VIDEOSS_FRAMEGEN0_FGSFIFOFILLCLR_field_t;

typedef union un_VIDEOSS_FRAMEGEN0_FGSFIFOFILLCLR {
  uint32_t                         u32Register;
  stc_VIDEOSS_FRAMEGEN0_FGSFIFOFILLCLR_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_FRAMEGEN0_FGSFIFOFILLCLR_t;

/**
  * \brief FrameGen Skew Regulation ExtraPolation Debug Register (VIDEOSS_FRAMEGEN0_FGSREPD)
  */
typedef struct stc_VIDEOSS_FRAMEGEN0_FGSREPD_field {
  uint32_t                         u29EPVAL:29;
  uint32_t                         :3;
} stc_VIDEOSS_FRAMEGEN0_FGSREPD_field_t;

typedef union un_VIDEOSS_FRAMEGEN0_FGSREPD {
  uint32_t                         u32Register;
  stc_VIDEOSS_FRAMEGEN0_FGSREPD_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_FRAMEGEN0_FGSREPD_t;

/**
  * \brief FrameGen Skew Regulation Frame Total Debug Register (VIDEOSS_FRAMEGEN0_FGSRFTD)
  */
typedef struct stc_VIDEOSS_FRAMEGEN0_FGSRFTD_field {
  uint32_t                         u28FRTOT:28;
  uint32_t                         :4;
} stc_VIDEOSS_FRAMEGEN0_FGSRFTD_field_t;

typedef union un_VIDEOSS_FRAMEGEN0_FGSRFTD {
  uint32_t                         u32Register;
  stc_VIDEOSS_FRAMEGEN0_FGSRFTD_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_FRAMEGEN0_FGSRFTD_t;

/**
  * \brief Current (x,y) positions of the timing generator Register in FrameGen timing generator. Please don't use it due to lack of verification. (VIDEOSS_FRAMEGEN0_FGTGPOSITION)
  */
typedef struct stc_VIDEOSS_FRAMEGEN0_FGTGPOSITION_field {
  uint32_t                         u14FRTGX:14;
  uint32_t                         u14FRTGY:14;
  uint32_t                         :4;
} stc_VIDEOSS_FRAMEGEN0_FGTGPOSITION_field_t;

typedef union un_VIDEOSS_FRAMEGEN0_FGTGPOSITION {
  uint32_t                         u32Register;
  stc_VIDEOSS_FRAMEGEN0_FGTGPOSITION_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_FRAMEGEN0_FGTGPOSITION_t;



/**
  * \brief Static control settings. (VIDEOSS_GAMMACOR0_STATICCONTROL)
  */
typedef struct stc_VIDEOSS_GAMMACOR0_STATICCONTROL_field {
  uint32_t                         u1SHDEN:1;
  uint32_t                         u1BLUEWRITEENABLE:1;
  uint32_t                         u1GREENWRITEENABLE:1;
  uint32_t                         u1REDWRITEENABLE:1;
  uint32_t                         :28;
} stc_VIDEOSS_GAMMACOR0_STATICCONTROL_field_t;

typedef union un_VIDEOSS_GAMMACOR0_STATICCONTROL {
  uint32_t                         u32Register;
  stc_VIDEOSS_GAMMACOR0_STATICCONTROL_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_GAMMACOR0_STATICCONTROL_t;

/**
  * \brief Start values for look-up table programming. (VIDEOSS_GAMMACOR0_LUTSTART)
  */
typedef struct stc_VIDEOSS_GAMMACOR0_LUTSTART_field {
  uint32_t                         u10STARTBLUE:10;
  uint32_t                         u10STARTGREEN:10;
  uint32_t                         u10STARTRED:10;
  uint32_t                         :2;
} stc_VIDEOSS_GAMMACOR0_LUTSTART_field_t;

typedef union un_VIDEOSS_GAMMACOR0_LUTSTART {
  uint32_t                         u32Register;
  stc_VIDEOSS_GAMMACOR0_LUTSTART_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_GAMMACOR0_LUTSTART_t;

/**
  * \brief Delta values for look-up table programming. (VIDEOSS_GAMMACOR0_LUTDELTAS)
  */
typedef struct stc_VIDEOSS_GAMMACOR0_LUTDELTAS_field {
  uint32_t                         u10DELTABLUE:10;
  uint32_t                         u10DELTAGREEN:10;
  uint32_t                         u10DELTARED:10;
  uint32_t                         :2;
} stc_VIDEOSS_GAMMACOR0_LUTDELTAS_field_t;

typedef union un_VIDEOSS_GAMMACOR0_LUTDELTAS {
  uint32_t                         u32Register;
  stc_VIDEOSS_GAMMACOR0_LUTDELTAS_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_GAMMACOR0_LUTDELTAS_t;

/**
  * \brief Dynamic control settings. (VIDEOSS_GAMMACOR0_CONTROL)
  */
typedef struct stc_VIDEOSS_GAMMACOR0_CONTROL_field {
  uint32_t                         u1MODE:1;
  uint32_t                         :3;
  uint32_t                         u1ALPHAMASK:1;
  uint32_t                         u1ALPHAINVERT:1;
  uint32_t                         :26;
} stc_VIDEOSS_GAMMACOR0_CONTROL_field_t;

typedef union un_VIDEOSS_GAMMACOR0_CONTROL {
  uint32_t                         u32Register;
  stc_VIDEOSS_GAMMACOR0_CONTROL_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_GAMMACOR0_CONTROL_t;



/**
  * \brief Dither Unit common control. (VIDEOSS_DITHER0_CONTROL)
  */
typedef struct stc_VIDEOSS_DITHER0_CONTROL_field {
  uint32_t                         u1MODE:1;
  uint32_t                         :31;
} stc_VIDEOSS_DITHER0_CONTROL_field_t;

typedef union un_VIDEOSS_DITHER0_CONTROL {
  uint32_t                         u32Register;
  stc_VIDEOSS_DITHER0_CONTROL_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_DITHER0_CONTROL_t;

/**
  * \brief Dither Unit processing control. (VIDEOSS_DITHER0_DITHERCONTROL)
  */
typedef struct stc_VIDEOSS_DITHER0_DITHERCONTROL_field {
  uint32_t                         u3BLUE_RANGE_SELECT:3;
  uint32_t                         :1;
  uint32_t                         u3GREEN_RANGE_SELECT:3;
  uint32_t                         :1;
  uint32_t                         u3RED_RANGE_SELECT:3;
  uint32_t                         :5;
  uint32_t                         u1OFFSET_SELECT:1;
  uint32_t                         :3;
  uint32_t                         u2ALGO_SELECT:2;
  uint32_t                         :2;
  uint32_t                         u2ALPHA_MODE:2;
  uint32_t                         :6;
} stc_VIDEOSS_DITHER0_DITHERCONTROL_field_t;

typedef union un_VIDEOSS_DITHER0_DITHERCONTROL {
  uint32_t                         u32Register;
  stc_VIDEOSS_DITHER0_DITHERCONTROL_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_DITHER0_DITHERCONTROL_t;

/**
  * \brief Dither Unit release. (VIDEOSS_DITHER0_RELEASE)
  */
typedef struct stc_VIDEOSS_DITHER0_RELEASE_field {
  uint32_t                         u8SUBVERSION:8;
  uint32_t                         u8VERSION:8;
  uint32_t                         :16;
} stc_VIDEOSS_DITHER0_RELEASE_field_t;

typedef union un_VIDEOSS_DITHER0_RELEASE {
  uint32_t                         u32Register;
  stc_VIDEOSS_DITHER0_RELEASE_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_DITHER0_RELEASE_t;



/**
  * \brief The 64 Sequencer Position Definitions registers define the X/Y scan positions of the sequencers, hold their output value and assign the sequencer to an odd/even field (VIDEOSS_TCON0_SSQCNTS)
  */
typedef struct stc_VIDEOSS_TCON0_SSQCNTS_field {
  uint32_t                         u15SSQCNTS_SEQY:15;
  uint32_t                         u1SSQCNTS_FIELD:1;
  uint32_t                         u15SSQCNTS_SEQX:15;
  uint32_t                         u1SSQCNTS_OUT:1;
} stc_VIDEOSS_TCON0_SSQCNTS_field_t;

typedef union un_VIDEOSS_TCON0_SSQCNTS {
  uint32_t                         u32Register;
  stc_VIDEOSS_TCON0_SSQCNTS_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_TCON0_SSQCNTS_t;

/**
  * \brief This bitfield sets the sequencer cycle length. The value set here -1 is the number of sequencer cycles (VIDEOSS_TCON0_SSQCYCLE)
  */
typedef struct stc_VIDEOSS_TCON0_SSQCYCLE_field {
  uint32_t                         u6SSQCYCLE:6;
  uint32_t                         :26;
} stc_VIDEOSS_TCON0_SSQCYCLE_field_t;

typedef union un_VIDEOSS_TCON0_SSQCYCLE {
  uint32_t                         u32Register;
  stc_VIDEOSS_TCON0_SSQCYCLE_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_TCON0_SSQCYCLE_t;

/**
  * \brief TCON Software Reset - Reset all tcon registers except configuration registers. Detailed description in specification document Note  1/ if tsig[11] pulse=n*pixel_period, (n-1)*0xFF will be blended between ResetWordStart and ResetWordEnd into miniLVDS stream  Note  2/ if( EnResetWord=0) Reset-Pulse (ResetWordStart,ResetWordEnd) won't be blended into miniLVDS stream. Pixels will be transferred unchanged (VIDEOSS_TCON0_SWRESET)
  */
typedef struct stc_VIDEOSS_TCON0_SWRESET_field {
  uint32_t                         u1SWRESET:1;
  uint32_t                         :3;
  uint32_t                         u12ENRESETWORD:12;
  uint32_t                         u8RESETWORDEND:8;
  uint32_t                         u8RESETWORDSTART:8;
} stc_VIDEOSS_TCON0_SWRESET_field_t;

typedef union un_VIDEOSS_TCON0_SWRESET {
  uint32_t                         u32Register;
  stc_VIDEOSS_TCON0_SWRESET_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_TCON0_SWRESET_t;

/**
  * \brief TCON Control register (VIDEOSS_TCON0_TCON_CTRL)
  */
typedef struct stc_VIDEOSS_TCON0_TCON_CTRL_field {
  uint32_t                         u2CHANNELMODE:2;
  uint32_t                         u1TCON_SYNC:1;
  uint32_t                         u1BYPASS:1;
  uint32_t                         u4INV_CTRL:4;
  uint32_t                         u1ENLVDS:1;
  uint32_t                         u1LVDSMODE:1;
  uint32_t                         u1LVDS_BALANCE:1;
  uint32_t                         u1LVDS_CLOCK_INV:1;
  uint32_t                         u3MINILVDS_OPCODE:3;
  uint32_t                         u1DUAL_SWAP:1;
  uint32_t                         u14SPLITPOSITION:14;
  uint32_t                         :2;
} stc_VIDEOSS_TCON0_TCON_CTRL_field_t;

typedef union un_VIDEOSS_TCON0_TCON_CTRL {
  uint32_t                         u32Register;
  stc_VIDEOSS_TCON0_TCON_CTRL_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_TCON0_TCON_CTRL_t;

/**
  * \brief Controls inversion of output polarity when connected IO cells operate in RSDS mode (VIDEOSS_TCON0_RSDSINVCTRL)
  */
typedef struct stc_VIDEOSS_TCON0_RSDSINVCTRL_field {
  uint32_t                         u12RSDS_INV:12;
  uint32_t                         :4;
  uint32_t                         u12RSDS_INV_DUAL:12;
  uint32_t                         :4;
} stc_VIDEOSS_TCON0_RSDSINVCTRL_field_t;

typedef union un_VIDEOSS_TCON0_RSDSINVCTRL {
  uint32_t                         u32Register;
  stc_VIDEOSS_TCON0_RSDSINVCTRL_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_TCON0_RSDSINVCTRL_t;

/**
  * \brief Mapping of 24 bit RGB or Timing Generator TSig[5-0] to bit 0 .. 3 (VIDEOSS_TCON0_MAPBIT3_0)
  */
typedef struct stc_VIDEOSS_TCON0_MAPBIT3_0_field {
  uint32_t                         u5MAPBIT0:5;
  uint32_t                         :3;
  uint32_t                         u5MAPBIT1:5;
  uint32_t                         :3;
  uint32_t                         u5MAPBIT2:5;
  uint32_t                         :3;
  uint32_t                         u5MAPBIT3:5;
  uint32_t                         :3;
} stc_VIDEOSS_TCON0_MAPBIT3_0_field_t;

typedef union un_VIDEOSS_TCON0_MAPBIT3_0 {
  uint32_t                         u32Register;
  stc_VIDEOSS_TCON0_MAPBIT3_0_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_TCON0_MAPBIT3_0_t;

/**
  * \brief Mapping of 24 bit RGB or Timing Generator TSig[5-0] to bit 4 .. 7 (VIDEOSS_TCON0_MAPBIT7_4)
  */
typedef struct stc_VIDEOSS_TCON0_MAPBIT7_4_field {
  uint32_t                         u5MAPBIT4:5;
  uint32_t                         :3;
  uint32_t                         u5MAPBIT5:5;
  uint32_t                         :3;
  uint32_t                         u5MAPBIT6:5;
  uint32_t                         :3;
  uint32_t                         u5MAPBIT7:5;
  uint32_t                         :3;
} stc_VIDEOSS_TCON0_MAPBIT7_4_field_t;

typedef union un_VIDEOSS_TCON0_MAPBIT7_4 {
  uint32_t                         u32Register;
  stc_VIDEOSS_TCON0_MAPBIT7_4_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_TCON0_MAPBIT7_4_t;

/**
  * \brief Mapping of 24 bit RGB or Timing Generator TSig[5-0] to bit 8 .. 11 (VIDEOSS_TCON0_MAPBIT11_8)
  */
typedef struct stc_VIDEOSS_TCON0_MAPBIT11_8_field {
  uint32_t                         u5MAPBIT8:5;
  uint32_t                         :3;
  uint32_t                         u5MAPBIT9:5;
  uint32_t                         :3;
  uint32_t                         u5MAPBIT10:5;
  uint32_t                         :3;
  uint32_t                         u5MAPBIT11:5;
  uint32_t                         :3;
} stc_VIDEOSS_TCON0_MAPBIT11_8_field_t;

typedef union un_VIDEOSS_TCON0_MAPBIT11_8 {
  uint32_t                         u32Register;
  stc_VIDEOSS_TCON0_MAPBIT11_8_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_TCON0_MAPBIT11_8_t;

/**
  * \brief Mapping of 24 bit RGB or Timing Generator TSig[5-0] to bit 12 .. 15 (VIDEOSS_TCON0_MAPBIT15_12)
  */
typedef struct stc_VIDEOSS_TCON0_MAPBIT15_12_field {
  uint32_t                         u5MAPBIT12:5;
  uint32_t                         :3;
  uint32_t                         u5MAPBIT13:5;
  uint32_t                         :3;
  uint32_t                         u5MAPBIT14:5;
  uint32_t                         :3;
  uint32_t                         u5MAPBIT15:5;
  uint32_t                         :3;
} stc_VIDEOSS_TCON0_MAPBIT15_12_field_t;

typedef union un_VIDEOSS_TCON0_MAPBIT15_12 {
  uint32_t                         u32Register;
  stc_VIDEOSS_TCON0_MAPBIT15_12_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_TCON0_MAPBIT15_12_t;

/**
  * \brief Mapping of 24 bit RGB or Timing Generator TSig[5-0] to bit 16 .. 19 (VIDEOSS_TCON0_MAPBIT19_16)
  */
typedef struct stc_VIDEOSS_TCON0_MAPBIT19_16_field {
  uint32_t                         u5MAPBIT16:5;
  uint32_t                         :3;
  uint32_t                         u5MAPBIT17:5;
  uint32_t                         :3;
  uint32_t                         u5MAPBIT18:5;
  uint32_t                         :3;
  uint32_t                         u5MAPBIT19:5;
  uint32_t                         :3;
} stc_VIDEOSS_TCON0_MAPBIT19_16_field_t;

typedef union un_VIDEOSS_TCON0_MAPBIT19_16 {
  uint32_t                         u32Register;
  stc_VIDEOSS_TCON0_MAPBIT19_16_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_TCON0_MAPBIT19_16_t;

/**
  * \brief Mapping of 24 bit RGB or Timing Generator TSig[5-0] to bit 20 .. 23 (VIDEOSS_TCON0_MAPBIT23_20)
  */
typedef struct stc_VIDEOSS_TCON0_MAPBIT23_20_field {
  uint32_t                         u5MAPBIT20:5;
  uint32_t                         :3;
  uint32_t                         u5MAPBIT21:5;
  uint32_t                         :3;
  uint32_t                         u5MAPBIT22:5;
  uint32_t                         :3;
  uint32_t                         u5MAPBIT23:5;
  uint32_t                         :3;
} stc_VIDEOSS_TCON0_MAPBIT23_20_field_t;

typedef union un_VIDEOSS_TCON0_MAPBIT23_20 {
  uint32_t                         u32Register;
  stc_VIDEOSS_TCON0_MAPBIT23_20_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_TCON0_MAPBIT23_20_t;

/**
  * \brief Mapping of 24 bit RGB or Timing Generator TSig[5-0] to bit 24 .. 27 (VIDEOSS_TCON0_MAPBIT27_24)
  */
typedef struct stc_VIDEOSS_TCON0_MAPBIT27_24_field {
  uint32_t                         u5MAPBIT24:5;
  uint32_t                         :3;
  uint32_t                         u5MAPBIT25:5;
  uint32_t                         :3;
  uint32_t                         u5MAPBIT26:5;
  uint32_t                         :3;
  uint32_t                         u5MAPBIT27:5;
  uint32_t                         :3;
} stc_VIDEOSS_TCON0_MAPBIT27_24_field_t;

typedef union un_VIDEOSS_TCON0_MAPBIT27_24 {
  uint32_t                         u32Register;
  stc_VIDEOSS_TCON0_MAPBIT27_24_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_TCON0_MAPBIT27_24_t;

/**
  * \brief Same as MapBit3_0 for 2nd channel (VIDEOSS_TCON0_MAPBIT3_0_DUAL)
  */
typedef struct stc_VIDEOSS_TCON0_MAPBIT3_0_DUAL_field {
  uint32_t                         u5MAPBIT0_DUAL:5;
  uint32_t                         :3;
  uint32_t                         u5MAPBIT1_DUAL:5;
  uint32_t                         :3;
  uint32_t                         u5MAPBIT2_DUAL:5;
  uint32_t                         :3;
  uint32_t                         u5MAPBIT3_DUAL:5;
  uint32_t                         :3;
} stc_VIDEOSS_TCON0_MAPBIT3_0_DUAL_field_t;

typedef union un_VIDEOSS_TCON0_MAPBIT3_0_DUAL {
  uint32_t                         u32Register;
  stc_VIDEOSS_TCON0_MAPBIT3_0_DUAL_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_TCON0_MAPBIT3_0_DUAL_t;

/**
  * \brief Same as MapBit7_4 for 2nd channel (VIDEOSS_TCON0_MAPBIT7_4_DUAL)
  */
typedef struct stc_VIDEOSS_TCON0_MAPBIT7_4_DUAL_field {
  uint32_t                         u5MAPBIT4_DUAL:5;
  uint32_t                         :3;
  uint32_t                         u5MAPBIT5_DUAL:5;
  uint32_t                         :3;
  uint32_t                         u5MAPBIT6_DUAL:5;
  uint32_t                         :3;
  uint32_t                         u5MAPBIT7_DUAL:5;
  uint32_t                         :3;
} stc_VIDEOSS_TCON0_MAPBIT7_4_DUAL_field_t;

typedef union un_VIDEOSS_TCON0_MAPBIT7_4_DUAL {
  uint32_t                         u32Register;
  stc_VIDEOSS_TCON0_MAPBIT7_4_DUAL_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_TCON0_MAPBIT7_4_DUAL_t;

/**
  * \brief Same as MapBit11_8 for 2nd channel (VIDEOSS_TCON0_MAPBIT11_8_DUAL)
  */
typedef struct stc_VIDEOSS_TCON0_MAPBIT11_8_DUAL_field {
  uint32_t                         u5MAPBIT8_DUAL:5;
  uint32_t                         :3;
  uint32_t                         u5MAPBIT9_DUAL:5;
  uint32_t                         :3;
  uint32_t                         u5MAPBIT10_DUAL:5;
  uint32_t                         :3;
  uint32_t                         u5MAPBIT11_DUAL:5;
  uint32_t                         :3;
} stc_VIDEOSS_TCON0_MAPBIT11_8_DUAL_field_t;

typedef union un_VIDEOSS_TCON0_MAPBIT11_8_DUAL {
  uint32_t                         u32Register;
  stc_VIDEOSS_TCON0_MAPBIT11_8_DUAL_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_TCON0_MAPBIT11_8_DUAL_t;

/**
  * \brief Same as MapBit15_12 for 2nd channel (VIDEOSS_TCON0_MAPBIT15_12_DUAL)
  */
typedef struct stc_VIDEOSS_TCON0_MAPBIT15_12_DUAL_field {
  uint32_t                         u5MAPBIT12_DUAL:5;
  uint32_t                         :3;
  uint32_t                         u5MAPBIT13_DUAL:5;
  uint32_t                         :3;
  uint32_t                         u5MAPBIT14_DUAL:5;
  uint32_t                         :3;
  uint32_t                         u5MAPBIT15_DUAL:5;
  uint32_t                         :3;
} stc_VIDEOSS_TCON0_MAPBIT15_12_DUAL_field_t;

typedef union un_VIDEOSS_TCON0_MAPBIT15_12_DUAL {
  uint32_t                         u32Register;
  stc_VIDEOSS_TCON0_MAPBIT15_12_DUAL_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_TCON0_MAPBIT15_12_DUAL_t;

/**
  * \brief Same as MapBit19_16 for 2nd channel (VIDEOSS_TCON0_MAPBIT19_16_DUAL)
  */
typedef struct stc_VIDEOSS_TCON0_MAPBIT19_16_DUAL_field {
  uint32_t                         u5MAPBIT16_DUAL:5;
  uint32_t                         :3;
  uint32_t                         u5MAPBIT17_DUAL:5;
  uint32_t                         :3;
  uint32_t                         u5MAPBIT18_DUAL:5;
  uint32_t                         :3;
  uint32_t                         u5MAPBIT19_DUAL:5;
  uint32_t                         :3;
} stc_VIDEOSS_TCON0_MAPBIT19_16_DUAL_field_t;

typedef union un_VIDEOSS_TCON0_MAPBIT19_16_DUAL {
  uint32_t                         u32Register;
  stc_VIDEOSS_TCON0_MAPBIT19_16_DUAL_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_TCON0_MAPBIT19_16_DUAL_t;

/**
  * \brief Same as MapBit23_20 for 2nd channel (VIDEOSS_TCON0_MAPBIT23_20_DUAL)
  */
typedef struct stc_VIDEOSS_TCON0_MAPBIT23_20_DUAL_field {
  uint32_t                         u5MAPBIT20_DUAL:5;
  uint32_t                         :3;
  uint32_t                         u5MAPBIT21_DUAL:5;
  uint32_t                         :3;
  uint32_t                         u5MAPBIT22_DUAL:5;
  uint32_t                         :3;
  uint32_t                         u5MAPBIT23_DUAL:5;
  uint32_t                         :3;
} stc_VIDEOSS_TCON0_MAPBIT23_20_DUAL_field_t;

typedef union un_VIDEOSS_TCON0_MAPBIT23_20_DUAL {
  uint32_t                         u32Register;
  stc_VIDEOSS_TCON0_MAPBIT23_20_DUAL_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_TCON0_MAPBIT23_20_DUAL_t;

/**
  * \brief Same as MapBit27_24 for 2nd channel (VIDEOSS_TCON0_MAPBIT27_24_DUAL)
  */
typedef struct stc_VIDEOSS_TCON0_MAPBIT27_24_DUAL_field {
  uint32_t                         u5MAPBIT24_DUAL:5;
  uint32_t                         :3;
  uint32_t                         u5MAPBIT25_DUAL:5;
  uint32_t                         :3;
  uint32_t                         u5MAPBIT26_DUAL:5;
  uint32_t                         :3;
  uint32_t                         u5MAPBIT27_DUAL:5;
  uint32_t                         :3;
} stc_VIDEOSS_TCON0_MAPBIT27_24_DUAL_field_t;

typedef union un_VIDEOSS_TCON0_MAPBIT27_24_DUAL {
  uint32_t                         u32Register;
  stc_VIDEOSS_TCON0_MAPBIT27_24_DUAL_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_TCON0_MAPBIT27_24_DUAL_t;

/**
  * \brief Sync pulse generator 0, 'Switch on' position (VIDEOSS_TCON0_SPG0POSON)
  */
typedef struct stc_VIDEOSS_TCON0_SPG0POSON_field {
  uint32_t                         u15SPGPSON_Y0:15;
  uint32_t                         u1SPGPSON_FIELD0:1;
  uint32_t                         u15SPGPSON_X0:15;
  uint32_t                         u1SPGPSON_TOGGLE0:1;
} stc_VIDEOSS_TCON0_SPG0POSON_field_t;

typedef union un_VIDEOSS_TCON0_SPG0POSON {
  uint32_t                         u32Register;
  stc_VIDEOSS_TCON0_SPG0POSON_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_TCON0_SPG0POSON_t;

/**
  * \brief The Sequencer Pulse Generator 0 Mask Enable register is used to mask the enable of SPG 0 (VIDEOSS_TCON0_SPG0MASKON)
  */
typedef struct stc_VIDEOSS_TCON0_SPG0MASKON_field {
  uint32_t                         u31SPGMKON0:31;
} stc_VIDEOSS_TCON0_SPG0MASKON_field_t;

typedef union un_VIDEOSS_TCON0_SPG0MASKON {
  uint32_t                         u32Register;
  stc_VIDEOSS_TCON0_SPG0MASKON_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_TCON0_SPG0MASKON_t;

/**
  * \brief Sync pulse generator 0, 'Switch off' position (VIDEOSS_TCON0_SPG0POSOFF)
  */
typedef struct stc_VIDEOSS_TCON0_SPG0POSOFF_field {
  uint32_t                         u15SPGPSOFF_Y0:15;
  uint32_t                         u1SPGPSOFF_FIELD0:1;
  uint32_t                         u15SPGPSOFF_X0:15;
  uint32_t                         u1SPGPSOFF_TOGGLE0:1;
} stc_VIDEOSS_TCON0_SPG0POSOFF_field_t;

typedef union un_VIDEOSS_TCON0_SPG0POSOFF {
  uint32_t                         u32Register;
  stc_VIDEOSS_TCON0_SPG0POSOFF_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_TCON0_SPG0POSOFF_t;

/**
  * \brief The Sequencer Pulse Generator 0 Mask Enable register is used to mask the disable of SPG 0 (VIDEOSS_TCON0_SPG0MASKOFF)
  */
typedef struct stc_VIDEOSS_TCON0_SPG0MASKOFF_field {
  uint32_t                         u31SPGMKOFF0:31;
} stc_VIDEOSS_TCON0_SPG0MASKOFF_field_t;

typedef union un_VIDEOSS_TCON0_SPG0MASKOFF {
  uint32_t                         u32Register;
  stc_VIDEOSS_TCON0_SPG0MASKOFF_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_TCON0_SPG0MASKOFF_t;

/**
  * \brief Sync pulse generator 1, 'Switch on' position (VIDEOSS_TCON0_SPG1POSON)
  */
typedef struct stc_VIDEOSS_TCON0_SPG1POSON_field {
  uint32_t                         u15SPGPSON_Y1:15;
  uint32_t                         u1SPGPSON_FIELD1:1;
  uint32_t                         u15SPGPSON_X1:15;
  uint32_t                         u1SPGPSON_TOGGLE1:1;
} stc_VIDEOSS_TCON0_SPG1POSON_field_t;

typedef union un_VIDEOSS_TCON0_SPG1POSON {
  uint32_t                         u32Register;
  stc_VIDEOSS_TCON0_SPG1POSON_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_TCON0_SPG1POSON_t;

/**
  * \brief The Sequencer Pulse Generator 1 Mask Enable register is used to mask the enable of SPG 1 (VIDEOSS_TCON0_SPG1MASKON)
  */
typedef struct stc_VIDEOSS_TCON0_SPG1MASKON_field {
  uint32_t                         u31SPGMKON1:31;
} stc_VIDEOSS_TCON0_SPG1MASKON_field_t;

typedef union un_VIDEOSS_TCON0_SPG1MASKON {
  uint32_t                         u32Register;
  stc_VIDEOSS_TCON0_SPG1MASKON_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_TCON0_SPG1MASKON_t;

/**
  * \brief Sync pulse generator 1, 'Switch off' position (VIDEOSS_TCON0_SPG1POSOFF)
  */
typedef struct stc_VIDEOSS_TCON0_SPG1POSOFF_field {
  uint32_t                         u15SPGPSOFF_Y1:15;
  uint32_t                         u1SPGPSOFF_FIELD1:1;
  uint32_t                         u15SPGPSOFF_X1:15;
  uint32_t                         u1SPGPSOFF_TOGGLE1:1;
} stc_VIDEOSS_TCON0_SPG1POSOFF_field_t;

typedef union un_VIDEOSS_TCON0_SPG1POSOFF {
  uint32_t                         u32Register;
  stc_VIDEOSS_TCON0_SPG1POSOFF_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_TCON0_SPG1POSOFF_t;

/**
  * \brief The Sequencer Pulse Generator 1 Mask Enable register is used to mask the disable of SPG 1 (VIDEOSS_TCON0_SPG1MASKOFF)
  */
typedef struct stc_VIDEOSS_TCON0_SPG1MASKOFF_field {
  uint32_t                         u31SPGMKOFF1:31;
} stc_VIDEOSS_TCON0_SPG1MASKOFF_field_t;

typedef union un_VIDEOSS_TCON0_SPG1MASKOFF {
  uint32_t                         u32Register;
  stc_VIDEOSS_TCON0_SPG1MASKOFF_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_TCON0_SPG1MASKOFF_t;

/**
  * \brief Sync pulse generator 2, 'Switch on' position (VIDEOSS_TCON0_SPG2POSON)
  */
typedef struct stc_VIDEOSS_TCON0_SPG2POSON_field {
  uint32_t                         u15SPGPSON_Y2:15;
  uint32_t                         u1SPGPSON_FIELD2:1;
  uint32_t                         u15SPGPSON_X2:15;
  uint32_t                         u1SPGPSON_TOGGLE2:1;
} stc_VIDEOSS_TCON0_SPG2POSON_field_t;

typedef union un_VIDEOSS_TCON0_SPG2POSON {
  uint32_t                         u32Register;
  stc_VIDEOSS_TCON0_SPG2POSON_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_TCON0_SPG2POSON_t;

/**
  * \brief The Sequencer Pulse Generator 2 Mask Enable register is used to mask the enable of SPG 2 (VIDEOSS_TCON0_SPG2MASKON)
  */
typedef struct stc_VIDEOSS_TCON0_SPG2MASKON_field {
  uint32_t                         u31SPGMKON2:31;
} stc_VIDEOSS_TCON0_SPG2MASKON_field_t;

typedef union un_VIDEOSS_TCON0_SPG2MASKON {
  uint32_t                         u32Register;
  stc_VIDEOSS_TCON0_SPG2MASKON_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_TCON0_SPG2MASKON_t;

/**
  * \brief Sync pulse generator 2, 'Switch off' position (VIDEOSS_TCON0_SPG2POSOFF)
  */
typedef struct stc_VIDEOSS_TCON0_SPG2POSOFF_field {
  uint32_t                         u15SPGPSOFF_Y2:15;
  uint32_t                         u1SPGPSOFF_FIELD2:1;
  uint32_t                         u15SPGPSOFF_X2:15;
  uint32_t                         u1SPGPSOFF_TOGGLE2:1;
} stc_VIDEOSS_TCON0_SPG2POSOFF_field_t;

typedef union un_VIDEOSS_TCON0_SPG2POSOFF {
  uint32_t                         u32Register;
  stc_VIDEOSS_TCON0_SPG2POSOFF_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_TCON0_SPG2POSOFF_t;

/**
  * \brief The Sequencer Pulse Generator 2 Mask Enable register is used to mask the disable of SPG 2 (VIDEOSS_TCON0_SPG2MASKOFF)
  */
typedef struct stc_VIDEOSS_TCON0_SPG2MASKOFF_field {
  uint32_t                         u31SPGMKOFF2:31;
} stc_VIDEOSS_TCON0_SPG2MASKOFF_field_t;

typedef union un_VIDEOSS_TCON0_SPG2MASKOFF {
  uint32_t                         u32Register;
  stc_VIDEOSS_TCON0_SPG2MASKOFF_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_TCON0_SPG2MASKOFF_t;

/**
  * \brief Sync pulse generator 3, 'Switch on' position (VIDEOSS_TCON0_SPG3POSON)
  */
typedef struct stc_VIDEOSS_TCON0_SPG3POSON_field {
  uint32_t                         u15SPGPSON_Y3:15;
  uint32_t                         u1SPGPSON_FIELD3:1;
  uint32_t                         u15SPGPSON_X3:15;
  uint32_t                         u1SPGPSON_TOGGLE3:1;
} stc_VIDEOSS_TCON0_SPG3POSON_field_t;

typedef union un_VIDEOSS_TCON0_SPG3POSON {
  uint32_t                         u32Register;
  stc_VIDEOSS_TCON0_SPG3POSON_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_TCON0_SPG3POSON_t;

/**
  * \brief The Sequencer Pulse Generator 3 Mask Enable register is used to mask the enable of SPG 3 (VIDEOSS_TCON0_SPG3MASKON)
  */
typedef struct stc_VIDEOSS_TCON0_SPG3MASKON_field {
  uint32_t                         u31SPGMKON3:31;
} stc_VIDEOSS_TCON0_SPG3MASKON_field_t;

typedef union un_VIDEOSS_TCON0_SPG3MASKON {
  uint32_t                         u32Register;
  stc_VIDEOSS_TCON0_SPG3MASKON_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_TCON0_SPG3MASKON_t;

/**
  * \brief Sync pulse generator 3, 'Switch off' position (VIDEOSS_TCON0_SPG3POSOFF)
  */
typedef struct stc_VIDEOSS_TCON0_SPG3POSOFF_field {
  uint32_t                         u15SPGPSOFF_Y3:15;
  uint32_t                         u1SPGPSOFF_FIELD3:1;
  uint32_t                         u15SPGPSOFF_X3:15;
  uint32_t                         u1SPGPSOFF_TOGGLE3:1;
} stc_VIDEOSS_TCON0_SPG3POSOFF_field_t;

typedef union un_VIDEOSS_TCON0_SPG3POSOFF {
  uint32_t                         u32Register;
  stc_VIDEOSS_TCON0_SPG3POSOFF_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_TCON0_SPG3POSOFF_t;

/**
  * \brief The Sequencer Pulse Generator 3 Mask Enable register is used to mask the disable of SPG 3 (VIDEOSS_TCON0_SPG3MASKOFF)
  */
typedef struct stc_VIDEOSS_TCON0_SPG3MASKOFF_field {
  uint32_t                         u31SPGMKOFF3:31;
} stc_VIDEOSS_TCON0_SPG3MASKOFF_field_t;

typedef union un_VIDEOSS_TCON0_SPG3MASKOFF {
  uint32_t                         u32Register;
  stc_VIDEOSS_TCON0_SPG3MASKOFF_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_TCON0_SPG3MASKOFF_t;

/**
  * \brief Sync pulse generator 4, 'Switch on' position (VIDEOSS_TCON0_SPG4POSON)
  */
typedef struct stc_VIDEOSS_TCON0_SPG4POSON_field {
  uint32_t                         u15SPGPSON_Y4:15;
  uint32_t                         u1SPGPSON_FIELD4:1;
  uint32_t                         u15SPGPSON_X4:15;
  uint32_t                         u1SPGPSON_TOGGLE4:1;
} stc_VIDEOSS_TCON0_SPG4POSON_field_t;

typedef union un_VIDEOSS_TCON0_SPG4POSON {
  uint32_t                         u32Register;
  stc_VIDEOSS_TCON0_SPG4POSON_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_TCON0_SPG4POSON_t;

/**
  * \brief The Sequencer Pulse Generator 4 Mask Enable register is used to mask the enable of SPG 4 (VIDEOSS_TCON0_SPG4MASKON)
  */
typedef struct stc_VIDEOSS_TCON0_SPG4MASKON_field {
  uint32_t                         u31SPGMKON4:31;
} stc_VIDEOSS_TCON0_SPG4MASKON_field_t;

typedef union un_VIDEOSS_TCON0_SPG4MASKON {
  uint32_t                         u32Register;
  stc_VIDEOSS_TCON0_SPG4MASKON_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_TCON0_SPG4MASKON_t;

/**
  * \brief Sync pulse generator 4, 'Switch off' position (VIDEOSS_TCON0_SPG4POSOFF)
  */
typedef struct stc_VIDEOSS_TCON0_SPG4POSOFF_field {
  uint32_t                         u15SPGPSOFF_Y4:15;
  uint32_t                         u1SPGPSOFF_FIELD4:1;
  uint32_t                         u15SPGPSOFF_X4:15;
  uint32_t                         u1SPGPSOFF_TOGGLE4:1;
} stc_VIDEOSS_TCON0_SPG4POSOFF_field_t;

typedef union un_VIDEOSS_TCON0_SPG4POSOFF {
  uint32_t                         u32Register;
  stc_VIDEOSS_TCON0_SPG4POSOFF_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_TCON0_SPG4POSOFF_t;

/**
  * \brief The Sequencer Pulse Generator 4 Mask Enable register is used to mask the disable of SPG 4 (VIDEOSS_TCON0_SPG4MASKOFF)
  */
typedef struct stc_VIDEOSS_TCON0_SPG4MASKOFF_field {
  uint32_t                         u31SPGMKOFF4:31;
} stc_VIDEOSS_TCON0_SPG4MASKOFF_field_t;

typedef union un_VIDEOSS_TCON0_SPG4MASKOFF {
  uint32_t                         u32Register;
  stc_VIDEOSS_TCON0_SPG4MASKOFF_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_TCON0_SPG4MASKOFF_t;

/**
  * \brief Sync pulse generator 5, 'Switch on' position (VIDEOSS_TCON0_SPG5POSON)
  */
typedef struct stc_VIDEOSS_TCON0_SPG5POSON_field {
  uint32_t                         u15SPGPSON_Y5:15;
  uint32_t                         u1SPGPSON_FIELD5:1;
  uint32_t                         u15SPGPSON_X5:15;
  uint32_t                         u1SPGPSON_TOGGLE5:1;
} stc_VIDEOSS_TCON0_SPG5POSON_field_t;

typedef union un_VIDEOSS_TCON0_SPG5POSON {
  uint32_t                         u32Register;
  stc_VIDEOSS_TCON0_SPG5POSON_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_TCON0_SPG5POSON_t;

/**
  * \brief The Sequencer Pulse Generator 5 Mask Enable register is used to mask the enable of SPG 5 (VIDEOSS_TCON0_SPG5MASKON)
  */
typedef struct stc_VIDEOSS_TCON0_SPG5MASKON_field {
  uint32_t                         u31SPGMKON5:31;
} stc_VIDEOSS_TCON0_SPG5MASKON_field_t;

typedef union un_VIDEOSS_TCON0_SPG5MASKON {
  uint32_t                         u32Register;
  stc_VIDEOSS_TCON0_SPG5MASKON_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_TCON0_SPG5MASKON_t;

/**
  * \brief Sync pulse generator 5, 'Switch off' position (VIDEOSS_TCON0_SPG5POSOFF)
  */
typedef struct stc_VIDEOSS_TCON0_SPG5POSOFF_field {
  uint32_t                         u15SPGPSOFF_Y5:15;
  uint32_t                         u1SPGPSOFF_FIELD5:1;
  uint32_t                         u15SPGPSOFF_X5:15;
  uint32_t                         u1SPGPSOFF_TOGGLE5:1;
} stc_VIDEOSS_TCON0_SPG5POSOFF_field_t;

typedef union un_VIDEOSS_TCON0_SPG5POSOFF {
  uint32_t                         u32Register;
  stc_VIDEOSS_TCON0_SPG5POSOFF_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_TCON0_SPG5POSOFF_t;

/**
  * \brief The Sequencer Pulse Generator 5 Mask Enable register is used to mask the disable of SPG 5 (VIDEOSS_TCON0_SPG5MASKOFF)
  */
typedef struct stc_VIDEOSS_TCON0_SPG5MASKOFF_field {
  uint32_t                         u31SPGMKOFF5:31;
} stc_VIDEOSS_TCON0_SPG5MASKOFF_field_t;

typedef union un_VIDEOSS_TCON0_SPG5MASKOFF {
  uint32_t                         u32Register;
  stc_VIDEOSS_TCON0_SPG5MASKOFF_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_TCON0_SPG5MASKOFF_t;

/**
  * \brief Sync pulse generator 6, 'Switch on' position (VIDEOSS_TCON0_SPG6POSON)
  */
typedef struct stc_VIDEOSS_TCON0_SPG6POSON_field {
  uint32_t                         u15SPGPSON_Y6:15;
  uint32_t                         u1SPGPSON_FIELD6:1;
  uint32_t                         u15SPGPSON_X6:15;
  uint32_t                         u1SPGPSON_TOGGLE6:1;
} stc_VIDEOSS_TCON0_SPG6POSON_field_t;

typedef union un_VIDEOSS_TCON0_SPG6POSON {
  uint32_t                         u32Register;
  stc_VIDEOSS_TCON0_SPG6POSON_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_TCON0_SPG6POSON_t;

/**
  * \brief The Sequencer Pulse Generator 6 Mask Enable register is used to mask the enable of SPG 6 (VIDEOSS_TCON0_SPG6MASKON)
  */
typedef struct stc_VIDEOSS_TCON0_SPG6MASKON_field {
  uint32_t                         u31SPGMKON6:31;
} stc_VIDEOSS_TCON0_SPG6MASKON_field_t;

typedef union un_VIDEOSS_TCON0_SPG6MASKON {
  uint32_t                         u32Register;
  stc_VIDEOSS_TCON0_SPG6MASKON_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_TCON0_SPG6MASKON_t;

/**
  * \brief Sync pulse generator 6, 'Switch off' position (VIDEOSS_TCON0_SPG6POSOFF)
  */
typedef struct stc_VIDEOSS_TCON0_SPG6POSOFF_field {
  uint32_t                         u15SPGPSOFF_Y6:15;
  uint32_t                         u1SPGPSOFF_FIELD6:1;
  uint32_t                         u15SPGPSOFF_X6:15;
  uint32_t                         u1SPGPSOFF_TOGGLE6:1;
} stc_VIDEOSS_TCON0_SPG6POSOFF_field_t;

typedef union un_VIDEOSS_TCON0_SPG6POSOFF {
  uint32_t                         u32Register;
  stc_VIDEOSS_TCON0_SPG6POSOFF_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_TCON0_SPG6POSOFF_t;

/**
  * \brief The Sequencer Pulse Generator 6 Mask Enable register is used to mask the disable of SPG 6 (VIDEOSS_TCON0_SPG6MASKOFF)
  */
typedef struct stc_VIDEOSS_TCON0_SPG6MASKOFF_field {
  uint32_t                         u31SPGMKOFF6:31;
} stc_VIDEOSS_TCON0_SPG6MASKOFF_field_t;

typedef union un_VIDEOSS_TCON0_SPG6MASKOFF {
  uint32_t                         u32Register;
  stc_VIDEOSS_TCON0_SPG6MASKOFF_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_TCON0_SPG6MASKOFF_t;

/**
  * \brief Sync pulse generator 7, 'Switch on' position (VIDEOSS_TCON0_SPG7POSON)
  */
typedef struct stc_VIDEOSS_TCON0_SPG7POSON_field {
  uint32_t                         u15SPGPSON_Y7:15;
  uint32_t                         u1SPGPSON_FIELD7:1;
  uint32_t                         u15SPGPSON_X7:15;
  uint32_t                         u1SPGPSON_TOGGLE7:1;
} stc_VIDEOSS_TCON0_SPG7POSON_field_t;

typedef union un_VIDEOSS_TCON0_SPG7POSON {
  uint32_t                         u32Register;
  stc_VIDEOSS_TCON0_SPG7POSON_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_TCON0_SPG7POSON_t;

/**
  * \brief The Sequencer Pulse Generator 7 Mask Enable register is used to mask the enable of SPG 7 (VIDEOSS_TCON0_SPG7MASKON)
  */
typedef struct stc_VIDEOSS_TCON0_SPG7MASKON_field {
  uint32_t                         u31SPGMKON7:31;
} stc_VIDEOSS_TCON0_SPG7MASKON_field_t;

typedef union un_VIDEOSS_TCON0_SPG7MASKON {
  uint32_t                         u32Register;
  stc_VIDEOSS_TCON0_SPG7MASKON_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_TCON0_SPG7MASKON_t;

/**
  * \brief Sync pulse generator 7, 'Switch off' position (VIDEOSS_TCON0_SPG7POSOFF)
  */
typedef struct stc_VIDEOSS_TCON0_SPG7POSOFF_field {
  uint32_t                         u15SPGPSOFF_Y7:15;
  uint32_t                         u1SPGPSOFF_FIELD7:1;
  uint32_t                         u15SPGPSOFF_X7:15;
  uint32_t                         u1SPGPSOFF_TOGGLE7:1;
} stc_VIDEOSS_TCON0_SPG7POSOFF_field_t;

typedef union un_VIDEOSS_TCON0_SPG7POSOFF {
  uint32_t                         u32Register;
  stc_VIDEOSS_TCON0_SPG7POSOFF_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_TCON0_SPG7POSOFF_t;

/**
  * \brief The Sequencer Pulse Generator 7 Mask Enable register is used to mask the disable of SPG 7 (VIDEOSS_TCON0_SPG7MASKOFF)
  */
typedef struct stc_VIDEOSS_TCON0_SPG7MASKOFF_field {
  uint32_t                         u31SPGMKOFF7:31;
} stc_VIDEOSS_TCON0_SPG7MASKOFF_field_t;

typedef union un_VIDEOSS_TCON0_SPG7MASKOFF {
  uint32_t                         u32Register;
  stc_VIDEOSS_TCON0_SPG7MASKOFF_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_TCON0_SPG7MASKOFF_t;

/**
  * \brief Sync pulse generator 8, 'Switch on' position (VIDEOSS_TCON0_SPG8POSON)
  */
typedef struct stc_VIDEOSS_TCON0_SPG8POSON_field {
  uint32_t                         u15SPGPSON_Y8:15;
  uint32_t                         u1SPGPSON_FIELD8:1;
  uint32_t                         u15SPGPSON_X8:15;
  uint32_t                         u1SPGPSON_TOGGLE8:1;
} stc_VIDEOSS_TCON0_SPG8POSON_field_t;

typedef union un_VIDEOSS_TCON0_SPG8POSON {
  uint32_t                         u32Register;
  stc_VIDEOSS_TCON0_SPG8POSON_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_TCON0_SPG8POSON_t;

/**
  * \brief The Sequencer Pulse Generator 8 Mask Enable register is used to mask the enable of SPG 8 (VIDEOSS_TCON0_SPG8MASKON)
  */
typedef struct stc_VIDEOSS_TCON0_SPG8MASKON_field {
  uint32_t                         u31SPGMKON8:31;
} stc_VIDEOSS_TCON0_SPG8MASKON_field_t;

typedef union un_VIDEOSS_TCON0_SPG8MASKON {
  uint32_t                         u32Register;
  stc_VIDEOSS_TCON0_SPG8MASKON_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_TCON0_SPG8MASKON_t;

/**
  * \brief Sync pulse generator 8, 'Switch off' position (VIDEOSS_TCON0_SPG8POSOFF)
  */
typedef struct stc_VIDEOSS_TCON0_SPG8POSOFF_field {
  uint32_t                         u15SPGPSOFF_Y8:15;
  uint32_t                         u1SPGPSOFF_FIELD8:1;
  uint32_t                         u15SPGPSOFF_X8:15;
  uint32_t                         u1SPGPSOFF_TOGGLE8:1;
} stc_VIDEOSS_TCON0_SPG8POSOFF_field_t;

typedef union un_VIDEOSS_TCON0_SPG8POSOFF {
  uint32_t                         u32Register;
  stc_VIDEOSS_TCON0_SPG8POSOFF_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_TCON0_SPG8POSOFF_t;

/**
  * \brief The Sequencer Pulse Generator 8 Mask Enable register is used to mask the disable of SPG 8 (VIDEOSS_TCON0_SPG8MASKOFF)
  */
typedef struct stc_VIDEOSS_TCON0_SPG8MASKOFF_field {
  uint32_t                         u31SPGMKOFF8:31;
} stc_VIDEOSS_TCON0_SPG8MASKOFF_field_t;

typedef union un_VIDEOSS_TCON0_SPG8MASKOFF {
  uint32_t                         u32Register;
  stc_VIDEOSS_TCON0_SPG8MASKOFF_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_TCON0_SPG8MASKOFF_t;

/**
  * \brief Sync pulse generator 9, 'Switch on' position (VIDEOSS_TCON0_SPG9POSON)
  */
typedef struct stc_VIDEOSS_TCON0_SPG9POSON_field {
  uint32_t                         u15SPGPSON_Y9:15;
  uint32_t                         u1SPGPSON_FIELD9:1;
  uint32_t                         u15SPGPSON_X9:15;
  uint32_t                         u1SPGPSON_TOGGLE9:1;
} stc_VIDEOSS_TCON0_SPG9POSON_field_t;

typedef union un_VIDEOSS_TCON0_SPG9POSON {
  uint32_t                         u32Register;
  stc_VIDEOSS_TCON0_SPG9POSON_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_TCON0_SPG9POSON_t;

/**
  * \brief The Sequencer Pulse Generator 9 Mask Enable register is used to mask the enable of SPG 9 (VIDEOSS_TCON0_SPG9MASKON)
  */
typedef struct stc_VIDEOSS_TCON0_SPG9MASKON_field {
  uint32_t                         u31SPGMKON9:31;
} stc_VIDEOSS_TCON0_SPG9MASKON_field_t;

typedef union un_VIDEOSS_TCON0_SPG9MASKON {
  uint32_t                         u32Register;
  stc_VIDEOSS_TCON0_SPG9MASKON_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_TCON0_SPG9MASKON_t;

/**
  * \brief Sync pulse generator 9, 'Switch off' position (VIDEOSS_TCON0_SPG9POSOFF)
  */
typedef struct stc_VIDEOSS_TCON0_SPG9POSOFF_field {
  uint32_t                         u15SPGPSOFF_Y9:15;
  uint32_t                         u1SPGPSOFF_FIELD9:1;
  uint32_t                         u15SPGPSOFF_X9:15;
  uint32_t                         u1SPGPSOFF_TOGGLE9:1;
} stc_VIDEOSS_TCON0_SPG9POSOFF_field_t;

typedef union un_VIDEOSS_TCON0_SPG9POSOFF {
  uint32_t                         u32Register;
  stc_VIDEOSS_TCON0_SPG9POSOFF_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_TCON0_SPG9POSOFF_t;

/**
  * \brief The Sequencer Pulse Generator 9 Mask Enable register is used to mask the disable of SPG 9 (VIDEOSS_TCON0_SPG9MASKOFF)
  */
typedef struct stc_VIDEOSS_TCON0_SPG9MASKOFF_field {
  uint32_t                         u31SPGMKOFF9:31;
} stc_VIDEOSS_TCON0_SPG9MASKOFF_field_t;

typedef union un_VIDEOSS_TCON0_SPG9MASKOFF {
  uint32_t                         u32Register;
  stc_VIDEOSS_TCON0_SPG9MASKOFF_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_TCON0_SPG9MASKOFF_t;

/**
  * \brief Sync pulse generator 10, 'Switch on' position (VIDEOSS_TCON0_SPG10POSON)
  */
typedef struct stc_VIDEOSS_TCON0_SPG10POSON_field {
  uint32_t                         u15SPGPSON_Y10:15;
  uint32_t                         u1SPGPSON_FIELD10:1;
  uint32_t                         u15SPGPSON_X10:15;
  uint32_t                         u1SPGPSON_TOGGLE10:1;
} stc_VIDEOSS_TCON0_SPG10POSON_field_t;

typedef union un_VIDEOSS_TCON0_SPG10POSON {
  uint32_t                         u32Register;
  stc_VIDEOSS_TCON0_SPG10POSON_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_TCON0_SPG10POSON_t;

/**
  * \brief The Sequencer Pulse Generator 10 Mask Enable register is used to mask the enable of SPG 10 (VIDEOSS_TCON0_SPG10MASKON)
  */
typedef struct stc_VIDEOSS_TCON0_SPG10MASKON_field {
  uint32_t                         u31SPGMKON10:31;
} stc_VIDEOSS_TCON0_SPG10MASKON_field_t;

typedef union un_VIDEOSS_TCON0_SPG10MASKON {
  uint32_t                         u32Register;
  stc_VIDEOSS_TCON0_SPG10MASKON_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_TCON0_SPG10MASKON_t;

/**
  * \brief Sync pulse generator 10, 'Switch off' position (VIDEOSS_TCON0_SPG10POSOFF)
  */
typedef struct stc_VIDEOSS_TCON0_SPG10POSOFF_field {
  uint32_t                         u15SPGPSOFF_Y10:15;
  uint32_t                         u1SPGPSOFF_FIELD10:1;
  uint32_t                         u15SPGPSOFF_X10:15;
  uint32_t                         u1SPGPSOFF_TOGGLE10:1;
} stc_VIDEOSS_TCON0_SPG10POSOFF_field_t;

typedef union un_VIDEOSS_TCON0_SPG10POSOFF {
  uint32_t                         u32Register;
  stc_VIDEOSS_TCON0_SPG10POSOFF_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_TCON0_SPG10POSOFF_t;

/**
  * \brief The Sequencer Pulse Generator 10 Mask Enable register is used to mask the disable of SPG 10 (VIDEOSS_TCON0_SPG10MASKOFF)
  */
typedef struct stc_VIDEOSS_TCON0_SPG10MASKOFF_field {
  uint32_t                         u31SPGMKOFF10:31;
} stc_VIDEOSS_TCON0_SPG10MASKOFF_field_t;

typedef union un_VIDEOSS_TCON0_SPG10MASKOFF {
  uint32_t                         u32Register;
  stc_VIDEOSS_TCON0_SPG10MASKOFF_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_TCON0_SPG10MASKOFF_t;

/**
  * \brief Sync pulse generator 11, 'Switch on' position (VIDEOSS_TCON0_SPG11POSON)
  */
typedef struct stc_VIDEOSS_TCON0_SPG11POSON_field {
  uint32_t                         u15SPGPSON_Y11:15;
  uint32_t                         u1SPGPSON_FIELD11:1;
  uint32_t                         u15SPGPSON_X11:15;
  uint32_t                         u1SPGPSON_TOGGLE11:1;
} stc_VIDEOSS_TCON0_SPG11POSON_field_t;

typedef union un_VIDEOSS_TCON0_SPG11POSON {
  uint32_t                         u32Register;
  stc_VIDEOSS_TCON0_SPG11POSON_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_TCON0_SPG11POSON_t;

/**
  * \brief The Sequencer Pulse Generator 11 Mask Enable register is used to mask the enable of SPG 11 (VIDEOSS_TCON0_SPG11MASKON)
  */
typedef struct stc_VIDEOSS_TCON0_SPG11MASKON_field {
  uint32_t                         u31SPGMKON11:31;
} stc_VIDEOSS_TCON0_SPG11MASKON_field_t;

typedef union un_VIDEOSS_TCON0_SPG11MASKON {
  uint32_t                         u32Register;
  stc_VIDEOSS_TCON0_SPG11MASKON_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_TCON0_SPG11MASKON_t;

/**
  * \brief Sync pulse generator 11, 'Switch off' position (VIDEOSS_TCON0_SPG11POSOFF)
  */
typedef struct stc_VIDEOSS_TCON0_SPG11POSOFF_field {
  uint32_t                         u15SPGPSOFF_Y11:15;
  uint32_t                         u1SPGPSOFF_FIELD11:1;
  uint32_t                         u15SPGPSOFF_X11:15;
  uint32_t                         u1SPGPSOFF_TOGGLE11:1;
} stc_VIDEOSS_TCON0_SPG11POSOFF_field_t;

typedef union un_VIDEOSS_TCON0_SPG11POSOFF {
  uint32_t                         u32Register;
  stc_VIDEOSS_TCON0_SPG11POSOFF_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_TCON0_SPG11POSOFF_t;

/**
  * \brief The Sequencer Pulse Generator 11 Mask Enable register is used to mask the disable of SPG 11 (VIDEOSS_TCON0_SPG11MASKOFF)
  */
typedef struct stc_VIDEOSS_TCON0_SPG11MASKOFF_field {
  uint32_t                         u31SPGMKOFF11:31;
} stc_VIDEOSS_TCON0_SPG11MASKOFF_field_t;

typedef union un_VIDEOSS_TCON0_SPG11MASKOFF {
  uint32_t                         u32Register;
  stc_VIDEOSS_TCON0_SPG11MASKOFF_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_TCON0_SPG11MASKOFF_t;

/**
  * \brief Selection of input signals of sync mixer (VIDEOSS_TCON0_SMX0SIGS)
  */
typedef struct stc_VIDEOSS_TCON0_SMX0SIGS_field {
  uint32_t                         u3SMX0SIGS_S0:3;
  uint32_t                         u3SMX0SIGS_S1:3;
  uint32_t                         u3SMX0SIGS_S2:3;
  uint32_t                         u3SMX0SIGS_S3:3;
  uint32_t                         u3SMX0SIGS_S4:3;
  uint32_t                         :17;
} stc_VIDEOSS_TCON0_SMX0SIGS_field_t;

typedef union un_VIDEOSS_TCON0_SMX0SIGS {
  uint32_t                         u32Register;
  stc_VIDEOSS_TCON0_SMX0SIGS_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_TCON0_SMX0SIGS_t;

/**
  * \brief The sync mixer output is the result of the function table a=s4*2**4+s3*2**3+s2*2**2+s1*2**1+s0*2**0 whereby a is bit number and s result of sync mixer input selection (VIDEOSS_TCON0_SMX0FCTTABLE)
  */
typedef struct stc_VIDEOSS_TCON0_SMX0FCTTABLE_field {
  uint32_t                         u32SMXFCT0:32;
} stc_VIDEOSS_TCON0_SMX0FCTTABLE_field_t;

typedef union un_VIDEOSS_TCON0_SMX0FCTTABLE {
  uint32_t                         u32Register;
  stc_VIDEOSS_TCON0_SMX0FCTTABLE_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_TCON0_SMX0FCTTABLE_t;

/**
  * \brief Selection of input signals of sync mixer (VIDEOSS_TCON0_SMX1SIGS)
  */
typedef struct stc_VIDEOSS_TCON0_SMX1SIGS_field {
  uint32_t                         u3SMX1SIGS_S0:3;
  uint32_t                         u3SMX1SIGS_S1:3;
  uint32_t                         u3SMX1SIGS_S2:3;
  uint32_t                         u3SMX1SIGS_S3:3;
  uint32_t                         u3SMX1SIGS_S4:3;
  uint32_t                         :17;
} stc_VIDEOSS_TCON0_SMX1SIGS_field_t;

typedef union un_VIDEOSS_TCON0_SMX1SIGS {
  uint32_t                         u32Register;
  stc_VIDEOSS_TCON0_SMX1SIGS_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_TCON0_SMX1SIGS_t;

/**
  * \brief The sync mixer output is the result of the function table a=s4*2**4+s3*2**3+s2*2**2+s1*2**1+s0*2**0 whereby a is bit number and s result of sync mixer input selection (VIDEOSS_TCON0_SMX1FCTTABLE)
  */
typedef struct stc_VIDEOSS_TCON0_SMX1FCTTABLE_field {
  uint32_t                         u32SMXFCT1:32;
} stc_VIDEOSS_TCON0_SMX1FCTTABLE_field_t;

typedef union un_VIDEOSS_TCON0_SMX1FCTTABLE {
  uint32_t                         u32Register;
  stc_VIDEOSS_TCON0_SMX1FCTTABLE_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_TCON0_SMX1FCTTABLE_t;

/**
  * \brief Selection of input signals of sync mixer (VIDEOSS_TCON0_SMX2SIGS)
  */
typedef struct stc_VIDEOSS_TCON0_SMX2SIGS_field {
  uint32_t                         u3SMX2SIGS_S0:3;
  uint32_t                         u3SMX2SIGS_S1:3;
  uint32_t                         u3SMX2SIGS_S2:3;
  uint32_t                         u3SMX2SIGS_S3:3;
  uint32_t                         u3SMX2SIGS_S4:3;
  uint32_t                         :17;
} stc_VIDEOSS_TCON0_SMX2SIGS_field_t;

typedef union un_VIDEOSS_TCON0_SMX2SIGS {
  uint32_t                         u32Register;
  stc_VIDEOSS_TCON0_SMX2SIGS_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_TCON0_SMX2SIGS_t;

/**
  * \brief The sync mixer output is the result of the function table a=s4*2**4+s**3*2**3+s2*2**2+s1*2**1+s0*2**0 whereby a is bit number and s result of sync mixer input selection (VIDEOSS_TCON0_SMX2FCTTABLE)
  */
typedef struct stc_VIDEOSS_TCON0_SMX2FCTTABLE_field {
  uint32_t                         u32SMXFCT2:32;
} stc_VIDEOSS_TCON0_SMX2FCTTABLE_field_t;

typedef union un_VIDEOSS_TCON0_SMX2FCTTABLE {
  uint32_t                         u32Register;
  stc_VIDEOSS_TCON0_SMX2FCTTABLE_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_TCON0_SMX2FCTTABLE_t;

/**
  * \brief Selection of input signals of sync mixer (VIDEOSS_TCON0_SMX3SIGS)
  */
typedef struct stc_VIDEOSS_TCON0_SMX3SIGS_field {
  uint32_t                         u3SMX3SIGS_S0:3;
  uint32_t                         u3SMX3SIGS_S1:3;
  uint32_t                         u3SMX3SIGS_S2:3;
  uint32_t                         u3SMX3SIGS_S3:3;
  uint32_t                         u3SMX3SIGS_S4:3;
  uint32_t                         :17;
} stc_VIDEOSS_TCON0_SMX3SIGS_field_t;

typedef union un_VIDEOSS_TCON0_SMX3SIGS {
  uint32_t                         u32Register;
  stc_VIDEOSS_TCON0_SMX3SIGS_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_TCON0_SMX3SIGS_t;

/**
  * \brief The sync mixer output is the result of the function table a=s4*2**4+s3*2**3+s2*2**2+s1*2**1+s0*2**0 whereby a is bit number and s result of sync mixer input selection (VIDEOSS_TCON0_SMX3FCTTABLE)
  */
typedef struct stc_VIDEOSS_TCON0_SMX3FCTTABLE_field {
  uint32_t                         u32SMXFCT3:32;
} stc_VIDEOSS_TCON0_SMX3FCTTABLE_field_t;

typedef union un_VIDEOSS_TCON0_SMX3FCTTABLE {
  uint32_t                         u32Register;
  stc_VIDEOSS_TCON0_SMX3FCTTABLE_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_TCON0_SMX3FCTTABLE_t;

/**
  * \brief Selection of input signals of sync mixer (VIDEOSS_TCON0_SMX4SIGS)
  */
typedef struct stc_VIDEOSS_TCON0_SMX4SIGS_field {
  uint32_t                         u3SMX4SIGS_S0:3;
  uint32_t                         u3SMX4SIGS_S1:3;
  uint32_t                         u3SMX4SIGS_S2:3;
  uint32_t                         u3SMX4SIGS_S3:3;
  uint32_t                         u3SMX4SIGS_S4:3;
  uint32_t                         :17;
} stc_VIDEOSS_TCON0_SMX4SIGS_field_t;

typedef union un_VIDEOSS_TCON0_SMX4SIGS {
  uint32_t                         u32Register;
  stc_VIDEOSS_TCON0_SMX4SIGS_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_TCON0_SMX4SIGS_t;

/**
  * \brief The sync mixer output is the result of the function table a=s4*2**4+s3*2**3+s2*2**2+s1*2**1+s0*2**0 whereby a is bit number and s result of sync mixer input selection (VIDEOSS_TCON0_SMX4FCTTABLE)
  */
typedef struct stc_VIDEOSS_TCON0_SMX4FCTTABLE_field {
  uint32_t                         u32SMXFCT4:32;
} stc_VIDEOSS_TCON0_SMX4FCTTABLE_field_t;

typedef union un_VIDEOSS_TCON0_SMX4FCTTABLE {
  uint32_t                         u32Register;
  stc_VIDEOSS_TCON0_SMX4FCTTABLE_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_TCON0_SMX4FCTTABLE_t;

/**
  * \brief Selection of input signals of sync mixer (VIDEOSS_TCON0_SMX5SIGS)
  */
typedef struct stc_VIDEOSS_TCON0_SMX5SIGS_field {
  uint32_t                         u3SMX5SIGS_S0:3;
  uint32_t                         u3SMX5SIGS_S1:3;
  uint32_t                         u3SMX5SIGS_S2:3;
  uint32_t                         u3SMX5SIGS_S3:3;
  uint32_t                         u3SMX5SIGS_S4:3;
  uint32_t                         :17;
} stc_VIDEOSS_TCON0_SMX5SIGS_field_t;

typedef union un_VIDEOSS_TCON0_SMX5SIGS {
  uint32_t                         u32Register;
  stc_VIDEOSS_TCON0_SMX5SIGS_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_TCON0_SMX5SIGS_t;

/**
  * \brief The sync mixer output is the result of the function table a=s4*2**4+s3*2**3+s2*2**2+s1*2**1+s0*2**0 whereby a is bit number and s result of sync mixer input selection (VIDEOSS_TCON0_SMX5FCTTABLE)
  */
typedef struct stc_VIDEOSS_TCON0_SMX5FCTTABLE_field {
  uint32_t                         u32SMXFCT5:32;
} stc_VIDEOSS_TCON0_SMX5FCTTABLE_field_t;

typedef union un_VIDEOSS_TCON0_SMX5FCTTABLE {
  uint32_t                         u32Register;
  stc_VIDEOSS_TCON0_SMX5FCTTABLE_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_TCON0_SMX5FCTTABLE_t;

/**
  * \brief Selection of input signals of sync mixer (VIDEOSS_TCON0_SMX6SIGS)
  */
typedef struct stc_VIDEOSS_TCON0_SMX6SIGS_field {
  uint32_t                         u3SMX6SIGS_S0:3;
  uint32_t                         u3SMX6SIGS_S1:3;
  uint32_t                         u3SMX6SIGS_S2:3;
  uint32_t                         u3SMX6SIGS_S3:3;
  uint32_t                         u3SMX6SIGS_S4:3;
  uint32_t                         :17;
} stc_VIDEOSS_TCON0_SMX6SIGS_field_t;

typedef union un_VIDEOSS_TCON0_SMX6SIGS {
  uint32_t                         u32Register;
  stc_VIDEOSS_TCON0_SMX6SIGS_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_TCON0_SMX6SIGS_t;

/**
  * \brief The sync mixer output is the result of the function table a=s4*2**4+s3*2**3+s2*2**2+s1*2**1+s0*2**0 whereby a is bit number and s result of sync mixer input selection (VIDEOSS_TCON0_SMX6FCTTABLE)
  */
typedef struct stc_VIDEOSS_TCON0_SMX6FCTTABLE_field {
  uint32_t                         u32SMXFCT6:32;
} stc_VIDEOSS_TCON0_SMX6FCTTABLE_field_t;

typedef union un_VIDEOSS_TCON0_SMX6FCTTABLE {
  uint32_t                         u32Register;
  stc_VIDEOSS_TCON0_SMX6FCTTABLE_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_TCON0_SMX6FCTTABLE_t;

/**
  * \brief Selection of input signals of sync mixer (VIDEOSS_TCON0_SMX7SIGS)
  */
typedef struct stc_VIDEOSS_TCON0_SMX7SIGS_field {
  uint32_t                         u3SMX7SIGS_S0:3;
  uint32_t                         u3SMX7SIGS_S1:3;
  uint32_t                         u3SMX7SIGS_S2:3;
  uint32_t                         u3SMX7SIGS_S3:3;
  uint32_t                         u3SMX7SIGS_S4:3;
  uint32_t                         :17;
} stc_VIDEOSS_TCON0_SMX7SIGS_field_t;

typedef union un_VIDEOSS_TCON0_SMX7SIGS {
  uint32_t                         u32Register;
  stc_VIDEOSS_TCON0_SMX7SIGS_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_TCON0_SMX7SIGS_t;

/**
  * \brief The sync mixer output is the result of the function table a=s4*2**4+s3*2**3+s2*2**2+s1*2**1+s0*2**0 whereby a is bit number and s result of sync mixer input selection (VIDEOSS_TCON0_SMX7FCTTABLE)
  */
typedef struct stc_VIDEOSS_TCON0_SMX7FCTTABLE_field {
  uint32_t                         u32SMXFCT7:32;
} stc_VIDEOSS_TCON0_SMX7FCTTABLE_field_t;

typedef union un_VIDEOSS_TCON0_SMX7FCTTABLE {
  uint32_t                         u32Register;
  stc_VIDEOSS_TCON0_SMX7FCTTABLE_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_TCON0_SMX7FCTTABLE_t;

/**
  * \brief Selection of input signals of sync mixer (VIDEOSS_TCON0_SMX8SIGS)
  */
typedef struct stc_VIDEOSS_TCON0_SMX8SIGS_field {
  uint32_t                         u3SMX8SIGS_S0:3;
  uint32_t                         u3SMX8SIGS_S1:3;
  uint32_t                         u3SMX8SIGS_S2:3;
  uint32_t                         u3SMX8SIGS_S3:3;
  uint32_t                         u3SMX8SIGS_S4:3;
  uint32_t                         :17;
} stc_VIDEOSS_TCON0_SMX8SIGS_field_t;

typedef union un_VIDEOSS_TCON0_SMX8SIGS {
  uint32_t                         u32Register;
  stc_VIDEOSS_TCON0_SMX8SIGS_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_TCON0_SMX8SIGS_t;

/**
  * \brief The sync mixer output is the result of the function table a=s4*2**4+s3*2**3+s2*2**2+s1*2**1+s0*2**0 whereby a is bit number and s result of sync mixer input selection (VIDEOSS_TCON0_SMX8FCTTABLE)
  */
typedef struct stc_VIDEOSS_TCON0_SMX8FCTTABLE_field {
  uint32_t                         u32SMXFCT8:32;
} stc_VIDEOSS_TCON0_SMX8FCTTABLE_field_t;

typedef union un_VIDEOSS_TCON0_SMX8FCTTABLE {
  uint32_t                         u32Register;
  stc_VIDEOSS_TCON0_SMX8FCTTABLE_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_TCON0_SMX8FCTTABLE_t;

/**
  * \brief Selection of input signals of sync mixer (VIDEOSS_TCON0_SMX9SIGS)
  */
typedef struct stc_VIDEOSS_TCON0_SMX9SIGS_field {
  uint32_t                         u3SMX9SIGS_S0:3;
  uint32_t                         u3SMX9SIGS_S1:3;
  uint32_t                         u3SMX9SIGS_S2:3;
  uint32_t                         u3SMX9SIGS_S3:3;
  uint32_t                         u3SMX9SIGS_S4:3;
  uint32_t                         :17;
} stc_VIDEOSS_TCON0_SMX9SIGS_field_t;

typedef union un_VIDEOSS_TCON0_SMX9SIGS {
  uint32_t                         u32Register;
  stc_VIDEOSS_TCON0_SMX9SIGS_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_TCON0_SMX9SIGS_t;

/**
  * \brief The sync mixer output is the result of the function table a=s4*2**4+s3*2**3+s2*2**2+s1*2**1+s0*2**0 whereby a is bit number and s result of sync mixer input selection (VIDEOSS_TCON0_SMX9FCTTABLE)
  */
typedef struct stc_VIDEOSS_TCON0_SMX9FCTTABLE_field {
  uint32_t                         u32SMXFCT9:32;
} stc_VIDEOSS_TCON0_SMX9FCTTABLE_field_t;

typedef union un_VIDEOSS_TCON0_SMX9FCTTABLE {
  uint32_t                         u32Register;
  stc_VIDEOSS_TCON0_SMX9FCTTABLE_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_TCON0_SMX9FCTTABLE_t;

/**
  * \brief Selection of input signals of sync mixer (VIDEOSS_TCON0_SMX10SIGS)
  */
typedef struct stc_VIDEOSS_TCON0_SMX10SIGS_field {
  uint32_t                         u3SMX10SIGS_S0:3;
  uint32_t                         u3SMX10SIGS_S1:3;
  uint32_t                         u3SMX10SIGS_S2:3;
  uint32_t                         u3SMX10SIGS_S3:3;
  uint32_t                         u3SMX10SIGS_S4:3;
  uint32_t                         :17;
} stc_VIDEOSS_TCON0_SMX10SIGS_field_t;

typedef union un_VIDEOSS_TCON0_SMX10SIGS {
  uint32_t                         u32Register;
  stc_VIDEOSS_TCON0_SMX10SIGS_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_TCON0_SMX10SIGS_t;

/**
  * \brief The sync mixer output is the result of the function table a=s4*2**4+s3*2**3+s2*2**2+s1*2**1+s0*2**0 whereby a is bit number and s result of sync mixer input selection (VIDEOSS_TCON0_SMX10FCTTABLE)
  */
typedef struct stc_VIDEOSS_TCON0_SMX10FCTTABLE_field {
  uint32_t                         u32SMXFCT10:32;
} stc_VIDEOSS_TCON0_SMX10FCTTABLE_field_t;

typedef union un_VIDEOSS_TCON0_SMX10FCTTABLE {
  uint32_t                         u32Register;
  stc_VIDEOSS_TCON0_SMX10FCTTABLE_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_TCON0_SMX10FCTTABLE_t;

/**
  * \brief Selection of input signals of sync mixer (VIDEOSS_TCON0_SMX11SIGS)
  */
typedef struct stc_VIDEOSS_TCON0_SMX11SIGS_field {
  uint32_t                         u3SMX11SIGS_S0:3;
  uint32_t                         u3SMX11SIGS_S1:3;
  uint32_t                         u3SMX11SIGS_S2:3;
  uint32_t                         u3SMX11SIGS_S3:3;
  uint32_t                         u3SMX11SIGS_S4:3;
  uint32_t                         :17;
} stc_VIDEOSS_TCON0_SMX11SIGS_field_t;

typedef union un_VIDEOSS_TCON0_SMX11SIGS {
  uint32_t                         u32Register;
  stc_VIDEOSS_TCON0_SMX11SIGS_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_TCON0_SMX11SIGS_t;

/**
  * \brief The sync mixer output is the result of the function table a=s4*2**4+s3*2**3+s2*2**2+s1*2**1+s0*2**0 whereby a is bit number and s result of sync mixer input selection (VIDEOSS_TCON0_SMX11FCTTABLE)
  */
typedef struct stc_VIDEOSS_TCON0_SMX11FCTTABLE_field {
  uint32_t                         u32SMXFCT11:32;
} stc_VIDEOSS_TCON0_SMX11FCTTABLE_field_t;

typedef union un_VIDEOSS_TCON0_SMX11FCTTABLE {
  uint32_t                         u32Register;
  stc_VIDEOSS_TCON0_SMX11FCTTABLE_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_TCON0_SMX11FCTTABLE_t;



/**
  * \brief Display engine control register. (VIDEOSS_DISENGCFG1_CTL)
  */
typedef struct stc_VIDEOSS_DISENGCFG1_CTL_field {
  uint32_t                         u1DSPCLKDIVIDE:1;
  uint32_t                         :31;
} stc_VIDEOSS_DISENGCFG1_CTL_field_t;

typedef union un_VIDEOSS_DISENGCFG1_CTL {
  uint32_t                         u32Register;
  stc_VIDEOSS_DISENGCFG1_CTL_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_DISENGCFG1_CTL_t;

/**
  * \brief Polarity control for TCon input and corresponding top-level output (TCon by-pass port). (VIDEOSS_DISENGCFG1_POLARITYCTRL)
  */
typedef struct stc_VIDEOSS_DISENGCFG1_POLARITYCTRL_field {
  uint32_t                         u1POLHS:1;
  uint32_t                         u1POLVS:1;
  uint32_t                         u1POLEN:1;
  uint32_t                         u1PIXINV:1;
  uint32_t                         :28;
} stc_VIDEOSS_DISENGCFG1_POLARITYCTRL_field_t;

typedef union un_VIDEOSS_DISENGCFG1_POLARITYCTRL {
  uint32_t                         u32Register;
  stc_VIDEOSS_DISENGCFG1_POLARITYCTRL_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_DISENGCFG1_POLARITYCTRL_t;

/**
  * \brief Tap selection for Signature. (VIDEOSS_DISENGCFG1_SIGSELECT)
  */
typedef struct stc_VIDEOSS_DISENGCFG1_SIGSELECT_field {
  uint32_t                         u2SIG_SELECT:2;
  uint32_t                         :30;
} stc_VIDEOSS_DISENGCFG1_SIGSELECT_field_t;

typedef union un_VIDEOSS_DISENGCFG1_SIGSELECT {
  uint32_t                         u32Register;
  stc_VIDEOSS_DISENGCFG1_SIGSELECT_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_DISENGCFG1_SIGSELECT_t;

/**
  * \brief Tap selection for Frame Dump. (VIDEOSS_DISENGCFG1_DUMPSELECT)
  */
typedef struct stc_VIDEOSS_DISENGCFG1_DUMPSELECT_field {
  uint32_t                         :8;
  uint32_t                         u2DUMP_SELECT:2;
  uint32_t                         :22;
} stc_VIDEOSS_DISENGCFG1_DUMPSELECT_field_t;

typedef union un_VIDEOSS_DISENGCFG1_DUMPSELECT {
  uint32_t                         u32Register;
  stc_VIDEOSS_DISENGCFG1_DUMPSELECT_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_DISENGCFG1_DUMPSELECT_t;



/**
  * \brief Global configuration shared by all evaluation windows. (VIDEOSS_SIG1_STATICCONTROL)
  */
typedef struct stc_VIDEOSS_SIG1_STATICCONTROL_field {
  uint32_t                         u1SHDEN:1;
  uint32_t                         :3;
  uint32_t                         u1SHDLDSEL:1;
  uint32_t                         :11;
  uint32_t                         u8ERRTHRES:8;
  uint32_t                         u8ERRTHRESRESET:8;
} stc_VIDEOSS_SIG1_STATICCONTROL_field_t;

typedef union un_VIDEOSS_SIG1_STATICCONTROL {
  uint32_t                         u32Register;
  stc_VIDEOSS_SIG1_STATICCONTROL_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_SIG1_STATICCONTROL_t;

/**
  * \brief Overlay color for evaluation windows in panic mode. (VIDEOSS_SIG1_PANICCOLOR)
  */
typedef struct stc_VIDEOSS_SIG1_PANICCOLOR_field {
  uint32_t                         :7;
  uint32_t                         u1PANICALPHA:1;
  uint32_t                         u8PANICBLUE:8;
  uint32_t                         u8PANICGREEN:8;
  uint32_t                         u8PANICRED:8;
} stc_VIDEOSS_SIG1_PANICCOLOR_field_t;

typedef union un_VIDEOSS_SIG1_PANICCOLOR {
  uint32_t                         u32Register;
  stc_VIDEOSS_SIG1_PANICCOLOR_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_SIG1_PANICCOLOR_t;

/**
  * \brief Control settings for evaluation window 0. (VIDEOSS_SIG1_EVALCONTROL0)
  */
typedef struct stc_VIDEOSS_SIG1_EVALCONTROL0_field {
  uint32_t                         u1ENEVALWIN0:1;
  uint32_t                         u1ENCRC0:1;
  uint32_t                         :6;
  uint32_t                         u1ALPHAMASK0:1;
  uint32_t                         u1ALPHAINV0:1;
  uint32_t                         :6;
  uint32_t                         u1ENLOCALPANIC0:1;
  uint32_t                         u1ENGLOBALPANIC0:1;
  uint32_t                         :14;
} stc_VIDEOSS_SIG1_EVALCONTROL0_field_t;

typedef union un_VIDEOSS_SIG1_EVALCONTROL0 {
  uint32_t                         u32Register;
  stc_VIDEOSS_SIG1_EVALCONTROL0_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_SIG1_EVALCONTROL0_t;

/**
  * \brief Upper left corner of evaluation window 0. (VIDEOSS_SIG1_EVALUPPERLEFT0)
  */
typedef struct stc_VIDEOSS_SIG1_EVALUPPERLEFT0_field {
  uint32_t                         u14XEVALUPPERLEFT0:14;
  uint32_t                         :2;
  uint32_t                         u14YEVALUPPERLEFT0:14;
  uint32_t                         :2;
} stc_VIDEOSS_SIG1_EVALUPPERLEFT0_field_t;

typedef union un_VIDEOSS_SIG1_EVALUPPERLEFT0 {
  uint32_t                         u32Register;
  stc_VIDEOSS_SIG1_EVALUPPERLEFT0_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_SIG1_EVALUPPERLEFT0_t;

/**
  * \brief Lower right corner of evaluation window 0. (VIDEOSS_SIG1_EVALLOWERRIGHT0)
  */
typedef struct stc_VIDEOSS_SIG1_EVALLOWERRIGHT0_field {
  uint32_t                         u14XEVALLOWERRIGHT0:14;
  uint32_t                         :2;
  uint32_t                         u14YEVALLOWERRIGHT0:14;
  uint32_t                         :2;
} stc_VIDEOSS_SIG1_EVALLOWERRIGHT0_field_t;

typedef union un_VIDEOSS_SIG1_EVALLOWERRIGHT0 {
  uint32_t                         u32Register;
  stc_VIDEOSS_SIG1_EVALLOWERRIGHT0_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_SIG1_EVALLOWERRIGHT0_t;

/**
  * \brief Reference signature of red channel for evaluation window 0. (VIDEOSS_SIG1_SIGCRCREDREF0)
  */
typedef struct stc_VIDEOSS_SIG1_SIGCRCREDREF0_field {
  uint32_t                         u32SIGCRCREDREF0:32;
} stc_VIDEOSS_SIG1_SIGCRCREDREF0_field_t;

typedef union un_VIDEOSS_SIG1_SIGCRCREDREF0 {
  uint32_t                         u32Register;
  stc_VIDEOSS_SIG1_SIGCRCREDREF0_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_SIG1_SIGCRCREDREF0_t;

/**
  * \brief Reference signature of green channel for evaluation window 0. (VIDEOSS_SIG1_SIGCRCGREENREF0)
  */
typedef struct stc_VIDEOSS_SIG1_SIGCRCGREENREF0_field {
  uint32_t                         u32SIGCRCGREENREF0:32;
} stc_VIDEOSS_SIG1_SIGCRCGREENREF0_field_t;

typedef union un_VIDEOSS_SIG1_SIGCRCGREENREF0 {
  uint32_t                         u32Register;
  stc_VIDEOSS_SIG1_SIGCRCGREENREF0_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_SIG1_SIGCRCGREENREF0_t;

/**
  * \brief Reference signature of blue channel for evaluation window 0. (VIDEOSS_SIG1_SIGCRCBLUEREF0)
  */
typedef struct stc_VIDEOSS_SIG1_SIGCRCBLUEREF0_field {
  uint32_t                         u32SIGCRCBLUEREF0:32;
} stc_VIDEOSS_SIG1_SIGCRCBLUEREF0_field_t;

typedef union un_VIDEOSS_SIG1_SIGCRCBLUEREF0 {
  uint32_t                         u32Register;
  stc_VIDEOSS_SIG1_SIGCRCBLUEREF0_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_SIG1_SIGCRCBLUEREF0_t;

/**
  * \brief Measured signature of red channel for evaluation window 0. (VIDEOSS_SIG1_SIGCRCRED0)
  */
typedef struct stc_VIDEOSS_SIG1_SIGCRCRED0_field {
  uint32_t                         u32SIGCRCRED0:32;
} stc_VIDEOSS_SIG1_SIGCRCRED0_field_t;

typedef union un_VIDEOSS_SIG1_SIGCRCRED0 {
  uint32_t                         u32Register;
  stc_VIDEOSS_SIG1_SIGCRCRED0_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_SIG1_SIGCRCRED0_t;

/**
  * \brief Measured signature of green channel for evaluation window 0. (VIDEOSS_SIG1_SIGCRCGREEN0)
  */
typedef struct stc_VIDEOSS_SIG1_SIGCRCGREEN0_field {
  uint32_t                         u32SIGCRCGREEN0:32;
} stc_VIDEOSS_SIG1_SIGCRCGREEN0_field_t;

typedef union un_VIDEOSS_SIG1_SIGCRCGREEN0 {
  uint32_t                         u32Register;
  stc_VIDEOSS_SIG1_SIGCRCGREEN0_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_SIG1_SIGCRCGREEN0_t;

/**
  * \brief Measured signature of blue channel for evaluation window 0. (VIDEOSS_SIG1_SIGCRCBLUE0)
  */
typedef struct stc_VIDEOSS_SIG1_SIGCRCBLUE0_field {
  uint32_t                         u32SIGCRCBLUE0:32;
} stc_VIDEOSS_SIG1_SIGCRCBLUE0_field_t;

typedef union un_VIDEOSS_SIG1_SIGCRCBLUE0 {
  uint32_t                         u32Register;
  stc_VIDEOSS_SIG1_SIGCRCBLUE0_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_SIG1_SIGCRCBLUE0_t;

/**
  * \brief Control settings for evaluation window 1. (VIDEOSS_SIG1_EVALCONTROL1)
  */
typedef struct stc_VIDEOSS_SIG1_EVALCONTROL1_field {
  uint32_t                         u1ENEVALWIN1:1;
  uint32_t                         u1ENCRC1:1;
  uint32_t                         :6;
  uint32_t                         u1ALPHAMASK1:1;
  uint32_t                         u1ALPHAINV1:1;
  uint32_t                         :6;
  uint32_t                         u1ENLOCALPANIC1:1;
  uint32_t                         u1ENGLOBALPANIC1:1;
  uint32_t                         :14;
} stc_VIDEOSS_SIG1_EVALCONTROL1_field_t;

typedef union un_VIDEOSS_SIG1_EVALCONTROL1 {
  uint32_t                         u32Register;
  stc_VIDEOSS_SIG1_EVALCONTROL1_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_SIG1_EVALCONTROL1_t;

/**
  * \brief Upper left corner of evaluation window 1. (VIDEOSS_SIG1_EVALUPPERLEFT1)
  */
typedef struct stc_VIDEOSS_SIG1_EVALUPPERLEFT1_field {
  uint32_t                         u14XEVALUPPERLEFT1:14;
  uint32_t                         :2;
  uint32_t                         u14YEVALUPPERLEFT1:14;
  uint32_t                         :2;
} stc_VIDEOSS_SIG1_EVALUPPERLEFT1_field_t;

typedef union un_VIDEOSS_SIG1_EVALUPPERLEFT1 {
  uint32_t                         u32Register;
  stc_VIDEOSS_SIG1_EVALUPPERLEFT1_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_SIG1_EVALUPPERLEFT1_t;

/**
  * \brief Lower right corner of evaluation window 1. (VIDEOSS_SIG1_EVALLOWERRIGHT1)
  */
typedef struct stc_VIDEOSS_SIG1_EVALLOWERRIGHT1_field {
  uint32_t                         u14XEVALLOWERRIGHT1:14;
  uint32_t                         :2;
  uint32_t                         u14YEVALLOWERRIGHT1:14;
  uint32_t                         :2;
} stc_VIDEOSS_SIG1_EVALLOWERRIGHT1_field_t;

typedef union un_VIDEOSS_SIG1_EVALLOWERRIGHT1 {
  uint32_t                         u32Register;
  stc_VIDEOSS_SIG1_EVALLOWERRIGHT1_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_SIG1_EVALLOWERRIGHT1_t;

/**
  * \brief Reference signature of red channel for evaluation window 1. (VIDEOSS_SIG1_SIGCRCREDREF1)
  */
typedef struct stc_VIDEOSS_SIG1_SIGCRCREDREF1_field {
  uint32_t                         u32SIGCRCREDREF1:32;
} stc_VIDEOSS_SIG1_SIGCRCREDREF1_field_t;

typedef union un_VIDEOSS_SIG1_SIGCRCREDREF1 {
  uint32_t                         u32Register;
  stc_VIDEOSS_SIG1_SIGCRCREDREF1_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_SIG1_SIGCRCREDREF1_t;

/**
  * \brief Reference signature of green channel for evaluation window 1. (VIDEOSS_SIG1_SIGCRCGREENREF1)
  */
typedef struct stc_VIDEOSS_SIG1_SIGCRCGREENREF1_field {
  uint32_t                         u32SIGCRCGREENREF1:32;
} stc_VIDEOSS_SIG1_SIGCRCGREENREF1_field_t;

typedef union un_VIDEOSS_SIG1_SIGCRCGREENREF1 {
  uint32_t                         u32Register;
  stc_VIDEOSS_SIG1_SIGCRCGREENREF1_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_SIG1_SIGCRCGREENREF1_t;

/**
  * \brief Reference signature of blue channel for evaluation window 1. (VIDEOSS_SIG1_SIGCRCBLUEREF1)
  */
typedef struct stc_VIDEOSS_SIG1_SIGCRCBLUEREF1_field {
  uint32_t                         u32SIGCRCBLUEREF1:32;
} stc_VIDEOSS_SIG1_SIGCRCBLUEREF1_field_t;

typedef union un_VIDEOSS_SIG1_SIGCRCBLUEREF1 {
  uint32_t                         u32Register;
  stc_VIDEOSS_SIG1_SIGCRCBLUEREF1_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_SIG1_SIGCRCBLUEREF1_t;

/**
  * \brief Measured signature of red channel for evaluation window 1. (VIDEOSS_SIG1_SIGCRCRED1)
  */
typedef struct stc_VIDEOSS_SIG1_SIGCRCRED1_field {
  uint32_t                         u32SIGCRCRED1:32;
} stc_VIDEOSS_SIG1_SIGCRCRED1_field_t;

typedef union un_VIDEOSS_SIG1_SIGCRCRED1 {
  uint32_t                         u32Register;
  stc_VIDEOSS_SIG1_SIGCRCRED1_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_SIG1_SIGCRCRED1_t;

/**
  * \brief Measured signature of green channel for evaluation window 1. (VIDEOSS_SIG1_SIGCRCGREEN1)
  */
typedef struct stc_VIDEOSS_SIG1_SIGCRCGREEN1_field {
  uint32_t                         u32SIGCRCGREEN1:32;
} stc_VIDEOSS_SIG1_SIGCRCGREEN1_field_t;

typedef union un_VIDEOSS_SIG1_SIGCRCGREEN1 {
  uint32_t                         u32Register;
  stc_VIDEOSS_SIG1_SIGCRCGREEN1_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_SIG1_SIGCRCGREEN1_t;

/**
  * \brief Measured signature of blue channel for evaluation window 1. (VIDEOSS_SIG1_SIGCRCBLUE1)
  */
typedef struct stc_VIDEOSS_SIG1_SIGCRCBLUE1_field {
  uint32_t                         u32SIGCRCBLUE1:32;
} stc_VIDEOSS_SIG1_SIGCRCBLUE1_field_t;

typedef union un_VIDEOSS_SIG1_SIGCRCBLUE1 {
  uint32_t                         u32Register;
  stc_VIDEOSS_SIG1_SIGCRCBLUE1_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_SIG1_SIGCRCBLUE1_t;

/**
  * \brief Control settings for evaluation window 2. (VIDEOSS_SIG1_EVALCONTROL2)
  */
typedef struct stc_VIDEOSS_SIG1_EVALCONTROL2_field {
  uint32_t                         u1ENEVALWIN2:1;
  uint32_t                         u1ENCRC2:1;
  uint32_t                         :6;
  uint32_t                         u1ALPHAMASK2:1;
  uint32_t                         u1ALPHAINV2:1;
  uint32_t                         :6;
  uint32_t                         u1ENLOCALPANIC2:1;
  uint32_t                         u1ENGLOBALPANIC2:1;
  uint32_t                         :14;
} stc_VIDEOSS_SIG1_EVALCONTROL2_field_t;

typedef union un_VIDEOSS_SIG1_EVALCONTROL2 {
  uint32_t                         u32Register;
  stc_VIDEOSS_SIG1_EVALCONTROL2_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_SIG1_EVALCONTROL2_t;

/**
  * \brief Upper left corner of evaluation window 2. (VIDEOSS_SIG1_EVALUPPERLEFT2)
  */
typedef struct stc_VIDEOSS_SIG1_EVALUPPERLEFT2_field {
  uint32_t                         u14XEVALUPPERLEFT2:14;
  uint32_t                         :2;
  uint32_t                         u14YEVALUPPERLEFT2:14;
  uint32_t                         :2;
} stc_VIDEOSS_SIG1_EVALUPPERLEFT2_field_t;

typedef union un_VIDEOSS_SIG1_EVALUPPERLEFT2 {
  uint32_t                         u32Register;
  stc_VIDEOSS_SIG1_EVALUPPERLEFT2_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_SIG1_EVALUPPERLEFT2_t;

/**
  * \brief Lower right corner of evaluation window 2. (VIDEOSS_SIG1_EVALLOWERRIGHT2)
  */
typedef struct stc_VIDEOSS_SIG1_EVALLOWERRIGHT2_field {
  uint32_t                         u14XEVALLOWERRIGHT2:14;
  uint32_t                         :2;
  uint32_t                         u14YEVALLOWERRIGHT2:14;
  uint32_t                         :2;
} stc_VIDEOSS_SIG1_EVALLOWERRIGHT2_field_t;

typedef union un_VIDEOSS_SIG1_EVALLOWERRIGHT2 {
  uint32_t                         u32Register;
  stc_VIDEOSS_SIG1_EVALLOWERRIGHT2_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_SIG1_EVALLOWERRIGHT2_t;

/**
  * \brief Reference signature of red channel for evaluation window 2. (VIDEOSS_SIG1_SIGCRCREDREF2)
  */
typedef struct stc_VIDEOSS_SIG1_SIGCRCREDREF2_field {
  uint32_t                         u32SIGCRCREDREF2:32;
} stc_VIDEOSS_SIG1_SIGCRCREDREF2_field_t;

typedef union un_VIDEOSS_SIG1_SIGCRCREDREF2 {
  uint32_t                         u32Register;
  stc_VIDEOSS_SIG1_SIGCRCREDREF2_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_SIG1_SIGCRCREDREF2_t;

/**
  * \brief Reference signature of green channel for evaluation window 2. (VIDEOSS_SIG1_SIGCRCGREENREF2)
  */
typedef struct stc_VIDEOSS_SIG1_SIGCRCGREENREF2_field {
  uint32_t                         u32SIGCRCGREENREF2:32;
} stc_VIDEOSS_SIG1_SIGCRCGREENREF2_field_t;

typedef union un_VIDEOSS_SIG1_SIGCRCGREENREF2 {
  uint32_t                         u32Register;
  stc_VIDEOSS_SIG1_SIGCRCGREENREF2_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_SIG1_SIGCRCGREENREF2_t;

/**
  * \brief Reference signature of blue channel for evaluation window 2. (VIDEOSS_SIG1_SIGCRCBLUEREF2)
  */
typedef struct stc_VIDEOSS_SIG1_SIGCRCBLUEREF2_field {
  uint32_t                         u32SIGCRCBLUEREF2:32;
} stc_VIDEOSS_SIG1_SIGCRCBLUEREF2_field_t;

typedef union un_VIDEOSS_SIG1_SIGCRCBLUEREF2 {
  uint32_t                         u32Register;
  stc_VIDEOSS_SIG1_SIGCRCBLUEREF2_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_SIG1_SIGCRCBLUEREF2_t;

/**
  * \brief Measured signature of red channel for evaluation window 2. (VIDEOSS_SIG1_SIGCRCRED2)
  */
typedef struct stc_VIDEOSS_SIG1_SIGCRCRED2_field {
  uint32_t                         u32SIGCRCRED2:32;
} stc_VIDEOSS_SIG1_SIGCRCRED2_field_t;

typedef union un_VIDEOSS_SIG1_SIGCRCRED2 {
  uint32_t                         u32Register;
  stc_VIDEOSS_SIG1_SIGCRCRED2_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_SIG1_SIGCRCRED2_t;

/**
  * \brief Measured signature of green channel for evaluation window 2. (VIDEOSS_SIG1_SIGCRCGREEN2)
  */
typedef struct stc_VIDEOSS_SIG1_SIGCRCGREEN2_field {
  uint32_t                         u32SIGCRCGREEN2:32;
} stc_VIDEOSS_SIG1_SIGCRCGREEN2_field_t;

typedef union un_VIDEOSS_SIG1_SIGCRCGREEN2 {
  uint32_t                         u32Register;
  stc_VIDEOSS_SIG1_SIGCRCGREEN2_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_SIG1_SIGCRCGREEN2_t;

/**
  * \brief Measured signature of blue channel for evaluation window 2. (VIDEOSS_SIG1_SIGCRCBLUE2)
  */
typedef struct stc_VIDEOSS_SIG1_SIGCRCBLUE2_field {
  uint32_t                         u32SIGCRCBLUE2:32;
} stc_VIDEOSS_SIG1_SIGCRCBLUE2_field_t;

typedef union un_VIDEOSS_SIG1_SIGCRCBLUE2 {
  uint32_t                         u32Register;
  stc_VIDEOSS_SIG1_SIGCRCBLUE2_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_SIG1_SIGCRCBLUE2_t;

/**
  * \brief Control settings for evaluation window 3. (VIDEOSS_SIG1_EVALCONTROL3)
  */
typedef struct stc_VIDEOSS_SIG1_EVALCONTROL3_field {
  uint32_t                         u1ENEVALWIN3:1;
  uint32_t                         u1ENCRC3:1;
  uint32_t                         :6;
  uint32_t                         u1ALPHAMASK3:1;
  uint32_t                         u1ALPHAINV3:1;
  uint32_t                         :6;
  uint32_t                         u1ENLOCALPANIC3:1;
  uint32_t                         u1ENGLOBALPANIC3:1;
  uint32_t                         :14;
} stc_VIDEOSS_SIG1_EVALCONTROL3_field_t;

typedef union un_VIDEOSS_SIG1_EVALCONTROL3 {
  uint32_t                         u32Register;
  stc_VIDEOSS_SIG1_EVALCONTROL3_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_SIG1_EVALCONTROL3_t;

/**
  * \brief Upper left corner of evaluation window 3. (VIDEOSS_SIG1_EVALUPPERLEFT3)
  */
typedef struct stc_VIDEOSS_SIG1_EVALUPPERLEFT3_field {
  uint32_t                         u14XEVALUPPERLEFT3:14;
  uint32_t                         :2;
  uint32_t                         u14YEVALUPPERLEFT3:14;
  uint32_t                         :2;
} stc_VIDEOSS_SIG1_EVALUPPERLEFT3_field_t;

typedef union un_VIDEOSS_SIG1_EVALUPPERLEFT3 {
  uint32_t                         u32Register;
  stc_VIDEOSS_SIG1_EVALUPPERLEFT3_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_SIG1_EVALUPPERLEFT3_t;

/**
  * \brief Lower right corner of evaluation window 3. (VIDEOSS_SIG1_EVALLOWERRIGHT3)
  */
typedef struct stc_VIDEOSS_SIG1_EVALLOWERRIGHT3_field {
  uint32_t                         u14XEVALLOWERRIGHT3:14;
  uint32_t                         :2;
  uint32_t                         u14YEVALLOWERRIGHT3:14;
  uint32_t                         :2;
} stc_VIDEOSS_SIG1_EVALLOWERRIGHT3_field_t;

typedef union un_VIDEOSS_SIG1_EVALLOWERRIGHT3 {
  uint32_t                         u32Register;
  stc_VIDEOSS_SIG1_EVALLOWERRIGHT3_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_SIG1_EVALLOWERRIGHT3_t;

/**
  * \brief Reference signature of red channel for evaluation window 3. (VIDEOSS_SIG1_SIGCRCREDREF3)
  */
typedef struct stc_VIDEOSS_SIG1_SIGCRCREDREF3_field {
  uint32_t                         u32SIGCRCREDREF3:32;
} stc_VIDEOSS_SIG1_SIGCRCREDREF3_field_t;

typedef union un_VIDEOSS_SIG1_SIGCRCREDREF3 {
  uint32_t                         u32Register;
  stc_VIDEOSS_SIG1_SIGCRCREDREF3_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_SIG1_SIGCRCREDREF3_t;

/**
  * \brief Reference signature of green channel for evaluation window 3. (VIDEOSS_SIG1_SIGCRCGREENREF3)
  */
typedef struct stc_VIDEOSS_SIG1_SIGCRCGREENREF3_field {
  uint32_t                         u32SIGCRCGREENREF3:32;
} stc_VIDEOSS_SIG1_SIGCRCGREENREF3_field_t;

typedef union un_VIDEOSS_SIG1_SIGCRCGREENREF3 {
  uint32_t                         u32Register;
  stc_VIDEOSS_SIG1_SIGCRCGREENREF3_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_SIG1_SIGCRCGREENREF3_t;

/**
  * \brief Reference signature of blue channel for evaluation window 3. (VIDEOSS_SIG1_SIGCRCBLUEREF3)
  */
typedef struct stc_VIDEOSS_SIG1_SIGCRCBLUEREF3_field {
  uint32_t                         u32SIGCRCBLUEREF3:32;
} stc_VIDEOSS_SIG1_SIGCRCBLUEREF3_field_t;

typedef union un_VIDEOSS_SIG1_SIGCRCBLUEREF3 {
  uint32_t                         u32Register;
  stc_VIDEOSS_SIG1_SIGCRCBLUEREF3_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_SIG1_SIGCRCBLUEREF3_t;

/**
  * \brief Measured signature of red channel for evaluation window 3. (VIDEOSS_SIG1_SIGCRCRED3)
  */
typedef struct stc_VIDEOSS_SIG1_SIGCRCRED3_field {
  uint32_t                         u32SIGCRCRED3:32;
} stc_VIDEOSS_SIG1_SIGCRCRED3_field_t;

typedef union un_VIDEOSS_SIG1_SIGCRCRED3 {
  uint32_t                         u32Register;
  stc_VIDEOSS_SIG1_SIGCRCRED3_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_SIG1_SIGCRCRED3_t;

/**
  * \brief Measured signature of green channel for evaluation window 3. (VIDEOSS_SIG1_SIGCRCGREEN3)
  */
typedef struct stc_VIDEOSS_SIG1_SIGCRCGREEN3_field {
  uint32_t                         u32SIGCRCGREEN3:32;
} stc_VIDEOSS_SIG1_SIGCRCGREEN3_field_t;

typedef union un_VIDEOSS_SIG1_SIGCRCGREEN3 {
  uint32_t                         u32Register;
  stc_VIDEOSS_SIG1_SIGCRCGREEN3_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_SIG1_SIGCRCGREEN3_t;

/**
  * \brief Measured signature of blue channel for evaluation window 3. (VIDEOSS_SIG1_SIGCRCBLUE3)
  */
typedef struct stc_VIDEOSS_SIG1_SIGCRCBLUE3_field {
  uint32_t                         u32SIGCRCBLUE3:32;
} stc_VIDEOSS_SIG1_SIGCRCBLUE3_field_t;

typedef union un_VIDEOSS_SIG1_SIGCRCBLUE3 {
  uint32_t                         u32Register;
  stc_VIDEOSS_SIG1_SIGCRCBLUE3_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_SIG1_SIGCRCBLUE3_t;

/**
  * \brief Control settings for evaluation window 4. (VIDEOSS_SIG1_EVALCONTROL4)
  */
typedef struct stc_VIDEOSS_SIG1_EVALCONTROL4_field {
  uint32_t                         u1ENEVALWIN4:1;
  uint32_t                         u1ENCRC4:1;
  uint32_t                         :6;
  uint32_t                         u1ALPHAMASK4:1;
  uint32_t                         u1ALPHAINV4:1;
  uint32_t                         :6;
  uint32_t                         u1ENLOCALPANIC4:1;
  uint32_t                         u1ENGLOBALPANIC4:1;
  uint32_t                         :14;
} stc_VIDEOSS_SIG1_EVALCONTROL4_field_t;

typedef union un_VIDEOSS_SIG1_EVALCONTROL4 {
  uint32_t                         u32Register;
  stc_VIDEOSS_SIG1_EVALCONTROL4_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_SIG1_EVALCONTROL4_t;

/**
  * \brief Upper left corner of evaluation window 4. (VIDEOSS_SIG1_EVALUPPERLEFT4)
  */
typedef struct stc_VIDEOSS_SIG1_EVALUPPERLEFT4_field {
  uint32_t                         u14XEVALUPPERLEFT4:14;
  uint32_t                         :2;
  uint32_t                         u14YEVALUPPERLEFT4:14;
  uint32_t                         :2;
} stc_VIDEOSS_SIG1_EVALUPPERLEFT4_field_t;

typedef union un_VIDEOSS_SIG1_EVALUPPERLEFT4 {
  uint32_t                         u32Register;
  stc_VIDEOSS_SIG1_EVALUPPERLEFT4_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_SIG1_EVALUPPERLEFT4_t;

/**
  * \brief Lower right corner of evaluation window 4. (VIDEOSS_SIG1_EVALLOWERRIGHT4)
  */
typedef struct stc_VIDEOSS_SIG1_EVALLOWERRIGHT4_field {
  uint32_t                         u14XEVALLOWERRIGHT4:14;
  uint32_t                         :2;
  uint32_t                         u14YEVALLOWERRIGHT4:14;
  uint32_t                         :2;
} stc_VIDEOSS_SIG1_EVALLOWERRIGHT4_field_t;

typedef union un_VIDEOSS_SIG1_EVALLOWERRIGHT4 {
  uint32_t                         u32Register;
  stc_VIDEOSS_SIG1_EVALLOWERRIGHT4_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_SIG1_EVALLOWERRIGHT4_t;

/**
  * \brief Reference signature of red channel for evaluation window 4. (VIDEOSS_SIG1_SIGCRCREDREF4)
  */
typedef struct stc_VIDEOSS_SIG1_SIGCRCREDREF4_field {
  uint32_t                         u32SIGCRCREDREF4:32;
} stc_VIDEOSS_SIG1_SIGCRCREDREF4_field_t;

typedef union un_VIDEOSS_SIG1_SIGCRCREDREF4 {
  uint32_t                         u32Register;
  stc_VIDEOSS_SIG1_SIGCRCREDREF4_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_SIG1_SIGCRCREDREF4_t;

/**
  * \brief Reference signature of green channel for evaluation window 4. (VIDEOSS_SIG1_SIGCRCGREENREF4)
  */
typedef struct stc_VIDEOSS_SIG1_SIGCRCGREENREF4_field {
  uint32_t                         u32SIGCRCGREENREF4:32;
} stc_VIDEOSS_SIG1_SIGCRCGREENREF4_field_t;

typedef union un_VIDEOSS_SIG1_SIGCRCGREENREF4 {
  uint32_t                         u32Register;
  stc_VIDEOSS_SIG1_SIGCRCGREENREF4_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_SIG1_SIGCRCGREENREF4_t;

/**
  * \brief Reference signature of blue channel for evaluation window 4. (VIDEOSS_SIG1_SIGCRCBLUEREF4)
  */
typedef struct stc_VIDEOSS_SIG1_SIGCRCBLUEREF4_field {
  uint32_t                         u32SIGCRCBLUEREF4:32;
} stc_VIDEOSS_SIG1_SIGCRCBLUEREF4_field_t;

typedef union un_VIDEOSS_SIG1_SIGCRCBLUEREF4 {
  uint32_t                         u32Register;
  stc_VIDEOSS_SIG1_SIGCRCBLUEREF4_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_SIG1_SIGCRCBLUEREF4_t;

/**
  * \brief Measured signature of red channel for evaluation window 4. (VIDEOSS_SIG1_SIGCRCRED4)
  */
typedef struct stc_VIDEOSS_SIG1_SIGCRCRED4_field {
  uint32_t                         u32SIGCRCRED4:32;
} stc_VIDEOSS_SIG1_SIGCRCRED4_field_t;

typedef union un_VIDEOSS_SIG1_SIGCRCRED4 {
  uint32_t                         u32Register;
  stc_VIDEOSS_SIG1_SIGCRCRED4_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_SIG1_SIGCRCRED4_t;

/**
  * \brief Measured signature of green channel for evaluation window 4. (VIDEOSS_SIG1_SIGCRCGREEN4)
  */
typedef struct stc_VIDEOSS_SIG1_SIGCRCGREEN4_field {
  uint32_t                         u32SIGCRCGREEN4:32;
} stc_VIDEOSS_SIG1_SIGCRCGREEN4_field_t;

typedef union un_VIDEOSS_SIG1_SIGCRCGREEN4 {
  uint32_t                         u32Register;
  stc_VIDEOSS_SIG1_SIGCRCGREEN4_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_SIG1_SIGCRCGREEN4_t;

/**
  * \brief Measured signature of blue channel for evaluation window 4. (VIDEOSS_SIG1_SIGCRCBLUE4)
  */
typedef struct stc_VIDEOSS_SIG1_SIGCRCBLUE4_field {
  uint32_t                         u32SIGCRCBLUE4:32;
} stc_VIDEOSS_SIG1_SIGCRCBLUE4_field_t;

typedef union un_VIDEOSS_SIG1_SIGCRCBLUE4 {
  uint32_t                         u32Register;
  stc_VIDEOSS_SIG1_SIGCRCBLUE4_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_SIG1_SIGCRCBLUE4_t;

/**
  * \brief Control settings for evaluation window 5. (VIDEOSS_SIG1_EVALCONTROL5)
  */
typedef struct stc_VIDEOSS_SIG1_EVALCONTROL5_field {
  uint32_t                         u1ENEVALWIN5:1;
  uint32_t                         u1ENCRC5:1;
  uint32_t                         :6;
  uint32_t                         u1ALPHAMASK5:1;
  uint32_t                         u1ALPHAINV5:1;
  uint32_t                         :6;
  uint32_t                         u1ENLOCALPANIC5:1;
  uint32_t                         u1ENGLOBALPANIC5:1;
  uint32_t                         :14;
} stc_VIDEOSS_SIG1_EVALCONTROL5_field_t;

typedef union un_VIDEOSS_SIG1_EVALCONTROL5 {
  uint32_t                         u32Register;
  stc_VIDEOSS_SIG1_EVALCONTROL5_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_SIG1_EVALCONTROL5_t;

/**
  * \brief Upper left corner of evaluation window 5. (VIDEOSS_SIG1_EVALUPPERLEFT5)
  */
typedef struct stc_VIDEOSS_SIG1_EVALUPPERLEFT5_field {
  uint32_t                         u14XEVALUPPERLEFT5:14;
  uint32_t                         :2;
  uint32_t                         u14YEVALUPPERLEFT5:14;
  uint32_t                         :2;
} stc_VIDEOSS_SIG1_EVALUPPERLEFT5_field_t;

typedef union un_VIDEOSS_SIG1_EVALUPPERLEFT5 {
  uint32_t                         u32Register;
  stc_VIDEOSS_SIG1_EVALUPPERLEFT5_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_SIG1_EVALUPPERLEFT5_t;

/**
  * \brief Lower right corner of evaluation window 5. (VIDEOSS_SIG1_EVALLOWERRIGHT5)
  */
typedef struct stc_VIDEOSS_SIG1_EVALLOWERRIGHT5_field {
  uint32_t                         u14XEVALLOWERRIGHT5:14;
  uint32_t                         :2;
  uint32_t                         u14YEVALLOWERRIGHT5:14;
  uint32_t                         :2;
} stc_VIDEOSS_SIG1_EVALLOWERRIGHT5_field_t;

typedef union un_VIDEOSS_SIG1_EVALLOWERRIGHT5 {
  uint32_t                         u32Register;
  stc_VIDEOSS_SIG1_EVALLOWERRIGHT5_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_SIG1_EVALLOWERRIGHT5_t;

/**
  * \brief Reference signature of red channel for evaluation window 5. (VIDEOSS_SIG1_SIGCRCREDREF5)
  */
typedef struct stc_VIDEOSS_SIG1_SIGCRCREDREF5_field {
  uint32_t                         u32SIGCRCREDREF5:32;
} stc_VIDEOSS_SIG1_SIGCRCREDREF5_field_t;

typedef union un_VIDEOSS_SIG1_SIGCRCREDREF5 {
  uint32_t                         u32Register;
  stc_VIDEOSS_SIG1_SIGCRCREDREF5_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_SIG1_SIGCRCREDREF5_t;

/**
  * \brief Reference signature of green channel for evaluation window 5. (VIDEOSS_SIG1_SIGCRCGREENREF5)
  */
typedef struct stc_VIDEOSS_SIG1_SIGCRCGREENREF5_field {
  uint32_t                         u32SIGCRCGREENREF5:32;
} stc_VIDEOSS_SIG1_SIGCRCGREENREF5_field_t;

typedef union un_VIDEOSS_SIG1_SIGCRCGREENREF5 {
  uint32_t                         u32Register;
  stc_VIDEOSS_SIG1_SIGCRCGREENREF5_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_SIG1_SIGCRCGREENREF5_t;

/**
  * \brief Reference signature of blue channel for evaluation window 5. (VIDEOSS_SIG1_SIGCRCBLUEREF5)
  */
typedef struct stc_VIDEOSS_SIG1_SIGCRCBLUEREF5_field {
  uint32_t                         u32SIGCRCBLUEREF5:32;
} stc_VIDEOSS_SIG1_SIGCRCBLUEREF5_field_t;

typedef union un_VIDEOSS_SIG1_SIGCRCBLUEREF5 {
  uint32_t                         u32Register;
  stc_VIDEOSS_SIG1_SIGCRCBLUEREF5_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_SIG1_SIGCRCBLUEREF5_t;

/**
  * \brief Measured signature of red channel for evaluation window 5. (VIDEOSS_SIG1_SIGCRCRED5)
  */
typedef struct stc_VIDEOSS_SIG1_SIGCRCRED5_field {
  uint32_t                         u32SIGCRCRED5:32;
} stc_VIDEOSS_SIG1_SIGCRCRED5_field_t;

typedef union un_VIDEOSS_SIG1_SIGCRCRED5 {
  uint32_t                         u32Register;
  stc_VIDEOSS_SIG1_SIGCRCRED5_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_SIG1_SIGCRCRED5_t;

/**
  * \brief Measured signature of green channel for evaluation window 5. (VIDEOSS_SIG1_SIGCRCGREEN5)
  */
typedef struct stc_VIDEOSS_SIG1_SIGCRCGREEN5_field {
  uint32_t                         u32SIGCRCGREEN5:32;
} stc_VIDEOSS_SIG1_SIGCRCGREEN5_field_t;

typedef union un_VIDEOSS_SIG1_SIGCRCGREEN5 {
  uint32_t                         u32Register;
  stc_VIDEOSS_SIG1_SIGCRCGREEN5_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_SIG1_SIGCRCGREEN5_t;

/**
  * \brief Measured signature of blue channel for evaluation window 5. (VIDEOSS_SIG1_SIGCRCBLUE5)
  */
typedef struct stc_VIDEOSS_SIG1_SIGCRCBLUE5_field {
  uint32_t                         u32SIGCRCBLUE5:32;
} stc_VIDEOSS_SIG1_SIGCRCBLUE5_field_t;

typedef union un_VIDEOSS_SIG1_SIGCRCBLUE5 {
  uint32_t                         u32Register;
  stc_VIDEOSS_SIG1_SIGCRCBLUE5_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_SIG1_SIGCRCBLUE5_t;

/**
  * \brief Control settings for evaluation window 6. (VIDEOSS_SIG1_EVALCONTROL6)
  */
typedef struct stc_VIDEOSS_SIG1_EVALCONTROL6_field {
  uint32_t                         u1ENEVALWIN6:1;
  uint32_t                         u1ENCRC6:1;
  uint32_t                         :6;
  uint32_t                         u1ALPHAMASK6:1;
  uint32_t                         u1ALPHAINV6:1;
  uint32_t                         :6;
  uint32_t                         u1ENLOCALPANIC6:1;
  uint32_t                         u1ENGLOBALPANIC6:1;
  uint32_t                         :14;
} stc_VIDEOSS_SIG1_EVALCONTROL6_field_t;

typedef union un_VIDEOSS_SIG1_EVALCONTROL6 {
  uint32_t                         u32Register;
  stc_VIDEOSS_SIG1_EVALCONTROL6_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_SIG1_EVALCONTROL6_t;

/**
  * \brief Upper left corner of evaluation window 6. (VIDEOSS_SIG1_EVALUPPERLEFT6)
  */
typedef struct stc_VIDEOSS_SIG1_EVALUPPERLEFT6_field {
  uint32_t                         u14XEVALUPPERLEFT6:14;
  uint32_t                         :2;
  uint32_t                         u14YEVALUPPERLEFT6:14;
  uint32_t                         :2;
} stc_VIDEOSS_SIG1_EVALUPPERLEFT6_field_t;

typedef union un_VIDEOSS_SIG1_EVALUPPERLEFT6 {
  uint32_t                         u32Register;
  stc_VIDEOSS_SIG1_EVALUPPERLEFT6_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_SIG1_EVALUPPERLEFT6_t;

/**
  * \brief Lower right corner of evaluation window 6. (VIDEOSS_SIG1_EVALLOWERRIGHT6)
  */
typedef struct stc_VIDEOSS_SIG1_EVALLOWERRIGHT6_field {
  uint32_t                         u14XEVALLOWERRIGHT6:14;
  uint32_t                         :2;
  uint32_t                         u14YEVALLOWERRIGHT6:14;
  uint32_t                         :2;
} stc_VIDEOSS_SIG1_EVALLOWERRIGHT6_field_t;

typedef union un_VIDEOSS_SIG1_EVALLOWERRIGHT6 {
  uint32_t                         u32Register;
  stc_VIDEOSS_SIG1_EVALLOWERRIGHT6_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_SIG1_EVALLOWERRIGHT6_t;

/**
  * \brief Reference signature of red channel for evaluation window 6. (VIDEOSS_SIG1_SIGCRCREDREF6)
  */
typedef struct stc_VIDEOSS_SIG1_SIGCRCREDREF6_field {
  uint32_t                         u32SIGCRCREDREF6:32;
} stc_VIDEOSS_SIG1_SIGCRCREDREF6_field_t;

typedef union un_VIDEOSS_SIG1_SIGCRCREDREF6 {
  uint32_t                         u32Register;
  stc_VIDEOSS_SIG1_SIGCRCREDREF6_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_SIG1_SIGCRCREDREF6_t;

/**
  * \brief Reference signature of green channel for evaluation window 6. (VIDEOSS_SIG1_SIGCRCGREENREF6)
  */
typedef struct stc_VIDEOSS_SIG1_SIGCRCGREENREF6_field {
  uint32_t                         u32SIGCRCGREENREF6:32;
} stc_VIDEOSS_SIG1_SIGCRCGREENREF6_field_t;

typedef union un_VIDEOSS_SIG1_SIGCRCGREENREF6 {
  uint32_t                         u32Register;
  stc_VIDEOSS_SIG1_SIGCRCGREENREF6_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_SIG1_SIGCRCGREENREF6_t;

/**
  * \brief Reference signature of blue channel for evaluation window 6. (VIDEOSS_SIG1_SIGCRCBLUEREF6)
  */
typedef struct stc_VIDEOSS_SIG1_SIGCRCBLUEREF6_field {
  uint32_t                         u32SIGCRCBLUEREF6:32;
} stc_VIDEOSS_SIG1_SIGCRCBLUEREF6_field_t;

typedef union un_VIDEOSS_SIG1_SIGCRCBLUEREF6 {
  uint32_t                         u32Register;
  stc_VIDEOSS_SIG1_SIGCRCBLUEREF6_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_SIG1_SIGCRCBLUEREF6_t;

/**
  * \brief Measured signature of red channel for evaluation window 6. (VIDEOSS_SIG1_SIGCRCRED6)
  */
typedef struct stc_VIDEOSS_SIG1_SIGCRCRED6_field {
  uint32_t                         u32SIGCRCRED6:32;
} stc_VIDEOSS_SIG1_SIGCRCRED6_field_t;

typedef union un_VIDEOSS_SIG1_SIGCRCRED6 {
  uint32_t                         u32Register;
  stc_VIDEOSS_SIG1_SIGCRCRED6_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_SIG1_SIGCRCRED6_t;

/**
  * \brief Measured signature of green channel for evaluation window 6. (VIDEOSS_SIG1_SIGCRCGREEN6)
  */
typedef struct stc_VIDEOSS_SIG1_SIGCRCGREEN6_field {
  uint32_t                         u32SIGCRCGREEN6:32;
} stc_VIDEOSS_SIG1_SIGCRCGREEN6_field_t;

typedef union un_VIDEOSS_SIG1_SIGCRCGREEN6 {
  uint32_t                         u32Register;
  stc_VIDEOSS_SIG1_SIGCRCGREEN6_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_SIG1_SIGCRCGREEN6_t;

/**
  * \brief Measured signature of blue channel for evaluation window 6. (VIDEOSS_SIG1_SIGCRCBLUE6)
  */
typedef struct stc_VIDEOSS_SIG1_SIGCRCBLUE6_field {
  uint32_t                         u32SIGCRCBLUE6:32;
} stc_VIDEOSS_SIG1_SIGCRCBLUE6_field_t;

typedef union un_VIDEOSS_SIG1_SIGCRCBLUE6 {
  uint32_t                         u32Register;
  stc_VIDEOSS_SIG1_SIGCRCBLUE6_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_SIG1_SIGCRCBLUE6_t;

/**
  * \brief Control settings for evaluation window 7. (VIDEOSS_SIG1_EVALCONTROL7)
  */
typedef struct stc_VIDEOSS_SIG1_EVALCONTROL7_field {
  uint32_t                         u1ENEVALWIN7:1;
  uint32_t                         u1ENCRC7:1;
  uint32_t                         :6;
  uint32_t                         u1ALPHAMASK7:1;
  uint32_t                         u1ALPHAINV7:1;
  uint32_t                         :6;
  uint32_t                         u1ENLOCALPANIC7:1;
  uint32_t                         u1ENGLOBALPANIC7:1;
  uint32_t                         :14;
} stc_VIDEOSS_SIG1_EVALCONTROL7_field_t;

typedef union un_VIDEOSS_SIG1_EVALCONTROL7 {
  uint32_t                         u32Register;
  stc_VIDEOSS_SIG1_EVALCONTROL7_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_SIG1_EVALCONTROL7_t;

/**
  * \brief Upper left corner of evaluation window 7. (VIDEOSS_SIG1_EVALUPPERLEFT7)
  */
typedef struct stc_VIDEOSS_SIG1_EVALUPPERLEFT7_field {
  uint32_t                         u14XEVALUPPERLEFT7:14;
  uint32_t                         :2;
  uint32_t                         u14YEVALUPPERLEFT7:14;
  uint32_t                         :2;
} stc_VIDEOSS_SIG1_EVALUPPERLEFT7_field_t;

typedef union un_VIDEOSS_SIG1_EVALUPPERLEFT7 {
  uint32_t                         u32Register;
  stc_VIDEOSS_SIG1_EVALUPPERLEFT7_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_SIG1_EVALUPPERLEFT7_t;

/**
  * \brief Lower right corner of evaluation window 7. (VIDEOSS_SIG1_EVALLOWERRIGHT7)
  */
typedef struct stc_VIDEOSS_SIG1_EVALLOWERRIGHT7_field {
  uint32_t                         u14XEVALLOWERRIGHT7:14;
  uint32_t                         :2;
  uint32_t                         u14YEVALLOWERRIGHT7:14;
  uint32_t                         :2;
} stc_VIDEOSS_SIG1_EVALLOWERRIGHT7_field_t;

typedef union un_VIDEOSS_SIG1_EVALLOWERRIGHT7 {
  uint32_t                         u32Register;
  stc_VIDEOSS_SIG1_EVALLOWERRIGHT7_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_SIG1_EVALLOWERRIGHT7_t;

/**
  * \brief Reference signature of red channel for evaluation window 7. (VIDEOSS_SIG1_SIGCRCREDREF7)
  */
typedef struct stc_VIDEOSS_SIG1_SIGCRCREDREF7_field {
  uint32_t                         u32SIGCRCREDREF7:32;
} stc_VIDEOSS_SIG1_SIGCRCREDREF7_field_t;

typedef union un_VIDEOSS_SIG1_SIGCRCREDREF7 {
  uint32_t                         u32Register;
  stc_VIDEOSS_SIG1_SIGCRCREDREF7_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_SIG1_SIGCRCREDREF7_t;

/**
  * \brief Reference signature of green channel for evaluation window 7. (VIDEOSS_SIG1_SIGCRCGREENREF7)
  */
typedef struct stc_VIDEOSS_SIG1_SIGCRCGREENREF7_field {
  uint32_t                         u32SIGCRCGREENREF7:32;
} stc_VIDEOSS_SIG1_SIGCRCGREENREF7_field_t;

typedef union un_VIDEOSS_SIG1_SIGCRCGREENREF7 {
  uint32_t                         u32Register;
  stc_VIDEOSS_SIG1_SIGCRCGREENREF7_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_SIG1_SIGCRCGREENREF7_t;

/**
  * \brief Reference signature of blue channel for evaluation window 7. (VIDEOSS_SIG1_SIGCRCBLUEREF7)
  */
typedef struct stc_VIDEOSS_SIG1_SIGCRCBLUEREF7_field {
  uint32_t                         u32SIGCRCBLUEREF7:32;
} stc_VIDEOSS_SIG1_SIGCRCBLUEREF7_field_t;

typedef union un_VIDEOSS_SIG1_SIGCRCBLUEREF7 {
  uint32_t                         u32Register;
  stc_VIDEOSS_SIG1_SIGCRCBLUEREF7_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_SIG1_SIGCRCBLUEREF7_t;

/**
  * \brief Measured signature of red channel for evaluation window 7. (VIDEOSS_SIG1_SIGCRCRED7)
  */
typedef struct stc_VIDEOSS_SIG1_SIGCRCRED7_field {
  uint32_t                         u32SIGCRCRED7:32;
} stc_VIDEOSS_SIG1_SIGCRCRED7_field_t;

typedef union un_VIDEOSS_SIG1_SIGCRCRED7 {
  uint32_t                         u32Register;
  stc_VIDEOSS_SIG1_SIGCRCRED7_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_SIG1_SIGCRCRED7_t;

/**
  * \brief Measured signature of green channel for evaluation window 7. (VIDEOSS_SIG1_SIGCRCGREEN7)
  */
typedef struct stc_VIDEOSS_SIG1_SIGCRCGREEN7_field {
  uint32_t                         u32SIGCRCGREEN7:32;
} stc_VIDEOSS_SIG1_SIGCRCGREEN7_field_t;

typedef union un_VIDEOSS_SIG1_SIGCRCGREEN7 {
  uint32_t                         u32Register;
  stc_VIDEOSS_SIG1_SIGCRCGREEN7_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_SIG1_SIGCRCGREEN7_t;

/**
  * \brief Measured signature of blue channel for evaluation window 7. (VIDEOSS_SIG1_SIGCRCBLUE7)
  */
typedef struct stc_VIDEOSS_SIG1_SIGCRCBLUE7_field {
  uint32_t                         u32SIGCRCBLUE7:32;
} stc_VIDEOSS_SIG1_SIGCRCBLUE7_field_t;

typedef union un_VIDEOSS_SIG1_SIGCRCBLUE7 {
  uint32_t                         u32Register;
  stc_VIDEOSS_SIG1_SIGCRCBLUE7_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_SIG1_SIGCRCBLUE7_t;

/**
  * \brief Shadow load control register. (VIDEOSS_SIG1_SHADOWLOAD)
  */
typedef struct stc_VIDEOSS_SIG1_SHADOWLOAD_field {
  uint32_t                         u8SHDLDREQ:8;
  uint32_t                         :24;
} stc_VIDEOSS_SIG1_SHADOWLOAD_field_t;

typedef union un_VIDEOSS_SIG1_SHADOWLOAD {
  uint32_t                         u32Register;
  stc_VIDEOSS_SIG1_SHADOWLOAD_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_SIG1_SHADOWLOAD_t;

/**
  * \brief Signature operation mode control. (VIDEOSS_SIG1_CONTINUOUSMODE)
  */
typedef struct stc_VIDEOSS_SIG1_CONTINUOUSMODE_field {
  uint32_t                         u1ENCONT:1;
  uint32_t                         :31;
} stc_VIDEOSS_SIG1_CONTINUOUSMODE_field_t;

typedef union un_VIDEOSS_SIG1_CONTINUOUSMODE {
  uint32_t                         u32Register;
  stc_VIDEOSS_SIG1_CONTINUOUSMODE_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_SIG1_CONTINUOUSMODE_t;

/**
  * \brief Signature measurement trigger. (VIDEOSS_SIG1_SOFTWAREKICK)
  */
typedef struct stc_VIDEOSS_SIG1_SOFTWAREKICK_field {
  uint32_t                         u1KICK:1;
  uint32_t                         :31;
} stc_VIDEOSS_SIG1_SOFTWAREKICK_field_t;

typedef union un_VIDEOSS_SIG1_SOFTWAREKICK {
  uint32_t                         u32Register;
  stc_VIDEOSS_SIG1_SOFTWAREKICK_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_SIG1_SOFTWAREKICK_t;

/**
  * \brief Module status. (VIDEOSS_SIG1_STATUS)
  */
typedef struct stc_VIDEOSS_SIG1_STATUS_field {
  uint32_t                         u8STSSIGERROR:8;
  uint32_t                         :8;
  uint32_t                         u1STSSIGVALID:1;
  uint32_t                         :3;
  uint32_t                         u1STSSIGIDLE:1;
  uint32_t                         :11;
} stc_VIDEOSS_SIG1_STATUS_field_t;

typedef union un_VIDEOSS_SIG1_STATUS {
  uint32_t                         u32Register;
  stc_VIDEOSS_SIG1_STATUS_field_t  stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_SIG1_STATUS_t;



/**
  * \brief FrameGen Static Control Register (VIDEOSS_FRAMEGEN1_FGSTCTRL)
  */
typedef struct stc_VIDEOSS_FRAMEGEN1_FGSTCTRL_field {
  uint32_t                         u1SHDEN:1;
  uint32_t                         u2FGSYNCMODE:2;
  uint32_t                         :29;
} stc_VIDEOSS_FRAMEGEN1_FGSTCTRL_field_t;

typedef union un_VIDEOSS_FRAMEGEN1_FGSTCTRL {
  uint32_t                         u32Register;
  stc_VIDEOSS_FRAMEGEN1_FGSTCTRL_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_FRAMEGEN1_FGSTCTRL_t;

/**
  * \brief FrameGen Horizontal Timing Config Register 1 (VIDEOSS_FRAMEGEN1_HTCFG1)
  */
typedef struct stc_VIDEOSS_FRAMEGEN1_HTCFG1_field {
  uint32_t                         u14HACT:14;
  uint32_t                         :2;
  uint32_t                         u14HTOTAL:14;
  uint32_t                         :2;
} stc_VIDEOSS_FRAMEGEN1_HTCFG1_field_t;

typedef union un_VIDEOSS_FRAMEGEN1_HTCFG1 {
  uint32_t                         u32Register;
  stc_VIDEOSS_FRAMEGEN1_HTCFG1_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_FRAMEGEN1_HTCFG1_t;

/**
  * \brief FrameGen Horizontal Timing Config Register 2 (VIDEOSS_FRAMEGEN1_HTCFG2)
  */
typedef struct stc_VIDEOSS_FRAMEGEN1_HTCFG2_field {
  uint32_t                         u14HSYNC:14;
  uint32_t                         :2;
  uint32_t                         u14HSBP:14;
  uint32_t                         :1;
  uint32_t                         u1HSEN:1;
} stc_VIDEOSS_FRAMEGEN1_HTCFG2_field_t;

typedef union un_VIDEOSS_FRAMEGEN1_HTCFG2 {
  uint32_t                         u32Register;
  stc_VIDEOSS_FRAMEGEN1_HTCFG2_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_FRAMEGEN1_HTCFG2_t;

/**
  * \brief FrameGen Vertical Timing Config Register 1 (VIDEOSS_FRAMEGEN1_VTCFG1)
  */
typedef struct stc_VIDEOSS_FRAMEGEN1_VTCFG1_field {
  uint32_t                         u14VACT:14;
  uint32_t                         :2;
  uint32_t                         u14VTOTAL:14;
  uint32_t                         :2;
} stc_VIDEOSS_FRAMEGEN1_VTCFG1_field_t;

typedef union un_VIDEOSS_FRAMEGEN1_VTCFG1 {
  uint32_t                         u32Register;
  stc_VIDEOSS_FRAMEGEN1_VTCFG1_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_FRAMEGEN1_VTCFG1_t;

/**
  * \brief FrameGen Vertical Timing Config Register 2 (VIDEOSS_FRAMEGEN1_VTCFG2)
  */
typedef struct stc_VIDEOSS_FRAMEGEN1_VTCFG2_field {
  uint32_t                         u14VSYNC:14;
  uint32_t                         :2;
  uint32_t                         u14VSBP:14;
  uint32_t                         :1;
  uint32_t                         u1VSEN:1;
} stc_VIDEOSS_FRAMEGEN1_VTCFG2_field_t;

typedef union un_VIDEOSS_FRAMEGEN1_VTCFG2 {
  uint32_t                         u32Register;
  stc_VIDEOSS_FRAMEGEN1_VTCFG2_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_FRAMEGEN1_VTCFG2_t;

/**
  * \brief Coordinates of the trigger point for generation of the Int0 interrupt signal (VIDEOSS_FRAMEGEN1_INT0CONFIG)
  */
typedef struct stc_VIDEOSS_FRAMEGEN1_INT0CONFIG_field {
  uint32_t                         u14INT0COL:14;
  uint32_t                         :1;
  uint32_t                         u1INT0HSEN:1;
  uint32_t                         u14INT0ROW:14;
  uint32_t                         :1;
  uint32_t                         u1INT0EN:1;
} stc_VIDEOSS_FRAMEGEN1_INT0CONFIG_field_t;

typedef union un_VIDEOSS_FRAMEGEN1_INT0CONFIG {
  uint32_t                         u32Register;
  stc_VIDEOSS_FRAMEGEN1_INT0CONFIG_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_FRAMEGEN1_INT0CONFIG_t;

/**
  * \brief Coordinates of the trigger point for generation of the Int1 interrupt signal (VIDEOSS_FRAMEGEN1_INT1CONFIG)
  */
typedef struct stc_VIDEOSS_FRAMEGEN1_INT1CONFIG_field {
  uint32_t                         u14INT1COL:14;
  uint32_t                         :1;
  uint32_t                         u1INT1HSEN:1;
  uint32_t                         u14INT1ROW:14;
  uint32_t                         :1;
  uint32_t                         u1INT1EN:1;
} stc_VIDEOSS_FRAMEGEN1_INT1CONFIG_field_t;

typedef union un_VIDEOSS_FRAMEGEN1_INT1CONFIG {
  uint32_t                         u32Register;
  stc_VIDEOSS_FRAMEGEN1_INT1CONFIG_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_FRAMEGEN1_INT1CONFIG_t;

/**
  * \brief Coordinates of the trigger point for generation of the Int2 interrupt signal (VIDEOSS_FRAMEGEN1_INT2CONFIG)
  */
typedef struct stc_VIDEOSS_FRAMEGEN1_INT2CONFIG_field {
  uint32_t                         u14INT2COL:14;
  uint32_t                         :1;
  uint32_t                         u1INT2HSEN:1;
  uint32_t                         u14INT2ROW:14;
  uint32_t                         :1;
  uint32_t                         u1INT2EN:1;
} stc_VIDEOSS_FRAMEGEN1_INT2CONFIG_field_t;

typedef union un_VIDEOSS_FRAMEGEN1_INT2CONFIG {
  uint32_t                         u32Register;
  stc_VIDEOSS_FRAMEGEN1_INT2CONFIG_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_FRAMEGEN1_INT2CONFIG_t;

/**
  * \brief Coordinates of the trigger point for generation of the Int3 interrupt signal (VIDEOSS_FRAMEGEN1_INT3CONFIG)
  */
typedef struct stc_VIDEOSS_FRAMEGEN1_INT3CONFIG_field {
  uint32_t                         u14INT3COL:14;
  uint32_t                         :1;
  uint32_t                         u1INT3HSEN:1;
  uint32_t                         u14INT3ROW:14;
  uint32_t                         :1;
  uint32_t                         u1INT3EN:1;
} stc_VIDEOSS_FRAMEGEN1_INT3CONFIG_field_t;

typedef union un_VIDEOSS_FRAMEGEN1_INT3CONFIG {
  uint32_t                         u32Register;
  stc_VIDEOSS_FRAMEGEN1_INT3CONFIG_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_FRAMEGEN1_INT3CONFIG_t;

/**
  * \brief Coordinates of the trigger point for generation of the primary kick signal (VIDEOSS_FRAMEGEN1_PKICKCONFIG)
  */
typedef struct stc_VIDEOSS_FRAMEGEN1_PKICKCONFIG_field {
  uint32_t                         u14PKICKCOL:14;
  uint32_t                         :1;
  uint32_t                         u1PKICKINT0EN:1;
  uint32_t                         u14PKICKROW:14;
  uint32_t                         :1;
  uint32_t                         u1PKICKEN:1;
} stc_VIDEOSS_FRAMEGEN1_PKICKCONFIG_field_t;

typedef union un_VIDEOSS_FRAMEGEN1_PKICKCONFIG {
  uint32_t                         u32Register;
  stc_VIDEOSS_FRAMEGEN1_PKICKCONFIG_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_FRAMEGEN1_PKICKCONFIG_t;

/**
  * \brief Coordinates of the trigger point for generation of the secondary kick signal (VIDEOSS_FRAMEGEN1_SKICKCONFIG)
  */
typedef struct stc_VIDEOSS_FRAMEGEN1_SKICKCONFIG_field {
  uint32_t                         u14SKICKCOL:14;
  uint32_t                         :1;
  uint32_t                         u1SKICKINT1EN:1;
  uint32_t                         u14SKICKROW:14;
  uint32_t                         u1SKICKTRIG:1;
  uint32_t                         u1SKICKEN:1;
} stc_VIDEOSS_FRAMEGEN1_SKICKCONFIG_field_t;

typedef union un_VIDEOSS_FRAMEGEN1_SKICKCONFIG {
  uint32_t                         u32Register;
  stc_VIDEOSS_FRAMEGEN1_SKICKCONFIG_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_FRAMEGEN1_SKICKCONFIG_t;

/**
  * \brief Configuration register for controlling the behavior of the SecSyncStat field in the FgSecChStat register. (VIDEOSS_FRAMEGEN1_SECSTATCONFIG)
  */
typedef struct stc_VIDEOSS_FRAMEGEN1_SECSTATCONFIG_field {
  uint32_t                         u4LEVGOODFRAMES:4;
  uint32_t                         u4LEVBADFRAMES:4;
  uint32_t                         u4LEVSKEWINRANGE:4;
  uint32_t                         :20;
} stc_VIDEOSS_FRAMEGEN1_SECSTATCONFIG_field_t;

typedef union un_VIDEOSS_FRAMEGEN1_SECSTATCONFIG {
  uint32_t                         u32Register;
  stc_VIDEOSS_FRAMEGEN1_SECSTATCONFIG_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_FRAMEGEN1_SECSTATCONFIG_t;

/**
  * \brief FrameGen Skew Regulation Control Register 1. (VIDEOSS_FRAMEGEN1_FGSRCR1)
  */
typedef struct stc_VIDEOSS_FRAMEGEN1_FGSRCR1_field {
  uint32_t                         u1SREN:1;
  uint32_t                         u2SRMODE:2;
  uint32_t                         u1SRADJ:1;
  uint32_t                         u1SREVEN:1;
  uint32_t                         u1SRFASTSYNC:1;
  uint32_t                         u1SRQALIGN:1;
  uint32_t                         u2SRQVAL:2;
  uint32_t                         :7;
  uint32_t                         u1SRDBGDISP:1;
  uint32_t                         u1SREPOFF:1;
  uint32_t                         :14;
} stc_VIDEOSS_FRAMEGEN1_FGSRCR1_field_t;

typedef union un_VIDEOSS_FRAMEGEN1_FGSRCR1 {
  uint32_t                         u32Register;
  stc_VIDEOSS_FRAMEGEN1_FGSRCR1_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_FRAMEGEN1_FGSRCR1_t;

/**
  * \brief FrameGen Skew Regulation Control Register 2 (VIDEOSS_FRAMEGEN1_FGSRCR2)
  */
typedef struct stc_VIDEOSS_FRAMEGEN1_FGSRCR2_field {
  uint32_t                         u14HTOTALMIN:14;
  uint32_t                         :2;
  uint32_t                         u14HTOTALMAX:14;
  uint32_t                         :2;
} stc_VIDEOSS_FRAMEGEN1_FGSRCR2_field_t;

typedef union un_VIDEOSS_FRAMEGEN1_FGSRCR2 {
  uint32_t                         u32Register;
  stc_VIDEOSS_FRAMEGEN1_FGSRCR2_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_FRAMEGEN1_FGSRCR2_t;

/**
  * \brief FrameGen Skew Regulation Control Register 3 (VIDEOSS_FRAMEGEN1_FGSRCR3)
  */
typedef struct stc_VIDEOSS_FRAMEGEN1_FGSRCR3_field {
  uint32_t                         u14VTOTALMIN:14;
  uint32_t                         :2;
  uint32_t                         u14VTOTALMAX:14;
  uint32_t                         :2;
} stc_VIDEOSS_FRAMEGEN1_FGSRCR3_field_t;

typedef union un_VIDEOSS_FRAMEGEN1_FGSRCR3 {
  uint32_t                         u32Register;
  stc_VIDEOSS_FRAMEGEN1_FGSRCR3_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_FRAMEGEN1_FGSRCR3_t;

/**
  * \brief FrameGen Skew Regulation Control Register 4 (VIDEOSS_FRAMEGEN1_FGSRCR4)
  */
typedef struct stc_VIDEOSS_FRAMEGEN1_FGSRCR4_field {
  uint32_t                         u29TARGETSKEW:29;
  uint32_t                         :3;
} stc_VIDEOSS_FRAMEGEN1_FGSRCR4_field_t;

typedef union un_VIDEOSS_FRAMEGEN1_FGSRCR4 {
  uint32_t                         u32Register;
  stc_VIDEOSS_FRAMEGEN1_FGSRCR4_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_FRAMEGEN1_FGSRCR4_t;

/**
  * \brief FrameGen Skew Regulation Control Register 5 (VIDEOSS_FRAMEGEN1_FGSRCR5)
  */
typedef struct stc_VIDEOSS_FRAMEGEN1_FGSRCR5_field {
  uint32_t                         u29SYNCRANGELOW:29;
  uint32_t                         :3;
} stc_VIDEOSS_FRAMEGEN1_FGSRCR5_field_t;

typedef union un_VIDEOSS_FRAMEGEN1_FGSRCR5 {
  uint32_t                         u32Register;
  stc_VIDEOSS_FRAMEGEN1_FGSRCR5_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_FRAMEGEN1_FGSRCR5_t;

/**
  * \brief FrameGen Skew Regulation Control Register 6 (VIDEOSS_FRAMEGEN1_FGSRCR6)
  */
typedef struct stc_VIDEOSS_FRAMEGEN1_FGSRCR6_field {
  uint32_t                         u29SYNCRANGEHIGH:29;
  uint32_t                         :3;
} stc_VIDEOSS_FRAMEGEN1_FGSRCR6_field_t;

typedef union un_VIDEOSS_FRAMEGEN1_FGSRCR6 {
  uint32_t                         u32Register;
  stc_VIDEOSS_FRAMEGEN1_FGSRCR6_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_FRAMEGEN1_FGSRCR6_t;

/**
  * \brief FrameGen Kick System Debug Register (VIDEOSS_FRAMEGEN1_FGKSDR)
  */
typedef struct stc_VIDEOSS_FRAMEGEN1_FGKSDR_field {
  uint32_t                         u3PCNTCPLMAX:3;
  uint32_t                         :13;
  uint32_t                         u3SCNTCPLMAX:3;
  uint32_t                         :13;
} stc_VIDEOSS_FRAMEGEN1_FGKSDR_field_t;

typedef union un_VIDEOSS_FRAMEGEN1_FGKSDR {
  uint32_t                         u32Register;
  stc_VIDEOSS_FRAMEGEN1_FGKSDR_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_FRAMEGEN1_FGKSDR_t;

/**
  * \brief FrameGen Primary Area Config Register 1 (shadowed) (VIDEOSS_FRAMEGEN1_PACFG)
  */
typedef struct stc_VIDEOSS_FRAMEGEN1_PACFG_field {
  uint32_t                         u14PSTARTX:14;
  uint32_t                         :2;
  uint32_t                         u14PSTARTY:14;
  uint32_t                         :2;
} stc_VIDEOSS_FRAMEGEN1_PACFG_field_t;

typedef union un_VIDEOSS_FRAMEGEN1_PACFG {
  uint32_t                         u32Register;
  stc_VIDEOSS_FRAMEGEN1_PACFG_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_FRAMEGEN1_PACFG_t;

/**
  * \brief FrameGen Secondary Area Config Register 1 (shadowed) (VIDEOSS_FRAMEGEN1_SACFG)
  */
typedef struct stc_VIDEOSS_FRAMEGEN1_SACFG_field {
  uint32_t                         u14SSTARTX:14;
  uint32_t                         :2;
  uint32_t                         u14SSTARTY:14;
  uint32_t                         :2;
} stc_VIDEOSS_FRAMEGEN1_SACFG_field_t;

typedef union un_VIDEOSS_FRAMEGEN1_SACFG {
  uint32_t                         u32Register;
  stc_VIDEOSS_FRAMEGEN1_SACFG_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_FRAMEGEN1_SACFG_t;

/**
  * \brief FrameGen Input Control Register (shadowed) (VIDEOSS_FRAMEGEN1_FGINCTRL)
  */
typedef struct stc_VIDEOSS_FRAMEGEN1_FGINCTRL_field {
  uint32_t                         u3FGDM:3;
  uint32_t                         u1ENPRIMALPHA:1;
  uint32_t                         u1ENSECALPHA:1;
  uint32_t                         :27;
} stc_VIDEOSS_FRAMEGEN1_FGINCTRL_field_t;

typedef union un_VIDEOSS_FRAMEGEN1_FGINCTRL {
  uint32_t                         u32Register;
  stc_VIDEOSS_FRAMEGEN1_FGINCTRL_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_FRAMEGEN1_FGINCTRL_t;

/**
  * \brief FrameGen Input Control Panic Register (shadowed) (VIDEOSS_FRAMEGEN1_FGINCTRLPANIC)
  */
typedef struct stc_VIDEOSS_FRAMEGEN1_FGINCTRLPANIC_field {
  uint32_t                         u3FGDMPANIC:3;
  uint32_t                         u1ENPRIMALPHAPANIC:1;
  uint32_t                         u1ENSECALPHAPANIC:1;
  uint32_t                         :27;
} stc_VIDEOSS_FRAMEGEN1_FGINCTRLPANIC_field_t;

typedef union un_VIDEOSS_FRAMEGEN1_FGINCTRLPANIC {
  uint32_t                         u32Register;
  stc_VIDEOSS_FRAMEGEN1_FGINCTRLPANIC_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_FRAMEGEN1_FGINCTRLPANIC_t;

/**
  * \brief FrameGen Constant Color Register (shadowed) (VIDEOSS_FRAMEGEN1_FGCCR)
  */
typedef struct stc_VIDEOSS_FRAMEGEN1_FGCCR_field {
  uint32_t                         u8CCBLUE:8;
  uint32_t                         u8CCGREEN:8;
  uint32_t                         u8CCRED:8;
  uint32_t                         u1CCALPHA:1;
  uint32_t                         :7;
} stc_VIDEOSS_FRAMEGEN1_FGCCR_field_t;

typedef union un_VIDEOSS_FRAMEGEN1_FGCCR {
  uint32_t                         u32Register;
  stc_VIDEOSS_FRAMEGEN1_FGCCR_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_FRAMEGEN1_FGCCR_t;

/**
  * \brief Options for blend operations. (shadowed) (VIDEOSS_FRAMEGEN1_BLENDCONTROL)
  */
typedef struct stc_VIDEOSS_FRAMEGEN1_BLENDCONTROL_field {
  uint32_t                         u3PRIM_C_BLD_FUNC:3;
  uint32_t                         :1;
  uint32_t                         u3SEC_C_BLD_FUNC:3;
  uint32_t                         :1;
  uint32_t                         u3PRIM_A_BLD_FUNC:3;
  uint32_t                         :1;
  uint32_t                         u3SEC_A_BLD_FUNC:3;
  uint32_t                         :1;
  uint32_t                         u8BLENDALPHA:8;
  uint32_t                         :8;
} stc_VIDEOSS_FRAMEGEN1_BLENDCONTROL_field_t;

typedef union un_VIDEOSS_FRAMEGEN1_BLENDCONTROL {
  uint32_t                         u32Register;
  stc_VIDEOSS_FRAMEGEN1_BLENDCONTROL_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_FRAMEGEN1_BLENDCONTROL_t;

/**
  * \brief FrameGen Enable Register (VIDEOSS_FRAMEGEN1_FGENABLE)
  */
typedef struct stc_VIDEOSS_FRAMEGEN1_FGENABLE_field {
  uint32_t                         u1FGEN:1;
  uint32_t                         :31;
} stc_VIDEOSS_FRAMEGEN1_FGENABLE_field_t;

typedef union un_VIDEOSS_FRAMEGEN1_FGENABLE {
  uint32_t                         u32Register;
  stc_VIDEOSS_FRAMEGEN1_FGENABLE_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_FRAMEGEN1_FGENABLE_t;

/**
  * \brief FrameGen Shadow Load Register (VIDEOSS_FRAMEGEN1_FGSLR)
  */
typedef struct stc_VIDEOSS_FRAMEGEN1_FGSLR_field {
  uint32_t                         u1SHDTOKGEN:1;
  uint32_t                         :31;
} stc_VIDEOSS_FRAMEGEN1_FGSLR_field_t;

typedef union un_VIDEOSS_FRAMEGEN1_FGSLR {
  uint32_t                         u32Register;
  stc_VIDEOSS_FRAMEGEN1_FGSLR_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_FRAMEGEN1_FGSLR_t;

/**
  * \brief FrameGen Enable Status Register (VIDEOSS_FRAMEGEN1_FGENSTS)
  */
typedef struct stc_VIDEOSS_FRAMEGEN1_FGENSTS_field {
  uint32_t                         u1ENSTS:1;
  uint32_t                         u1PANICSTAT:1;
  uint32_t                         :30;
} stc_VIDEOSS_FRAMEGEN1_FGENSTS_field_t;

typedef union un_VIDEOSS_FRAMEGEN1_FGENSTS {
  uint32_t                         u32Register;
  stc_VIDEOSS_FRAMEGEN1_FGENSTS_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_FRAMEGEN1_FGENSTS_t;

/**
  * \brief Time stamp status. (VIDEOSS_FRAMEGEN1_FGTIMESTAMP)
  */
typedef struct stc_VIDEOSS_FRAMEGEN1_FGTIMESTAMP_field {
  uint32_t                         u14LINEINDEX:14;
  uint32_t                         u18FRAMEINDEX:18;
} stc_VIDEOSS_FRAMEGEN1_FGTIMESTAMP_field_t;

typedef union un_VIDEOSS_FRAMEGEN1_FGTIMESTAMP {
  uint32_t                         u32Register;
  stc_VIDEOSS_FRAMEGEN1_FGTIMESTAMP_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_FRAMEGEN1_FGTIMESTAMP_t;

/**
  * \brief FrameGen Channel Status Register (VIDEOSS_FRAMEGEN1_FGCHSTAT)
  */
typedef struct stc_VIDEOSS_FRAMEGEN1_FGCHSTAT_field {
  uint32_t                         u1PFIFOEMPTY:1;
  uint32_t                         :7;
  uint32_t                         u1PRIMSYNCSTAT:1;
  uint32_t                         :7;
  uint32_t                         u1SFIFOEMPTY:1;
  uint32_t                         u1SKEWRANGEERR:1;
  uint32_t                         :6;
  uint32_t                         u1SECSYNCSTAT:1;
  uint32_t                         :7;
} stc_VIDEOSS_FRAMEGEN1_FGCHSTAT_field_t;

typedef union un_VIDEOSS_FRAMEGEN1_FGCHSTAT {
  uint32_t                         u32Register;
  stc_VIDEOSS_FRAMEGEN1_FGCHSTAT_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_FRAMEGEN1_FGCHSTAT_t;

/**
  * \brief FrameGen Channel Status Clear Register (VIDEOSS_FRAMEGEN1_FGCHSTATCLR)
  */
typedef struct stc_VIDEOSS_FRAMEGEN1_FGCHSTATCLR_field {
  uint32_t                         u1CLRPRIMSTAT:1;
  uint32_t                         :15;
  uint32_t                         u1CLRSECSTAT:1;
  uint32_t                         :15;
} stc_VIDEOSS_FRAMEGEN1_FGCHSTATCLR_field_t;

typedef union un_VIDEOSS_FRAMEGEN1_FGCHSTATCLR {
  uint32_t                         u32Register;
  stc_VIDEOSS_FRAMEGEN1_FGCHSTATCLR_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_FRAMEGEN1_FGCHSTATCLR_t;

/**
  * \brief FrameGen Skew Monitor Register for Secondary Channel Skew Control (VIDEOSS_FRAMEGEN1_FGSKEWMON)
  */
typedef struct stc_VIDEOSS_FRAMEGEN1_FGSKEWMON_field {
  uint32_t                         u29SKEWMON:29;
  uint32_t                         :3;
} stc_VIDEOSS_FRAMEGEN1_FGSKEWMON_field_t;

typedef union un_VIDEOSS_FRAMEGEN1_FGSKEWMON {
  uint32_t                         u32Register;
  stc_VIDEOSS_FRAMEGEN1_FGSKEWMON_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_FRAMEGEN1_FGSKEWMON_t;

/**
  * \brief FrameGen Secondary FIFO Min Fill Register (VIDEOSS_FRAMEGEN1_FGSFIFOMIN)
  */
typedef struct stc_VIDEOSS_FRAMEGEN1_FGSFIFOMIN_field {
  uint32_t                         u11SFIFOMIN:11;
  uint32_t                         :21;
} stc_VIDEOSS_FRAMEGEN1_FGSFIFOMIN_field_t;

typedef union un_VIDEOSS_FRAMEGEN1_FGSFIFOMIN {
  uint32_t                         u32Register;
  stc_VIDEOSS_FRAMEGEN1_FGSFIFOMIN_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_FRAMEGEN1_FGSFIFOMIN_t;

/**
  * \brief FrameGen Secondary FIFO Max Fill Register (VIDEOSS_FRAMEGEN1_FGSFIFOMAX)
  */
typedef struct stc_VIDEOSS_FRAMEGEN1_FGSFIFOMAX_field {
  uint32_t                         u11SFIFOMAX:11;
  uint32_t                         :21;
} stc_VIDEOSS_FRAMEGEN1_FGSFIFOMAX_field_t;

typedef union un_VIDEOSS_FRAMEGEN1_FGSFIFOMAX {
  uint32_t                         u32Register;
  stc_VIDEOSS_FRAMEGEN1_FGSFIFOMAX_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_FRAMEGEN1_FGSFIFOMAX_t;

/**
  * \brief FrameGen Secondary FIFO Fill Clear Register (VIDEOSS_FRAMEGEN1_FGSFIFOFILLCLR)
  */
typedef struct stc_VIDEOSS_FRAMEGEN1_FGSFIFOFILLCLR_field {
  uint32_t                         u1SFIFOFILLCLR:1;
  uint32_t                         :31;
} stc_VIDEOSS_FRAMEGEN1_FGSFIFOFILLCLR_field_t;

typedef union un_VIDEOSS_FRAMEGEN1_FGSFIFOFILLCLR {
  uint32_t                         u32Register;
  stc_VIDEOSS_FRAMEGEN1_FGSFIFOFILLCLR_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_FRAMEGEN1_FGSFIFOFILLCLR_t;

/**
  * \brief FrameGen Skew Regulation ExtraPolation Debug Register (VIDEOSS_FRAMEGEN1_FGSREPD)
  */
typedef struct stc_VIDEOSS_FRAMEGEN1_FGSREPD_field {
  uint32_t                         u29EPVAL:29;
  uint32_t                         :3;
} stc_VIDEOSS_FRAMEGEN1_FGSREPD_field_t;

typedef union un_VIDEOSS_FRAMEGEN1_FGSREPD {
  uint32_t                         u32Register;
  stc_VIDEOSS_FRAMEGEN1_FGSREPD_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_FRAMEGEN1_FGSREPD_t;

/**
  * \brief FrameGen Skew Regulation Frame Total Debug Register (VIDEOSS_FRAMEGEN1_FGSRFTD)
  */
typedef struct stc_VIDEOSS_FRAMEGEN1_FGSRFTD_field {
  uint32_t                         u28FRTOT:28;
  uint32_t                         :4;
} stc_VIDEOSS_FRAMEGEN1_FGSRFTD_field_t;

typedef union un_VIDEOSS_FRAMEGEN1_FGSRFTD {
  uint32_t                         u32Register;
  stc_VIDEOSS_FRAMEGEN1_FGSRFTD_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_FRAMEGEN1_FGSRFTD_t;

/**
  * \brief Current (x,y) positions of the timing generator Register in FrameGen timing generator. Please don't use it due to lack of verification. (VIDEOSS_FRAMEGEN1_FGTGPOSITION)
  */
typedef struct stc_VIDEOSS_FRAMEGEN1_FGTGPOSITION_field {
  uint32_t                         u14FRTGX:14;
  uint32_t                         u14FRTGY:14;
  uint32_t                         :4;
} stc_VIDEOSS_FRAMEGEN1_FGTGPOSITION_field_t;

typedef union un_VIDEOSS_FRAMEGEN1_FGTGPOSITION {
  uint32_t                         u32Register;
  stc_VIDEOSS_FRAMEGEN1_FGTGPOSITION_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_FRAMEGEN1_FGTGPOSITION_t;



/**
  * \brief Static control settings. (VIDEOSS_GAMMACOR1_STATICCONTROL)
  */
typedef struct stc_VIDEOSS_GAMMACOR1_STATICCONTROL_field {
  uint32_t                         u1SHDEN:1;
  uint32_t                         u1BLUEWRITEENABLE:1;
  uint32_t                         u1GREENWRITEENABLE:1;
  uint32_t                         u1REDWRITEENABLE:1;
  uint32_t                         :28;
} stc_VIDEOSS_GAMMACOR1_STATICCONTROL_field_t;

typedef union un_VIDEOSS_GAMMACOR1_STATICCONTROL {
  uint32_t                         u32Register;
  stc_VIDEOSS_GAMMACOR1_STATICCONTROL_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_GAMMACOR1_STATICCONTROL_t;

/**
  * \brief Start values for look-up table programming. (VIDEOSS_GAMMACOR1_LUTSTART)
  */
typedef struct stc_VIDEOSS_GAMMACOR1_LUTSTART_field {
  uint32_t                         u10STARTBLUE:10;
  uint32_t                         u10STARTGREEN:10;
  uint32_t                         u10STARTRED:10;
  uint32_t                         :2;
} stc_VIDEOSS_GAMMACOR1_LUTSTART_field_t;

typedef union un_VIDEOSS_GAMMACOR1_LUTSTART {
  uint32_t                         u32Register;
  stc_VIDEOSS_GAMMACOR1_LUTSTART_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_GAMMACOR1_LUTSTART_t;

/**
  * \brief Delta values for look-up table programming. (VIDEOSS_GAMMACOR1_LUTDELTAS)
  */
typedef struct stc_VIDEOSS_GAMMACOR1_LUTDELTAS_field {
  uint32_t                         u10DELTABLUE:10;
  uint32_t                         u10DELTAGREEN:10;
  uint32_t                         u10DELTARED:10;
  uint32_t                         :2;
} stc_VIDEOSS_GAMMACOR1_LUTDELTAS_field_t;

typedef union un_VIDEOSS_GAMMACOR1_LUTDELTAS {
  uint32_t                         u32Register;
  stc_VIDEOSS_GAMMACOR1_LUTDELTAS_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_GAMMACOR1_LUTDELTAS_t;

/**
  * \brief Dynamic control settings. (VIDEOSS_GAMMACOR1_CONTROL)
  */
typedef struct stc_VIDEOSS_GAMMACOR1_CONTROL_field {
  uint32_t                         u1MODE:1;
  uint32_t                         :3;
  uint32_t                         u1ALPHAMASK:1;
  uint32_t                         u1ALPHAINVERT:1;
  uint32_t                         :26;
} stc_VIDEOSS_GAMMACOR1_CONTROL_field_t;

typedef union un_VIDEOSS_GAMMACOR1_CONTROL {
  uint32_t                         u32Register;
  stc_VIDEOSS_GAMMACOR1_CONTROL_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_GAMMACOR1_CONTROL_t;



/**
  * \brief Dither Unit common control. (VIDEOSS_DITHER1_CONTROL)
  */
typedef struct stc_VIDEOSS_DITHER1_CONTROL_field {
  uint32_t                         u1MODE:1;
  uint32_t                         :31;
} stc_VIDEOSS_DITHER1_CONTROL_field_t;

typedef union un_VIDEOSS_DITHER1_CONTROL {
  uint32_t                         u32Register;
  stc_VIDEOSS_DITHER1_CONTROL_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_DITHER1_CONTROL_t;

/**
  * \brief Dither Unit processing control. (VIDEOSS_DITHER1_DITHERCONTROL)
  */
typedef struct stc_VIDEOSS_DITHER1_DITHERCONTROL_field {
  uint32_t                         u3BLUE_RANGE_SELECT:3;
  uint32_t                         :1;
  uint32_t                         u3GREEN_RANGE_SELECT:3;
  uint32_t                         :1;
  uint32_t                         u3RED_RANGE_SELECT:3;
  uint32_t                         :5;
  uint32_t                         u1OFFSET_SELECT:1;
  uint32_t                         :3;
  uint32_t                         u2ALGO_SELECT:2;
  uint32_t                         :2;
  uint32_t                         u2ALPHA_MODE:2;
  uint32_t                         :6;
} stc_VIDEOSS_DITHER1_DITHERCONTROL_field_t;

typedef union un_VIDEOSS_DITHER1_DITHERCONTROL {
  uint32_t                         u32Register;
  stc_VIDEOSS_DITHER1_DITHERCONTROL_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_DITHER1_DITHERCONTROL_t;

/**
  * \brief Dither Unit release. (VIDEOSS_DITHER1_RELEASE)
  */
typedef struct stc_VIDEOSS_DITHER1_RELEASE_field {
  uint32_t                         u8SUBVERSION:8;
  uint32_t                         u8VERSION:8;
  uint32_t                         :16;
} stc_VIDEOSS_DITHER1_RELEASE_field_t;

typedef union un_VIDEOSS_DITHER1_RELEASE {
  uint32_t                         u32Register;
  stc_VIDEOSS_DITHER1_RELEASE_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_DITHER1_RELEASE_t;



/**
  * \brief The 64 Sequencer Position Definitions registers define the X/Y scan positions of the sequencers, hold their output value and assign the sequencer to an odd/even field (VIDEOSS_TCON1_SSQCNTS)
  */
typedef struct stc_VIDEOSS_TCON1_SSQCNTS_field {
  uint32_t                         u15SSQCNTS_SEQY:15;
  uint32_t                         u1SSQCNTS_FIELD:1;
  uint32_t                         u15SSQCNTS_SEQX:15;
  uint32_t                         u1SSQCNTS_OUT:1;
} stc_VIDEOSS_TCON1_SSQCNTS_field_t;

typedef union un_VIDEOSS_TCON1_SSQCNTS {
  uint32_t                         u32Register;
  stc_VIDEOSS_TCON1_SSQCNTS_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_TCON1_SSQCNTS_t;

/**
  * \brief This bitfield sets the sequencer cycle length. The value set here -1 is the number of sequencer cycles (VIDEOSS_TCON1_SSQCYCLE)
  */
typedef struct stc_VIDEOSS_TCON1_SSQCYCLE_field {
  uint32_t                         u6SSQCYCLE:6;
  uint32_t                         :26;
} stc_VIDEOSS_TCON1_SSQCYCLE_field_t;

typedef union un_VIDEOSS_TCON1_SSQCYCLE {
  uint32_t                         u32Register;
  stc_VIDEOSS_TCON1_SSQCYCLE_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_TCON1_SSQCYCLE_t;

/**
  * \brief TCON Software Reset - Reset all tcon registers except configuration registers. Detailed description in specification document Note  1/ if tsig[11] pulse=n*pixel_period, (n-1)*0xFF will be blended between ResetWordStart and ResetWordEnd into miniLVDS stream  Note  2/ if( EnResetWord=0) Reset-Pulse (ResetWordStart,ResetWordEnd) won't be blended into miniLVDS stream. Pixels will be transferred unchanged (VIDEOSS_TCON1_SWRESET)
  */
typedef struct stc_VIDEOSS_TCON1_SWRESET_field {
  uint32_t                         u1SWRESET:1;
  uint32_t                         :3;
  uint32_t                         u12ENRESETWORD:12;
  uint32_t                         u8RESETWORDEND:8;
  uint32_t                         u8RESETWORDSTART:8;
} stc_VIDEOSS_TCON1_SWRESET_field_t;

typedef union un_VIDEOSS_TCON1_SWRESET {
  uint32_t                         u32Register;
  stc_VIDEOSS_TCON1_SWRESET_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_TCON1_SWRESET_t;

/**
  * \brief TCON Control register (VIDEOSS_TCON1_TCON_CTRL)
  */
typedef struct stc_VIDEOSS_TCON1_TCON_CTRL_field {
  uint32_t                         u2CHANNELMODE:2;
  uint32_t                         u1TCON_SYNC:1;
  uint32_t                         u1BYPASS:1;
  uint32_t                         u4INV_CTRL:4;
  uint32_t                         u1ENLVDS:1;
  uint32_t                         u1LVDSMODE:1;
  uint32_t                         u1LVDS_BALANCE:1;
  uint32_t                         u1LVDS_CLOCK_INV:1;
  uint32_t                         u3MINILVDS_OPCODE:3;
  uint32_t                         u1DUAL_SWAP:1;
  uint32_t                         u14SPLITPOSITION:14;
  uint32_t                         :2;
} stc_VIDEOSS_TCON1_TCON_CTRL_field_t;

typedef union un_VIDEOSS_TCON1_TCON_CTRL {
  uint32_t                         u32Register;
  stc_VIDEOSS_TCON1_TCON_CTRL_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_TCON1_TCON_CTRL_t;

/**
  * \brief Controls inversion of output polarity when connected IO cells operate in RSDS mode (VIDEOSS_TCON1_RSDSINVCTRL)
  */
typedef struct stc_VIDEOSS_TCON1_RSDSINVCTRL_field {
  uint32_t                         u12RSDS_INV:12;
  uint32_t                         :4;
  uint32_t                         u12RSDS_INV_DUAL:12;
  uint32_t                         :4;
} stc_VIDEOSS_TCON1_RSDSINVCTRL_field_t;

typedef union un_VIDEOSS_TCON1_RSDSINVCTRL {
  uint32_t                         u32Register;
  stc_VIDEOSS_TCON1_RSDSINVCTRL_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_TCON1_RSDSINVCTRL_t;

/**
  * \brief Mapping of 24 bit RGB or Timing Generator TSig[5-0] to bit 0 .. 3 (VIDEOSS_TCON1_MAPBIT3_0)
  */
typedef struct stc_VIDEOSS_TCON1_MAPBIT3_0_field {
  uint32_t                         u5MAPBIT0:5;
  uint32_t                         :3;
  uint32_t                         u5MAPBIT1:5;
  uint32_t                         :3;
  uint32_t                         u5MAPBIT2:5;
  uint32_t                         :3;
  uint32_t                         u5MAPBIT3:5;
  uint32_t                         :3;
} stc_VIDEOSS_TCON1_MAPBIT3_0_field_t;

typedef union un_VIDEOSS_TCON1_MAPBIT3_0 {
  uint32_t                         u32Register;
  stc_VIDEOSS_TCON1_MAPBIT3_0_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_TCON1_MAPBIT3_0_t;

/**
  * \brief Mapping of 24 bit RGB or Timing Generator TSig[5-0] to bit 4 .. 7 (VIDEOSS_TCON1_MAPBIT7_4)
  */
typedef struct stc_VIDEOSS_TCON1_MAPBIT7_4_field {
  uint32_t                         u5MAPBIT4:5;
  uint32_t                         :3;
  uint32_t                         u5MAPBIT5:5;
  uint32_t                         :3;
  uint32_t                         u5MAPBIT6:5;
  uint32_t                         :3;
  uint32_t                         u5MAPBIT7:5;
  uint32_t                         :3;
} stc_VIDEOSS_TCON1_MAPBIT7_4_field_t;

typedef union un_VIDEOSS_TCON1_MAPBIT7_4 {
  uint32_t                         u32Register;
  stc_VIDEOSS_TCON1_MAPBIT7_4_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_TCON1_MAPBIT7_4_t;

/**
  * \brief Mapping of 24 bit RGB or Timing Generator TSig[5-0] to bit 8 .. 11 (VIDEOSS_TCON1_MAPBIT11_8)
  */
typedef struct stc_VIDEOSS_TCON1_MAPBIT11_8_field {
  uint32_t                         u5MAPBIT8:5;
  uint32_t                         :3;
  uint32_t                         u5MAPBIT9:5;
  uint32_t                         :3;
  uint32_t                         u5MAPBIT10:5;
  uint32_t                         :3;
  uint32_t                         u5MAPBIT11:5;
  uint32_t                         :3;
} stc_VIDEOSS_TCON1_MAPBIT11_8_field_t;

typedef union un_VIDEOSS_TCON1_MAPBIT11_8 {
  uint32_t                         u32Register;
  stc_VIDEOSS_TCON1_MAPBIT11_8_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_TCON1_MAPBIT11_8_t;

/**
  * \brief Mapping of 24 bit RGB or Timing Generator TSig[5-0] to bit 12 .. 15 (VIDEOSS_TCON1_MAPBIT15_12)
  */
typedef struct stc_VIDEOSS_TCON1_MAPBIT15_12_field {
  uint32_t                         u5MAPBIT12:5;
  uint32_t                         :3;
  uint32_t                         u5MAPBIT13:5;
  uint32_t                         :3;
  uint32_t                         u5MAPBIT14:5;
  uint32_t                         :3;
  uint32_t                         u5MAPBIT15:5;
  uint32_t                         :3;
} stc_VIDEOSS_TCON1_MAPBIT15_12_field_t;

typedef union un_VIDEOSS_TCON1_MAPBIT15_12 {
  uint32_t                         u32Register;
  stc_VIDEOSS_TCON1_MAPBIT15_12_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_TCON1_MAPBIT15_12_t;

/**
  * \brief Mapping of 24 bit RGB or Timing Generator TSig[5-0] to bit 16 .. 19 (VIDEOSS_TCON1_MAPBIT19_16)
  */
typedef struct stc_VIDEOSS_TCON1_MAPBIT19_16_field {
  uint32_t                         u5MAPBIT16:5;
  uint32_t                         :3;
  uint32_t                         u5MAPBIT17:5;
  uint32_t                         :3;
  uint32_t                         u5MAPBIT18:5;
  uint32_t                         :3;
  uint32_t                         u5MAPBIT19:5;
  uint32_t                         :3;
} stc_VIDEOSS_TCON1_MAPBIT19_16_field_t;

typedef union un_VIDEOSS_TCON1_MAPBIT19_16 {
  uint32_t                         u32Register;
  stc_VIDEOSS_TCON1_MAPBIT19_16_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_TCON1_MAPBIT19_16_t;

/**
  * \brief Mapping of 24 bit RGB or Timing Generator TSig[5-0] to bit 20 .. 23 (VIDEOSS_TCON1_MAPBIT23_20)
  */
typedef struct stc_VIDEOSS_TCON1_MAPBIT23_20_field {
  uint32_t                         u5MAPBIT20:5;
  uint32_t                         :3;
  uint32_t                         u5MAPBIT21:5;
  uint32_t                         :3;
  uint32_t                         u5MAPBIT22:5;
  uint32_t                         :3;
  uint32_t                         u5MAPBIT23:5;
  uint32_t                         :3;
} stc_VIDEOSS_TCON1_MAPBIT23_20_field_t;

typedef union un_VIDEOSS_TCON1_MAPBIT23_20 {
  uint32_t                         u32Register;
  stc_VIDEOSS_TCON1_MAPBIT23_20_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_TCON1_MAPBIT23_20_t;

/**
  * \brief Mapping of 24 bit RGB or Timing Generator TSig[5-0] to bit 24 .. 27 (VIDEOSS_TCON1_MAPBIT27_24)
  */
typedef struct stc_VIDEOSS_TCON1_MAPBIT27_24_field {
  uint32_t                         u5MAPBIT24:5;
  uint32_t                         :3;
  uint32_t                         u5MAPBIT25:5;
  uint32_t                         :3;
  uint32_t                         u5MAPBIT26:5;
  uint32_t                         :3;
  uint32_t                         u5MAPBIT27:5;
  uint32_t                         :3;
} stc_VIDEOSS_TCON1_MAPBIT27_24_field_t;

typedef union un_VIDEOSS_TCON1_MAPBIT27_24 {
  uint32_t                         u32Register;
  stc_VIDEOSS_TCON1_MAPBIT27_24_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_TCON1_MAPBIT27_24_t;

/**
  * \brief Same as MapBit3_0 for 2nd channel (VIDEOSS_TCON1_MAPBIT3_0_DUAL)
  */
typedef struct stc_VIDEOSS_TCON1_MAPBIT3_0_DUAL_field {
  uint32_t                         u5MAPBIT0_DUAL:5;
  uint32_t                         :3;
  uint32_t                         u5MAPBIT1_DUAL:5;
  uint32_t                         :3;
  uint32_t                         u5MAPBIT2_DUAL:5;
  uint32_t                         :3;
  uint32_t                         u5MAPBIT3_DUAL:5;
  uint32_t                         :3;
} stc_VIDEOSS_TCON1_MAPBIT3_0_DUAL_field_t;

typedef union un_VIDEOSS_TCON1_MAPBIT3_0_DUAL {
  uint32_t                         u32Register;
  stc_VIDEOSS_TCON1_MAPBIT3_0_DUAL_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_TCON1_MAPBIT3_0_DUAL_t;

/**
  * \brief Same as MapBit7_4 for 2nd channel (VIDEOSS_TCON1_MAPBIT7_4_DUAL)
  */
typedef struct stc_VIDEOSS_TCON1_MAPBIT7_4_DUAL_field {
  uint32_t                         u5MAPBIT4_DUAL:5;
  uint32_t                         :3;
  uint32_t                         u5MAPBIT5_DUAL:5;
  uint32_t                         :3;
  uint32_t                         u5MAPBIT6_DUAL:5;
  uint32_t                         :3;
  uint32_t                         u5MAPBIT7_DUAL:5;
  uint32_t                         :3;
} stc_VIDEOSS_TCON1_MAPBIT7_4_DUAL_field_t;

typedef union un_VIDEOSS_TCON1_MAPBIT7_4_DUAL {
  uint32_t                         u32Register;
  stc_VIDEOSS_TCON1_MAPBIT7_4_DUAL_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_TCON1_MAPBIT7_4_DUAL_t;

/**
  * \brief Same as MapBit11_8 for 2nd channel (VIDEOSS_TCON1_MAPBIT11_8_DUAL)
  */
typedef struct stc_VIDEOSS_TCON1_MAPBIT11_8_DUAL_field {
  uint32_t                         u5MAPBIT8_DUAL:5;
  uint32_t                         :3;
  uint32_t                         u5MAPBIT9_DUAL:5;
  uint32_t                         :3;
  uint32_t                         u5MAPBIT10_DUAL:5;
  uint32_t                         :3;
  uint32_t                         u5MAPBIT11_DUAL:5;
  uint32_t                         :3;
} stc_VIDEOSS_TCON1_MAPBIT11_8_DUAL_field_t;

typedef union un_VIDEOSS_TCON1_MAPBIT11_8_DUAL {
  uint32_t                         u32Register;
  stc_VIDEOSS_TCON1_MAPBIT11_8_DUAL_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_TCON1_MAPBIT11_8_DUAL_t;

/**
  * \brief Same as MapBit15_12 for 2nd channel (VIDEOSS_TCON1_MAPBIT15_12_DUAL)
  */
typedef struct stc_VIDEOSS_TCON1_MAPBIT15_12_DUAL_field {
  uint32_t                         u5MAPBIT12_DUAL:5;
  uint32_t                         :3;
  uint32_t                         u5MAPBIT13_DUAL:5;
  uint32_t                         :3;
  uint32_t                         u5MAPBIT14_DUAL:5;
  uint32_t                         :3;
  uint32_t                         u5MAPBIT15_DUAL:5;
  uint32_t                         :3;
} stc_VIDEOSS_TCON1_MAPBIT15_12_DUAL_field_t;

typedef union un_VIDEOSS_TCON1_MAPBIT15_12_DUAL {
  uint32_t                         u32Register;
  stc_VIDEOSS_TCON1_MAPBIT15_12_DUAL_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_TCON1_MAPBIT15_12_DUAL_t;

/**
  * \brief Same as MapBit19_16 for 2nd channel (VIDEOSS_TCON1_MAPBIT19_16_DUAL)
  */
typedef struct stc_VIDEOSS_TCON1_MAPBIT19_16_DUAL_field {
  uint32_t                         u5MAPBIT16_DUAL:5;
  uint32_t                         :3;
  uint32_t                         u5MAPBIT17_DUAL:5;
  uint32_t                         :3;
  uint32_t                         u5MAPBIT18_DUAL:5;
  uint32_t                         :3;
  uint32_t                         u5MAPBIT19_DUAL:5;
  uint32_t                         :3;
} stc_VIDEOSS_TCON1_MAPBIT19_16_DUAL_field_t;

typedef union un_VIDEOSS_TCON1_MAPBIT19_16_DUAL {
  uint32_t                         u32Register;
  stc_VIDEOSS_TCON1_MAPBIT19_16_DUAL_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_TCON1_MAPBIT19_16_DUAL_t;

/**
  * \brief Same as MapBit23_20 for 2nd channel (VIDEOSS_TCON1_MAPBIT23_20_DUAL)
  */
typedef struct stc_VIDEOSS_TCON1_MAPBIT23_20_DUAL_field {
  uint32_t                         u5MAPBIT20_DUAL:5;
  uint32_t                         :3;
  uint32_t                         u5MAPBIT21_DUAL:5;
  uint32_t                         :3;
  uint32_t                         u5MAPBIT22_DUAL:5;
  uint32_t                         :3;
  uint32_t                         u5MAPBIT23_DUAL:5;
  uint32_t                         :3;
} stc_VIDEOSS_TCON1_MAPBIT23_20_DUAL_field_t;

typedef union un_VIDEOSS_TCON1_MAPBIT23_20_DUAL {
  uint32_t                         u32Register;
  stc_VIDEOSS_TCON1_MAPBIT23_20_DUAL_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_TCON1_MAPBIT23_20_DUAL_t;

/**
  * \brief Same as MapBit27_24 for 2nd channel (VIDEOSS_TCON1_MAPBIT27_24_DUAL)
  */
typedef struct stc_VIDEOSS_TCON1_MAPBIT27_24_DUAL_field {
  uint32_t                         u5MAPBIT24_DUAL:5;
  uint32_t                         :3;
  uint32_t                         u5MAPBIT25_DUAL:5;
  uint32_t                         :3;
  uint32_t                         u5MAPBIT26_DUAL:5;
  uint32_t                         :3;
  uint32_t                         u5MAPBIT27_DUAL:5;
  uint32_t                         :3;
} stc_VIDEOSS_TCON1_MAPBIT27_24_DUAL_field_t;

typedef union un_VIDEOSS_TCON1_MAPBIT27_24_DUAL {
  uint32_t                         u32Register;
  stc_VIDEOSS_TCON1_MAPBIT27_24_DUAL_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_TCON1_MAPBIT27_24_DUAL_t;

/**
  * \brief Sync pulse generator 0, 'Switch on' position (VIDEOSS_TCON1_SPG0POSON)
  */
typedef struct stc_VIDEOSS_TCON1_SPG0POSON_field {
  uint32_t                         u15SPGPSON_Y0:15;
  uint32_t                         u1SPGPSON_FIELD0:1;
  uint32_t                         u15SPGPSON_X0:15;
  uint32_t                         u1SPGPSON_TOGGLE0:1;
} stc_VIDEOSS_TCON1_SPG0POSON_field_t;

typedef union un_VIDEOSS_TCON1_SPG0POSON {
  uint32_t                         u32Register;
  stc_VIDEOSS_TCON1_SPG0POSON_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_TCON1_SPG0POSON_t;

/**
  * \brief The Sequencer Pulse Generator 0 Mask Enable register is used to mask the enable of SPG 0 (VIDEOSS_TCON1_SPG0MASKON)
  */
typedef struct stc_VIDEOSS_TCON1_SPG0MASKON_field {
  uint32_t                         u31SPGMKON0:31;
} stc_VIDEOSS_TCON1_SPG0MASKON_field_t;

typedef union un_VIDEOSS_TCON1_SPG0MASKON {
  uint32_t                         u32Register;
  stc_VIDEOSS_TCON1_SPG0MASKON_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_TCON1_SPG0MASKON_t;

/**
  * \brief Sync pulse generator 0, 'Switch off' position (VIDEOSS_TCON1_SPG0POSOFF)
  */
typedef struct stc_VIDEOSS_TCON1_SPG0POSOFF_field {
  uint32_t                         u15SPGPSOFF_Y0:15;
  uint32_t                         u1SPGPSOFF_FIELD0:1;
  uint32_t                         u15SPGPSOFF_X0:15;
  uint32_t                         u1SPGPSOFF_TOGGLE0:1;
} stc_VIDEOSS_TCON1_SPG0POSOFF_field_t;

typedef union un_VIDEOSS_TCON1_SPG0POSOFF {
  uint32_t                         u32Register;
  stc_VIDEOSS_TCON1_SPG0POSOFF_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_TCON1_SPG0POSOFF_t;

/**
  * \brief The Sequencer Pulse Generator 0 Mask Enable register is used to mask the disable of SPG 0 (VIDEOSS_TCON1_SPG0MASKOFF)
  */
typedef struct stc_VIDEOSS_TCON1_SPG0MASKOFF_field {
  uint32_t                         u31SPGMKOFF0:31;
} stc_VIDEOSS_TCON1_SPG0MASKOFF_field_t;

typedef union un_VIDEOSS_TCON1_SPG0MASKOFF {
  uint32_t                         u32Register;
  stc_VIDEOSS_TCON1_SPG0MASKOFF_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_TCON1_SPG0MASKOFF_t;

/**
  * \brief Sync pulse generator 1, 'Switch on' position (VIDEOSS_TCON1_SPG1POSON)
  */
typedef struct stc_VIDEOSS_TCON1_SPG1POSON_field {
  uint32_t                         u15SPGPSON_Y1:15;
  uint32_t                         u1SPGPSON_FIELD1:1;
  uint32_t                         u15SPGPSON_X1:15;
  uint32_t                         u1SPGPSON_TOGGLE1:1;
} stc_VIDEOSS_TCON1_SPG1POSON_field_t;

typedef union un_VIDEOSS_TCON1_SPG1POSON {
  uint32_t                         u32Register;
  stc_VIDEOSS_TCON1_SPG1POSON_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_TCON1_SPG1POSON_t;

/**
  * \brief The Sequencer Pulse Generator 1 Mask Enable register is used to mask the enable of SPG 1 (VIDEOSS_TCON1_SPG1MASKON)
  */
typedef struct stc_VIDEOSS_TCON1_SPG1MASKON_field {
  uint32_t                         u31SPGMKON1:31;
} stc_VIDEOSS_TCON1_SPG1MASKON_field_t;

typedef union un_VIDEOSS_TCON1_SPG1MASKON {
  uint32_t                         u32Register;
  stc_VIDEOSS_TCON1_SPG1MASKON_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_TCON1_SPG1MASKON_t;

/**
  * \brief Sync pulse generator 1, 'Switch off' position (VIDEOSS_TCON1_SPG1POSOFF)
  */
typedef struct stc_VIDEOSS_TCON1_SPG1POSOFF_field {
  uint32_t                         u15SPGPSOFF_Y1:15;
  uint32_t                         u1SPGPSOFF_FIELD1:1;
  uint32_t                         u15SPGPSOFF_X1:15;
  uint32_t                         u1SPGPSOFF_TOGGLE1:1;
} stc_VIDEOSS_TCON1_SPG1POSOFF_field_t;

typedef union un_VIDEOSS_TCON1_SPG1POSOFF {
  uint32_t                         u32Register;
  stc_VIDEOSS_TCON1_SPG1POSOFF_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_TCON1_SPG1POSOFF_t;

/**
  * \brief The Sequencer Pulse Generator 1 Mask Enable register is used to mask the disable of SPG 1 (VIDEOSS_TCON1_SPG1MASKOFF)
  */
typedef struct stc_VIDEOSS_TCON1_SPG1MASKOFF_field {
  uint32_t                         u31SPGMKOFF1:31;
} stc_VIDEOSS_TCON1_SPG1MASKOFF_field_t;

typedef union un_VIDEOSS_TCON1_SPG1MASKOFF {
  uint32_t                         u32Register;
  stc_VIDEOSS_TCON1_SPG1MASKOFF_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_TCON1_SPG1MASKOFF_t;

/**
  * \brief Sync pulse generator 2, 'Switch on' position (VIDEOSS_TCON1_SPG2POSON)
  */
typedef struct stc_VIDEOSS_TCON1_SPG2POSON_field {
  uint32_t                         u15SPGPSON_Y2:15;
  uint32_t                         u1SPGPSON_FIELD2:1;
  uint32_t                         u15SPGPSON_X2:15;
  uint32_t                         u1SPGPSON_TOGGLE2:1;
} stc_VIDEOSS_TCON1_SPG2POSON_field_t;

typedef union un_VIDEOSS_TCON1_SPG2POSON {
  uint32_t                         u32Register;
  stc_VIDEOSS_TCON1_SPG2POSON_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_TCON1_SPG2POSON_t;

/**
  * \brief The Sequencer Pulse Generator 2 Mask Enable register is used to mask the enable of SPG 2 (VIDEOSS_TCON1_SPG2MASKON)
  */
typedef struct stc_VIDEOSS_TCON1_SPG2MASKON_field {
  uint32_t                         u31SPGMKON2:31;
} stc_VIDEOSS_TCON1_SPG2MASKON_field_t;

typedef union un_VIDEOSS_TCON1_SPG2MASKON {
  uint32_t                         u32Register;
  stc_VIDEOSS_TCON1_SPG2MASKON_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_TCON1_SPG2MASKON_t;

/**
  * \brief Sync pulse generator 2, 'Switch off' position (VIDEOSS_TCON1_SPG2POSOFF)
  */
typedef struct stc_VIDEOSS_TCON1_SPG2POSOFF_field {
  uint32_t                         u15SPGPSOFF_Y2:15;
  uint32_t                         u1SPGPSOFF_FIELD2:1;
  uint32_t                         u15SPGPSOFF_X2:15;
  uint32_t                         u1SPGPSOFF_TOGGLE2:1;
} stc_VIDEOSS_TCON1_SPG2POSOFF_field_t;

typedef union un_VIDEOSS_TCON1_SPG2POSOFF {
  uint32_t                         u32Register;
  stc_VIDEOSS_TCON1_SPG2POSOFF_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_TCON1_SPG2POSOFF_t;

/**
  * \brief The Sequencer Pulse Generator 2 Mask Enable register is used to mask the disable of SPG 2 (VIDEOSS_TCON1_SPG2MASKOFF)
  */
typedef struct stc_VIDEOSS_TCON1_SPG2MASKOFF_field {
  uint32_t                         u31SPGMKOFF2:31;
} stc_VIDEOSS_TCON1_SPG2MASKOFF_field_t;

typedef union un_VIDEOSS_TCON1_SPG2MASKOFF {
  uint32_t                         u32Register;
  stc_VIDEOSS_TCON1_SPG2MASKOFF_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_TCON1_SPG2MASKOFF_t;

/**
  * \brief Sync pulse generator 3, 'Switch on' position (VIDEOSS_TCON1_SPG3POSON)
  */
typedef struct stc_VIDEOSS_TCON1_SPG3POSON_field {
  uint32_t                         u15SPGPSON_Y3:15;
  uint32_t                         u1SPGPSON_FIELD3:1;
  uint32_t                         u15SPGPSON_X3:15;
  uint32_t                         u1SPGPSON_TOGGLE3:1;
} stc_VIDEOSS_TCON1_SPG3POSON_field_t;

typedef union un_VIDEOSS_TCON1_SPG3POSON {
  uint32_t                         u32Register;
  stc_VIDEOSS_TCON1_SPG3POSON_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_TCON1_SPG3POSON_t;

/**
  * \brief The Sequencer Pulse Generator 3 Mask Enable register is used to mask the enable of SPG 3 (VIDEOSS_TCON1_SPG3MASKON)
  */
typedef struct stc_VIDEOSS_TCON1_SPG3MASKON_field {
  uint32_t                         u31SPGMKON3:31;
} stc_VIDEOSS_TCON1_SPG3MASKON_field_t;

typedef union un_VIDEOSS_TCON1_SPG3MASKON {
  uint32_t                         u32Register;
  stc_VIDEOSS_TCON1_SPG3MASKON_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_TCON1_SPG3MASKON_t;

/**
  * \brief Sync pulse generator 3, 'Switch off' position (VIDEOSS_TCON1_SPG3POSOFF)
  */
typedef struct stc_VIDEOSS_TCON1_SPG3POSOFF_field {
  uint32_t                         u15SPGPSOFF_Y3:15;
  uint32_t                         u1SPGPSOFF_FIELD3:1;
  uint32_t                         u15SPGPSOFF_X3:15;
  uint32_t                         u1SPGPSOFF_TOGGLE3:1;
} stc_VIDEOSS_TCON1_SPG3POSOFF_field_t;

typedef union un_VIDEOSS_TCON1_SPG3POSOFF {
  uint32_t                         u32Register;
  stc_VIDEOSS_TCON1_SPG3POSOFF_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_TCON1_SPG3POSOFF_t;

/**
  * \brief The Sequencer Pulse Generator 3 Mask Enable register is used to mask the disable of SPG 3 (VIDEOSS_TCON1_SPG3MASKOFF)
  */
typedef struct stc_VIDEOSS_TCON1_SPG3MASKOFF_field {
  uint32_t                         u31SPGMKOFF3:31;
} stc_VIDEOSS_TCON1_SPG3MASKOFF_field_t;

typedef union un_VIDEOSS_TCON1_SPG3MASKOFF {
  uint32_t                         u32Register;
  stc_VIDEOSS_TCON1_SPG3MASKOFF_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_TCON1_SPG3MASKOFF_t;

/**
  * \brief Sync pulse generator 4, 'Switch on' position (VIDEOSS_TCON1_SPG4POSON)
  */
typedef struct stc_VIDEOSS_TCON1_SPG4POSON_field {
  uint32_t                         u15SPGPSON_Y4:15;
  uint32_t                         u1SPGPSON_FIELD4:1;
  uint32_t                         u15SPGPSON_X4:15;
  uint32_t                         u1SPGPSON_TOGGLE4:1;
} stc_VIDEOSS_TCON1_SPG4POSON_field_t;

typedef union un_VIDEOSS_TCON1_SPG4POSON {
  uint32_t                         u32Register;
  stc_VIDEOSS_TCON1_SPG4POSON_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_TCON1_SPG4POSON_t;

/**
  * \brief The Sequencer Pulse Generator 4 Mask Enable register is used to mask the enable of SPG 4 (VIDEOSS_TCON1_SPG4MASKON)
  */
typedef struct stc_VIDEOSS_TCON1_SPG4MASKON_field {
  uint32_t                         u31SPGMKON4:31;
} stc_VIDEOSS_TCON1_SPG4MASKON_field_t;

typedef union un_VIDEOSS_TCON1_SPG4MASKON {
  uint32_t                         u32Register;
  stc_VIDEOSS_TCON1_SPG4MASKON_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_TCON1_SPG4MASKON_t;

/**
  * \brief Sync pulse generator 4, 'Switch off' position (VIDEOSS_TCON1_SPG4POSOFF)
  */
typedef struct stc_VIDEOSS_TCON1_SPG4POSOFF_field {
  uint32_t                         u15SPGPSOFF_Y4:15;
  uint32_t                         u1SPGPSOFF_FIELD4:1;
  uint32_t                         u15SPGPSOFF_X4:15;
  uint32_t                         u1SPGPSOFF_TOGGLE4:1;
} stc_VIDEOSS_TCON1_SPG4POSOFF_field_t;

typedef union un_VIDEOSS_TCON1_SPG4POSOFF {
  uint32_t                         u32Register;
  stc_VIDEOSS_TCON1_SPG4POSOFF_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_TCON1_SPG4POSOFF_t;

/**
  * \brief The Sequencer Pulse Generator 4 Mask Enable register is used to mask the disable of SPG 4 (VIDEOSS_TCON1_SPG4MASKOFF)
  */
typedef struct stc_VIDEOSS_TCON1_SPG4MASKOFF_field {
  uint32_t                         u31SPGMKOFF4:31;
} stc_VIDEOSS_TCON1_SPG4MASKOFF_field_t;

typedef union un_VIDEOSS_TCON1_SPG4MASKOFF {
  uint32_t                         u32Register;
  stc_VIDEOSS_TCON1_SPG4MASKOFF_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_TCON1_SPG4MASKOFF_t;

/**
  * \brief Sync pulse generator 5, 'Switch on' position (VIDEOSS_TCON1_SPG5POSON)
  */
typedef struct stc_VIDEOSS_TCON1_SPG5POSON_field {
  uint32_t                         u15SPGPSON_Y5:15;
  uint32_t                         u1SPGPSON_FIELD5:1;
  uint32_t                         u15SPGPSON_X5:15;
  uint32_t                         u1SPGPSON_TOGGLE5:1;
} stc_VIDEOSS_TCON1_SPG5POSON_field_t;

typedef union un_VIDEOSS_TCON1_SPG5POSON {
  uint32_t                         u32Register;
  stc_VIDEOSS_TCON1_SPG5POSON_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_TCON1_SPG5POSON_t;

/**
  * \brief The Sequencer Pulse Generator 5 Mask Enable register is used to mask the enable of SPG 5 (VIDEOSS_TCON1_SPG5MASKON)
  */
typedef struct stc_VIDEOSS_TCON1_SPG5MASKON_field {
  uint32_t                         u31SPGMKON5:31;
} stc_VIDEOSS_TCON1_SPG5MASKON_field_t;

typedef union un_VIDEOSS_TCON1_SPG5MASKON {
  uint32_t                         u32Register;
  stc_VIDEOSS_TCON1_SPG5MASKON_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_TCON1_SPG5MASKON_t;

/**
  * \brief Sync pulse generator 5, 'Switch off' position (VIDEOSS_TCON1_SPG5POSOFF)
  */
typedef struct stc_VIDEOSS_TCON1_SPG5POSOFF_field {
  uint32_t                         u15SPGPSOFF_Y5:15;
  uint32_t                         u1SPGPSOFF_FIELD5:1;
  uint32_t                         u15SPGPSOFF_X5:15;
  uint32_t                         u1SPGPSOFF_TOGGLE5:1;
} stc_VIDEOSS_TCON1_SPG5POSOFF_field_t;

typedef union un_VIDEOSS_TCON1_SPG5POSOFF {
  uint32_t                         u32Register;
  stc_VIDEOSS_TCON1_SPG5POSOFF_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_TCON1_SPG5POSOFF_t;

/**
  * \brief The Sequencer Pulse Generator 5 Mask Enable register is used to mask the disable of SPG 5 (VIDEOSS_TCON1_SPG5MASKOFF)
  */
typedef struct stc_VIDEOSS_TCON1_SPG5MASKOFF_field {
  uint32_t                         u31SPGMKOFF5:31;
} stc_VIDEOSS_TCON1_SPG5MASKOFF_field_t;

typedef union un_VIDEOSS_TCON1_SPG5MASKOFF {
  uint32_t                         u32Register;
  stc_VIDEOSS_TCON1_SPG5MASKOFF_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_TCON1_SPG5MASKOFF_t;

/**
  * \brief Sync pulse generator 6, 'Switch on' position (VIDEOSS_TCON1_SPG6POSON)
  */
typedef struct stc_VIDEOSS_TCON1_SPG6POSON_field {
  uint32_t                         u15SPGPSON_Y6:15;
  uint32_t                         u1SPGPSON_FIELD6:1;
  uint32_t                         u15SPGPSON_X6:15;
  uint32_t                         u1SPGPSON_TOGGLE6:1;
} stc_VIDEOSS_TCON1_SPG6POSON_field_t;

typedef union un_VIDEOSS_TCON1_SPG6POSON {
  uint32_t                         u32Register;
  stc_VIDEOSS_TCON1_SPG6POSON_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_TCON1_SPG6POSON_t;

/**
  * \brief The Sequencer Pulse Generator 6 Mask Enable register is used to mask the enable of SPG 6 (VIDEOSS_TCON1_SPG6MASKON)
  */
typedef struct stc_VIDEOSS_TCON1_SPG6MASKON_field {
  uint32_t                         u31SPGMKON6:31;
} stc_VIDEOSS_TCON1_SPG6MASKON_field_t;

typedef union un_VIDEOSS_TCON1_SPG6MASKON {
  uint32_t                         u32Register;
  stc_VIDEOSS_TCON1_SPG6MASKON_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_TCON1_SPG6MASKON_t;

/**
  * \brief Sync pulse generator 6, 'Switch off' position (VIDEOSS_TCON1_SPG6POSOFF)
  */
typedef struct stc_VIDEOSS_TCON1_SPG6POSOFF_field {
  uint32_t                         u15SPGPSOFF_Y6:15;
  uint32_t                         u1SPGPSOFF_FIELD6:1;
  uint32_t                         u15SPGPSOFF_X6:15;
  uint32_t                         u1SPGPSOFF_TOGGLE6:1;
} stc_VIDEOSS_TCON1_SPG6POSOFF_field_t;

typedef union un_VIDEOSS_TCON1_SPG6POSOFF {
  uint32_t                         u32Register;
  stc_VIDEOSS_TCON1_SPG6POSOFF_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_TCON1_SPG6POSOFF_t;

/**
  * \brief The Sequencer Pulse Generator 6 Mask Enable register is used to mask the disable of SPG 6 (VIDEOSS_TCON1_SPG6MASKOFF)
  */
typedef struct stc_VIDEOSS_TCON1_SPG6MASKOFF_field {
  uint32_t                         u31SPGMKOFF6:31;
} stc_VIDEOSS_TCON1_SPG6MASKOFF_field_t;

typedef union un_VIDEOSS_TCON1_SPG6MASKOFF {
  uint32_t                         u32Register;
  stc_VIDEOSS_TCON1_SPG6MASKOFF_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_TCON1_SPG6MASKOFF_t;

/**
  * \brief Sync pulse generator 7, 'Switch on' position (VIDEOSS_TCON1_SPG7POSON)
  */
typedef struct stc_VIDEOSS_TCON1_SPG7POSON_field {
  uint32_t                         u15SPGPSON_Y7:15;
  uint32_t                         u1SPGPSON_FIELD7:1;
  uint32_t                         u15SPGPSON_X7:15;
  uint32_t                         u1SPGPSON_TOGGLE7:1;
} stc_VIDEOSS_TCON1_SPG7POSON_field_t;

typedef union un_VIDEOSS_TCON1_SPG7POSON {
  uint32_t                         u32Register;
  stc_VIDEOSS_TCON1_SPG7POSON_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_TCON1_SPG7POSON_t;

/**
  * \brief The Sequencer Pulse Generator 7 Mask Enable register is used to mask the enable of SPG 7 (VIDEOSS_TCON1_SPG7MASKON)
  */
typedef struct stc_VIDEOSS_TCON1_SPG7MASKON_field {
  uint32_t                         u31SPGMKON7:31;
} stc_VIDEOSS_TCON1_SPG7MASKON_field_t;

typedef union un_VIDEOSS_TCON1_SPG7MASKON {
  uint32_t                         u32Register;
  stc_VIDEOSS_TCON1_SPG7MASKON_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_TCON1_SPG7MASKON_t;

/**
  * \brief Sync pulse generator 7, 'Switch off' position (VIDEOSS_TCON1_SPG7POSOFF)
  */
typedef struct stc_VIDEOSS_TCON1_SPG7POSOFF_field {
  uint32_t                         u15SPGPSOFF_Y7:15;
  uint32_t                         u1SPGPSOFF_FIELD7:1;
  uint32_t                         u15SPGPSOFF_X7:15;
  uint32_t                         u1SPGPSOFF_TOGGLE7:1;
} stc_VIDEOSS_TCON1_SPG7POSOFF_field_t;

typedef union un_VIDEOSS_TCON1_SPG7POSOFF {
  uint32_t                         u32Register;
  stc_VIDEOSS_TCON1_SPG7POSOFF_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_TCON1_SPG7POSOFF_t;

/**
  * \brief The Sequencer Pulse Generator 7 Mask Enable register is used to mask the disable of SPG 7 (VIDEOSS_TCON1_SPG7MASKOFF)
  */
typedef struct stc_VIDEOSS_TCON1_SPG7MASKOFF_field {
  uint32_t                         u31SPGMKOFF7:31;
} stc_VIDEOSS_TCON1_SPG7MASKOFF_field_t;

typedef union un_VIDEOSS_TCON1_SPG7MASKOFF {
  uint32_t                         u32Register;
  stc_VIDEOSS_TCON1_SPG7MASKOFF_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_TCON1_SPG7MASKOFF_t;

/**
  * \brief Sync pulse generator 8, 'Switch on' position (VIDEOSS_TCON1_SPG8POSON)
  */
typedef struct stc_VIDEOSS_TCON1_SPG8POSON_field {
  uint32_t                         u15SPGPSON_Y8:15;
  uint32_t                         u1SPGPSON_FIELD8:1;
  uint32_t                         u15SPGPSON_X8:15;
  uint32_t                         u1SPGPSON_TOGGLE8:1;
} stc_VIDEOSS_TCON1_SPG8POSON_field_t;

typedef union un_VIDEOSS_TCON1_SPG8POSON {
  uint32_t                         u32Register;
  stc_VIDEOSS_TCON1_SPG8POSON_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_TCON1_SPG8POSON_t;

/**
  * \brief The Sequencer Pulse Generator 8 Mask Enable register is used to mask the enable of SPG 8 (VIDEOSS_TCON1_SPG8MASKON)
  */
typedef struct stc_VIDEOSS_TCON1_SPG8MASKON_field {
  uint32_t                         u31SPGMKON8:31;
} stc_VIDEOSS_TCON1_SPG8MASKON_field_t;

typedef union un_VIDEOSS_TCON1_SPG8MASKON {
  uint32_t                         u32Register;
  stc_VIDEOSS_TCON1_SPG8MASKON_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_TCON1_SPG8MASKON_t;

/**
  * \brief Sync pulse generator 8, 'Switch off' position (VIDEOSS_TCON1_SPG8POSOFF)
  */
typedef struct stc_VIDEOSS_TCON1_SPG8POSOFF_field {
  uint32_t                         u15SPGPSOFF_Y8:15;
  uint32_t                         u1SPGPSOFF_FIELD8:1;
  uint32_t                         u15SPGPSOFF_X8:15;
  uint32_t                         u1SPGPSOFF_TOGGLE8:1;
} stc_VIDEOSS_TCON1_SPG8POSOFF_field_t;

typedef union un_VIDEOSS_TCON1_SPG8POSOFF {
  uint32_t                         u32Register;
  stc_VIDEOSS_TCON1_SPG8POSOFF_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_TCON1_SPG8POSOFF_t;

/**
  * \brief The Sequencer Pulse Generator 8 Mask Enable register is used to mask the disable of SPG 8 (VIDEOSS_TCON1_SPG8MASKOFF)
  */
typedef struct stc_VIDEOSS_TCON1_SPG8MASKOFF_field {
  uint32_t                         u31SPGMKOFF8:31;
} stc_VIDEOSS_TCON1_SPG8MASKOFF_field_t;

typedef union un_VIDEOSS_TCON1_SPG8MASKOFF {
  uint32_t                         u32Register;
  stc_VIDEOSS_TCON1_SPG8MASKOFF_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_TCON1_SPG8MASKOFF_t;

/**
  * \brief Sync pulse generator 9, 'Switch on' position (VIDEOSS_TCON1_SPG9POSON)
  */
typedef struct stc_VIDEOSS_TCON1_SPG9POSON_field {
  uint32_t                         u15SPGPSON_Y9:15;
  uint32_t                         u1SPGPSON_FIELD9:1;
  uint32_t                         u15SPGPSON_X9:15;
  uint32_t                         u1SPGPSON_TOGGLE9:1;
} stc_VIDEOSS_TCON1_SPG9POSON_field_t;

typedef union un_VIDEOSS_TCON1_SPG9POSON {
  uint32_t                         u32Register;
  stc_VIDEOSS_TCON1_SPG9POSON_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_TCON1_SPG9POSON_t;

/**
  * \brief The Sequencer Pulse Generator 9 Mask Enable register is used to mask the enable of SPG 9 (VIDEOSS_TCON1_SPG9MASKON)
  */
typedef struct stc_VIDEOSS_TCON1_SPG9MASKON_field {
  uint32_t                         u31SPGMKON9:31;
} stc_VIDEOSS_TCON1_SPG9MASKON_field_t;

typedef union un_VIDEOSS_TCON1_SPG9MASKON {
  uint32_t                         u32Register;
  stc_VIDEOSS_TCON1_SPG9MASKON_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_TCON1_SPG9MASKON_t;

/**
  * \brief Sync pulse generator 9, 'Switch off' position (VIDEOSS_TCON1_SPG9POSOFF)
  */
typedef struct stc_VIDEOSS_TCON1_SPG9POSOFF_field {
  uint32_t                         u15SPGPSOFF_Y9:15;
  uint32_t                         u1SPGPSOFF_FIELD9:1;
  uint32_t                         u15SPGPSOFF_X9:15;
  uint32_t                         u1SPGPSOFF_TOGGLE9:1;
} stc_VIDEOSS_TCON1_SPG9POSOFF_field_t;

typedef union un_VIDEOSS_TCON1_SPG9POSOFF {
  uint32_t                         u32Register;
  stc_VIDEOSS_TCON1_SPG9POSOFF_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_TCON1_SPG9POSOFF_t;

/**
  * \brief The Sequencer Pulse Generator 9 Mask Enable register is used to mask the disable of SPG 9 (VIDEOSS_TCON1_SPG9MASKOFF)
  */
typedef struct stc_VIDEOSS_TCON1_SPG9MASKOFF_field {
  uint32_t                         u31SPGMKOFF9:31;
} stc_VIDEOSS_TCON1_SPG9MASKOFF_field_t;

typedef union un_VIDEOSS_TCON1_SPG9MASKOFF {
  uint32_t                         u32Register;
  stc_VIDEOSS_TCON1_SPG9MASKOFF_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_TCON1_SPG9MASKOFF_t;

/**
  * \brief Sync pulse generator 10, 'Switch on' position (VIDEOSS_TCON1_SPG10POSON)
  */
typedef struct stc_VIDEOSS_TCON1_SPG10POSON_field {
  uint32_t                         u15SPGPSON_Y10:15;
  uint32_t                         u1SPGPSON_FIELD10:1;
  uint32_t                         u15SPGPSON_X10:15;
  uint32_t                         u1SPGPSON_TOGGLE10:1;
} stc_VIDEOSS_TCON1_SPG10POSON_field_t;

typedef union un_VIDEOSS_TCON1_SPG10POSON {
  uint32_t                         u32Register;
  stc_VIDEOSS_TCON1_SPG10POSON_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_TCON1_SPG10POSON_t;

/**
  * \brief The Sequencer Pulse Generator 10 Mask Enable register is used to mask the enable of SPG 10 (VIDEOSS_TCON1_SPG10MASKON)
  */
typedef struct stc_VIDEOSS_TCON1_SPG10MASKON_field {
  uint32_t                         u31SPGMKON10:31;
} stc_VIDEOSS_TCON1_SPG10MASKON_field_t;

typedef union un_VIDEOSS_TCON1_SPG10MASKON {
  uint32_t                         u32Register;
  stc_VIDEOSS_TCON1_SPG10MASKON_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_TCON1_SPG10MASKON_t;

/**
  * \brief Sync pulse generator 10, 'Switch off' position (VIDEOSS_TCON1_SPG10POSOFF)
  */
typedef struct stc_VIDEOSS_TCON1_SPG10POSOFF_field {
  uint32_t                         u15SPGPSOFF_Y10:15;
  uint32_t                         u1SPGPSOFF_FIELD10:1;
  uint32_t                         u15SPGPSOFF_X10:15;
  uint32_t                         u1SPGPSOFF_TOGGLE10:1;
} stc_VIDEOSS_TCON1_SPG10POSOFF_field_t;

typedef union un_VIDEOSS_TCON1_SPG10POSOFF {
  uint32_t                         u32Register;
  stc_VIDEOSS_TCON1_SPG10POSOFF_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_TCON1_SPG10POSOFF_t;

/**
  * \brief The Sequencer Pulse Generator 10 Mask Enable register is used to mask the disable of SPG 10 (VIDEOSS_TCON1_SPG10MASKOFF)
  */
typedef struct stc_VIDEOSS_TCON1_SPG10MASKOFF_field {
  uint32_t                         u31SPGMKOFF10:31;
} stc_VIDEOSS_TCON1_SPG10MASKOFF_field_t;

typedef union un_VIDEOSS_TCON1_SPG10MASKOFF {
  uint32_t                         u32Register;
  stc_VIDEOSS_TCON1_SPG10MASKOFF_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_TCON1_SPG10MASKOFF_t;

/**
  * \brief Sync pulse generator 11, 'Switch on' position (VIDEOSS_TCON1_SPG11POSON)
  */
typedef struct stc_VIDEOSS_TCON1_SPG11POSON_field {
  uint32_t                         u15SPGPSON_Y11:15;
  uint32_t                         u1SPGPSON_FIELD11:1;
  uint32_t                         u15SPGPSON_X11:15;
  uint32_t                         u1SPGPSON_TOGGLE11:1;
} stc_VIDEOSS_TCON1_SPG11POSON_field_t;

typedef union un_VIDEOSS_TCON1_SPG11POSON {
  uint32_t                         u32Register;
  stc_VIDEOSS_TCON1_SPG11POSON_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_TCON1_SPG11POSON_t;

/**
  * \brief The Sequencer Pulse Generator 11 Mask Enable register is used to mask the enable of SPG 11 (VIDEOSS_TCON1_SPG11MASKON)
  */
typedef struct stc_VIDEOSS_TCON1_SPG11MASKON_field {
  uint32_t                         u31SPGMKON11:31;
} stc_VIDEOSS_TCON1_SPG11MASKON_field_t;

typedef union un_VIDEOSS_TCON1_SPG11MASKON {
  uint32_t                         u32Register;
  stc_VIDEOSS_TCON1_SPG11MASKON_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_TCON1_SPG11MASKON_t;

/**
  * \brief Sync pulse generator 11, 'Switch off' position (VIDEOSS_TCON1_SPG11POSOFF)
  */
typedef struct stc_VIDEOSS_TCON1_SPG11POSOFF_field {
  uint32_t                         u15SPGPSOFF_Y11:15;
  uint32_t                         u1SPGPSOFF_FIELD11:1;
  uint32_t                         u15SPGPSOFF_X11:15;
  uint32_t                         u1SPGPSOFF_TOGGLE11:1;
} stc_VIDEOSS_TCON1_SPG11POSOFF_field_t;

typedef union un_VIDEOSS_TCON1_SPG11POSOFF {
  uint32_t                         u32Register;
  stc_VIDEOSS_TCON1_SPG11POSOFF_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_TCON1_SPG11POSOFF_t;

/**
  * \brief The Sequencer Pulse Generator 11 Mask Enable register is used to mask the disable of SPG 11 (VIDEOSS_TCON1_SPG11MASKOFF)
  */
typedef struct stc_VIDEOSS_TCON1_SPG11MASKOFF_field {
  uint32_t                         u31SPGMKOFF11:31;
} stc_VIDEOSS_TCON1_SPG11MASKOFF_field_t;

typedef union un_VIDEOSS_TCON1_SPG11MASKOFF {
  uint32_t                         u32Register;
  stc_VIDEOSS_TCON1_SPG11MASKOFF_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_TCON1_SPG11MASKOFF_t;

/**
  * \brief Selection of input signals of sync mixer (VIDEOSS_TCON1_SMX0SIGS)
  */
typedef struct stc_VIDEOSS_TCON1_SMX0SIGS_field {
  uint32_t                         u3SMX0SIGS_S0:3;
  uint32_t                         u3SMX0SIGS_S1:3;
  uint32_t                         u3SMX0SIGS_S2:3;
  uint32_t                         u3SMX0SIGS_S3:3;
  uint32_t                         u3SMX0SIGS_S4:3;
  uint32_t                         :17;
} stc_VIDEOSS_TCON1_SMX0SIGS_field_t;

typedef union un_VIDEOSS_TCON1_SMX0SIGS {
  uint32_t                         u32Register;
  stc_VIDEOSS_TCON1_SMX0SIGS_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_TCON1_SMX0SIGS_t;

/**
  * \brief The sync mixer output is the result of the function table a=s4*2**4+s3*2**3+s2*2**2+s1*2**1+s0*2**0 whereby a is bit number and s result of sync mixer input selection (VIDEOSS_TCON1_SMX0FCTTABLE)
  */
typedef struct stc_VIDEOSS_TCON1_SMX0FCTTABLE_field {
  uint32_t                         u32SMXFCT0:32;
} stc_VIDEOSS_TCON1_SMX0FCTTABLE_field_t;

typedef union un_VIDEOSS_TCON1_SMX0FCTTABLE {
  uint32_t                         u32Register;
  stc_VIDEOSS_TCON1_SMX0FCTTABLE_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_TCON1_SMX0FCTTABLE_t;

/**
  * \brief Selection of input signals of sync mixer (VIDEOSS_TCON1_SMX1SIGS)
  */
typedef struct stc_VIDEOSS_TCON1_SMX1SIGS_field {
  uint32_t                         u3SMX1SIGS_S0:3;
  uint32_t                         u3SMX1SIGS_S1:3;
  uint32_t                         u3SMX1SIGS_S2:3;
  uint32_t                         u3SMX1SIGS_S3:3;
  uint32_t                         u3SMX1SIGS_S4:3;
  uint32_t                         :17;
} stc_VIDEOSS_TCON1_SMX1SIGS_field_t;

typedef union un_VIDEOSS_TCON1_SMX1SIGS {
  uint32_t                         u32Register;
  stc_VIDEOSS_TCON1_SMX1SIGS_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_TCON1_SMX1SIGS_t;

/**
  * \brief The sync mixer output is the result of the function table a=s4*2**4+s3*2**3+s2*2**2+s1*2**1+s0*2**0 whereby a is bit number and s result of sync mixer input selection (VIDEOSS_TCON1_SMX1FCTTABLE)
  */
typedef struct stc_VIDEOSS_TCON1_SMX1FCTTABLE_field {
  uint32_t                         u32SMXFCT1:32;
} stc_VIDEOSS_TCON1_SMX1FCTTABLE_field_t;

typedef union un_VIDEOSS_TCON1_SMX1FCTTABLE {
  uint32_t                         u32Register;
  stc_VIDEOSS_TCON1_SMX1FCTTABLE_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_TCON1_SMX1FCTTABLE_t;

/**
  * \brief Selection of input signals of sync mixer (VIDEOSS_TCON1_SMX2SIGS)
  */
typedef struct stc_VIDEOSS_TCON1_SMX2SIGS_field {
  uint32_t                         u3SMX2SIGS_S0:3;
  uint32_t                         u3SMX2SIGS_S1:3;
  uint32_t                         u3SMX2SIGS_S2:3;
  uint32_t                         u3SMX2SIGS_S3:3;
  uint32_t                         u3SMX2SIGS_S4:3;
  uint32_t                         :17;
} stc_VIDEOSS_TCON1_SMX2SIGS_field_t;

typedef union un_VIDEOSS_TCON1_SMX2SIGS {
  uint32_t                         u32Register;
  stc_VIDEOSS_TCON1_SMX2SIGS_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_TCON1_SMX2SIGS_t;

/**
  * \brief The sync mixer output is the result of the function table a=s4*2**4+s**3*2**3+s2*2**2+s1*2**1+s0*2**0 whereby a is bit number and s result of sync mixer input selection (VIDEOSS_TCON1_SMX2FCTTABLE)
  */
typedef struct stc_VIDEOSS_TCON1_SMX2FCTTABLE_field {
  uint32_t                         u32SMXFCT2:32;
} stc_VIDEOSS_TCON1_SMX2FCTTABLE_field_t;

typedef union un_VIDEOSS_TCON1_SMX2FCTTABLE {
  uint32_t                         u32Register;
  stc_VIDEOSS_TCON1_SMX2FCTTABLE_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_TCON1_SMX2FCTTABLE_t;

/**
  * \brief Selection of input signals of sync mixer (VIDEOSS_TCON1_SMX3SIGS)
  */
typedef struct stc_VIDEOSS_TCON1_SMX3SIGS_field {
  uint32_t                         u3SMX3SIGS_S0:3;
  uint32_t                         u3SMX3SIGS_S1:3;
  uint32_t                         u3SMX3SIGS_S2:3;
  uint32_t                         u3SMX3SIGS_S3:3;
  uint32_t                         u3SMX3SIGS_S4:3;
  uint32_t                         :17;
} stc_VIDEOSS_TCON1_SMX3SIGS_field_t;

typedef union un_VIDEOSS_TCON1_SMX3SIGS {
  uint32_t                         u32Register;
  stc_VIDEOSS_TCON1_SMX3SIGS_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_TCON1_SMX3SIGS_t;

/**
  * \brief The sync mixer output is the result of the function table a=s4*2**4+s3*2**3+s2*2**2+s1*2**1+s0*2**0 whereby a is bit number and s result of sync mixer input selection (VIDEOSS_TCON1_SMX3FCTTABLE)
  */
typedef struct stc_VIDEOSS_TCON1_SMX3FCTTABLE_field {
  uint32_t                         u32SMXFCT3:32;
} stc_VIDEOSS_TCON1_SMX3FCTTABLE_field_t;

typedef union un_VIDEOSS_TCON1_SMX3FCTTABLE {
  uint32_t                         u32Register;
  stc_VIDEOSS_TCON1_SMX3FCTTABLE_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_TCON1_SMX3FCTTABLE_t;

/**
  * \brief Selection of input signals of sync mixer (VIDEOSS_TCON1_SMX4SIGS)
  */
typedef struct stc_VIDEOSS_TCON1_SMX4SIGS_field {
  uint32_t                         u3SMX4SIGS_S0:3;
  uint32_t                         u3SMX4SIGS_S1:3;
  uint32_t                         u3SMX4SIGS_S2:3;
  uint32_t                         u3SMX4SIGS_S3:3;
  uint32_t                         u3SMX4SIGS_S4:3;
  uint32_t                         :17;
} stc_VIDEOSS_TCON1_SMX4SIGS_field_t;

typedef union un_VIDEOSS_TCON1_SMX4SIGS {
  uint32_t                         u32Register;
  stc_VIDEOSS_TCON1_SMX4SIGS_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_TCON1_SMX4SIGS_t;

/**
  * \brief The sync mixer output is the result of the function table a=s4*2**4+s3*2**3+s2*2**2+s1*2**1+s0*2**0 whereby a is bit number and s result of sync mixer input selection (VIDEOSS_TCON1_SMX4FCTTABLE)
  */
typedef struct stc_VIDEOSS_TCON1_SMX4FCTTABLE_field {
  uint32_t                         u32SMXFCT4:32;
} stc_VIDEOSS_TCON1_SMX4FCTTABLE_field_t;

typedef union un_VIDEOSS_TCON1_SMX4FCTTABLE {
  uint32_t                         u32Register;
  stc_VIDEOSS_TCON1_SMX4FCTTABLE_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_TCON1_SMX4FCTTABLE_t;

/**
  * \brief Selection of input signals of sync mixer (VIDEOSS_TCON1_SMX5SIGS)
  */
typedef struct stc_VIDEOSS_TCON1_SMX5SIGS_field {
  uint32_t                         u3SMX5SIGS_S0:3;
  uint32_t                         u3SMX5SIGS_S1:3;
  uint32_t                         u3SMX5SIGS_S2:3;
  uint32_t                         u3SMX5SIGS_S3:3;
  uint32_t                         u3SMX5SIGS_S4:3;
  uint32_t                         :17;
} stc_VIDEOSS_TCON1_SMX5SIGS_field_t;

typedef union un_VIDEOSS_TCON1_SMX5SIGS {
  uint32_t                         u32Register;
  stc_VIDEOSS_TCON1_SMX5SIGS_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_TCON1_SMX5SIGS_t;

/**
  * \brief The sync mixer output is the result of the function table a=s4*2**4+s3*2**3+s2*2**2+s1*2**1+s0*2**0 whereby a is bit number and s result of sync mixer input selection (VIDEOSS_TCON1_SMX5FCTTABLE)
  */
typedef struct stc_VIDEOSS_TCON1_SMX5FCTTABLE_field {
  uint32_t                         u32SMXFCT5:32;
} stc_VIDEOSS_TCON1_SMX5FCTTABLE_field_t;

typedef union un_VIDEOSS_TCON1_SMX5FCTTABLE {
  uint32_t                         u32Register;
  stc_VIDEOSS_TCON1_SMX5FCTTABLE_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_TCON1_SMX5FCTTABLE_t;

/**
  * \brief Selection of input signals of sync mixer (VIDEOSS_TCON1_SMX6SIGS)
  */
typedef struct stc_VIDEOSS_TCON1_SMX6SIGS_field {
  uint32_t                         u3SMX6SIGS_S0:3;
  uint32_t                         u3SMX6SIGS_S1:3;
  uint32_t                         u3SMX6SIGS_S2:3;
  uint32_t                         u3SMX6SIGS_S3:3;
  uint32_t                         u3SMX6SIGS_S4:3;
  uint32_t                         :17;
} stc_VIDEOSS_TCON1_SMX6SIGS_field_t;

typedef union un_VIDEOSS_TCON1_SMX6SIGS {
  uint32_t                         u32Register;
  stc_VIDEOSS_TCON1_SMX6SIGS_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_TCON1_SMX6SIGS_t;

/**
  * \brief The sync mixer output is the result of the function table a=s4*2**4+s3*2**3+s2*2**2+s1*2**1+s0*2**0 whereby a is bit number and s result of sync mixer input selection (VIDEOSS_TCON1_SMX6FCTTABLE)
  */
typedef struct stc_VIDEOSS_TCON1_SMX6FCTTABLE_field {
  uint32_t                         u32SMXFCT6:32;
} stc_VIDEOSS_TCON1_SMX6FCTTABLE_field_t;

typedef union un_VIDEOSS_TCON1_SMX6FCTTABLE {
  uint32_t                         u32Register;
  stc_VIDEOSS_TCON1_SMX6FCTTABLE_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_TCON1_SMX6FCTTABLE_t;

/**
  * \brief Selection of input signals of sync mixer (VIDEOSS_TCON1_SMX7SIGS)
  */
typedef struct stc_VIDEOSS_TCON1_SMX7SIGS_field {
  uint32_t                         u3SMX7SIGS_S0:3;
  uint32_t                         u3SMX7SIGS_S1:3;
  uint32_t                         u3SMX7SIGS_S2:3;
  uint32_t                         u3SMX7SIGS_S3:3;
  uint32_t                         u3SMX7SIGS_S4:3;
  uint32_t                         :17;
} stc_VIDEOSS_TCON1_SMX7SIGS_field_t;

typedef union un_VIDEOSS_TCON1_SMX7SIGS {
  uint32_t                         u32Register;
  stc_VIDEOSS_TCON1_SMX7SIGS_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_TCON1_SMX7SIGS_t;

/**
  * \brief The sync mixer output is the result of the function table a=s4*2**4+s3*2**3+s2*2**2+s1*2**1+s0*2**0 whereby a is bit number and s result of sync mixer input selection (VIDEOSS_TCON1_SMX7FCTTABLE)
  */
typedef struct stc_VIDEOSS_TCON1_SMX7FCTTABLE_field {
  uint32_t                         u32SMXFCT7:32;
} stc_VIDEOSS_TCON1_SMX7FCTTABLE_field_t;

typedef union un_VIDEOSS_TCON1_SMX7FCTTABLE {
  uint32_t                         u32Register;
  stc_VIDEOSS_TCON1_SMX7FCTTABLE_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_TCON1_SMX7FCTTABLE_t;

/**
  * \brief Selection of input signals of sync mixer (VIDEOSS_TCON1_SMX8SIGS)
  */
typedef struct stc_VIDEOSS_TCON1_SMX8SIGS_field {
  uint32_t                         u3SMX8SIGS_S0:3;
  uint32_t                         u3SMX8SIGS_S1:3;
  uint32_t                         u3SMX8SIGS_S2:3;
  uint32_t                         u3SMX8SIGS_S3:3;
  uint32_t                         u3SMX8SIGS_S4:3;
  uint32_t                         :17;
} stc_VIDEOSS_TCON1_SMX8SIGS_field_t;

typedef union un_VIDEOSS_TCON1_SMX8SIGS {
  uint32_t                         u32Register;
  stc_VIDEOSS_TCON1_SMX8SIGS_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_TCON1_SMX8SIGS_t;

/**
  * \brief The sync mixer output is the result of the function table a=s4*2**4+s3*2**3+s2*2**2+s1*2**1+s0*2**0 whereby a is bit number and s result of sync mixer input selection (VIDEOSS_TCON1_SMX8FCTTABLE)
  */
typedef struct stc_VIDEOSS_TCON1_SMX8FCTTABLE_field {
  uint32_t                         u32SMXFCT8:32;
} stc_VIDEOSS_TCON1_SMX8FCTTABLE_field_t;

typedef union un_VIDEOSS_TCON1_SMX8FCTTABLE {
  uint32_t                         u32Register;
  stc_VIDEOSS_TCON1_SMX8FCTTABLE_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_TCON1_SMX8FCTTABLE_t;

/**
  * \brief Selection of input signals of sync mixer (VIDEOSS_TCON1_SMX9SIGS)
  */
typedef struct stc_VIDEOSS_TCON1_SMX9SIGS_field {
  uint32_t                         u3SMX9SIGS_S0:3;
  uint32_t                         u3SMX9SIGS_S1:3;
  uint32_t                         u3SMX9SIGS_S2:3;
  uint32_t                         u3SMX9SIGS_S3:3;
  uint32_t                         u3SMX9SIGS_S4:3;
  uint32_t                         :17;
} stc_VIDEOSS_TCON1_SMX9SIGS_field_t;

typedef union un_VIDEOSS_TCON1_SMX9SIGS {
  uint32_t                         u32Register;
  stc_VIDEOSS_TCON1_SMX9SIGS_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_TCON1_SMX9SIGS_t;

/**
  * \brief The sync mixer output is the result of the function table a=s4*2**4+s3*2**3+s2*2**2+s1*2**1+s0*2**0 whereby a is bit number and s result of sync mixer input selection (VIDEOSS_TCON1_SMX9FCTTABLE)
  */
typedef struct stc_VIDEOSS_TCON1_SMX9FCTTABLE_field {
  uint32_t                         u32SMXFCT9:32;
} stc_VIDEOSS_TCON1_SMX9FCTTABLE_field_t;

typedef union un_VIDEOSS_TCON1_SMX9FCTTABLE {
  uint32_t                         u32Register;
  stc_VIDEOSS_TCON1_SMX9FCTTABLE_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_TCON1_SMX9FCTTABLE_t;

/**
  * \brief Selection of input signals of sync mixer (VIDEOSS_TCON1_SMX10SIGS)
  */
typedef struct stc_VIDEOSS_TCON1_SMX10SIGS_field {
  uint32_t                         u3SMX10SIGS_S0:3;
  uint32_t                         u3SMX10SIGS_S1:3;
  uint32_t                         u3SMX10SIGS_S2:3;
  uint32_t                         u3SMX10SIGS_S3:3;
  uint32_t                         u3SMX10SIGS_S4:3;
  uint32_t                         :17;
} stc_VIDEOSS_TCON1_SMX10SIGS_field_t;

typedef union un_VIDEOSS_TCON1_SMX10SIGS {
  uint32_t                         u32Register;
  stc_VIDEOSS_TCON1_SMX10SIGS_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_TCON1_SMX10SIGS_t;

/**
  * \brief The sync mixer output is the result of the function table a=s4*2**4+s3*2**3+s2*2**2+s1*2**1+s0*2**0 whereby a is bit number and s result of sync mixer input selection (VIDEOSS_TCON1_SMX10FCTTABLE)
  */
typedef struct stc_VIDEOSS_TCON1_SMX10FCTTABLE_field {
  uint32_t                         u32SMXFCT10:32;
} stc_VIDEOSS_TCON1_SMX10FCTTABLE_field_t;

typedef union un_VIDEOSS_TCON1_SMX10FCTTABLE {
  uint32_t                         u32Register;
  stc_VIDEOSS_TCON1_SMX10FCTTABLE_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_TCON1_SMX10FCTTABLE_t;

/**
  * \brief Selection of input signals of sync mixer (VIDEOSS_TCON1_SMX11SIGS)
  */
typedef struct stc_VIDEOSS_TCON1_SMX11SIGS_field {
  uint32_t                         u3SMX11SIGS_S0:3;
  uint32_t                         u3SMX11SIGS_S1:3;
  uint32_t                         u3SMX11SIGS_S2:3;
  uint32_t                         u3SMX11SIGS_S3:3;
  uint32_t                         u3SMX11SIGS_S4:3;
  uint32_t                         :17;
} stc_VIDEOSS_TCON1_SMX11SIGS_field_t;

typedef union un_VIDEOSS_TCON1_SMX11SIGS {
  uint32_t                         u32Register;
  stc_VIDEOSS_TCON1_SMX11SIGS_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_TCON1_SMX11SIGS_t;

/**
  * \brief The sync mixer output is the result of the function table a=s4*2**4+s3*2**3+s2*2**2+s1*2**1+s0*2**0 whereby a is bit number and s result of sync mixer input selection (VIDEOSS_TCON1_SMX11FCTTABLE)
  */
typedef struct stc_VIDEOSS_TCON1_SMX11FCTTABLE_field {
  uint32_t                         u32SMXFCT11:32;
} stc_VIDEOSS_TCON1_SMX11FCTTABLE_field_t;

typedef union un_VIDEOSS_TCON1_SMX11FCTTABLE {
  uint32_t                         u32Register;
  stc_VIDEOSS_TCON1_SMX11FCTTABLE_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_TCON1_SMX11FCTTABLE_t;



/**
  * \brief IP Control register for FPDLink (VIDEOSS_FPDLINK0_CTL)
  */
typedef struct stc_VIDEOSS_FPDLINK0_CTL_field {
  uint32_t                         u1PD_TX:1;
  uint32_t                         :30;
  uint32_t                         u1ENABLED:1;
} stc_VIDEOSS_FPDLINK0_CTL_field_t;

typedef union un_VIDEOSS_FPDLINK0_CTL {
  uint32_t                         u32Register;
  stc_VIDEOSS_FPDLINK0_CTL_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_FPDLINK0_CTL_t;

/**
  * \brief IP Command register for FPDLink (VIDEOSS_FPDLINK0_CMD)
  */
typedef struct stc_VIDEOSS_FPDLINK0_CMD_field {
  uint32_t                         u1LVDS_TX_EN:1;
  uint32_t                         :31;
} stc_VIDEOSS_FPDLINK0_CMD_field_t;

typedef union un_VIDEOSS_FPDLINK0_CMD {
  uint32_t                         u32Register;
  stc_VIDEOSS_FPDLINK0_CMD_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_FPDLINK0_CMD_t;

/**
  * \brief Control register for CLK_GEN (VIDEOSS_FPDLINK0_CLK_GEN_CMD)
  */
typedef struct stc_VIDEOSS_FPDLINK0_CLK_GEN_CMD_field {
  uint32_t                         u1MODE8:1;
  uint32_t                         :31;
} stc_VIDEOSS_FPDLINK0_CLK_GEN_CMD_field_t;

typedef union un_VIDEOSS_FPDLINK0_CLK_GEN_CMD {
  uint32_t                         u32Register;
  stc_VIDEOSS_FPDLINK0_CLK_GEN_CMD_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_FPDLINK0_CLK_GEN_CMD_t;

/**
  * \brief Configuration register for CKGEN (VIDEOSS_FPDLINK0_CLK_GEN_CTL)
  */
typedef struct stc_VIDEOSS_FPDLINK0_CLK_GEN_CTL_field {
  uint32_t                         u2FRANGE:2;
  uint32_t                         :2;
  uint32_t                         u2LFCTRL:2;
  uint32_t                         :2;
  uint32_t                         u3CA:3;
  uint32_t                         :1;
  uint32_t                         u3CCM:3;
  uint32_t                         :1;
  uint32_t                         u2CN:2;
  uint32_t                         :2;
  uint32_t                         u1LOCK_SEL:1;
  uint32_t                         :3;
  uint32_t                         u1MSB_FIRST:1;
  uint32_t                         :7;
} stc_VIDEOSS_FPDLINK0_CLK_GEN_CTL_field_t;

typedef union un_VIDEOSS_FPDLINK0_CLK_GEN_CTL {
  uint32_t                         u32Register;
  stc_VIDEOSS_FPDLINK0_CLK_GEN_CTL_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_FPDLINK0_CLK_GEN_CTL_t;

/**
  * \brief Status register for CKGEN (VIDEOSS_FPDLINK0_CLK_GEN_STATUS)
  */
typedef struct stc_VIDEOSS_FPDLINK0_CLK_GEN_STATUS_field {
  uint32_t                         u1PLL_LOCK:1;
  uint32_t                         :31;
} stc_VIDEOSS_FPDLINK0_CLK_GEN_STATUS_field_t;

typedef union un_VIDEOSS_FPDLINK0_CLK_GEN_STATUS {
  uint32_t                         u32Register;
  stc_VIDEOSS_FPDLINK0_CLK_GEN_STATUS_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_FPDLINK0_CLK_GEN_STATUS_t;



/**
  * \brief IP Control register for FPDLink (VIDEOSS_FPDLINK1_CTL)
  */
typedef struct stc_VIDEOSS_FPDLINK1_CTL_field {
  uint32_t                         u1PD_TX:1;
  uint32_t                         :30;
  uint32_t                         u1ENABLED:1;
} stc_VIDEOSS_FPDLINK1_CTL_field_t;

typedef union un_VIDEOSS_FPDLINK1_CTL {
  uint32_t                         u32Register;
  stc_VIDEOSS_FPDLINK1_CTL_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_FPDLINK1_CTL_t;

/**
  * \brief IP Command register for FPDLink (VIDEOSS_FPDLINK1_CMD)
  */
typedef struct stc_VIDEOSS_FPDLINK1_CMD_field {
  uint32_t                         u1LVDS_TX_EN:1;
  uint32_t                         :31;
} stc_VIDEOSS_FPDLINK1_CMD_field_t;

typedef union un_VIDEOSS_FPDLINK1_CMD {
  uint32_t                         u32Register;
  stc_VIDEOSS_FPDLINK1_CMD_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_FPDLINK1_CMD_t;

/**
  * \brief Control register for CLK_GEN (VIDEOSS_FPDLINK1_CLK_GEN_CMD)
  */
typedef struct stc_VIDEOSS_FPDLINK1_CLK_GEN_CMD_field {
  uint32_t                         u1MODE8:1;
  uint32_t                         :31;
} stc_VIDEOSS_FPDLINK1_CLK_GEN_CMD_field_t;

typedef union un_VIDEOSS_FPDLINK1_CLK_GEN_CMD {
  uint32_t                         u32Register;
  stc_VIDEOSS_FPDLINK1_CLK_GEN_CMD_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_FPDLINK1_CLK_GEN_CMD_t;

/**
  * \brief Configuration register for CKGEN (VIDEOSS_FPDLINK1_CLK_GEN_CTL)
  */
typedef struct stc_VIDEOSS_FPDLINK1_CLK_GEN_CTL_field {
  uint32_t                         u2FRANGE:2;
  uint32_t                         :2;
  uint32_t                         u2LFCTRL:2;
  uint32_t                         :2;
  uint32_t                         u3CA:3;
  uint32_t                         :1;
  uint32_t                         u3CCM:3;
  uint32_t                         :1;
  uint32_t                         u2CN:2;
  uint32_t                         :2;
  uint32_t                         u1LOCK_SEL:1;
  uint32_t                         :3;
  uint32_t                         u1MSB_FIRST:1;
  uint32_t                         :7;
} stc_VIDEOSS_FPDLINK1_CLK_GEN_CTL_field_t;

typedef union un_VIDEOSS_FPDLINK1_CLK_GEN_CTL {
  uint32_t                         u32Register;
  stc_VIDEOSS_FPDLINK1_CLK_GEN_CTL_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_FPDLINK1_CLK_GEN_CTL_t;

/**
  * \brief Status register for CKGEN (VIDEOSS_FPDLINK1_CLK_GEN_STATUS)
  */
typedef struct stc_VIDEOSS_FPDLINK1_CLK_GEN_STATUS_field {
  uint32_t                         u1PLL_LOCK:1;
  uint32_t                         :31;
} stc_VIDEOSS_FPDLINK1_CLK_GEN_STATUS_field_t;

typedef union un_VIDEOSS_FPDLINK1_CLK_GEN_STATUS {
  uint32_t                         u32Register;
  stc_VIDEOSS_FPDLINK1_CLK_GEN_STATUS_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_FPDLINK1_CLK_GEN_STATUS_t;



/**
  * \brief Control (VIDEOSS_MIPICSI_MIPICSI_STRUCT_MIPICSI_WRAP_CTL)
  */
typedef struct stc_VIDEOSS_MIPICSI_MIPICSI_STRUCT_MIPICSI_WRAP_CTL_field {
  uint32_t                         :31;
  uint32_t                         u1ENABLED:1;
} stc_VIDEOSS_MIPICSI_MIPICSI_STRUCT_MIPICSI_WRAP_CTL_field_t;

typedef union un_VIDEOSS_MIPICSI_MIPICSI_STRUCT_MIPICSI_WRAP_CTL {
  uint32_t                         u32Register;
  stc_VIDEOSS_MIPICSI_MIPICSI_STRUCT_MIPICSI_WRAP_CTL_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_MIPICSI_MIPICSI_STRUCT_MIPICSI_WRAP_CTL_t;

/**
  * \brief D-PHY Control (VIDEOSS_MIPICSI_MIPICSI_STRUCT_MIPICSI_WRAP_DPHY_CTL)
  */
typedef struct stc_VIDEOSS_MIPICSI_MIPICSI_STRUCT_MIPICSI_WRAP_DPHY_CTL_field {
  uint32_t                         u1PD_DPHY:1;
  uint32_t                         :7;
  uint32_t                         u1AUTO_PD_EN:1;
  uint32_t                         :7;
  uint32_t                         u1CONT_CLK_MODE:1;
  uint32_t                         u1HSEL:1;
  uint32_t                         u1ENP_DESER:1;
  uint32_t                         :13;
} stc_VIDEOSS_MIPICSI_MIPICSI_STRUCT_MIPICSI_WRAP_DPHY_CTL_field_t;

typedef union un_VIDEOSS_MIPICSI_MIPICSI_STRUCT_MIPICSI_WRAP_DPHY_CTL {
  uint32_t                         u32Register;
  stc_VIDEOSS_MIPICSI_MIPICSI_STRUCT_MIPICSI_WRAP_DPHY_CTL_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_MIPICSI_MIPICSI_STRUCT_MIPICSI_WRAP_DPHY_CTL_t;

/**
  * \brief Clock Control (VIDEOSS_MIPICSI_MIPICSI_STRUCT_MIPICSI_WRAP_CLOCK_CTL)
  */
typedef struct stc_VIDEOSS_MIPICSI_MIPICSI_STRUCT_MIPICSI_WRAP_CLOCK_CTL_field {
  uint32_t                         u1ESC_SEL:1;
  uint32_t                         :7;
  uint32_t                         u2ESC_DIV:2;
  uint32_t                         :22;
} stc_VIDEOSS_MIPICSI_MIPICSI_STRUCT_MIPICSI_WRAP_CLOCK_CTL_field_t;

typedef union un_VIDEOSS_MIPICSI_MIPICSI_STRUCT_MIPICSI_WRAP_CLOCK_CTL {
  uint32_t                         u32Register;
  stc_VIDEOSS_MIPICSI_MIPICSI_STRUCT_MIPICSI_WRAP_CLOCK_CTL_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_MIPICSI_MIPICSI_STRUCT_MIPICSI_WRAP_CLOCK_CTL_t;

/**
  * \brief Calibration Control (VIDEOSS_MIPICSI_MIPICSI_STRUCT_MIPICSI_WRAP_CAL_CTL)
  */
typedef struct stc_VIDEOSS_MIPICSI_MIPICSI_STRUCT_MIPICSI_WRAP_CAL_CTL_field {
  uint32_t                         u2RX_RCAL:2;
  uint32_t                         :6;
  uint32_t                         u1NOCAL:1;
  uint32_t                         :23;
} stc_VIDEOSS_MIPICSI_MIPICSI_STRUCT_MIPICSI_WRAP_CAL_CTL_field_t;

typedef union un_VIDEOSS_MIPICSI_MIPICSI_STRUCT_MIPICSI_WRAP_CAL_CTL {
  uint32_t                         u32Register;
  stc_VIDEOSS_MIPICSI_MIPICSI_STRUCT_MIPICSI_WRAP_CAL_CTL_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_MIPICSI_MIPICSI_STRUCT_MIPICSI_WRAP_CAL_CTL_t;

/**
  * \brief Calibration Status (VIDEOSS_MIPICSI_MIPICSI_STRUCT_MIPICSI_WRAP_CAL_STAT)
  */
typedef struct stc_VIDEOSS_MIPICSI_MIPICSI_STRUCT_MIPICSI_WRAP_CAL_STAT_field {
  uint32_t                         u2CALOUT:2;
  uint32_t                         :30;
} stc_VIDEOSS_MIPICSI_MIPICSI_STRUCT_MIPICSI_WRAP_CAL_STAT_field_t;

typedef union un_VIDEOSS_MIPICSI_MIPICSI_STRUCT_MIPICSI_WRAP_CAL_STAT {
  uint32_t                         u32Register;
  stc_VIDEOSS_MIPICSI_MIPICSI_STRUCT_MIPICSI_WRAP_CAL_STAT_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_MIPICSI_MIPICSI_STRUCT_MIPICSI_WRAP_CAL_STAT_t;

/**
  * \brief Timing Data Lane Control (VIDEOSS_MIPICSI_MIPICSI_STRUCT_MIPICSI_WRAP_TMG_DATA_CTL)
  */
typedef struct stc_VIDEOSS_MIPICSI_MIPICSI_STRUCT_MIPICSI_WRAP_TMG_DATA_CTL_field {
  uint32_t                         u6S_PRG_RXHS_SETTLE:6;
  uint32_t                         :2;
  uint32_t                         u2S_PRG_HS_PREPARE:2;
  uint32_t                         :6;
  uint32_t                         u5S_PRG_HS_ZERO:5;
  uint32_t                         :3;
  uint32_t                         u5S_PRG_HS_TRAIL:5;
  uint32_t                         :3;
} stc_VIDEOSS_MIPICSI_MIPICSI_STRUCT_MIPICSI_WRAP_TMG_DATA_CTL_field_t;

typedef union un_VIDEOSS_MIPICSI_MIPICSI_STRUCT_MIPICSI_WRAP_TMG_DATA_CTL {
  uint32_t                         u32Register;
  stc_VIDEOSS_MIPICSI_MIPICSI_STRUCT_MIPICSI_WRAP_TMG_DATA_CTL_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_MIPICSI_MIPICSI_STRUCT_MIPICSI_WRAP_TMG_DATA_CTL_t;

/**
  * \brief Timing Clock Lane Control (VIDEOSS_MIPICSI_MIPICSI_STRUCT_MIPICSI_WRAP_TMG_CLOCK_CTL)
  */
typedef struct stc_VIDEOSS_MIPICSI_MIPICSI_STRUCT_MIPICSI_WRAP_TMG_CLOCK_CTL_field {
  uint32_t                         u6SC_PRG_RXHS_SETTLE:6;
  uint32_t                         :2;
  uint32_t                         u1SC_PRG_HS_PREPARE:1;
  uint32_t                         :7;
  uint32_t                         u6SC_PRG_HS_ZERO:6;
  uint32_t                         :10;
} stc_VIDEOSS_MIPICSI_MIPICSI_STRUCT_MIPICSI_WRAP_TMG_CLOCK_CTL_field_t;

typedef union un_VIDEOSS_MIPICSI_MIPICSI_STRUCT_MIPICSI_WRAP_TMG_CLOCK_CTL {
  uint32_t                         u32Register;
  stc_VIDEOSS_MIPICSI_MIPICSI_STRUCT_MIPICSI_WRAP_TMG_CLOCK_CTL_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_MIPICSI_MIPICSI_STRUCT_MIPICSI_WRAP_TMG_CLOCK_CTL_t;



/**
  * \brief CFG_NUM_LANES is a register within the CSI-2 RX Controller Core. (VIDEOSS_MIPICSI_MIPICSI_STRUCT_MIPICSI_CORE_CFG_NUM_LANES)
  */
typedef struct stc_VIDEOSS_MIPICSI_MIPICSI_STRUCT_MIPICSI_CORE_CFG_NUM_LANES_field {
  uint32_t                         u4CFG_NUM_LANES:4;
  uint32_t                         :28;
} stc_VIDEOSS_MIPICSI_MIPICSI_STRUCT_MIPICSI_CORE_CFG_NUM_LANES_field_t;

typedef union un_VIDEOSS_MIPICSI_MIPICSI_STRUCT_MIPICSI_CORE_CFG_NUM_LANES {
  uint32_t                         u32Register;
  stc_VIDEOSS_MIPICSI_MIPICSI_STRUCT_MIPICSI_CORE_CFG_NUM_LANES_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_MIPICSI_MIPICSI_STRUCT_MIPICSI_CORE_CFG_NUM_LANES_t;

/**
  * \brief CFG_CLK_LANE_EN is a register within the CSI-2 RX Controller Core. (VIDEOSS_MIPICSI_MIPICSI_STRUCT_MIPICSI_CORE_CFG_CLK_LANE_EN)
  */
typedef struct stc_VIDEOSS_MIPICSI_MIPICSI_STRUCT_MIPICSI_CORE_CFG_CLK_LANE_EN_field {
  uint32_t                         u1CFG_CLK_LANE_EN:1;
  uint32_t                         :31;
} stc_VIDEOSS_MIPICSI_MIPICSI_STRUCT_MIPICSI_CORE_CFG_CLK_LANE_EN_field_t;

typedef union un_VIDEOSS_MIPICSI_MIPICSI_STRUCT_MIPICSI_CORE_CFG_CLK_LANE_EN {
  uint32_t                         u32Register;
  stc_VIDEOSS_MIPICSI_MIPICSI_STRUCT_MIPICSI_CORE_CFG_CLK_LANE_EN_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_MIPICSI_MIPICSI_STRUCT_MIPICSI_CORE_CFG_CLK_LANE_EN_t;

/**
  * \brief CFG_DATA_LANE_EN is a register within the CSI-2 RX Controller Core. (VIDEOSS_MIPICSI_MIPICSI_STRUCT_MIPICSI_CORE_CFG_DATA_LANE_EN)
  */
typedef struct stc_VIDEOSS_MIPICSI_MIPICSI_STRUCT_MIPICSI_CORE_CFG_DATA_LANE_EN_field {
  uint32_t                         u4CFG_DATA_LANE_EN:4;
  uint32_t                         :28;
} stc_VIDEOSS_MIPICSI_MIPICSI_STRUCT_MIPICSI_CORE_CFG_DATA_LANE_EN_field_t;

typedef union un_VIDEOSS_MIPICSI_MIPICSI_STRUCT_MIPICSI_CORE_CFG_DATA_LANE_EN {
  uint32_t                         u32Register;
  stc_VIDEOSS_MIPICSI_MIPICSI_STRUCT_MIPICSI_CORE_CFG_DATA_LANE_EN_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_MIPICSI_MIPICSI_STRUCT_MIPICSI_CORE_CFG_DATA_LANE_EN_t;

/**
  * \brief CFG_FLUSH_COUNT is a register within the CSI-2 RX Controller Core. (VIDEOSS_MIPICSI_MIPICSI_STRUCT_MIPICSI_CORE_CFG_FLUSH_COUNT)
  */
typedef struct stc_VIDEOSS_MIPICSI_MIPICSI_STRUCT_MIPICSI_CORE_CFG_FLUSH_COUNT_field {
  uint32_t                         u4CFG_FLUSH_COUNT:4;
  uint32_t                         :28;
} stc_VIDEOSS_MIPICSI_MIPICSI_STRUCT_MIPICSI_CORE_CFG_FLUSH_COUNT_field_t;

typedef union un_VIDEOSS_MIPICSI_MIPICSI_STRUCT_MIPICSI_CORE_CFG_FLUSH_COUNT {
  uint32_t                         u32Register;
  stc_VIDEOSS_MIPICSI_MIPICSI_STRUCT_MIPICSI_CORE_CFG_FLUSH_COUNT_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_MIPICSI_MIPICSI_STRUCT_MIPICSI_CORE_CFG_FLUSH_COUNT_t;

/**
  * \brief CFG_BIT_ERR is a register within the CSI-2 RX Controller Core. (VIDEOSS_MIPICSI_MIPICSI_STRUCT_MIPICSI_CORE_CFG_BIT_ERR)
  */
typedef struct stc_VIDEOSS_MIPICSI_MIPICSI_STRUCT_MIPICSI_CORE_CFG_BIT_ERR_field {
  uint32_t                         u10BIT_ERR:10;
  uint32_t                         :22;
} stc_VIDEOSS_MIPICSI_MIPICSI_STRUCT_MIPICSI_CORE_CFG_BIT_ERR_field_t;

typedef union un_VIDEOSS_MIPICSI_MIPICSI_STRUCT_MIPICSI_CORE_CFG_BIT_ERR {
  uint32_t                         u32Register;
  stc_VIDEOSS_MIPICSI_MIPICSI_STRUCT_MIPICSI_CORE_CFG_BIT_ERR_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_MIPICSI_MIPICSI_STRUCT_MIPICSI_CORE_CFG_BIT_ERR_t;

/**
  * \brief IRQ_STATUS is a register within the CSI-2 RX Controller Core. (VIDEOSS_MIPICSI_MIPICSI_STRUCT_MIPICSI_CORE_IRQ_STATUS)
  */
typedef struct stc_VIDEOSS_MIPICSI_MIPICSI_STRUCT_MIPICSI_CORE_IRQ_STATUS_field {
  uint32_t                         u8IRQ_STATUS:8;
  uint32_t                         :24;
} stc_VIDEOSS_MIPICSI_MIPICSI_STRUCT_MIPICSI_CORE_IRQ_STATUS_field_t;

typedef union un_VIDEOSS_MIPICSI_MIPICSI_STRUCT_MIPICSI_CORE_IRQ_STATUS {
  uint32_t                         u32Register;
  stc_VIDEOSS_MIPICSI_MIPICSI_STRUCT_MIPICSI_CORE_IRQ_STATUS_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_MIPICSI_MIPICSI_STRUCT_MIPICSI_CORE_IRQ_STATUS_t;

/**
  * \brief IRQ_ENABLE is a register within the CSI-2 RX Controller Core. (VIDEOSS_MIPICSI_MIPICSI_STRUCT_MIPICSI_CORE_IRQ_ENABLE)
  */
typedef struct stc_VIDEOSS_MIPICSI_MIPICSI_STRUCT_MIPICSI_CORE_IRQ_ENABLE_field {
  uint32_t                         u8IRQ_ENABLE:8;
  uint32_t                         :24;
} stc_VIDEOSS_MIPICSI_MIPICSI_STRUCT_MIPICSI_CORE_IRQ_ENABLE_field_t;

typedef union un_VIDEOSS_MIPICSI_MIPICSI_STRUCT_MIPICSI_CORE_IRQ_ENABLE {
  uint32_t                         u32Register;
  stc_VIDEOSS_MIPICSI_MIPICSI_STRUCT_MIPICSI_CORE_IRQ_ENABLE_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_MIPICSI_MIPICSI_STRUCT_MIPICSI_CORE_IRQ_ENABLE_t;

/**
  * \brief IRQ_CLR is a register within the CSI-2 RX Controller Core. (VIDEOSS_MIPICSI_MIPICSI_STRUCT_MIPICSI_CORE_IRQ_CLR)
  */
typedef struct stc_VIDEOSS_MIPICSI_MIPICSI_STRUCT_MIPICSI_CORE_IRQ_CLR_field {
  uint32_t                         u8IRQ_CLR:8;
  uint32_t                         :24;
} stc_VIDEOSS_MIPICSI_MIPICSI_STRUCT_MIPICSI_CORE_IRQ_CLR_field_t;

typedef union un_VIDEOSS_MIPICSI_MIPICSI_STRUCT_MIPICSI_CORE_IRQ_CLR {
  uint32_t                         u32Register;
  stc_VIDEOSS_MIPICSI_MIPICSI_STRUCT_MIPICSI_CORE_IRQ_CLR_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_MIPICSI_MIPICSI_STRUCT_MIPICSI_CORE_IRQ_CLR_t;

/**
  * \brief ULPS_CLK_STATUS is a register within the CSI-2 RX Controller Core. (VIDEOSS_MIPICSI_MIPICSI_STRUCT_MIPICSI_CORE_ULPS_CLK_STATUS)
  */
typedef struct stc_VIDEOSS_MIPICSI_MIPICSI_STRUCT_MIPICSI_CORE_ULPS_CLK_STATUS_field {
  uint32_t                         u1ULPS_CLK_STATUS:1;
  uint32_t                         :31;
} stc_VIDEOSS_MIPICSI_MIPICSI_STRUCT_MIPICSI_CORE_ULPS_CLK_STATUS_field_t;

typedef union un_VIDEOSS_MIPICSI_MIPICSI_STRUCT_MIPICSI_CORE_ULPS_CLK_STATUS {
  uint32_t                         u32Register;
  stc_VIDEOSS_MIPICSI_MIPICSI_STRUCT_MIPICSI_CORE_ULPS_CLK_STATUS_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_MIPICSI_MIPICSI_STRUCT_MIPICSI_CORE_ULPS_CLK_STATUS_t;

/**
  * \brief ULPS_STATUS is a register within the CSI-2 RX Controller Core. (VIDEOSS_MIPICSI_MIPICSI_STRUCT_MIPICSI_CORE_ULPS_STATUS)
  */
typedef struct stc_VIDEOSS_MIPICSI_MIPICSI_STRUCT_MIPICSI_CORE_ULPS_STATUS_field {
  uint32_t                         u4ULPS_STATUS:4;
  uint32_t                         :28;
} stc_VIDEOSS_MIPICSI_MIPICSI_STRUCT_MIPICSI_CORE_ULPS_STATUS_field_t;

typedef union un_VIDEOSS_MIPICSI_MIPICSI_STRUCT_MIPICSI_CORE_ULPS_STATUS {
  uint32_t                         u32Register;
  stc_VIDEOSS_MIPICSI_MIPICSI_STRUCT_MIPICSI_CORE_ULPS_STATUS_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_MIPICSI_MIPICSI_STRUCT_MIPICSI_CORE_ULPS_STATUS_t;

/**
  * \brief ULPS_CLK_MARK_STATUS is a register within the CSI-2 RX Controller Core. (VIDEOSS_MIPICSI_MIPICSI_STRUCT_MIPICSI_CORE_ULPS_CLK_MARK_STATUS)
  */
typedef struct stc_VIDEOSS_MIPICSI_MIPICSI_STRUCT_MIPICSI_CORE_ULPS_CLK_MARK_STATUS_field {
  uint32_t                         u1ULPS_CLK_MARK_STATUS:1;
  uint32_t                         :31;
} stc_VIDEOSS_MIPICSI_MIPICSI_STRUCT_MIPICSI_CORE_ULPS_CLK_MARK_STATUS_field_t;

typedef union un_VIDEOSS_MIPICSI_MIPICSI_STRUCT_MIPICSI_CORE_ULPS_CLK_MARK_STATUS {
  uint32_t                         u32Register;
  stc_VIDEOSS_MIPICSI_MIPICSI_STRUCT_MIPICSI_CORE_ULPS_CLK_MARK_STATUS_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_MIPICSI_MIPICSI_STRUCT_MIPICSI_CORE_ULPS_CLK_MARK_STATUS_t;

/**
  * \brief ULPS_MARK_STATUS is a register within the CSI-2 RX Controller Core. (VIDEOSS_MIPICSI_MIPICSI_STRUCT_MIPICSI_CORE_ULPS_MARK_STATUS)
  */
typedef struct stc_VIDEOSS_MIPICSI_MIPICSI_STRUCT_MIPICSI_CORE_ULPS_MARK_STATUS_field {
  uint32_t                         u4ULPS_MARK_STATUS:4;
  uint32_t                         :28;
} stc_VIDEOSS_MIPICSI_MIPICSI_STRUCT_MIPICSI_CORE_ULPS_MARK_STATUS_field_t;

typedef union un_VIDEOSS_MIPICSI_MIPICSI_STRUCT_MIPICSI_CORE_ULPS_MARK_STATUS {
  uint32_t                         u32Register;
  stc_VIDEOSS_MIPICSI_MIPICSI_STRUCT_MIPICSI_CORE_ULPS_MARK_STATUS_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_MIPICSI_MIPICSI_STRUCT_MIPICSI_CORE_ULPS_MARK_STATUS_t;

/**
  * \brief CFG_DISABLE_PAYLOAD_0 is a register within the CSI-2 RX Controller Core. (VIDEOSS_MIPICSI_MIPICSI_STRUCT_MIPICSI_CORE_CFG_DISABLE_PAYLOAD_0)
  */
typedef struct stc_VIDEOSS_MIPICSI_MIPICSI_STRUCT_MIPICSI_CORE_CFG_DISABLE_PAYLOAD_0_field {
  uint32_t                         u32CFG_DISABLE_PAYLOAD_0:32;
} stc_VIDEOSS_MIPICSI_MIPICSI_STRUCT_MIPICSI_CORE_CFG_DISABLE_PAYLOAD_0_field_t;

typedef union un_VIDEOSS_MIPICSI_MIPICSI_STRUCT_MIPICSI_CORE_CFG_DISABLE_PAYLOAD_0 {
  uint32_t                         u32Register;
  stc_VIDEOSS_MIPICSI_MIPICSI_STRUCT_MIPICSI_CORE_CFG_DISABLE_PAYLOAD_0_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_MIPICSI_MIPICSI_STRUCT_MIPICSI_CORE_CFG_DISABLE_PAYLOAD_0_t;

/**
  * \brief CFG_DISABLE_PAYLOAD_1 is a register within the CSI-2 RX Controller Core. (VIDEOSS_MIPICSI_MIPICSI_STRUCT_MIPICSI_CORE_CFG_DISABLE_PAYLOAD_1)
  */
typedef struct stc_VIDEOSS_MIPICSI_MIPICSI_STRUCT_MIPICSI_CORE_CFG_DISABLE_PAYLOAD_1_field {
  uint32_t                         u17CFG_DISABLE_PAYLOAD_1:17;
  uint32_t                         :15;
} stc_VIDEOSS_MIPICSI_MIPICSI_STRUCT_MIPICSI_CORE_CFG_DISABLE_PAYLOAD_1_field_t;

typedef union un_VIDEOSS_MIPICSI_MIPICSI_STRUCT_MIPICSI_CORE_CFG_DISABLE_PAYLOAD_1 {
  uint32_t                         u32Register;
  stc_VIDEOSS_MIPICSI_MIPICSI_STRUCT_MIPICSI_CORE_CFG_DISABLE_PAYLOAD_1_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_MIPICSI_MIPICSI_STRUCT_MIPICSI_CORE_CFG_DISABLE_PAYLOAD_1_t;



/**
  * \brief VRPU region address 0 (slave structure) (VIDEOSS_VRPU_VRPU_STRUCT_ADDR0)
  */
typedef struct stc_VIDEOSS_VRPU_VRPU_STRUCT_ADDR0_field {
  uint32_t                         u8SUBREGION_DISABLE:8;
  uint32_t                         u24ADDR24:24;
} stc_VIDEOSS_VRPU_VRPU_STRUCT_ADDR0_field_t;

typedef union un_VIDEOSS_VRPU_VRPU_STRUCT_ADDR0 {
  uint32_t                         u32Register;
  stc_VIDEOSS_VRPU_VRPU_STRUCT_ADDR0_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_VRPU_VRPU_STRUCT_ADDR0_t;

/**
  * \brief VRPU region attributes 0 (slave structure) (VIDEOSS_VRPU_VRPU_STRUCT_ATT0)
  */
typedef struct stc_VIDEOSS_VRPU_VRPU_STRUCT_ATT0_field {
  uint32_t                         u1UR:1;
  uint32_t                         u1UW:1;
  uint32_t                         u1UX:1;
  uint32_t                         u1PR:1;
  uint32_t                         u1PW:1;
  uint32_t                         u1PX:1;
  uint32_t                         u1NS:1;
  uint32_t                         :1;
  uint32_t                         u1PC_MASK_0:1;
  uint32_t                         u15PC_MASK_15_TO_1:15;
  uint32_t                         u5REGION_SIZE:5;
  uint32_t                         :1;
  uint32_t                         u1PC_MATCH:1;
  uint32_t                         u1ENABLED:1;
} stc_VIDEOSS_VRPU_VRPU_STRUCT_ATT0_field_t;

typedef union un_VIDEOSS_VRPU_VRPU_STRUCT_ATT0 {
  uint32_t                         u32Register;
  stc_VIDEOSS_VRPU_VRPU_STRUCT_ATT0_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_VRPU_VRPU_STRUCT_ATT0_t;

/**
  * \brief VRPU region address 1 (master structure) (VIDEOSS_VRPU_VRPU_STRUCT_ADDR1)
  */
typedef struct stc_VIDEOSS_VRPU_VRPU_STRUCT_ADDR1_field {
  uint32_t                         u8SUBREGION_DISABLE:8;
  uint32_t                         u24ADDR24:24;
} stc_VIDEOSS_VRPU_VRPU_STRUCT_ADDR1_field_t;

typedef union un_VIDEOSS_VRPU_VRPU_STRUCT_ADDR1 {
  uint32_t                         u32Register;
  stc_VIDEOSS_VRPU_VRPU_STRUCT_ADDR1_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_VRPU_VRPU_STRUCT_ADDR1_t;

/**
  * \brief VRPU region attributes 1 (master structure) (VIDEOSS_VRPU_VRPU_STRUCT_ATT1)
  */
typedef struct stc_VIDEOSS_VRPU_VRPU_STRUCT_ATT1_field {
  uint32_t                         u1UR:1;
  uint32_t                         u1UW:1;
  uint32_t                         u1UX:1;
  uint32_t                         u1PR:1;
  uint32_t                         u1PW:1;
  uint32_t                         u1PX:1;
  uint32_t                         u1NS:1;
  uint32_t                         :1;
  uint32_t                         u1PC_MASK_0:1;
  uint32_t                         u15PC_MASK_15_TO_1:15;
  uint32_t                         u5REGION_SIZE:5;
  uint32_t                         :1;
  uint32_t                         u1PC_MATCH:1;
  uint32_t                         u1ENABLED:1;
} stc_VIDEOSS_VRPU_VRPU_STRUCT_ATT1_field_t;

typedef union un_VIDEOSS_VRPU_VRPU_STRUCT_ATT1 {
  uint32_t                         u32Register;
  stc_VIDEOSS_VRPU_VRPU_STRUCT_ATT1_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_VRPU_VRPU_STRUCT_ATT1_t;



/**
  * \brief VRAM Protection for read master with ID=0 (VIDEOSS_VRPU_RD0_CTL)
  */
typedef struct stc_VIDEOSS_VRPU_RD0_CTL_field {
  uint32_t                         :8;
  uint32_t                         u2PRIO:2;
  uint32_t                         :22;
} stc_VIDEOSS_VRPU_RD0_CTL_field_t;

typedef union un_VIDEOSS_VRPU_RD0_CTL {
  uint32_t                         u32Register;
  stc_VIDEOSS_VRPU_RD0_CTL_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_VRPU_RD0_CTL_t;

/**
  * \brief VRAM Protection for read master with ID=1 (VIDEOSS_VRPU_RD1_CTL)
  */
typedef struct stc_VIDEOSS_VRPU_RD1_CTL_field {
  uint32_t                         u1P:1;
  uint32_t                         u1NS:1;
  uint32_t                         :6;
  uint32_t                         u2PRIO:2;
  uint32_t                         :6;
  uint32_t                         u1PC_MASK_0:1;
  uint32_t                         u15PC_MASK_15_TO_1:15;
} stc_VIDEOSS_VRPU_RD1_CTL_field_t;

typedef union un_VIDEOSS_VRPU_RD1_CTL {
  uint32_t                         u32Register;
  stc_VIDEOSS_VRPU_RD1_CTL_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_VRPU_RD1_CTL_t;

/**
  * \brief VRAM Protection for read master with ID=2 (VIDEOSS_VRPU_RD2_CTL)
  */
typedef struct stc_VIDEOSS_VRPU_RD2_CTL_field {
  uint32_t                         u1P:1;
  uint32_t                         u1NS:1;
  uint32_t                         :6;
  uint32_t                         u2PRIO:2;
  uint32_t                         :6;
  uint32_t                         u1PC_MASK_0:1;
  uint32_t                         u15PC_MASK_15_TO_1:15;
} stc_VIDEOSS_VRPU_RD2_CTL_field_t;

typedef union un_VIDEOSS_VRPU_RD2_CTL {
  uint32_t                         u32Register;
  stc_VIDEOSS_VRPU_RD2_CTL_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_VRPU_RD2_CTL_t;

/**
  * \brief VRAM Protection for read master with ID=3 (VIDEOSS_VRPU_RD3_CTL)
  */
typedef struct stc_VIDEOSS_VRPU_RD3_CTL_field {
  uint32_t                         u1P:1;
  uint32_t                         u1NS:1;
  uint32_t                         :6;
  uint32_t                         u2PRIO:2;
  uint32_t                         :6;
  uint32_t                         u1PC_MASK_0:1;
  uint32_t                         u15PC_MASK_15_TO_1:15;
} stc_VIDEOSS_VRPU_RD3_CTL_field_t;

typedef union un_VIDEOSS_VRPU_RD3_CTL {
  uint32_t                         u32Register;
  stc_VIDEOSS_VRPU_RD3_CTL_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_VRPU_RD3_CTL_t;

/**
  * \brief VRAM Protection for read master with ID=4 (VIDEOSS_VRPU_RD4_CTL)
  */
typedef struct stc_VIDEOSS_VRPU_RD4_CTL_field {
  uint32_t                         u1P:1;
  uint32_t                         u1NS:1;
  uint32_t                         :6;
  uint32_t                         u2PRIO:2;
  uint32_t                         :6;
  uint32_t                         u1PC_MASK_0:1;
  uint32_t                         u15PC_MASK_15_TO_1:15;
} stc_VIDEOSS_VRPU_RD4_CTL_field_t;

typedef union un_VIDEOSS_VRPU_RD4_CTL {
  uint32_t                         u32Register;
  stc_VIDEOSS_VRPU_RD4_CTL_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_VRPU_RD4_CTL_t;

/**
  * \brief VRAM Protection for read master with ID=5 (VIDEOSS_VRPU_RD5_CTL)
  */
typedef struct stc_VIDEOSS_VRPU_RD5_CTL_field {
  uint32_t                         u1P:1;
  uint32_t                         u1NS:1;
  uint32_t                         :6;
  uint32_t                         u2PRIO:2;
  uint32_t                         :6;
  uint32_t                         u1PC_MASK_0:1;
  uint32_t                         u15PC_MASK_15_TO_1:15;
} stc_VIDEOSS_VRPU_RD5_CTL_field_t;

typedef union un_VIDEOSS_VRPU_RD5_CTL {
  uint32_t                         u32Register;
  stc_VIDEOSS_VRPU_RD5_CTL_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_VRPU_RD5_CTL_t;

/**
  * \brief VRAM Protection for read master with ID=6 (VIDEOSS_VRPU_RD6_CTL)
  */
typedef struct stc_VIDEOSS_VRPU_RD6_CTL_field {
  uint32_t                         u1P:1;
  uint32_t                         u1NS:1;
  uint32_t                         :6;
  uint32_t                         u2PRIO:2;
  uint32_t                         :6;
  uint32_t                         u1PC_MASK_0:1;
  uint32_t                         u15PC_MASK_15_TO_1:15;
} stc_VIDEOSS_VRPU_RD6_CTL_field_t;

typedef union un_VIDEOSS_VRPU_RD6_CTL {
  uint32_t                         u32Register;
  stc_VIDEOSS_VRPU_RD6_CTL_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_VRPU_RD6_CTL_t;

/**
  * \brief VRAM Protection for read master with ID=7 (VIDEOSS_VRPU_RD7_CTL)
  */
typedef struct stc_VIDEOSS_VRPU_RD7_CTL_field {
  uint32_t                         u1P:1;
  uint32_t                         u1NS:1;
  uint32_t                         :6;
  uint32_t                         u2PRIO:2;
  uint32_t                         :6;
  uint32_t                         u1PC_MASK_0:1;
  uint32_t                         u15PC_MASK_15_TO_1:15;
} stc_VIDEOSS_VRPU_RD7_CTL_field_t;

typedef union un_VIDEOSS_VRPU_RD7_CTL {
  uint32_t                         u32Register;
  stc_VIDEOSS_VRPU_RD7_CTL_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_VRPU_RD7_CTL_t;

/**
  * \brief VRAM Protection for read master with ID=8 (VIDEOSS_VRPU_RD8_CTL)
  */
typedef struct stc_VIDEOSS_VRPU_RD8_CTL_field {
  uint32_t                         u1P:1;
  uint32_t                         u1NS:1;
  uint32_t                         :6;
  uint32_t                         u2PRIO:2;
  uint32_t                         :6;
  uint32_t                         u1PC_MASK_0:1;
  uint32_t                         u15PC_MASK_15_TO_1:15;
} stc_VIDEOSS_VRPU_RD8_CTL_field_t;

typedef union un_VIDEOSS_VRPU_RD8_CTL {
  uint32_t                         u32Register;
  stc_VIDEOSS_VRPU_RD8_CTL_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_VRPU_RD8_CTL_t;

/**
  * \brief VRAM Protection for read master with ID=9 (VIDEOSS_VRPU_RD9_CTL)
  */
typedef struct stc_VIDEOSS_VRPU_RD9_CTL_field {
  uint32_t                         u1P:1;
  uint32_t                         u1NS:1;
  uint32_t                         :6;
  uint32_t                         u2PRIO:2;
  uint32_t                         :6;
  uint32_t                         u1PC_MASK_0:1;
  uint32_t                         u15PC_MASK_15_TO_1:15;
} stc_VIDEOSS_VRPU_RD9_CTL_field_t;

typedef union un_VIDEOSS_VRPU_RD9_CTL {
  uint32_t                         u32Register;
  stc_VIDEOSS_VRPU_RD9_CTL_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_VRPU_RD9_CTL_t;

/**
  * \brief VRAM Protection for read master with ID=10 (VIDEOSS_VRPU_RD10_CTL)
  */
typedef struct stc_VIDEOSS_VRPU_RD10_CTL_field {
  uint32_t                         u1P:1;
  uint32_t                         u1NS:1;
  uint32_t                         :6;
  uint32_t                         u2PRIO:2;
  uint32_t                         :6;
  uint32_t                         u1PC_MASK_0:1;
  uint32_t                         u15PC_MASK_15_TO_1:15;
} stc_VIDEOSS_VRPU_RD10_CTL_field_t;

typedef union un_VIDEOSS_VRPU_RD10_CTL {
  uint32_t                         u32Register;
  stc_VIDEOSS_VRPU_RD10_CTL_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_VRPU_RD10_CTL_t;

/**
  * \brief VRAM Protection for read master with ID=11 (VIDEOSS_VRPU_RD11_CTL)
  */
typedef struct stc_VIDEOSS_VRPU_RD11_CTL_field {
  uint32_t                         u1P:1;
  uint32_t                         u1NS:1;
  uint32_t                         :6;
  uint32_t                         u2PRIO:2;
  uint32_t                         :6;
  uint32_t                         u1PC_MASK_0:1;
  uint32_t                         u15PC_MASK_15_TO_1:15;
} stc_VIDEOSS_VRPU_RD11_CTL_field_t;

typedef union un_VIDEOSS_VRPU_RD11_CTL {
  uint32_t                         u32Register;
  stc_VIDEOSS_VRPU_RD11_CTL_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_VRPU_RD11_CTL_t;

/**
  * \brief VRAM Protection for read master with ID=12 (VIDEOSS_VRPU_RD12_CTL)
  */
typedef struct stc_VIDEOSS_VRPU_RD12_CTL_field {
  uint32_t                         u1P:1;
  uint32_t                         u1NS:1;
  uint32_t                         :6;
  uint32_t                         u2PRIO:2;
  uint32_t                         :6;
  uint32_t                         u1PC_MASK_0:1;
  uint32_t                         u15PC_MASK_15_TO_1:15;
} stc_VIDEOSS_VRPU_RD12_CTL_field_t;

typedef union un_VIDEOSS_VRPU_RD12_CTL {
  uint32_t                         u32Register;
  stc_VIDEOSS_VRPU_RD12_CTL_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_VRPU_RD12_CTL_t;

/**
  * \brief VRAM Protection for read master with ID=13 (VIDEOSS_VRPU_RD13_CTL)
  */
typedef struct stc_VIDEOSS_VRPU_RD13_CTL_field {
  uint32_t                         u1P:1;
  uint32_t                         u1NS:1;
  uint32_t                         :6;
  uint32_t                         u2PRIO:2;
  uint32_t                         :6;
  uint32_t                         u1PC_MASK_0:1;
  uint32_t                         u15PC_MASK_15_TO_1:15;
} stc_VIDEOSS_VRPU_RD13_CTL_field_t;

typedef union un_VIDEOSS_VRPU_RD13_CTL {
  uint32_t                         u32Register;
  stc_VIDEOSS_VRPU_RD13_CTL_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_VRPU_RD13_CTL_t;

/**
  * \brief VRAM Protection for read master with ID=14 (VIDEOSS_VRPU_RD14_CTL)
  */
typedef struct stc_VIDEOSS_VRPU_RD14_CTL_field {
  uint32_t                         u1P:1;
  uint32_t                         u1NS:1;
  uint32_t                         :6;
  uint32_t                         u2PRIO:2;
  uint32_t                         :6;
  uint32_t                         u1PC_MASK_0:1;
  uint32_t                         u15PC_MASK_15_TO_1:15;
} stc_VIDEOSS_VRPU_RD14_CTL_field_t;

typedef union un_VIDEOSS_VRPU_RD14_CTL {
  uint32_t                         u32Register;
  stc_VIDEOSS_VRPU_RD14_CTL_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_VRPU_RD14_CTL_t;

/**
  * \brief VRAM Protection for read master with ID=15 (VIDEOSS_VRPU_RD15_CTL)
  */
typedef struct stc_VIDEOSS_VRPU_RD15_CTL_field {
  uint32_t                         u1P:1;
  uint32_t                         u1NS:1;
  uint32_t                         :6;
  uint32_t                         u2PRIO:2;
  uint32_t                         :6;
  uint32_t                         u1PC_MASK_0:1;
  uint32_t                         u15PC_MASK_15_TO_1:15;
} stc_VIDEOSS_VRPU_RD15_CTL_field_t;

typedef union un_VIDEOSS_VRPU_RD15_CTL {
  uint32_t                         u32Register;
  stc_VIDEOSS_VRPU_RD15_CTL_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_VRPU_RD15_CTL_t;

/**
  * \brief VRAM Protection for write master with ID=0 (VIDEOSS_VRPU_WR0_CTL)
  */
typedef struct stc_VIDEOSS_VRPU_WR0_CTL_field {
  uint32_t                         :8;
  uint32_t                         u2PRIO:2;
  uint32_t                         :22;
} stc_VIDEOSS_VRPU_WR0_CTL_field_t;

typedef union un_VIDEOSS_VRPU_WR0_CTL {
  uint32_t                         u32Register;
  stc_VIDEOSS_VRPU_WR0_CTL_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_VRPU_WR0_CTL_t;

/**
  * \brief VRAM Protection for write master with ID=1 (VIDEOSS_VRPU_WR1_CTL)
  */
typedef struct stc_VIDEOSS_VRPU_WR1_CTL_field {
  uint32_t                         u1P:1;
  uint32_t                         u1NS:1;
  uint32_t                         :6;
  uint32_t                         u2PRIO:2;
  uint32_t                         :6;
  uint32_t                         u1PC_MASK_0:1;
  uint32_t                         u15PC_MASK_15_TO_1:15;
} stc_VIDEOSS_VRPU_WR1_CTL_field_t;

typedef union un_VIDEOSS_VRPU_WR1_CTL {
  uint32_t                         u32Register;
  stc_VIDEOSS_VRPU_WR1_CTL_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_VRPU_WR1_CTL_t;

/**
  * \brief VRAM Protection for write master with ID=2 (VIDEOSS_VRPU_WR2_CTL)
  */
typedef struct stc_VIDEOSS_VRPU_WR2_CTL_field {
  uint32_t                         u1P:1;
  uint32_t                         u1NS:1;
  uint32_t                         :6;
  uint32_t                         u2PRIO:2;
  uint32_t                         :6;
  uint32_t                         u1PC_MASK_0:1;
  uint32_t                         u15PC_MASK_15_TO_1:15;
} stc_VIDEOSS_VRPU_WR2_CTL_field_t;

typedef union un_VIDEOSS_VRPU_WR2_CTL {
  uint32_t                         u32Register;
  stc_VIDEOSS_VRPU_WR2_CTL_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_VRPU_WR2_CTL_t;

/**
  * \brief VRAM Protection for write master with ID=3 (VIDEOSS_VRPU_WR3_CTL)
  */
typedef struct stc_VIDEOSS_VRPU_WR3_CTL_field {
  uint32_t                         u1P:1;
  uint32_t                         u1NS:1;
  uint32_t                         :6;
  uint32_t                         u2PRIO:2;
  uint32_t                         :6;
  uint32_t                         u1PC_MASK_0:1;
  uint32_t                         u15PC_MASK_15_TO_1:15;
} stc_VIDEOSS_VRPU_WR3_CTL_field_t;

typedef union un_VIDEOSS_VRPU_WR3_CTL {
  uint32_t                         u32Register;
  stc_VIDEOSS_VRPU_WR3_CTL_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_VRPU_WR3_CTL_t;

/**
  * \brief VRAM Protection for write master with ID=4 (VIDEOSS_VRPU_WR4_CTL)
  */
typedef struct stc_VIDEOSS_VRPU_WR4_CTL_field {
  uint32_t                         u1P:1;
  uint32_t                         u1NS:1;
  uint32_t                         :6;
  uint32_t                         u2PRIO:2;
  uint32_t                         :6;
  uint32_t                         u1PC_MASK_0:1;
  uint32_t                         u15PC_MASK_15_TO_1:15;
} stc_VIDEOSS_VRPU_WR4_CTL_field_t;

typedef union un_VIDEOSS_VRPU_WR4_CTL {
  uint32_t                         u32Register;
  stc_VIDEOSS_VRPU_WR4_CTL_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_VRPU_WR4_CTL_t;

/**
  * \brief VRAM Protection for write master with ID=5 (VIDEOSS_VRPU_WR5_CTL)
  */
typedef struct stc_VIDEOSS_VRPU_WR5_CTL_field {
  uint32_t                         u1P:1;
  uint32_t                         u1NS:1;
  uint32_t                         :6;
  uint32_t                         u2PRIO:2;
  uint32_t                         :6;
  uint32_t                         u1PC_MASK_0:1;
  uint32_t                         u15PC_MASK_15_TO_1:15;
} stc_VIDEOSS_VRPU_WR5_CTL_field_t;

typedef union un_VIDEOSS_VRPU_WR5_CTL {
  uint32_t                         u32Register;
  stc_VIDEOSS_VRPU_WR5_CTL_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_VRPU_WR5_CTL_t;

/**
  * \brief VRAM Protection for write master with ID=6 (VIDEOSS_VRPU_WR6_CTL)
  */
typedef struct stc_VIDEOSS_VRPU_WR6_CTL_field {
  uint32_t                         u1P:1;
  uint32_t                         u1NS:1;
  uint32_t                         :6;
  uint32_t                         u2PRIO:2;
  uint32_t                         :6;
  uint32_t                         u1PC_MASK_0:1;
  uint32_t                         u15PC_MASK_15_TO_1:15;
} stc_VIDEOSS_VRPU_WR6_CTL_field_t;

typedef union un_VIDEOSS_VRPU_WR6_CTL {
  uint32_t                         u32Register;
  stc_VIDEOSS_VRPU_WR6_CTL_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_VRPU_WR6_CTL_t;

/**
  * \brief VRAM Protection for write master with ID=7 (VIDEOSS_VRPU_WR7_CTL)
  */
typedef struct stc_VIDEOSS_VRPU_WR7_CTL_field {
  uint32_t                         u1P:1;
  uint32_t                         u1NS:1;
  uint32_t                         :6;
  uint32_t                         u2PRIO:2;
  uint32_t                         :6;
  uint32_t                         u1PC_MASK_0:1;
  uint32_t                         u15PC_MASK_15_TO_1:15;
} stc_VIDEOSS_VRPU_WR7_CTL_field_t;

typedef union un_VIDEOSS_VRPU_WR7_CTL {
  uint32_t                         u32Register;
  stc_VIDEOSS_VRPU_WR7_CTL_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_VRPU_WR7_CTL_t;

/**
  * \brief VRAM Protection for write master with ID=8 (VIDEOSS_VRPU_WR8_CTL)
  */
typedef struct stc_VIDEOSS_VRPU_WR8_CTL_field {
  uint32_t                         u1P:1;
  uint32_t                         u1NS:1;
  uint32_t                         :6;
  uint32_t                         u2PRIO:2;
  uint32_t                         :6;
  uint32_t                         u1PC_MASK_0:1;
  uint32_t                         u15PC_MASK_15_TO_1:15;
} stc_VIDEOSS_VRPU_WR8_CTL_field_t;

typedef union un_VIDEOSS_VRPU_WR8_CTL {
  uint32_t                         u32Register;
  stc_VIDEOSS_VRPU_WR8_CTL_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_VRPU_WR8_CTL_t;

/**
  * \brief VRAM Protection for write master with ID=9 (VIDEOSS_VRPU_WR9_CTL)
  */
typedef struct stc_VIDEOSS_VRPU_WR9_CTL_field {
  uint32_t                         u1P:1;
  uint32_t                         u1NS:1;
  uint32_t                         :6;
  uint32_t                         u2PRIO:2;
  uint32_t                         :6;
  uint32_t                         u1PC_MASK_0:1;
  uint32_t                         u15PC_MASK_15_TO_1:15;
} stc_VIDEOSS_VRPU_WR9_CTL_field_t;

typedef union un_VIDEOSS_VRPU_WR9_CTL {
  uint32_t                         u32Register;
  stc_VIDEOSS_VRPU_WR9_CTL_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_VRPU_WR9_CTL_t;

/**
  * \brief VRAM Protection for write master with ID=10 (VIDEOSS_VRPU_WR10_CTL)
  */
typedef struct stc_VIDEOSS_VRPU_WR10_CTL_field {
  uint32_t                         u1P:1;
  uint32_t                         u1NS:1;
  uint32_t                         :6;
  uint32_t                         u2PRIO:2;
  uint32_t                         :6;
  uint32_t                         u1PC_MASK_0:1;
  uint32_t                         u15PC_MASK_15_TO_1:15;
} stc_VIDEOSS_VRPU_WR10_CTL_field_t;

typedef union un_VIDEOSS_VRPU_WR10_CTL {
  uint32_t                         u32Register;
  stc_VIDEOSS_VRPU_WR10_CTL_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_VRPU_WR10_CTL_t;

/**
  * \brief VRAM Protection for write master with ID=11 (VIDEOSS_VRPU_WR11_CTL)
  */
typedef struct stc_VIDEOSS_VRPU_WR11_CTL_field {
  uint32_t                         u1P:1;
  uint32_t                         u1NS:1;
  uint32_t                         :6;
  uint32_t                         u2PRIO:2;
  uint32_t                         :6;
  uint32_t                         u1PC_MASK_0:1;
  uint32_t                         u15PC_MASK_15_TO_1:15;
} stc_VIDEOSS_VRPU_WR11_CTL_field_t;

typedef union un_VIDEOSS_VRPU_WR11_CTL {
  uint32_t                         u32Register;
  stc_VIDEOSS_VRPU_WR11_CTL_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_VRPU_WR11_CTL_t;

/**
  * \brief VRAM Protection for write master with ID=12 (VIDEOSS_VRPU_WR12_CTL)
  */
typedef struct stc_VIDEOSS_VRPU_WR12_CTL_field {
  uint32_t                         u1P:1;
  uint32_t                         u1NS:1;
  uint32_t                         :6;
  uint32_t                         u2PRIO:2;
  uint32_t                         :6;
  uint32_t                         u1PC_MASK_0:1;
  uint32_t                         u15PC_MASK_15_TO_1:15;
} stc_VIDEOSS_VRPU_WR12_CTL_field_t;

typedef union un_VIDEOSS_VRPU_WR12_CTL {
  uint32_t                         u32Register;
  stc_VIDEOSS_VRPU_WR12_CTL_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_VRPU_WR12_CTL_t;

/**
  * \brief VRAM Protection for write master with ID=13 (VIDEOSS_VRPU_WR13_CTL)
  */
typedef struct stc_VIDEOSS_VRPU_WR13_CTL_field {
  uint32_t                         u1P:1;
  uint32_t                         u1NS:1;
  uint32_t                         :6;
  uint32_t                         u2PRIO:2;
  uint32_t                         :6;
  uint32_t                         u1PC_MASK_0:1;
  uint32_t                         u15PC_MASK_15_TO_1:15;
} stc_VIDEOSS_VRPU_WR13_CTL_field_t;

typedef union un_VIDEOSS_VRPU_WR13_CTL {
  uint32_t                         u32Register;
  stc_VIDEOSS_VRPU_WR13_CTL_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_VRPU_WR13_CTL_t;

/**
  * \brief VRAM Protection for write master with ID=14 (VIDEOSS_VRPU_WR14_CTL)
  */
typedef struct stc_VIDEOSS_VRPU_WR14_CTL_field {
  uint32_t                         u1P:1;
  uint32_t                         u1NS:1;
  uint32_t                         :6;
  uint32_t                         u2PRIO:2;
  uint32_t                         :6;
  uint32_t                         u1PC_MASK_0:1;
  uint32_t                         u15PC_MASK_15_TO_1:15;
} stc_VIDEOSS_VRPU_WR14_CTL_field_t;

typedef union un_VIDEOSS_VRPU_WR14_CTL {
  uint32_t                         u32Register;
  stc_VIDEOSS_VRPU_WR14_CTL_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_VRPU_WR14_CTL_t;

/**
  * \brief VRAM Protection for write master with ID=15 (VIDEOSS_VRPU_WR15_CTL)
  */
typedef struct stc_VIDEOSS_VRPU_WR15_CTL_field {
  uint32_t                         u1P:1;
  uint32_t                         u1NS:1;
  uint32_t                         :6;
  uint32_t                         u2PRIO:2;
  uint32_t                         :6;
  uint32_t                         u1PC_MASK_0:1;
  uint32_t                         u15PC_MASK_15_TO_1:15;
} stc_VIDEOSS_VRPU_WR15_CTL_field_t;

typedef union un_VIDEOSS_VRPU_WR15_CTL {
  uint32_t                         u32Register;
  stc_VIDEOSS_VRPU_WR15_CTL_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_VRPU_WR15_CTL_t;



/**
  * \brief Memory protection context for AXI read master (VIDEOSS_GFX_MPU_RD_RD_CTL)
  */
typedef struct stc_VIDEOSS_GFX_MPU_RD_RD_CTL_field {
  uint32_t                         u4PC:4;
  uint32_t                         :28;
} stc_VIDEOSS_GFX_MPU_RD_RD_CTL_field_t;

typedef union un_VIDEOSS_GFX_MPU_RD_RD_CTL {
  uint32_t                         u32Register;
  stc_VIDEOSS_GFX_MPU_RD_RD_CTL_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_GFX_MPU_RD_RD_CTL_t;



/**
  * \brief Memory protection context for AXI write master (VIDEOSS_GFX_MPU_WR_WR_CTL)
  */
typedef struct stc_VIDEOSS_GFX_MPU_WR_WR_CTL_field {
  uint32_t                         u4PC:4;
  uint32_t                         :28;
} stc_VIDEOSS_GFX_MPU_WR_WR_CTL_field_t;

typedef union un_VIDEOSS_GFX_MPU_WR_WR_CTL {
  uint32_t                         u32Register;
  stc_VIDEOSS_GFX_MPU_WR_WR_CTL_field_t stcField;
  uint8_t                          au8Byte[4];
  uint16_t                         au16Halfword[2];
} un_VIDEOSS_GFX_MPU_WR_WR_CTL_t;



/**
  * \brief Subsystem Control. (VIDEOSS_SUBSS_VIDEOSSCFG)
  */
typedef struct stc_VIDEOSS_SUBSS_VIDEOSSCFG {
  un_VIDEOSS_VIDEOSSCFG_CTL_t      unCTL;              /*!< 0x00000000 IP Control Register */
  un_VIDEOSS_VIDEOSSCFG_GFX2D_CTL_t unGFX2D_CTL;       /*!< 0x00000004 IP Control Register for Graphics 2D Core */
  un_VIDEOSS_VIDEOSSCFG_IPIDENTIFIER_t unIPIDENTIFIER; /*!< 0x00000008 IP and Design Release Identification */
  un_VIDEOSS_VIDEOSSCFG_IPCONFIGURATION_t unIPCONFIGURATION; /*!< 0x0000000C IP Design Configuration */
  un_VIDEOSS_VIDEOSSCFG_CLKDSP0CFG_t unCLKDSP0CFG;     /*!< 0x00000010 Display 0 Clock Configuration Register */
  un_VIDEOSS_VIDEOSSCFG_CLKDSP1CFG_t unCLKDSP1CFG;     /*!< 0x00000014 Display 1 Clock Configuration Register */
  un_VIDEOSS_VIDEOSSCFG_CAP0CFG_t  unCAP0CFG;          /*!< 0x00000018 Capture 0 Configuration */
  un_VIDEOSS_VIDEOSSCFG_FPDLINKCFG_t unFPDLINKCFG;     /*!< 0x0000001C FPDLink Configuration */
  un_VIDEOSS_VIDEOSSCFG_DSP0_CTL_t unDSP0_CTL;         /*!< 0x00000020 Enable for Display Engine 0 */
  un_VIDEOSS_VIDEOSSCFG_DSP1_CTL_t unDSP1_CTL;         /*!< 0x00000024 Enable for Display Engine 1 */
  uint32_t                         au32Reserved[246];
} stc_VIDEOSS_SUBSS_VIDEOSSCFG_t;                      /*!< Size = 1024 (0x400) */

/**
  * \brief Video RAM. (VIDEOSS_SUBSS_VRAM)
  */
typedef struct stc_VIDEOSS_SUBSS_VRAM {
  un_VIDEOSS_VRAM_ARBITER_PRIORITY_t unARBITER_PRIORITY; /*!< 0x00000000 N/A */
  uint32_t                         au32Reserved[255];
} stc_VIDEOSS_SUBSS_VRAM_t;                            /*!< Size = 1024 (0x400) */

/**
  * \brief Graphics 2D Core config (VIDEOSS_SUBSS_GFX2D_GFX2DCFG)
  */
typedef struct stc_VIDEOSS_SUBSS_GFX2D_GFX2DCFG {
  uint32_t                         au32Reserved[8];
  un_VIDEOSS_GFX2DCFG_INTR_GFX2D_t unINTR_GFX2D;       /*!< 0x00000020 Interrupt cause register */
  un_VIDEOSS_GFX2DCFG_INTR_GFX2D_SET_t unINTR_GFX2D_SET; /*!< 0x00000024 Interrupt set register */
  un_VIDEOSS_GFX2DCFG_INTR_GFX2D_MASK_t unINTR_GFX2D_MASK; /*!< 0x00000028 Interrupt mask register */
  un_VIDEOSS_GFX2DCFG_INTR_GFX2D_MASKED_t unINTR_GFX2D_MASKED; /*!< 0x0000002C Interrupt masked register */
  un_VIDEOSS_GFX2DCFG_INTR_CMDSEQ_t unINTR_CMDSEQ;     /*!< 0x00000030 Interrupt cause register for CmdSeq */
  un_VIDEOSS_GFX2DCFG_INTR_CMDSEQ_SET_t unINTR_CMDSEQ_SET; /*!< 0x00000034 Interrupt set register */
  uint32_t                         au32Reserved1[2];
  un_VIDEOSS_GFX2DCFG_GENERALPURPOSE_t unGENERALPURPOSE[16]; /*!< 0x00000040 General purpose config memory */
  uint32_t                         au32Reserved2[224];
} stc_VIDEOSS_SUBSS_GFX2D_GFX2DCFG_t;                  /*!< Size = 1024 (0x400) */

/**
  * \brief Command Sequencer (VIDEOSS_SUBSS_GFX2D_CMDSEQ)
  */
typedef struct stc_VIDEOSS_SUBSS_GFX2D_CMDSEQ {
  un_VIDEOSS_CMDSEQ_TASKBUFFERADDRESS0_t unTASKBUFFERADDRESS0; /*!< 0x00000000 Task buffer 0 address register */
  un_VIDEOSS_CMDSEQ_TASKBUFFERSIZE0_t unTASKBUFFERSIZE0; /*!< 0x00000004 Task buffer 0 size register */
  un_VIDEOSS_CMDSEQ_TASKBUFFERSTOPOFFSET0_t unTASKBUFFERSTOPOFFSET0; /*!< 0x00000008 Task buffer 0 stop offset register */
  un_VIDEOSS_CMDSEQ_TASKBUFFERADDRESS1_t unTASKBUFFERADDRESS1; /*!< 0x0000000C Task buffer 1 address register */
  un_VIDEOSS_CMDSEQ_TASKBUFFERSIZE1_t unTASKBUFFERSIZE1; /*!< 0x00000010 Task buffer 1 size register */
  un_VIDEOSS_CMDSEQ_TASKBUFFERSTOPOFFSET1_t unTASKBUFFERSTOPOFFSET1; /*!< 0x00000014 Task buffer 1 stop offset register */
  un_VIDEOSS_CMDSEQ_TASKBUFFERADDRESS2_t unTASKBUFFERADDRESS2; /*!< 0x00000018 Task buffer 2 address register */
  un_VIDEOSS_CMDSEQ_TASKBUFFERSIZE2_t unTASKBUFFERSIZE2; /*!< 0x0000001C Task buffer 2 size register */
  un_VIDEOSS_CMDSEQ_TASKBUFFERSTOPOFFSET2_t unTASKBUFFERSTOPOFFSET2; /*!< 0x00000020 Task buffer 2 stop offset register */
  un_VIDEOSS_CMDSEQ_TASKBUFFERADDRESS3_t unTASKBUFFERADDRESS3; /*!< 0x00000024 Task buffer 3 address register */
  un_VIDEOSS_CMDSEQ_TASKBUFFERSIZE3_t unTASKBUFFERSIZE3; /*!< 0x00000028 Task buffer 3 size register */
  un_VIDEOSS_CMDSEQ_TASKBUFFERSTOPOFFSET3_t unTASKBUFFERSTOPOFFSET3; /*!< 0x0000002C Task buffer 3 stop offset register */
  un_VIDEOSS_CMDSEQ_TASKBUFFERADDRESS4_t unTASKBUFFERADDRESS4; /*!< 0x00000030 Task buffer 4 address register */
  un_VIDEOSS_CMDSEQ_TASKBUFFERSIZE4_t unTASKBUFFERSIZE4; /*!< 0x00000034 Task buffer 4 size register */
  un_VIDEOSS_CMDSEQ_TASKBUFFERSTOPOFFSET4_t unTASKBUFFERSTOPOFFSET4; /*!< 0x00000038 Task buffer 4 stop offset register */
  un_VIDEOSS_CMDSEQ_TASKBUFFERADDRESS5_t unTASKBUFFERADDRESS5; /*!< 0x0000003C Task buffer 5 address register */
  un_VIDEOSS_CMDSEQ_TASKBUFFERSIZE5_t unTASKBUFFERSIZE5; /*!< 0x00000040 Task buffer 5 size register */
  un_VIDEOSS_CMDSEQ_TASKBUFFERSTOPOFFSET5_t unTASKBUFFERSTOPOFFSET5; /*!< 0x00000044 Task buffer 5 stop offset register */
  un_VIDEOSS_CMDSEQ_TASKBUFFERADDRESS6_t unTASKBUFFERADDRESS6; /*!< 0x00000048 Task buffer 6 address register */
  un_VIDEOSS_CMDSEQ_TASKBUFFERSIZE6_t unTASKBUFFERSIZE6; /*!< 0x0000004C Task buffer 6 size register */
  un_VIDEOSS_CMDSEQ_TASKBUFFERSTOPOFFSET6_t unTASKBUFFERSTOPOFFSET6; /*!< 0x00000050 Task buffer 6 stop offset register */
  un_VIDEOSS_CMDSEQ_TASKBUFFERADDRESS7_t unTASKBUFFERADDRESS7; /*!< 0x00000054 Task buffer 7 address register */
  un_VIDEOSS_CMDSEQ_TASKBUFFERSIZE7_t unTASKBUFFERSIZE7; /*!< 0x00000058 Task buffer 7 size register */
  un_VIDEOSS_CMDSEQ_TASKBUFFERSTOPOFFSET7_t unTASKBUFFERSTOPOFFSET7; /*!< 0x0000005C Task buffer 7 stop offset register */
  un_VIDEOSS_CMDSEQ_TASKBUFFEREXECOFFSET0_t unTASKBUFFEREXECOFFSET0; /*!< 0x00000060 Task buffer 0 execute offset register */
  un_VIDEOSS_CMDSEQ_TASKBUFFEREXECOFFSET1_t unTASKBUFFEREXECOFFSET1; /*!< 0x00000064 Task buffer 1 execute offset register */
  un_VIDEOSS_CMDSEQ_TASKBUFFEREXECOFFSET2_t unTASKBUFFEREXECOFFSET2; /*!< 0x00000068 Task buffer 2 execute offset register */
  un_VIDEOSS_CMDSEQ_TASKBUFFEREXECOFFSET3_t unTASKBUFFEREXECOFFSET3; /*!< 0x0000006C Task buffer 3 execute offset register */
  un_VIDEOSS_CMDSEQ_TASKBUFFEREXECOFFSET4_t unTASKBUFFEREXECOFFSET4; /*!< 0x00000070 Task buffer 4 execute offset register */
  un_VIDEOSS_CMDSEQ_TASKBUFFEREXECOFFSET5_t unTASKBUFFEREXECOFFSET5; /*!< 0x00000074 Task buffer 5 execute offset register */
  un_VIDEOSS_CMDSEQ_TASKBUFFEREXECOFFSET6_t unTASKBUFFEREXECOFFSET6; /*!< 0x00000078 Task buffer 6 execute offset register */
  un_VIDEOSS_CMDSEQ_TASKBUFFEREXECOFFSET7_t unTASKBUFFEREXECOFFSET7; /*!< 0x0000007C Task buffer 7 execute offset register */
  un_VIDEOSS_CMDSEQ_STATUS_t       unSTATUS;           /*!< 0x00000080 Status register */
  un_VIDEOSS_CMDSEQ_ERRORCODE_t    unERRORCODE;        /*!< 0x00000084 Error code register, each field of this register is one
                                                                                bit wide and corresponds to an error event. If
                                                                                the value of this register is zero, than there
                                                                                are no errors. */
  un_VIDEOSS_CMDSEQ_DESIGNCONFIGURATION_t unDESIGNCONFIGURATION; /*!< 0x00000088 Provides HW specific information. */
  un_VIDEOSS_CMDSEQ_SCHEDULERADDRESS_t unSCHEDULERADDRESS; /*!< 0x0000008C Last fetched address of scheduler. */
  un_VIDEOSS_CMDSEQ_PROGRAMMERADDRESS_t unPROGRAMMERADDRESS; /*!< 0x00000090 Last fetched address of programmer. */
  un_VIDEOSS_CMDSEQ_GPR0_t         unGPR0;             /*!< 0x00000094 General purpose Register. (Internal register with id =
                                                                                0) */
  un_VIDEOSS_CMDSEQ_GPR1_t         unGPR1;             /*!< 0x00000098 General purpose Register. (Internal register with id =
                                                                                1) */
  un_VIDEOSS_CMDSEQ_GPR2_t         unGPR2;             /*!< 0x0000009C General purpose Register. (Internal register with id =
                                                                                2) */
  un_VIDEOSS_CMDSEQ_GPR3_t         unGPR3;             /*!< 0x000000A0 General purpose Register. (Internal register with id =
                                                                                3) */
  un_VIDEOSS_CMDSEQ_GPR4_t         unGPR4;             /*!< 0x000000A4 General purpose Register. (Internal register with id =
                                                                                4) */
  un_VIDEOSS_CMDSEQ_GPR5_t         unGPR5;             /*!< 0x000000A8 General purpose Register. (Internal register with id =
                                                                                5) */
  un_VIDEOSS_CMDSEQ_GPR6_t         unGPR6;             /*!< 0x000000AC General purpose Register. (Internal register with id =
                                                                                6) */
  un_VIDEOSS_CMDSEQ_GPR7_t         unGPR7;             /*!< 0x000000B0 General purpose Register. (Internal register with id =
                                                                                7) */
  un_VIDEOSS_CMDSEQ_GPR8_t         unGPR8;             /*!< 0x000000B4 General purpose Register. (Internal register with id =
                                                                                8) */
  un_VIDEOSS_CMDSEQ_GPR9_t         unGPR9;             /*!< 0x000000B8 General purpose Register. (Internal register with id =
                                                                                9) */
  un_VIDEOSS_CMDSEQ_GPR10_t        unGPR10;            /*!< 0x000000BC General purpose Register. (Internal register with id =
                                                                                10) */
  un_VIDEOSS_CMDSEQ_GPR11_t        unGPR11;            /*!< 0x000000C0 General purpose Register. (Internal register with id =
                                                                                11) */
  un_VIDEOSS_CMDSEQ_GPR12_t        unGPR12;            /*!< 0x000000C4 General purpose Register. (Internal register with id =
                                                                                12) */
  un_VIDEOSS_CMDSEQ_GPR13_t        unGPR13;            /*!< 0x000000C8 General purpose Register. (Internal register with id =
                                                                                13) */
  un_VIDEOSS_CMDSEQ_GPR14_t        unGPR14;            /*!< 0x000000CC General purpose Register. (Internal register with id =
                                                                                14) */
  un_VIDEOSS_CMDSEQ_GPR15_t        unGPR15;            /*!< 0x000000D0 General purpose Register. (Internal register with id =
                                                                                15) */
  un_VIDEOSS_CMDSEQ_SPR0_t         unSPR0;             /*!< 0x000000D4 Special Purpose Register. (Internal register with id =
                                                                                16) */
  un_VIDEOSS_CMDSEQ_SPR1_t         unSPR1;             /*!< 0x000000D8 Special Purpose Register (internal register with id =
                                                                                17) */
  un_VIDEOSS_CMDSEQ_SPR2_t         unSPR2;             /*!< 0x000000DC Special Purpose Register (internal register with id =
                                                                                18) */
  un_VIDEOSS_CMDSEQ_SPR3_t         unSPR3;             /*!< 0x000000E0 Special Purpose Register (internal register with id =
                                                                                19) */
  un_VIDEOSS_CMDSEQ_SPR4_t         unSPR4;             /*!< 0x000000E4 Special Purpose Register (internal register with id =
                                                                                20) */
  un_VIDEOSS_CMDSEQ_SPR5_t         unSPR5;             /*!< 0x000000E8 Special Purpose Register (internal register with id =
                                                                                21) */
  un_VIDEOSS_CMDSEQ_SPR6_t         unSPR6;             /*!< 0x000000EC Special Purpose Register (internal register with id =
                                                                                22) */
  un_VIDEOSS_CMDSEQ_SPR7_t         unSPR7;             /*!< 0x000000F0 Special Purpose Register (internal register with id =
                                                                                23) */
  uint32_t                         au32Reserved[195];
} stc_VIDEOSS_SUBSS_GFX2D_CMDSEQ_t;                    /*!< Size = 1024 (0x400) */

/**
  * \brief Top-Level (VIDEOSS_SUBSS_GFX2D_BLITENG_BLITENGCFG)
  */
typedef struct stc_VIDEOSS_SUBSS_GFX2D_BLITENG_BLITENGCFG {
  un_VIDEOSS_BLITENGCFG_STATICCONTROL_t unSTATICCONTROL; /*!< 0x00000000 Static control register. */
  un_VIDEOSS_BLITENGCFG_TASKSETUP_t unTASKSETUP;       /*!< 0x00000004 Task configuration register. */
  un_VIDEOSS_BLITENGCFG_LRFRAMEDIMENSION_t unLRFRAMEDIMENSION; /*!< 0x00000008 Dimension of final frame in memory. */
  un_VIDEOSS_BLITENGCFG_OPERATIONSETUP_t unOPERATIONSETUP; /*!< 0x0000000C Setup for rendering operation. */
  un_VIDEOSS_BLITENGCFG_LROBJECTDIMENSION_t unLROBJECTDIMENSION; /*!< 0x00000010 Dimension of object. Only possible in LBO mode */
  un_VIDEOSS_BLITENGCFG_LROBJECTPOSITION_t unLROBJECTPOSITION; /*!< 0x00000014 Position of current object in frame coordinate system.
                                                                                Only possible in LBO mode */
  un_VIDEOSS_BLITENGCFG_LRCONSTALPHA_t unLRCONSTALPHA; /*!< 0x00000018 Constant alpha used to fill buffer w/o fetch unit. Has
                                                                                affect only if ConstantColorFill is set. Only
                                                                                possible in LBO mode. */
  un_VIDEOSS_BLITENGCFG_LRCONSTRGB_t unLRCONSTRGB;     /*!< 0x0000001C Constant color used to fill buffer w/o fetch unit. Has
                                                                                affect only if ConstantColorFill is set and
                                                                                BufferSelect==RGBA. Only possible in LBO mode */
  un_VIDEOSS_BLITENGCFG_SYNCIDREQUEST0_t unSYNCIDREQUEST0; /*!< 0x00000020 Sync ID request register. */
  un_VIDEOSS_BLITENGCFG_SYNCIDREQUEST1_t unSYNCIDREQUEST1; /*!< 0x00000024 Sync ID request register. */
  un_VIDEOSS_BLITENGCFG_SYNCIDREQUEST2_t unSYNCIDREQUEST2; /*!< 0x00000028 Sync ID request register. */
  un_VIDEOSS_BLITENGCFG_SYNCIDREQUEST3_t unSYNCIDREQUEST3; /*!< 0x0000002C Sync ID request register. */
  un_VIDEOSS_BLITENGCFG_SYNCIDREQUEST4_t unSYNCIDREQUEST4; /*!< 0x00000030 Sync ID request register. */
  un_VIDEOSS_BLITENGCFG_SYNCIDREQUEST5_t unSYNCIDREQUEST5; /*!< 0x00000034 Sync ID request register. */
  un_VIDEOSS_BLITENGCFG_SYNCIDREQUEST6_t unSYNCIDREQUEST6; /*!< 0x00000038 Sync ID request register. */
  un_VIDEOSS_BLITENGCFG_SYNCIDREQUEST7_t unSYNCIDREQUEST7; /*!< 0x0000003C Sync ID request register. */
  un_VIDEOSS_BLITENGCFG_SYNCCONTROL_t unSYNCCONTROL;   /*!< 0x00000040 Triggers interrupts for sequence complete of specific TB
                                                                                of global sequence complete interrupt. */
  un_VIDEOSS_BLITENGCFG_LINERENDERINGCONTROL_t unLINERENDERINGCONTROL; /*!< 0x00000044 Line rendering operation control register. */
  un_VIDEOSS_BLITENGCFG_PERFORMANCEMEASUREMENTCONTROL_t unPERFORMANCEMEASUREMENTCONTROL; /*!< 0x00000048 Control of the performance and utilitzation
                                                                                measurements. */
  un_VIDEOSS_BLITENGCFG_SYNCIDSTATUS0_t unSYNCIDSTATUS0; /*!< 0x0000004C Sync ID Status register for task 0. */
  un_VIDEOSS_BLITENGCFG_SYNCIDSTATUS1_t unSYNCIDSTATUS1; /*!< 0x00000050 Sync ID Status register for task 1. */
  un_VIDEOSS_BLITENGCFG_SYNCIDSTATUS2_t unSYNCIDSTATUS2; /*!< 0x00000054 Sync ID Status register for task 2. */
  un_VIDEOSS_BLITENGCFG_SYNCIDSTATUS3_t unSYNCIDSTATUS3; /*!< 0x00000058 Sync ID Status register for task 3. */
  un_VIDEOSS_BLITENGCFG_SYNCIDSTATUS4_t unSYNCIDSTATUS4; /*!< 0x0000005C Sync ID Status register for task 4. */
  un_VIDEOSS_BLITENGCFG_SYNCIDSTATUS5_t unSYNCIDSTATUS5; /*!< 0x00000060 Sync ID Status register for task 5. */
  un_VIDEOSS_BLITENGCFG_SYNCIDSTATUS6_t unSYNCIDSTATUS6; /*!< 0x00000064 Sync ID Status register for task 6. */
  un_VIDEOSS_BLITENGCFG_SYNCIDSTATUS7_t unSYNCIDSTATUS7; /*!< 0x00000068 Sync ID Status register for task 7. */
  un_VIDEOSS_BLITENGCFG_DESIGNATTRIBUTES0_t unDESIGNATTRIBUTES0; /*!< 0x0000006C This register contains attributes of Bliteng. They are
                                                                                not parameters since they cannot be easily
                                                                                changed, however here we still have them to
                                                                                provide some static status on design. */
  un_VIDEOSS_BLITENGCFG_DESIGNATTRIBUTES1_t unDESIGNATTRIBUTES1; /*!< 0x00000070 This register contains attributes of Bliteng. They are
                                                                                not parameters since they cannot be easily
                                                                                changed, however here we still have them to
                                                                                provide some static status on design. */
  un_VIDEOSS_BLITENGCFG_CLOCKCOUNTER_t unCLOCKCOUNTER; /*!< 0x00000074 One of Clock Counter registers. */
  un_VIDEOSS_BLITENGCFG_CLOCKCOUNTEROVERFLOW_t unCLOCKCOUNTEROVERFLOW; /*!< 0x00000078 One of Clock Counter registers. */
  un_VIDEOSS_BLITENGCFG_IBOACTIVECOUNTER_t unIBOACTIVECOUNTER; /*!< 0x0000007C One of BlitEng Utilization Measurement registers. */
  un_VIDEOSS_BLITENGCFG_LBOACTIVECOUNTER_t unLBOACTIVECOUNTER; /*!< 0x00000080 One of BlitEng Utilization Measurement registers. */
  un_VIDEOSS_BLITENGCFG_LBOALLFETCHESACTIVECOUNTER_t unLBOALLFETCHESACTIVECOUNTER; /*!< 0x00000084 One of the LBO utilization measurement registers. */
  un_VIDEOSS_BLITENGCFG_LBOWAITBLITENGRESSOURCESCOUNTER_t unLBOWAITBLITENGRESSOURCESCOUNTER; /*!< 0x00000088 One of the LBO utilization measurement registers. */
  un_VIDEOSS_BLITENGCFG_TB0ACTIVECOUNTER_t unTB0ACTIVECOUNTER; /*!< 0x0000008C One of the TB utilization measurement registers. Since
                                                                                TB operations may be overlapping the sum of all
                                                                                TB utilization measurement registers may be
                                                                                higher than clock counter */
  un_VIDEOSS_BLITENGCFG_TB1ACTIVECOUNTER_t unTB1ACTIVECOUNTER; /*!< 0x00000090 One of the TB utilization measurement registers. Since
                                                                                TB operations may be overlapping the sum of all
                                                                                TB utilization measurement registers may be
                                                                                higher than clock counter */
  un_VIDEOSS_BLITENGCFG_TB2ACTIVECOUNTER_t unTB2ACTIVECOUNTER; /*!< 0x00000094 One of the TB utilization measurement registers. Since
                                                                                TB operations may be overlapping the sum of all
                                                                                TB utilization measurement registers may be
                                                                                higher than clock counter */
  un_VIDEOSS_BLITENGCFG_TB3ACTIVECOUNTER_t unTB3ACTIVECOUNTER; /*!< 0x00000098 One of the TB utilization measurement registers. Since
                                                                                TB operations may be overlapping the sum of all
                                                                                TB utilization measurement registers may be
                                                                                higher than clock counter */
  un_VIDEOSS_BLITENGCFG_TB4ACTIVECOUNTER_t unTB4ACTIVECOUNTER; /*!< 0x0000009C One of the TB utilization measurement registers. Since
                                                                                TB operations may be overlapping the sum of all
                                                                                TB utilization measurement registers may be
                                                                                higher than clock counter */
  un_VIDEOSS_BLITENGCFG_TB5ACTIVECOUNTER_t unTB5ACTIVECOUNTER; /*!< 0x000000A0 One of the TB utilization measurement registers. Since
                                                                                TB operations may be overlapping the sum of all
                                                                                TB utilization measurement registers may be
                                                                                higher than clock counter */
  un_VIDEOSS_BLITENGCFG_TB6ACTIVECOUNTER_t unTB6ACTIVECOUNTER; /*!< 0x000000A4 One of the TB utilization measurement registers. Since
                                                                                TB operations may be overlapping the sum of all
                                                                                TB utilization measurement registers may be
                                                                                higher than clock counter */
  un_VIDEOSS_BLITENGCFG_TB7ACTIVECOUNTER_t unTB7ACTIVECOUNTER; /*!< 0x000000A8 One of the TB utilization measurement registers. Since
                                                                                TB operations may be overlapping the sum of all
                                                                                TB utilization measurement registers may be
                                                                                higher than clock counter */
  un_VIDEOSS_BLITENGCFG_LBOSOURCEPIXELRGBACOUNTER_t unLBOSOURCEPIXELRGBACOUNTER; /*!< 0x000000AC RGBA source pixel counter for LBO mode */
  un_VIDEOSS_BLITENGCFG_LBOSOURCEPIXELALPHACOUNTER_t unLBOSOURCEPIXELALPHACOUNTER; /*!< 0x000000B0 Alpha source pixel counter for LBO mode */
  un_VIDEOSS_BLITENGCFG_LBODESTINATIONPIXELCOUNTER_t unLBODESTINATIONPIXELCOUNTER; /*!< 0x000000B4 Destination pixel counter for LBO mode */
  un_VIDEOSS_BLITENGCFG_IBODESTINATIONPIXELCOUNTER_t unIBODESTINATIONPIXELCOUNTER; /*!< 0x000000B8 Destination pixel counter for IBO mode */
  uint32_t                         au32Reserved[81];
  un_VIDEOSS_BLITENGCFG_LBHLINK0BUFFERCONFIG0_t unLBHLINK0BUFFERCONFIG0; /*!< 0x00000200 Line buffer configuration register 0. */
  un_VIDEOSS_BLITENGCFG_LBHLINK0BUFFERCONFIG1_t unLBHLINK0BUFFERCONFIG1; /*!< 0x00000204 Line buffer configuration register 1. */
  un_VIDEOSS_BLITENGCFG_LBHLINK0BUFFERSTATUS0_t unLBHLINK0BUFFERSTATUS0; /*!< 0x00000208 Buffer status register 0 for the line buffer handshake.
                                                                                Writing to this register has no effect, reading
                                                                                provides the value and simultaneously resets the
                                                                                internal register. The value provided after the
                                                                                first read or if LBH is inactive is not valid. */
  un_VIDEOSS_BLITENGCFG_LBHLINK0BUFFERSTATUS1_t unLBHLINK0BUFFERSTATUS1; /*!< 0x0000020C Buffer status register 1 for the line buffer handshake. */
  uint32_t                         u32Reserved1;
  un_VIDEOSS_BLITENGCFG_LBHLINK0BUFFERSTATUS3_t unLBHLINK0BUFFERSTATUS3; /*!< 0x00000214 Buffer status register 3 for the line buffer handshake. */
  un_VIDEOSS_BLITENGCFG_LBHLINK0BUFFERSTATUS4_t unLBHLINK0BUFFERSTATUS4; /*!< 0x00000218 Buffer status register 4 for the line buffer handshake. */
  uint32_t                         au32Reserved2[9];
  un_VIDEOSS_BLITENGCFG_LBHLINK1BUFFERCONFIG0_t unLBHLINK1BUFFERCONFIG0; /*!< 0x00000240 Line buffer configuration register 0. */
  un_VIDEOSS_BLITENGCFG_LBHLINK1BUFFERCONFIG1_t unLBHLINK1BUFFERCONFIG1; /*!< 0x00000244 Line buffer configuration register 1. */
  un_VIDEOSS_BLITENGCFG_LBHLINK1BUFFERSTATUS0_t unLBHLINK1BUFFERSTATUS0; /*!< 0x00000248 Buffer status register 0 for the line buffer handshake.
                                                                                Writing to this register has no effect, reading
                                                                                provides the value and simultaneously resets the
                                                                                internal register. The value provided after the
                                                                                first read or if LBH is inactive is not valid. */
  un_VIDEOSS_BLITENGCFG_LBHLINK1BUFFERSTATUS1_t unLBHLINK1BUFFERSTATUS1; /*!< 0x0000024C Buffer status register 1 for the line buffer handshake. */
  uint32_t                         u32Reserved3;
  un_VIDEOSS_BLITENGCFG_LBHLINK1BUFFERSTATUS3_t unLBHLINK1BUFFERSTATUS3; /*!< 0x00000254 Buffer status register 3 for the line buffer handshake. */
  un_VIDEOSS_BLITENGCFG_LBHLINK1BUFFERSTATUS4_t unLBHLINK1BUFFERSTATUS4; /*!< 0x00000258 Buffer status register 4 for the line buffer handshake. */
  uint32_t                         au32Reserved4[9];
  un_VIDEOSS_BLITENGCFG_LBHLINK2BUFFERCONFIG0_t unLBHLINK2BUFFERCONFIG0; /*!< 0x00000280 Line buffer configuration register 0. */
  un_VIDEOSS_BLITENGCFG_LBHLINK2BUFFERCONFIG1_t unLBHLINK2BUFFERCONFIG1; /*!< 0x00000284 Line buffer configuration register 1. */
  un_VIDEOSS_BLITENGCFG_LBHLINK2BUFFERSTATUS0_t unLBHLINK2BUFFERSTATUS0; /*!< 0x00000288 Buffer status register 0 for the line buffer handshake.
                                                                                Writing to this register has no effect, reading
                                                                                provides the value and simultaneously resets the
                                                                                internal register. The value provided after the
                                                                                first read or if LBH is inactive is not valid. */
  un_VIDEOSS_BLITENGCFG_LBHLINK2BUFFERSTATUS1_t unLBHLINK2BUFFERSTATUS1; /*!< 0x0000028C Buffer status register 1 for the line buffer handshake. */
  uint32_t                         u32Reserved5;
  un_VIDEOSS_BLITENGCFG_LBHLINK2BUFFERSTATUS3_t unLBHLINK2BUFFERSTATUS3; /*!< 0x00000294 Buffer status register 3 for the line buffer handshake. */
  un_VIDEOSS_BLITENGCFG_LBHLINK2BUFFERSTATUS4_t unLBHLINK2BUFFERSTATUS4; /*!< 0x00000298 Buffer status register 4 for the line buffer handshake. */
  uint32_t                         au32Reserved6[9];
  un_VIDEOSS_BLITENGCFG_LBHLINK3BUFFERCONFIG0_t unLBHLINK3BUFFERCONFIG0; /*!< 0x000002C0 Line buffer configuration register 0. */
  un_VIDEOSS_BLITENGCFG_LBHLINK3BUFFERCONFIG1_t unLBHLINK3BUFFERCONFIG1; /*!< 0x000002C4 Line buffer configuration register 1. */
  un_VIDEOSS_BLITENGCFG_LBHLINK3BUFFERSTATUS0_t unLBHLINK3BUFFERSTATUS0; /*!< 0x000002C8 Buffer status register 0 for the line buffer handshake.
                                                                                Writing to this register has no effect, reading
                                                                                provides the value and simultaneously resets the
                                                                                internal register. The value provided after the
                                                                                first read or if LBH is inactive is not valid. */
  un_VIDEOSS_BLITENGCFG_LBHLINK3BUFFERSTATUS1_t unLBHLINK3BUFFERSTATUS1; /*!< 0x000002CC Buffer status register 1 for the line buffer handshake. */
  uint32_t                         u32Reserved7;
  un_VIDEOSS_BLITENGCFG_LBHLINK3BUFFERSTATUS3_t unLBHLINK3BUFFERSTATUS3; /*!< 0x000002D4 Buffer status register 3 for the line buffer handshake. */
  un_VIDEOSS_BLITENGCFG_LBHLINK3BUFFERSTATUS4_t unLBHLINK3BUFFERSTATUS4; /*!< 0x000002D8 Buffer status register 4 for the line buffer handshake. */
  uint32_t                         au32Reserved8[9];
  un_VIDEOSS_BLITENGCFG_LBHLINK4BUFFERCONFIG0_t unLBHLINK4BUFFERCONFIG0; /*!< 0x00000300 Line buffer configuration register 0. */
  un_VIDEOSS_BLITENGCFG_LBHLINK4BUFFERCONFIG1_t unLBHLINK4BUFFERCONFIG1; /*!< 0x00000304 Line buffer configuration register 1. */
  un_VIDEOSS_BLITENGCFG_LBHLINK4BUFFERSTATUS0_t unLBHLINK4BUFFERSTATUS0; /*!< 0x00000308 Buffer status register 0 for the line buffer handshake.
                                                                                Writing to this register has no effect, reading
                                                                                provides the value and simultaneously resets the
                                                                                internal register. The value provided after the
                                                                                first read or if LBH is inactive is not valid. */
  un_VIDEOSS_BLITENGCFG_LBHLINK4BUFFERSTATUS1_t unLBHLINK4BUFFERSTATUS1; /*!< 0x0000030C Buffer status register 1 for the line buffer handshake. */
  uint32_t                         u32Reserved9;
  un_VIDEOSS_BLITENGCFG_LBHLINK4BUFFERSTATUS3_t unLBHLINK4BUFFERSTATUS3; /*!< 0x00000314 Buffer status register 3 for the line buffer handshake. */
  un_VIDEOSS_BLITENGCFG_LBHLINK4BUFFERSTATUS4_t unLBHLINK4BUFFERSTATUS4; /*!< 0x00000318 Buffer status register 4 for the line buffer handshake. */
  uint32_t                         au32Reserved10[1849];
  un_VIDEOSS_BLITENGCFG_PALETTE_t  unPALETTE[2048];    /*!< 0x00002000 Shared Palette Memory. */
} stc_VIDEOSS_SUBSS_GFX2D_BLITENG_BLITENGCFG_t;        /*!< Size = 16384 (0x4000) */

/**
  * \brief Fetch SRC (VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHSRC)
  */
typedef struct stc_VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHSRC {
  un_VIDEOSS_FETCHSRC_STATICCONTROL_t unSTATICCONTROL; /*!< 0x00000000 Common static control options. */
  un_VIDEOSS_FETCHSRC_BURSTBUFFERMANAGEMENT_t unBURSTBUFFERMANAGEMENT; /*!< 0x00000004 AXI interface buffer management register */
  un_VIDEOSS_FETCHSRC_BASEADDRESS0_t unBASEADDRESS0;   /*!< 0x00000008 Source buffer base address of layer 0. */
  un_VIDEOSS_FETCHSRC_SOURCEBUFFERATTRIBUTES0_t unSOURCEBUFFERATTRIBUTES0; /*!< 0x0000000C Source buffer attributes for layer 0. */
  un_VIDEOSS_FETCHSRC_SOURCEBUFFERDIMENSION0_t unSOURCEBUFFERDIMENSION0; /*!< 0x00000010 Source buffer dimension of layer 0. */
  un_VIDEOSS_FETCHSRC_COLORCOMPONENTBITS0_t unCOLORCOMPONENTBITS0; /*!< 0x00000014 Size of color components for RGB, YUV and index formats
                                                                                (layer 0). */
  un_VIDEOSS_FETCHSRC_COLORCOMPONENTSHIFT0_t unCOLORCOMPONENTSHIFT0; /*!< 0x00000018 Bit position of color components for RGB, YUV and index
                                                                                formats (layer 0). */
  un_VIDEOSS_FETCHSRC_LAYEROFFSET0_t unLAYEROFFSET0;   /*!< 0x0000001C Position of layer 0 within the destination frame. */
  un_VIDEOSS_FETCHSRC_CLIPWINDOWOFFSET0_t unCLIPWINDOWOFFSET0; /*!< 0x00000020 Clip window position for layer 0. */
  un_VIDEOSS_FETCHSRC_CLIPWINDOWDIMENSIONS0_t unCLIPWINDOWDIMENSIONS0; /*!< 0x00000024 Clip window size for layer 0. */
  un_VIDEOSS_FETCHSRC_CONSTANTCOLOR0_t unCONSTANTCOLOR0; /*!< 0x00000028 Constant color for layer 0. */
  un_VIDEOSS_FETCHSRC_LAYERPROPERTY0_t unLAYERPROPERTY0; /*!< 0x0000002C Common properties of layer 0. */
  un_VIDEOSS_FETCHSRC_FRAMEDIMENSIONS_t unFRAMEDIMENSIONS; /*!< 0x00000030 Output frame dimension. */
  un_VIDEOSS_FETCHSRC_FRAMERESAMPLING_t unFRAMERESAMPLING; /*!< 0x00000034 Resampling options for output frame. */
  un_VIDEOSS_FETCHSRC_WARPCONTROL_t unWARPCONTROL;     /*!< 0x00000038 Warping control options. */
  un_VIDEOSS_FETCHSRC_PERSPSTARTX_t unPERSPSTARTX;     /*!< 0x0000003C Start value X for affine/perspective warping. */
  un_VIDEOSS_FETCHSRC_PERSPSTARTY_t unPERSPSTARTY;     /*!< 0x00000040 Start value Y for affine/perspective warping. */
  un_VIDEOSS_FETCHSRC_PERSPDELTAXX_t unPERSPDELTAXX;   /*!< 0x00000044 DeltaXX increment for affine/perspective warping. */
  un_VIDEOSS_FETCHSRC_PERSPDELTAYY_t unPERSPDELTAYY;   /*!< 0x00000048 DeltaYY increment for affine/perspective warping. */
  un_VIDEOSS_FETCHSRC_PERSPDELTAXY_t unPERSPDELTAXY;   /*!< 0x0000004C DeltaXY increment for affine/perspective warping. */
  un_VIDEOSS_FETCHSRC_PERSPDELTAYX_t unPERSPDELTAYX;   /*!< 0x00000050 DeltaYX increment for affine/perspective warping. */
  un_VIDEOSS_FETCHSRC_PERSPSTARTW_t unPERSPSTARTW;     /*!< 0x00000054 Start value W for perspective warping. */
  un_VIDEOSS_FETCHSRC_PERSPDELTAXW_t unPERSPDELTAXW;   /*!< 0x00000058 DeltaWX increment for perspective warping. */
  un_VIDEOSS_FETCHSRC_PERSPDELTAYW_t unPERSPDELTAYW;   /*!< 0x0000005C DeltaWY increment for perspective warping. */
  un_VIDEOSS_FETCHSRC_ARBSTARTX_t  unARBSTARTX;        /*!< 0x00000060 Start value X for arbitrary warping. */
  un_VIDEOSS_FETCHSRC_ARBSTARTY_t  unARBSTARTY;        /*!< 0x00000064 Start value Y for arbitrary warping. */
  un_VIDEOSS_FETCHSRC_ARBDELTA_t   unARBDELTA;         /*!< 0x00000068 Start values for delta incrementation of arbitrary
                                                                                warping. */
  un_VIDEOSS_FETCHSRC_FIRPOSITIONS_t unFIRPOSITIONS;   /*!< 0x0000006C FIR sequence control register. */
  un_VIDEOSS_FETCHSRC_FIRCOEFFICIENTS_t unFIRCOEFFICIENTS; /*!< 0x00000070 FIR coefficients register. */
  un_VIDEOSS_FETCHSRC_DECODECONTROL_t unDECODECONTROL; /*!< 0x00000074 Control options for RLAD decompression. */
  un_VIDEOSS_FETCHSRC_SOURCEBUFFERLENGTH_t unSOURCEBUFFERLENGTH; /*!< 0x00000078 Source buffer length for compressed data. */
  un_VIDEOSS_FETCHSRC_CONTROL_t    unCONTROL;          /*!< 0x0000007C Shared common control settings for all layers. */
  un_VIDEOSS_FETCHSRC_CONTROLTRIGGER_t unCONTROLTRIGGER; /*!< 0x00000080 Shadow load trigger. */
  un_VIDEOSS_FETCHSRC_START_t      unSTART;            /*!< 0x00000084 Frame start trigger. */
  un_VIDEOSS_FETCHSRC_FETCHTYPE_t  unFETCHTYPE;        /*!< 0x00000088 Fetch unit type. */
  un_VIDEOSS_FETCHSRC_DECODERSTATUS_t unDECODERSTATUS; /*!< 0x0000008C Status information of the RLAD decoder. */
  un_VIDEOSS_FETCHSRC_BURSTBUFFERPROPERTIES_t unBURSTBUFFERPROPERTIES; /*!< 0x00000090 Burst buffer properties. */
  uint32_t                         au32Reserved[219];
} stc_VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHSRC_t;          /*!< Size = 1024 (0x400) */

/**
  * \brief Fetch DST (only for IBO) (VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHDST)
  */
typedef struct stc_VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHDST {
  un_VIDEOSS_FETCHDST_STATICCONTROL_t unSTATICCONTROL; /*!< 0x00000000 Common static control options. */
  un_VIDEOSS_FETCHDST_BURSTBUFFERMANAGEMENT_t unBURSTBUFFERMANAGEMENT; /*!< 0x00000004 AXI interface buffer management register */
  un_VIDEOSS_FETCHDST_BASEADDRESS0_t unBASEADDRESS0;   /*!< 0x00000008 Source buffer base address of layer 0. */
  un_VIDEOSS_FETCHDST_SOURCEBUFFERATTRIBUTES0_t unSOURCEBUFFERATTRIBUTES0; /*!< 0x0000000C Source buffer attributes for layer 0. */
  un_VIDEOSS_FETCHDST_SOURCEBUFFERDIMENSION0_t unSOURCEBUFFERDIMENSION0; /*!< 0x00000010 Source buffer dimension of layer 0. */
  un_VIDEOSS_FETCHDST_COLORCOMPONENTBITS0_t unCOLORCOMPONENTBITS0; /*!< 0x00000014 Size of color components for RGB, YUV and index formats
                                                                                (layer 0). */
  un_VIDEOSS_FETCHDST_COLORCOMPONENTSHIFT0_t unCOLORCOMPONENTSHIFT0; /*!< 0x00000018 Bit position of color components for RGB, YUV and index
                                                                                formats (layer 0). */
  un_VIDEOSS_FETCHDST_LAYEROFFSET0_t unLAYEROFFSET0;   /*!< 0x0000001C Position of layer 0 within the destination frame. */
  un_VIDEOSS_FETCHDST_CLIPWINDOWOFFSET0_t unCLIPWINDOWOFFSET0; /*!< 0x00000020 Clip window position for layer 0. */
  un_VIDEOSS_FETCHDST_CLIPWINDOWDIMENSIONS0_t unCLIPWINDOWDIMENSIONS0; /*!< 0x00000024 Clip window size for layer 0. */
  un_VIDEOSS_FETCHDST_CONSTANTCOLOR0_t unCONSTANTCOLOR0; /*!< 0x00000028 Constant color for layer 0. */
  un_VIDEOSS_FETCHDST_LAYERPROPERTY0_t unLAYERPROPERTY0; /*!< 0x0000002C Common properties of layer 0. */
  un_VIDEOSS_FETCHDST_FRAMEDIMENSIONS_t unFRAMEDIMENSIONS; /*!< 0x00000030 Output frame dimension. */
  un_VIDEOSS_FETCHDST_FRAMERESAMPLING_t unFRAMERESAMPLING; /*!< 0x00000034 Resampling options for output frame. */
  un_VIDEOSS_FETCHDST_WARPCONTROL_t unWARPCONTROL;     /*!< 0x00000038 Warping control options. */
  un_VIDEOSS_FETCHDST_PERSPSTARTX_t unPERSPSTARTX;     /*!< 0x0000003C Start value X for affine/perspective warping. */
  un_VIDEOSS_FETCHDST_PERSPSTARTY_t unPERSPSTARTY;     /*!< 0x00000040 Start value Y for affine/perspective warping. */
  un_VIDEOSS_FETCHDST_PERSPDELTAXX_t unPERSPDELTAXX;   /*!< 0x00000044 DeltaXX increment for affine/perspective warping. */
  un_VIDEOSS_FETCHDST_PERSPDELTAYY_t unPERSPDELTAYY;   /*!< 0x00000048 DeltaYY increment for affine/perspective warping. */
  un_VIDEOSS_FETCHDST_PERSPDELTAXY_t unPERSPDELTAXY;   /*!< 0x0000004C DeltaXY increment for affine/perspective warping. */
  un_VIDEOSS_FETCHDST_PERSPDELTAYX_t unPERSPDELTAYX;   /*!< 0x00000050 DeltaYX increment for affine/perspective warping. */
  un_VIDEOSS_FETCHDST_PERSPSTARTW_t unPERSPSTARTW;     /*!< 0x00000054 Start value W for perspective warping. */
  un_VIDEOSS_FETCHDST_PERSPDELTAXW_t unPERSPDELTAXW;   /*!< 0x00000058 DeltaWX increment for perspective warping. */
  un_VIDEOSS_FETCHDST_PERSPDELTAYW_t unPERSPDELTAYW;   /*!< 0x0000005C DeltaWY increment for perspective warping. */
  un_VIDEOSS_FETCHDST_ARBSTARTX_t  unARBSTARTX;        /*!< 0x00000060 Start value X for arbitrary warping. */
  un_VIDEOSS_FETCHDST_ARBSTARTY_t  unARBSTARTY;        /*!< 0x00000064 Start value Y for arbitrary warping. */
  un_VIDEOSS_FETCHDST_ARBDELTA_t   unARBDELTA;         /*!< 0x00000068 Start values for delta incrementation of arbitrary
                                                                                warping. */
  un_VIDEOSS_FETCHDST_FIRPOSITIONS_t unFIRPOSITIONS;   /*!< 0x0000006C FIR sequence control register. */
  un_VIDEOSS_FETCHDST_FIRCOEFFICIENTS_t unFIRCOEFFICIENTS; /*!< 0x00000070 FIR coefficients register. */
  un_VIDEOSS_FETCHDST_DECODECONTROL_t unDECODECONTROL; /*!< 0x00000074 Control options for RLAD decompression. */
  un_VIDEOSS_FETCHDST_SOURCEBUFFERLENGTH_t unSOURCEBUFFERLENGTH; /*!< 0x00000078 Source buffer length for compressed data. */
  un_VIDEOSS_FETCHDST_CONTROL_t    unCONTROL;          /*!< 0x0000007C Shared common control settings for all layers. */
  un_VIDEOSS_FETCHDST_CONTROLTRIGGER_t unCONTROLTRIGGER; /*!< 0x00000080 Shadow load trigger. */
  un_VIDEOSS_FETCHDST_START_t      unSTART;            /*!< 0x00000084 Frame start trigger. */
  un_VIDEOSS_FETCHDST_FETCHTYPE_t  unFETCHTYPE;        /*!< 0x00000088 Fetch unit type. */
  un_VIDEOSS_FETCHDST_DECODERSTATUS_t unDECODERSTATUS; /*!< 0x0000008C Status information of the RLAD decoder. */
  un_VIDEOSS_FETCHDST_BURSTBUFFERPROPERTIES_t unBURSTBUFFERPROPERTIES; /*!< 0x00000090 Burst buffer properties. */
  uint32_t                         au32Reserved[219];
} stc_VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHDST_t;          /*!< Size = 1024 (0x400) */

/**
  * \brief Fetch MASK (only for IBO) (VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHMASK)
  */
typedef struct stc_VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHMASK {
  un_VIDEOSS_FETCHMASK_STATICCONTROL_t unSTATICCONTROL; /*!< 0x00000000 Common static control options. */
  un_VIDEOSS_FETCHMASK_BURSTBUFFERMANAGEMENT_t unBURSTBUFFERMANAGEMENT; /*!< 0x00000004 AXI interface buffer management register */
  un_VIDEOSS_FETCHMASK_BASEADDRESS0_t unBASEADDRESS0;  /*!< 0x00000008 Source buffer base address of layer 0. */
  un_VIDEOSS_FETCHMASK_SOURCEBUFFERATTRIBUTES0_t unSOURCEBUFFERATTRIBUTES0; /*!< 0x0000000C Source buffer attributes for layer 0. */
  un_VIDEOSS_FETCHMASK_SOURCEBUFFERDIMENSION0_t unSOURCEBUFFERDIMENSION0; /*!< 0x00000010 Source buffer dimension of layer 0. */
  un_VIDEOSS_FETCHMASK_COLORCOMPONENTBITS0_t unCOLORCOMPONENTBITS0; /*!< 0x00000014 Size of color components for RGB, YUV and index formats
                                                                                (layer 0). */
  un_VIDEOSS_FETCHMASK_COLORCOMPONENTSHIFT0_t unCOLORCOMPONENTSHIFT0; /*!< 0x00000018 Bit position of color components for RGB, YUV and index
                                                                                formats (layer 0). */
  un_VIDEOSS_FETCHMASK_LAYEROFFSET0_t unLAYEROFFSET0;  /*!< 0x0000001C Position of layer 0 within the destination frame. */
  un_VIDEOSS_FETCHMASK_CLIPWINDOWOFFSET0_t unCLIPWINDOWOFFSET0; /*!< 0x00000020 Clip window position for layer 0. */
  un_VIDEOSS_FETCHMASK_CLIPWINDOWDIMENSIONS0_t unCLIPWINDOWDIMENSIONS0; /*!< 0x00000024 Clip window size for layer 0. */
  un_VIDEOSS_FETCHMASK_CONSTANTCOLOR0_t unCONSTANTCOLOR0; /*!< 0x00000028 Constant color for layer 0. */
  un_VIDEOSS_FETCHMASK_LAYERPROPERTY0_t unLAYERPROPERTY0; /*!< 0x0000002C Common properties of layer 0. */
  un_VIDEOSS_FETCHMASK_FRAMEDIMENSIONS_t unFRAMEDIMENSIONS; /*!< 0x00000030 Output frame dimension. */
  un_VIDEOSS_FETCHMASK_FRAMERESAMPLING_t unFRAMERESAMPLING; /*!< 0x00000034 Resampling options for output frame. */
  un_VIDEOSS_FETCHMASK_WARPCONTROL_t unWARPCONTROL;    /*!< 0x00000038 Warping control options. */
  un_VIDEOSS_FETCHMASK_PERSPSTARTX_t unPERSPSTARTX;    /*!< 0x0000003C Start value X for affine/perspective warping. */
  un_VIDEOSS_FETCHMASK_PERSPSTARTY_t unPERSPSTARTY;    /*!< 0x00000040 Start value Y for affine/perspective warping. */
  un_VIDEOSS_FETCHMASK_PERSPDELTAXX_t unPERSPDELTAXX;  /*!< 0x00000044 DeltaXX increment for affine/perspective warping. */
  un_VIDEOSS_FETCHMASK_PERSPDELTAYY_t unPERSPDELTAYY;  /*!< 0x00000048 DeltaYY increment for affine/perspective warping. */
  un_VIDEOSS_FETCHMASK_PERSPDELTAXY_t unPERSPDELTAXY;  /*!< 0x0000004C DeltaXY increment for affine/perspective warping. */
  un_VIDEOSS_FETCHMASK_PERSPDELTAYX_t unPERSPDELTAYX;  /*!< 0x00000050 DeltaYX increment for affine/perspective warping. */
  un_VIDEOSS_FETCHMASK_PERSPSTARTW_t unPERSPSTARTW;    /*!< 0x00000054 Start value W for perspective warping. */
  un_VIDEOSS_FETCHMASK_PERSPDELTAXW_t unPERSPDELTAXW;  /*!< 0x00000058 DeltaWX increment for perspective warping. */
  un_VIDEOSS_FETCHMASK_PERSPDELTAYW_t unPERSPDELTAYW;  /*!< 0x0000005C DeltaWY increment for perspective warping. */
  un_VIDEOSS_FETCHMASK_ARBSTARTX_t unARBSTARTX;        /*!< 0x00000060 Start value X for arbitrary warping. */
  un_VIDEOSS_FETCHMASK_ARBSTARTY_t unARBSTARTY;        /*!< 0x00000064 Start value Y for arbitrary warping. */
  un_VIDEOSS_FETCHMASK_ARBDELTA_t  unARBDELTA;         /*!< 0x00000068 Start values for delta incrementation of arbitrary
                                                                                warping. */
  un_VIDEOSS_FETCHMASK_FIRPOSITIONS_t unFIRPOSITIONS;  /*!< 0x0000006C FIR sequence control register. */
  un_VIDEOSS_FETCHMASK_FIRCOEFFICIENTS_t unFIRCOEFFICIENTS; /*!< 0x00000070 FIR coefficients register. */
  un_VIDEOSS_FETCHMASK_DECODECONTROL_t unDECODECONTROL; /*!< 0x00000074 Control options for RLAD decompression. */
  un_VIDEOSS_FETCHMASK_SOURCEBUFFERLENGTH_t unSOURCEBUFFERLENGTH; /*!< 0x00000078 Source buffer length for compressed data. */
  un_VIDEOSS_FETCHMASK_CONTROL_t   unCONTROL;          /*!< 0x0000007C Shared common control settings for all layers. */
  un_VIDEOSS_FETCHMASK_CONTROLTRIGGER_t unCONTROLTRIGGER; /*!< 0x00000080 Shadow load trigger. */
  un_VIDEOSS_FETCHMASK_START_t     unSTART;            /*!< 0x00000084 Frame start trigger. */
  un_VIDEOSS_FETCHMASK_FETCHTYPE_t unFETCHTYPE;        /*!< 0x00000088 Fetch unit type. */
  un_VIDEOSS_FETCHMASK_DECODERSTATUS_t unDECODERSTATUS; /*!< 0x0000008C Status information of the RLAD decoder. */
  un_VIDEOSS_FETCHMASK_BURSTBUFFERPROPERTIES_t unBURSTBUFFERPROPERTIES; /*!< 0x00000090 Burst buffer properties. */
  uint32_t                         au32Reserved[219];
} stc_VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHMASK_t;         /*!< Size = 1024 (0x400) */

/**
  * \brief ROp (VIDEOSS_SUBSS_GFX2D_BLITENG_ROP)
  */
typedef struct stc_VIDEOSS_SUBSS_GFX2D_BLITENG_ROP {
  un_VIDEOSS_ROP_STATICCONTROL_t   unSTATICCONTROL;    /*!< 0x00000000 Raster Operation static control register */
  un_VIDEOSS_ROP_CONTROL_t         unCONTROL;          /*!< 0x00000004 Raster Operation control register */
  un_VIDEOSS_ROP_RASTEROPERATIONINDICES_t unRASTEROPERATIONINDICES; /*!< 0x00000008 ROP operation indices */
  un_VIDEOSS_ROP_PRIMCONTROLWORD_t unPRIMCONTROLWORD;  /*!< 0x0000000C Value of last received primary control word */
  un_VIDEOSS_ROP_SECCONTROLWORD_t  unSECCONTROLWORD;   /*!< 0x00000010 Value of last received secondary control word */
  un_VIDEOSS_ROP_TERTCONTROLWORD_t unTERTCONTROLWORD;  /*!< 0x00000014 Value of last received tertiary control word */
  uint32_t                         au32Reserved[250];
} stc_VIDEOSS_SUBSS_GFX2D_BLITENG_ROP_t;               /*!< Size = 1024 (0x400) */

/**
  * \brief CLut (only for IBO) (VIDEOSS_SUBSS_GFX2D_BLITENG_CLUT)
  */
typedef struct stc_VIDEOSS_SUBSS_GFX2D_BLITENG_CLUT {
  un_VIDEOSS_CLUT_STATICCONTROL_t  unSTATICCONTROL;    /*!< 0x00000000 CLUT static control register */
  un_VIDEOSS_CLUT_UNSHADOWEDCONTROL_t unUNSHADOWEDCONTROL; /*!< 0x00000004 CLUT unshadowed control register */
  un_VIDEOSS_CLUT_CONTROL_t        unCONTROL;          /*!< 0x00000008 CLUT control register */
  un_VIDEOSS_CLUT_STATUS_t         unSTATUS;           /*!< 0x0000000C CLUT status register */
  un_VIDEOSS_CLUT_LASTCONTROLWORD_t unLASTCONTROLWORD; /*!< 0x00000010 Value of last received control word, for debugging */
  uint32_t                         au32Reserved[251];
  un_VIDEOSS_CLUT_LUT_t            unLUT[256];         /*!< 0x00000400 Look Up Table */
} stc_VIDEOSS_SUBSS_GFX2D_BLITENG_CLUT_t;              /*!< Size = 2048 (0x800) */

/**
  * \brief Matrix (VIDEOSS_SUBSS_GFX2D_BLITENG_MATRIX)
  */
typedef struct stc_VIDEOSS_SUBSS_GFX2D_BLITENG_MATRIX {
  un_VIDEOSS_MATRIX_STATICCONTROL_t unSTATICCONTROL;   /*!< 0x00000000 Color Matrix static control register */
  un_VIDEOSS_MATRIX_CONTROL_t      unCONTROL;          /*!< 0x00000004 Color Matrix control register */
  un_VIDEOSS_MATRIX_RED0_t         unRED0;             /*!< 0x00000008 Matrix values for calculation of the red output value. */
  un_VIDEOSS_MATRIX_RED1_t         unRED1;             /*!< 0x0000000C Matrix values for calculation of the red output value. */
  un_VIDEOSS_MATRIX_GREEN0_t       unGREEN0;           /*!< 0x00000010 Matrix values for calculation of the green output value. */
  un_VIDEOSS_MATRIX_GREEN1_t       unGREEN1;           /*!< 0x00000014 Matrix values for calculation of the green output value. */
  un_VIDEOSS_MATRIX_BLUE0_t        unBLUE0;            /*!< 0x00000018 Matrix values for calculation of the blue output value. */
  un_VIDEOSS_MATRIX_BLUE1_t        unBLUE1;            /*!< 0x0000001C Matrix values for calculation of the blue output value. */
  un_VIDEOSS_MATRIX_ALPHA0_t       unALPHA0;           /*!< 0x00000020 Matrix values for calculation of the alpha output value. */
  un_VIDEOSS_MATRIX_ALPHA1_t       unALPHA1;           /*!< 0x00000024 Matrix values for calculation of the alpha output value. */
  un_VIDEOSS_MATRIX_OFFSETVECTOR0_t unOFFSETVECTOR0;   /*!< 0x00000028 Offset vectors for red and green output. */
  un_VIDEOSS_MATRIX_OFFSETVECTOR1_t unOFFSETVECTOR1;   /*!< 0x0000002C Offset vectors for blue and alpha output. */
  uint32_t                         au32Reserved[244];
} stc_VIDEOSS_SUBSS_GFX2D_BLITENG_MATRIX_t;            /*!< Size = 1024 (0x400) */

/**
  * \brief GPScaler (only for IBO) (VIDEOSS_SUBSS_GFX2D_BLITENG_GPSCALER)
  */
typedef struct stc_VIDEOSS_SUBSS_GFX2D_BLITENG_GPSCALER {
  un_VIDEOSS_GPSCALER_STATICCONTROL_t unSTATICCONTROL; /*!< 0x00000000 Static control settings that must typically be setup
                                                                                once only. */
  un_VIDEOSS_GPSCALER_CONTROL_t    unCONTROL;          /*!< 0x00000004 Global operation control. */
  un_VIDEOSS_GPSCALER_OUTPUTDIMENSION_t unOUTPUTDIMENSION; /*!< 0x00000008 Dimensions of the output frame or fame slice. This
                                                                                values are required for both FIR filter and
                                                                                scaler, since their output may have other
                                                                                dimension than input. The dimension of scaler's
                                                                                output is defined by the scale factor. The
                                                                                dimension of FIR filter's output depends on the
                                                                                tiling at the begin and the end of the slice. */
  un_VIDEOSS_GPSCALER_SCALERCONTROL_t unSCALERCONTROL; /*!< 0x0000000C Scaler operation control. */
  un_VIDEOSS_GPSCALER_SCALERSETUPH0_t unSCALERSETUPH0; /*!< 0x00000010 Phase interpolator setup. */
  un_VIDEOSS_GPSCALER_SCALERSETUPH1_t unSCALERSETUPH1; /*!< 0x00000014 Phase interpolator setup. */
  un_VIDEOSS_GPSCALER_SCALERSETUPV0_t unSCALERSETUPV0; /*!< 0x00000018 Phase interpolator setup. */
  un_VIDEOSS_GPSCALER_SCALERSETUPV1_t unSCALERSETUPV1; /*!< 0x0000001C Phase interpolator setup, selected if input and output
                                                                                field polarity is 0. */
  un_VIDEOSS_GPSCALER_SCALERSETUPV2_t unSCALERSETUPV2; /*!< 0x00000020 Phase interpolator setup, selected if input field
                                                                                polarity is 1 and output field polarity is 0. */
  un_VIDEOSS_GPSCALER_SCALERSETUPV3_t unSCALERSETUPV3; /*!< 0x00000024 Phase interpolator setup, selected if input field
                                                                                polarity is 0 and output field polarity is 1. */
  un_VIDEOSS_GPSCALER_SCALERSETUPV4_t unSCALERSETUPV4; /*!< 0x00000028 Phase interpolator setup, selected if input and output
                                                                                field polarity is 1. */
  un_VIDEOSS_GPSCALER_FILTERCONTROL_t unFILTERCONTROL; /*!< 0x0000002C Filter operation control. */
  un_VIDEOSS_GPSCALER_TILECOLORRGB_t unTILECOLORRGB;   /*!< 0x00000030 Color for outside of the slice. */
  un_VIDEOSS_GPSCALER_COEFFICIENTSH0_t unCOEFFICIENTSH0; /*!< 0x00000034 Horizontal coefficients for filter_mode FIR. */
  un_VIDEOSS_GPSCALER_COEFFICIENTSH1_t unCOEFFICIENTSH1; /*!< 0x00000038 Horizontal coefficients for filter_mode FIR. */
  un_VIDEOSS_GPSCALER_COEFFICIENTSH2_t unCOEFFICIENTSH2; /*!< 0x0000003C Horizontal coefficients for filter_mode FIR. */
  un_VIDEOSS_GPSCALER_COEFFICIENTSH3_t unCOEFFICIENTSH3; /*!< 0x00000040 Horizontal coefficients for filter_mode FIR. */
  un_VIDEOSS_GPSCALER_COEFFICIENTSV0_t unCOEFFICIENTSV0; /*!< 0x00000044 Vertical coefficients for filter_mode FIR. */
  un_VIDEOSS_GPSCALER_COEFFICIENTSV1_t unCOEFFICIENTSV1; /*!< 0x00000048 Vertical coefficients for filter_mode FIR. */
  un_VIDEOSS_GPSCALER_COEFFICIENTSV2_t unCOEFFICIENTSV2; /*!< 0x0000004C Vertical coefficients for filter_mode FIR. */
  un_VIDEOSS_GPSCALER_COEFFICIENTSV3_t unCOEFFICIENTSV3; /*!< 0x00000050 Vertical coefficients for filter_mode FIR. */
  uint32_t                         au32Reserved[235];
} stc_VIDEOSS_SUBSS_GFX2D_BLITENG_GPSCALER_t;          /*!< Size = 1024 (0x400) */

/**
  * \brief BlitBlend (VIDEOSS_SUBSS_GFX2D_BLITENG_BLITBLEND)
  */
typedef struct stc_VIDEOSS_SUBSS_GFX2D_BLITENG_BLITBLEND {
  un_VIDEOSS_BLITBLEND_STATICCONTROL_t unSTATICCONTROL; /*!< 0x00000000 BlitBlend static control register */
  un_VIDEOSS_BLITBLEND_CONTROL_t   unCONTROL;          /*!< 0x00000004 BlitBlend control register */
  un_VIDEOSS_BLITBLEND_NEUTRALBORDER_t unNEUTRALBORDER; /*!< 0x00000008 Neutral border setup register */
  un_VIDEOSS_BLITBLEND_CONSTANTCOLOR_t unCONSTANTCOLOR; /*!< 0x0000000C Constant color register */
  un_VIDEOSS_BLITBLEND_COLORREDBLENDFUNCTION_t unCOLORREDBLENDFUNCTION; /*!< 0x00000010 Open GL RGB blending factors */
  un_VIDEOSS_BLITBLEND_COLORGREENBLENDFUNCTION_t unCOLORGREENBLENDFUNCTION; /*!< 0x00000014 Open GL RGB blending factors */
  un_VIDEOSS_BLITBLEND_COLORBLUEBLENDFUNCTION_t unCOLORBLUEBLENDFUNCTION; /*!< 0x00000018 Open GL RGB blending factors */
  un_VIDEOSS_BLITBLEND_ALPHABLENDFUNCTION_t unALPHABLENDFUNCTION; /*!< 0x0000001C Open GL alpha blending factors */
  un_VIDEOSS_BLITBLEND_BLENDMODE1_t unBLENDMODE1;      /*!< 0x00000020 Open GL and Open VG blending modes for colors red and
                                                                                green */
  un_VIDEOSS_BLITBLEND_BLENDMODE2_t unBLENDMODE2;      /*!< 0x00000024 Open GL and Open VG blending modes for color blue and
                                                                                alpha */
  un_VIDEOSS_BLITBLEND_DIRECTSETUP_t unDIRECTSETUP;    /*!< 0x00000028 Direct Control of the BlitBlend Datapath multiplexers,
                                                                                do not change */
  un_VIDEOSS_BLITBLEND_PRIMCONTROLWORD_t unPRIMCONTROLWORD; /*!< 0x0000002C Value of last received primary control word */
  un_VIDEOSS_BLITBLEND_SECCONTROLWORD_t unSECCONTROLWORD; /*!< 0x00000030 Value of last received secondary control word */
  uint32_t                         au32Reserved[243];
} stc_VIDEOSS_SUBSS_GFX2D_BLITENG_BLITBLEND_t;         /*!< Size = 1024 (0x400) */

/**
  * \brief Store (VIDEOSS_SUBSS_GFX2D_BLITENG_STORE)
  */
typedef struct stc_VIDEOSS_SUBSS_GFX2D_BLITENG_STORE {
  un_VIDEOSS_STORE_STATICCONTROL_t unSTATICCONTROL;    /*!< 0x00000000 Store unit static control register. */
  un_VIDEOSS_STORE_BURSTBUFFERMANAGEMENT_t unBURSTBUFFERMANAGEMENT; /*!< 0x00000004 Burst Buffer setup register. */
  un_VIDEOSS_STORE_RINGBUFSTARTADDR_t unRINGBUFSTARTADDR; /*!< 0x00000008 Ring buffer setup for destination. */
  un_VIDEOSS_STORE_RINGBUFWRAPADDR_t unRINGBUFWRAPADDR; /*!< 0x0000000C Ring buffer setup for destination. */
  un_VIDEOSS_STORE_BASEADDRESS_t   unBASEADDRESS;      /*!< 0x00000010 Destination buffer base address. */
  un_VIDEOSS_STORE_DESTINATIONBUFFERATTRIBUTES_t unDESTINATIONBUFFERATTRIBUTES; /*!< 0x00000014 Destination buffer attributes. */
  un_VIDEOSS_STORE_DESTINATIONBUFFERDIMENSION_t unDESTINATIONBUFFERDIMENSION; /*!< 0x00000018 Destination buffer dimension. */
  un_VIDEOSS_STORE_FRAMEOFFSET_t   unFRAMEOFFSET;      /*!< 0x0000001C Offset between destination frame and buffer. */
  un_VIDEOSS_STORE_COLORCOMPONENTBITS_t unCOLORCOMPONENTBITS; /*!< 0x00000020 Color component size of destination buffer */
  un_VIDEOSS_STORE_COLORCOMPONENTSHIFT_t unCOLORCOMPONENTSHIFT; /*!< 0x00000024 Color component offset of destination buffer. */
  un_VIDEOSS_STORE_CONTROL_t       unCONTROL;          /*!< 0x00000028 Store unit dynamic control register */
  un_VIDEOSS_STORE_ENCODECONTROL_t unENCODECONTROL;    /*!< 0x0000002C Control options for RLAD compression. */
  un_VIDEOSS_STORE_DESTINATIONBUFFERLENGTH_t unDESTINATIONBUFFERLENGTH; /*!< 0x00000030 Destination buffer length for compressed data. */
  un_VIDEOSS_STORE_START_t         unSTART;            /*!< 0x00000034 Store unit start register */
  un_VIDEOSS_STORE_ENCODERSTATUS_t unENCODERSTATUS;    /*!< 0x00000038 Status information of the RLAD encoder. */
  un_VIDEOSS_STORE_WRITEADDRESS_t  unWRITEADDRESS;     /*!< 0x0000003C Ring buffer synchronization. */
  un_VIDEOSS_STORE_FRAMEPROPERTIES_t unFRAMEPROPERTIES; /*!< 0x00000040 Ring buffer synchronization. */
  un_VIDEOSS_STORE_BURSTBUFFERPROPERTIES_t unBURSTBUFFERPROPERTIES; /*!< 0x00000044 Burst Buffer Property register */
  un_VIDEOSS_STORE_LASTCONTROLWORD_t unLASTCONTROLWORD; /*!< 0x00000048 Shows the last control word received */
  un_VIDEOSS_STORE_PERFCOUNTER_t   unPERFCOUNTER;      /*!< 0x0000004C Performance counter result */
  uint32_t                         au32Reserved[236];
} stc_VIDEOSS_SUBSS_GFX2D_BLITENG_STORE_t;             /*!< Size = 1024 (0x400) */

/**
  * \brief Blit Engine (VIDEOSS_SUBSS_GFX2D_BLITENG)
  */
typedef struct stc_VIDEOSS_SUBSS_GFX2D_BLITENG {
  stc_VIDEOSS_SUBSS_GFX2D_BLITENG_BLITENGCFG_t BLITENGCFG; /*!< 0x00000000 Top-Level */
  stc_VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHSRC_t FETCHSRC; /*!< 0x00004000 Fetch SRC */
  stc_VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHDST_t FETCHDST; /*!< 0x00004400 Fetch DST (only for IBO) */
  stc_VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHMASK_t FETCHMASK; /*!< 0x00004800 Fetch MASK (only for IBO) */
  uint32_t                         au32Reserved[256];
  stc_VIDEOSS_SUBSS_GFX2D_BLITENG_ROP_t ROP;           /*!< 0x00005000 ROp */
  uint32_t                         au32Reserved1[256];
  stc_VIDEOSS_SUBSS_GFX2D_BLITENG_CLUT_t CLUT;         /*!< 0x00005800 CLut (only for IBO) */
  stc_VIDEOSS_SUBSS_GFX2D_BLITENG_MATRIX_t MATRIX;     /*!< 0x00006000 Matrix */
  stc_VIDEOSS_SUBSS_GFX2D_BLITENG_GPSCALER_t GPSCALER; /*!< 0x00006400 GPScaler (only for IBO) */
  stc_VIDEOSS_SUBSS_GFX2D_BLITENG_BLITBLEND_t BLITBLEND; /*!< 0x00006800 BlitBlend */
  stc_VIDEOSS_SUBSS_GFX2D_BLITENG_STORE_t STORE;       /*!< 0x00006C00 Store */
  uint32_t                         au32Reserved2[9216];
} stc_VIDEOSS_SUBSS_GFX2D_BLITENG_t;                   /*!< Size = 65536 (0x10000) */

/**
  * \brief Drawing Engine (VIDEOSS_SUBSS_GFX2D_DRAWENG)
  */
typedef struct stc_VIDEOSS_SUBSS_GFX2D_DRAWENG {
  un_VIDEOSS_DRAWENG_STATICCONTROL_t unSTATICCONTROL;  /*!< 0x00000000 Drawing Engine static control register */
  un_VIDEOSS_DRAWENG_STATICBURSTBUFFERMANAGEMENT_t unSTATICBURSTBUFFERMANAGEMENT; /*!< 0x00000004 Burst Buffer setup register */
  un_VIDEOSS_DRAWENG_STATICCMDBUFFERADDRESS_t unSTATICCMDBUFFERADDRESS; /*!< 0x00000008 Lowest command buffer address */
  un_VIDEOSS_DRAWENG_STATICCMDBUFFERSIZE_t unSTATICCMDBUFFERSIZE; /*!< 0x0000000C Command buffer size */
  un_VIDEOSS_DRAWENG_CMDBUFFERWRITEPTR_t unCMDBUFFERWRITEPTR; /*!< 0x00000010 Buffer end address of command list */
  un_VIDEOSS_DRAWENG_TRANSFORMATIONMATRIXA11_t unTRANSFORMATIONMATRIXA11; /*!< 0x00000014 Component A11 of transformation Matrix A */
  un_VIDEOSS_DRAWENG_TRANSFORMATIONMATRIXA21_t unTRANSFORMATIONMATRIXA21; /*!< 0x00000018 Component A21 of transformation Matrix A */
  un_VIDEOSS_DRAWENG_TRANSFORMATIONMATRIXA12_t unTRANSFORMATIONMATRIXA12; /*!< 0x0000001C Component A12 of transformation Matrix A */
  un_VIDEOSS_DRAWENG_TRANSFORMATIONMATRIXA22_t unTRANSFORMATIONMATRIXA22; /*!< 0x00000020 Component A22 of transformation Matrix A */
  un_VIDEOSS_DRAWENG_TRANSLATIONVECTORX_t unTRANSLATIONVECTORX; /*!< 0x00000024 Horizontal translation of the alpha frame. */
  un_VIDEOSS_DRAWENG_TRANSLATIONVECTORY_t unTRANSLATIONVECTORY; /*!< 0x00000028 Vertical translation of the alpha frame. */
  un_VIDEOSS_DRAWENG_PROCESSINGCONTROL_t unPROCESSINGCONTROL; /*!< 0x0000002C Drawing Engine main processing control register */
  un_VIDEOSS_DRAWENG_STORECONTROL_t unSTORECONTROL;    /*!< 0x00000030 Store unit dynamic control register */
  un_VIDEOSS_DRAWENG_DESTINATIONBUFFERDIMENSIONS_t unDESTINATIONBUFFERDIMENSIONS; /*!< 0x00000034 Maximum dimensions of the destination buffer. The
                                                                                resulting alpha frame is limited to this
                                                                                dimensions. However, the active area can be
                                                                                smaller and is given by ActiveDimensions
                                                                                register. */
  un_VIDEOSS_DRAWENG_DESTINATIONBUFFER_t unDESTINATIONBUFFER; /*!< 0x00000038 Destination buffer base address */
  un_VIDEOSS_DRAWENG_START_t       unSTART;            /*!< 0x0000003C Drawing Engine start register */
  un_VIDEOSS_DRAWENG_READACK_t     unREADACK;          /*!< 0x00000040 Drawing Engine read acknowledge register */
  un_VIDEOSS_DRAWENG_CMDBUFFERREADPTR_t unCMDBUFFERREADPTR; /*!< 0x00000044 Buffer end address of command list */
  un_VIDEOSS_DRAWENG_ACTIVEDIMENSIONS_t unACTIVEDIMENSIONS; /*!< 0x00000048 Shows active dimensions of the output alpha frame. This
                                                                                register is aligned to the ClipWindowDimensions
                                                                                register of the fetch. */
  un_VIDEOSS_DRAWENG_LAYEROFFSET_t unLAYEROFFSET;      /*!< 0x0000004C Desired position of the alpha frame for the following
                                                                                Blit operation. This register is aligned to the
                                                                                LayerOffset of the fetch and given as signed
                                                                                16.0 values. */
  un_VIDEOSS_DRAWENG_ERROR_t       unERROR;            /*!< 0x00000050 Error status of finished operation. If register is
                                                                                unequal to zero the resulting raster image is
                                                                                most likely corrupted. */
  un_VIDEOSS_DRAWENG_BURSTBUFFERPROPERTIES_t unBURSTBUFFERPROPERTIES; /*!< 0x00000054 Burst Buffer Property register */
  un_VIDEOSS_DRAWENG_STATUS_t      unSTATUS;           /*!< 0x00000058 Status bits. */
  un_VIDEOSS_DRAWENG_PERFCOUNTERFRONT_t unPERFCOUNTERFRONT; /*!< 0x0000005C Performance counter result */
  un_VIDEOSS_DRAWENG_PERFCOUNTERBACK_t unPERFCOUNTERBACK; /*!< 0x00000060 Performance counter result */
  uint32_t                         au32Reserved[231];
} stc_VIDEOSS_SUBSS_GFX2D_DRAWENG_t;                   /*!< Size = 1024 (0x400) */

/**
  * \brief Graphics 2D Core (VIDEOSS_SUBSS_GFX2D)
  */
typedef struct stc_VIDEOSS_SUBSS_GFX2D {
  stc_VIDEOSS_SUBSS_GFX2D_GFX2DCFG_t GFX2DCFG;         /*!< 0x00000000 Graphics 2D Core config */
  uint32_t                         au32Reserved[16128];
  stc_VIDEOSS_SUBSS_GFX2D_CMDSEQ_t CMDSEQ;             /*!< 0x00010000 Command Sequencer */
  uint32_t                         au32Reserved1[16128];
  stc_VIDEOSS_SUBSS_GFX2D_BLITENG_t BLITENG[1];        /*!< 0x00020000 Blit Engine */
  stc_VIDEOSS_SUBSS_GFX2D_DRAWENG_t DRAWENG;           /*!< 0x00030000 Drawing Engine */
  uint32_t                         au32Reserved2[16128];
} stc_VIDEOSS_SUBSS_GFX2D_t;                           /*!< Size = 262144 (0x40000) */

/**
  * \brief Sub Interface (VIDEOSS_SUBSS)
  */
typedef struct stc_VIDEOSS_SUBSS {
  stc_VIDEOSS_SUBSS_VIDEOSSCFG_t   VIDEOSSCFG;         /*!< 0x00000000 Subsystem Control. */
  stc_VIDEOSS_SUBSS_VRAM_t         VRAM;               /*!< 0x00000400 Video RAM. */
  uint32_t                         au32Reserved[65024];
  stc_VIDEOSS_SUBSS_GFX2D_t        GFX2D[1];           /*!< 0x00040000 Graphics 2D Core */
} stc_VIDEOSS_SUBSS_t;                                 /*!< Size = 524288 (0x80000) */

/**
  * \brief Video I/O Core Configuration (VIDEOSS_VIDEOIO_SUBIO_VIDEOIOCFG)
  */
typedef struct stc_VIDEOSS_VIDEOIO_SUBIO_VIDEOIOCFG {
  un_VIDEOSS_VIDEOIOCFG_INTR_VIDEOIO0_t unINTR_VIDEOIO0; /*!< 0x00000000 Interrupt status register 0 */
  un_VIDEOSS_VIDEOIOCFG_INTR_VIDEOIO1_t unINTR_VIDEOIO1; /*!< 0x00000004 Interrupt Status register 1 */
  un_VIDEOSS_VIDEOIOCFG_INTR_VIDEOIO0_SET_t unINTR_VIDEOIO0_SET; /*!< 0x00000008 Interrupt set register 0 */
  un_VIDEOSS_VIDEOIOCFG_INTR_VIDEOIO1_SET_t unINTR_VIDEOIO1_SET; /*!< 0x0000000C Interrupt set register 1 */
  un_VIDEOSS_VIDEOIOCFG_INTR_VIDEOIO0_MASK_t unINTR_VIDEOIO0_MASK; /*!< 0x00000010 Interrupt mask register 0 */
  un_VIDEOSS_VIDEOIOCFG_INTR_VIDEOIO1_MASK_t unINTR_VIDEOIO1_MASK; /*!< 0x00000014 Interrupt mask register 1 */
  un_VIDEOSS_VIDEOIOCFG_INTR_VIDEOIO0_MASKED_t unINTR_VIDEOIO0_MASKED; /*!< 0x00000018 Interrupt masked register 0 */
  un_VIDEOSS_VIDEOIOCFG_INTR_VIDEOIO1_MASKED_t unINTR_VIDEOIO1_MASKED; /*!< 0x0000001C Interrupt masked register 1 */
  un_VIDEOSS_VIDEOIOCFG_INTR_VIDEOIO0_SAFETY_t unINTR_VIDEOIO0_SAFETY; /*!< 0x00000020 Interrupt Status register 0 */
  un_VIDEOSS_VIDEOIOCFG_INTR_VIDEOIO1_SAFETY_t unINTR_VIDEOIO1_SAFETY; /*!< 0x00000024 Interrupt Status register 1 */
  un_VIDEOSS_VIDEOIOCFG_INTR_VIDEOIO0_SAFETY_SET_t unINTR_VIDEOIO0_SAFETY_SET; /*!< 0x00000028 Interrupt set register 0 */
  un_VIDEOSS_VIDEOIOCFG_INTR_VIDEOIO1_SAFETY_SET_t unINTR_VIDEOIO1_SAFETY_SET; /*!< 0x0000002C Interrupt set register 1 */
  un_VIDEOSS_VIDEOIOCFG_INTR_VIDEOIO0_SAFETY_MASK_t unINTR_VIDEOIO0_SAFETY_MASK; /*!< 0x00000030 Interrupt mask register 0 */
  un_VIDEOSS_VIDEOIOCFG_INTR_VIDEOIO1_SAFETY_MASK_t unINTR_VIDEOIO1_SAFETY_MASK; /*!< 0x00000034 Interrupt mask register 1 */
  un_VIDEOSS_VIDEOIOCFG_INTR_VIDEOIO0_SAFETY_MASKED_t unINTR_VIDEOIO0_SAFETY_MASKED; /*!< 0x00000038 Interrupt masked register 0 */
  un_VIDEOSS_VIDEOIOCFG_INTR_VIDEOIO1_SAFETY_MASKED_t unINTR_VIDEOIO1_SAFETY_MASKED; /*!< 0x0000003C Interrupt masked register 1 */
  uint32_t                         au32Reserved[240];
} stc_VIDEOSS_VIDEOIO_SUBIO_VIDEOIOCFG_t;              /*!< Size = 1024 (0x400) */

/**
  * \brief Frame Dump Unit (VIDEOSS_VIDEOIO_SUBIO_FRAMEDUMP)
  */
typedef struct stc_VIDEOSS_VIDEOIO_SUBIO_FRAMEDUMP {
  un_VIDEOSS_FRAMEDUMP_CONTROL_t   unCONTROL;          /*!< 0x00000000 Control settings. */
  un_VIDEOSS_FRAMEDUMP_FRAMESIZE_t unFRAMESIZE;        /*!< 0x00000004 Dump window size. */
  un_VIDEOSS_FRAMEDUMP_INPUTSETUP_t unINPUTSETUP;      /*!< 0x00000008 Dump window position. */
  un_VIDEOSS_FRAMEDUMP_ENABLE_t    unENABLE;           /*!< 0x0000000C Enable register. */
  un_VIDEOSS_FRAMEDUMP_TRIGGER_t   unTRIGGER;          /*!< 0x00000010 Trigger bits. */
  un_VIDEOSS_FRAMEDUMP_STATUS_t    unSTATUS;           /*!< 0x00000014 Status register. */
  uint32_t                         au32Reserved[250];
} stc_VIDEOSS_VIDEOIO_SUBIO_FRAMEDUMP_t;               /*!< Size = 1024 (0x400) */

/**
  * \brief Frame Capture Unit (VIDEOSS_VIDEOIO_SUBIO_CAPENG0_FRAMECAP)
  */
typedef struct stc_VIDEOSS_VIDEOIO_SUBIO_CAPENG0_FRAMECAP {
  un_VIDEOSS_FRAMECAP_CAPTUREMODE_t unCAPTUREMODE;     /*!< 0x00000000 Capture mode configuration. FrameCap input mode
                                                                                configuration. */
  un_VIDEOSS_FRAMECAP_CTR_t        unCTR;              /*!< 0x00000004 FrameCap control register for starting the unit */
  un_VIDEOSS_FRAMECAP_SPR_t        unSPR;              /*!< 0x00000008 FrameCap sync signal polarity configuration. */
  un_VIDEOSS_FRAMECAP_MDR_t        unMDR;              /*!< 0x0000000C FrameCap control register for starting the mode
                                                                                detection */
  un_VIDEOSS_FRAMECAP_FDR_t        unFDR;              /*!< 0x00000010 Frame dimension (progressive frame and field 0). */
  un_VIDEOSS_FRAMECAP_FDR1_t       unFDR1;             /*!< 0x00000014 Frame dimension (field 1). */
  un_VIDEOSS_FRAMECAP_KDR_t        unKDR;              /*!< 0x00000018 FrameCap kick delay configuration register */
  un_VIDEOSS_FRAMECAP_SCR_t        unSCR;              /*!< 0x0000001C FrameCap Sync frame number configuration register */
  un_VIDEOSS_FRAMECAP_CSVR_t       unCSVR;             /*!< 0x00000020 Framecap control register for capture clock supervision */
  un_VIDEOSS_FRAMECAP_STSCLR_t     unSTSCLR;           /*!< 0x00000024 FrameCap status clear register. Clears the status bits
                                                                                of Sts register, Mdr_SizeChange and Csv_lost
                                                                                field. */
  un_VIDEOSS_FRAMECAP_STS_t        unSTS;              /*!< 0x00000028 FrameCap status register. Current status of the FrameCap
                                                                                module. */
  un_VIDEOSS_FRAMECAP_MDSTS0_t     unMDSTS0;           /*!< 0x0000002C FrameCap mode detection status register for the active
                                                                                part of the video frames.(bit locked when
                                                                                MdrCmrDone=1). */
  un_VIDEOSS_FRAMECAP_MDSTS1_t     unMDSTS1;           /*!< 0x00000030 FrameCap mode detection status register. The current
                                                                                (x,y) position of the capture stream (with
                                                                                respect to the output). */
  un_VIDEOSS_FRAMECAP_FRCNT_t      unFRCNT;            /*!< 0x00000034 FrameCap frame counter register indicating the
                                                                                corresponding clk_axi cycles. */
  un_VIDEOSS_FRAMECAP_FRLINECOUNT_t unFRLINECOUNT;     /*!< 0x00000038 FrameCap line counter register. */
  un_VIDEOSS_FRAMECAP_CMSTS1_t     unCMSTS1;           /*!< 0x0000003C clk_axi cycle number of a frame. (bit locked when
                                                                                MdrCmrDone=1). */
  un_VIDEOSS_FRAMECAP_CMSTS2_t     unCMSTS2;           /*!< 0x00000040 clk_axi cycle number of totwidth and actwidth of a
                                                                                frame. (bit locked when MdrCmrDone=1). */
  un_VIDEOSS_FRAMECAP_ITUSTS_t     unITUSTS;           /*!< 0x00000044 ITU error status register. */
  uint32_t                         au32Reserved[238];
} stc_VIDEOSS_VIDEOIO_SUBIO_CAPENG0_FRAMECAP_t;        /*!< Size = 1024 (0x400) */

/**
  * \brief Capture Engine (VIDEOSS_VIDEOIO_SUBIO_CAPENG0)
  */
typedef struct stc_VIDEOSS_VIDEOIO_SUBIO_CAPENG0 {
  uint32_t                         au32Reserved[256];
  stc_VIDEOSS_VIDEOIO_SUBIO_CAPENG0_FRAMECAP_t FRAMECAP; /*!< 0x00000400 Frame Capture Unit */
  uint32_t                         au32Reserved1[512];
} stc_VIDEOSS_VIDEOIO_SUBIO_CAPENG0_t;                 /*!< Size = 4096 (0x1000) */

/**
  * \brief Top-Level (VIDEOSS_VIDEOIO_SUBIO_COMPENG_COMPENGCFG)
  */
typedef struct stc_VIDEOSS_VIDEOIO_SUBIO_COMPENG_COMPENGCFG {
  un_VIDEOSS_COMPENGCFG_PALETTE_t  unPALETTE[1024];    /*!< 0x00000000 Shared Color Palette Memory. */
  un_VIDEOSS_COMPENGCFG_EXTDST0_SAFETYMASK_t unEXTDST0_SAFETYMASK; /*!< 0x00001000 Safety mask for extdst0 */
  un_VIDEOSS_COMPENGCFG_EXTDST4_SAFETYMASK_t unEXTDST4_SAFETYMASK; /*!< 0x00001004 Safety mask for extdst4 */
  un_VIDEOSS_COMPENGCFG_EXTDST1_SAFETYMASK_t unEXTDST1_SAFETYMASK; /*!< 0x00001008 Safety mask for extdst1 */
  un_VIDEOSS_COMPENGCFG_EXTDST5_SAFETYMASK_t unEXTDST5_SAFETYMASK; /*!< 0x0000100C Safety mask for extdst5 */
  un_VIDEOSS_COMPENGCFG_STORE4_SAFETYMASK_t unSTORE4_SAFETYMASK; /*!< 0x00001010 Safety mask for store4 */
  uint32_t                         au32Reserved[3];
  un_VIDEOSS_COMPENGCFG_CONSTFRAME0_STATUS_t unCONSTFRAME0_STATUS; /*!< 0x00001020 Status information for pixel engine configuration of
                                                                                constframe0 */
  uint32_t                         au32Reserved1[7];
  un_VIDEOSS_COMPENGCFG_EXTDST0_STATIC_t unEXTDST0_STATIC; /*!< 0x00001040 Static pixel engine configuration for extdst0 */
  un_VIDEOSS_COMPENGCFG_EXTDST0_DYNAMIC_t unEXTDST0_DYNAMIC; /*!< 0x00001044 Dynamic pixel engine configuration for extdst0 */
  un_VIDEOSS_COMPENGCFG_EXTDST0_REQUEST_t unEXTDST0_REQUEST; /*!< 0x00001048 ShadowLoadRequest register for endpoint extdst0 */
  un_VIDEOSS_COMPENGCFG_EXTDST0_TRIGGER_t unEXTDST0_TRIGGER; /*!< 0x0000104C Trigger bits for pixel engine configuration of extdst0 */
  un_VIDEOSS_COMPENGCFG_EXTDST0_STATUS_t unEXTDST0_STATUS; /*!< 0x00001050 Status information for pixel engine configuration of
                                                                                extdst0 */
  uint32_t                         au32Reserved2[11];
  un_VIDEOSS_COMPENGCFG_CONSTFRAME4_STATUS_t unCONSTFRAME4_STATUS; /*!< 0x00001080 Status information for pixel engine configuration of
                                                                                constframe4 */
  uint32_t                         au32Reserved3[7];
  un_VIDEOSS_COMPENGCFG_EXTDST4_STATIC_t unEXTDST4_STATIC; /*!< 0x000010A0 Static pixel engine configuration for extdst4 */
  un_VIDEOSS_COMPENGCFG_EXTDST4_DYNAMIC_t unEXTDST4_DYNAMIC; /*!< 0x000010A4 Dynamic pixel engine configuration for extdst4 */
  un_VIDEOSS_COMPENGCFG_EXTDST4_REQUEST_t unEXTDST4_REQUEST; /*!< 0x000010A8 ShadowLoadRequest register for endpoint extdst4 */
  un_VIDEOSS_COMPENGCFG_EXTDST4_TRIGGER_t unEXTDST4_TRIGGER; /*!< 0x000010AC Trigger bits for pixel engine configuration of extdst4 */
  un_VIDEOSS_COMPENGCFG_EXTDST4_STATUS_t unEXTDST4_STATUS; /*!< 0x000010B0 Status information for pixel engine configuration of
                                                                                extdst4 */
  uint32_t                         au32Reserved4[3];
  un_VIDEOSS_COMPENGCFG_CONSTFRAME1_STATUS_t unCONSTFRAME1_STATUS; /*!< 0x000010C0 Status information for pixel engine configuration of
                                                                                constframe1 */
  uint32_t                         au32Reserved5[7];
  un_VIDEOSS_COMPENGCFG_EXTDST1_STATIC_t unEXTDST1_STATIC; /*!< 0x000010E0 Static pixel engine configuration for extdst1 */
  un_VIDEOSS_COMPENGCFG_EXTDST1_DYNAMIC_t unEXTDST1_DYNAMIC; /*!< 0x000010E4 Dynamic pixel engine configuration for extdst1 */
  un_VIDEOSS_COMPENGCFG_EXTDST1_REQUEST_t unEXTDST1_REQUEST; /*!< 0x000010E8 ShadowLoadRequest register for endpoint extdst1 */
  un_VIDEOSS_COMPENGCFG_EXTDST1_TRIGGER_t unEXTDST1_TRIGGER; /*!< 0x000010EC Trigger bits for pixel engine configuration of extdst1 */
  un_VIDEOSS_COMPENGCFG_EXTDST1_STATUS_t unEXTDST1_STATUS; /*!< 0x000010F0 Status information for pixel engine configuration of
                                                                                extdst1 */
  uint32_t                         au32Reserved6[3];
  un_VIDEOSS_COMPENGCFG_CONSTFRAME5_STATUS_t unCONSTFRAME5_STATUS; /*!< 0x00001100 Status information for pixel engine configuration of
                                                                                constframe5 */
  uint32_t                         au32Reserved7[7];
  un_VIDEOSS_COMPENGCFG_EXTDST5_STATIC_t unEXTDST5_STATIC; /*!< 0x00001120 Static pixel engine configuration for extdst5 */
  un_VIDEOSS_COMPENGCFG_EXTDST5_DYNAMIC_t unEXTDST5_DYNAMIC; /*!< 0x00001124 Dynamic pixel engine configuration for extdst5 */
  un_VIDEOSS_COMPENGCFG_EXTDST5_REQUEST_t unEXTDST5_REQUEST; /*!< 0x00001128 ShadowLoadRequest register for endpoint extdst5 */
  un_VIDEOSS_COMPENGCFG_EXTDST5_TRIGGER_t unEXTDST5_TRIGGER; /*!< 0x0000112C Trigger bits for pixel engine configuration of extdst5 */
  un_VIDEOSS_COMPENGCFG_EXTDST5_STATUS_t unEXTDST5_STATUS; /*!< 0x00001130 Status information for pixel engine configuration of
                                                                                extdst5 */
  uint32_t                         au32Reserved8[3];
  un_VIDEOSS_COMPENGCFG_EXTSRC4_STATUS_t unEXTSRC4_STATUS; /*!< 0x00001140 Status information for pixel engine configuration of
                                                                                extsrc4 */
  uint32_t                         au32Reserved9[7];
  un_VIDEOSS_COMPENGCFG_STORE4_STATIC_t unSTORE4_STATIC; /*!< 0x00001160 Static pixel engine configuration for store4 */
  un_VIDEOSS_COMPENGCFG_STORE4_DYNAMIC_t unSTORE4_DYNAMIC; /*!< 0x00001164 Dynamic pixel engine configuration for store4 */
  un_VIDEOSS_COMPENGCFG_STORE4_REQUEST_t unSTORE4_REQUEST; /*!< 0x00001168 ShadowLoadRequest register for endpoint store4 */
  un_VIDEOSS_COMPENGCFG_STORE4_TRIGGER_t unSTORE4_TRIGGER; /*!< 0x0000116C Trigger bits for pixel engine configuration of store4 */
  un_VIDEOSS_COMPENGCFG_STORE4_STATUS_t unSTORE4_STATUS; /*!< 0x00001170 Status information for pixel engine configuration of
                                                                                store4 */
  uint32_t                         au32Reserved10[3];
  un_VIDEOSS_COMPENGCFG_FETCHLAYER0_STATUS_t unFETCHLAYER0_STATUS; /*!< 0x00001180 Status information for pixel engine configuration of
                                                                                fetchlayer0 */
  uint32_t                         au32Reserved11[7];
  un_VIDEOSS_COMPENGCFG_FETCHDECODE4_DYNAMIC_t unFETCHDECODE4_DYNAMIC; /*!< 0x000011A0 Dynamic pixel engine configuration for fetchdecode4 */
  un_VIDEOSS_COMPENGCFG_FETCHDECODE4_STATUS_t unFETCHDECODE4_STATUS; /*!< 0x000011A4 Status information for pixel engine configuration of
                                                                                fetchdecode4 */
  uint32_t                         au32Reserved12[6];
  un_VIDEOSS_COMPENGCFG_FETCHECO4_STATUS_t unFETCHECO4_STATUS; /*!< 0x000011C0 Status information for pixel engine configuration of
                                                                                fetcheco4 */
  uint32_t                         au32Reserved13[15];
  un_VIDEOSS_COMPENGCFG_FETCHWARP1_DYNAMIC_t unFETCHWARP1_DYNAMIC; /*!< 0x00001200 Dynamic pixel engine configuration for fetchwarp1 */
  un_VIDEOSS_COMPENGCFG_FETCHWARP1_STATUS_t unFETCHWARP1_STATUS; /*!< 0x00001204 Status information for pixel engine configuration of
                                                                                fetchwarp1 */
  un_VIDEOSS_COMPENGCFG_FETCHECO1_STATUS_t unFETCHECO1_STATUS; /*!< 0x00001208 Status information for pixel engine configuration of
                                                                                fetcheco1 */
  uint32_t                         au32Reserved14[5];
  un_VIDEOSS_COMPENGCFG_FETCHLAYER1_STATUS_t unFETCHLAYER1_STATUS; /*!< 0x00001220 Status information for pixel engine configuration of
                                                                                fetchlayer1 */
  uint32_t                         au32Reserved15[7];
  un_VIDEOSS_COMPENGCFG_FETCHDECODE0_DYNAMIC_t unFETCHDECODE0_DYNAMIC; /*!< 0x00001240 Dynamic pixel engine configuration for fetchdecode0 */
  un_VIDEOSS_COMPENGCFG_FETCHDECODE0_STATUS_t unFETCHDECODE0_STATUS; /*!< 0x00001244 Status information for pixel engine configuration of
                                                                                fetchdecode0 */
  uint32_t                         au32Reserved16[6];
  un_VIDEOSS_COMPENGCFG_GAMMACOR4_DYNAMIC_t unGAMMACOR4_DYNAMIC; /*!< 0x00001260 Dynamic pixel engine configuration for gammacor4 */
  un_VIDEOSS_COMPENGCFG_GAMMACOR4_STATUS_t unGAMMACOR4_STATUS; /*!< 0x00001264 Status information for pixel engine configuration of
                                                                                gammacor4 */
  uint32_t                         au32Reserved17[2];
  un_VIDEOSS_COMPENGCFG_MATRIX4_DYNAMIC_t unMATRIX4_DYNAMIC; /*!< 0x00001270 Dynamic pixel engine configuration for matrix4 */
  un_VIDEOSS_COMPENGCFG_MATRIX4_STATUS_t unMATRIX4_STATUS; /*!< 0x00001274 Status information for pixel engine configuration of
                                                                                matrix4 */
  uint32_t                         au32Reserved18[2];
  un_VIDEOSS_COMPENGCFG_GPSCALER4_DYNAMIC_t unGPSCALER4_DYNAMIC; /*!< 0x00001280 Dynamic pixel engine configuration for gpscaler4 */
  un_VIDEOSS_COMPENGCFG_GPSCALER4_STATUS_t unGPSCALER4_STATUS; /*!< 0x00001284 Status information for pixel engine configuration of
                                                                                gpscaler4 */
  uint32_t                         au32Reserved19[2];
  un_VIDEOSS_COMPENGCFG_HISTOGRAM4_DYNAMIC_t unHISTOGRAM4_DYNAMIC; /*!< 0x00001290 Dynamic pixel engine configuration for histogram4 */
  un_VIDEOSS_COMPENGCFG_HISTOGRAM4_STATUS_t unHISTOGRAM4_STATUS; /*!< 0x00001294 Status information for pixel engine configuration of
                                                                                histogram4 */
  uint32_t                         au32Reserved20[2];
  un_VIDEOSS_COMPENGCFG_LAYERBLEND1_DYNAMIC_t unLAYERBLEND1_DYNAMIC; /*!< 0x000012A0 Dynamic pixel engine configuration for layerblend1 */
  un_VIDEOSS_COMPENGCFG_LAYERBLEND1_STATUS_t unLAYERBLEND1_STATUS; /*!< 0x000012A4 Status information for pixel engine configuration of
                                                                                layerblend1 */
  uint32_t                         au32Reserved21[6];
  un_VIDEOSS_COMPENGCFG_LAYERBLEND2_DYNAMIC_t unLAYERBLEND2_DYNAMIC; /*!< 0x000012C0 Dynamic pixel engine configuration for layerblend2 */
  un_VIDEOSS_COMPENGCFG_LAYERBLEND2_STATUS_t unLAYERBLEND2_STATUS; /*!< 0x000012C4 Status information for pixel engine configuration of
                                                                                layerblend2 */
  uint32_t                         au32Reserved22[6];
  un_VIDEOSS_COMPENGCFG_LAYERBLEND3_DYNAMIC_t unLAYERBLEND3_DYNAMIC; /*!< 0x000012E0 Dynamic pixel engine configuration for layerblend3 */
  un_VIDEOSS_COMPENGCFG_LAYERBLEND3_STATUS_t unLAYERBLEND3_STATUS; /*!< 0x000012E4 Status information for pixel engine configuration of
                                                                                layerblend3 */
  uint32_t                         au32Reserved23[6];
  un_VIDEOSS_COMPENGCFG_LAYERBLEND4_DYNAMIC_t unLAYERBLEND4_DYNAMIC; /*!< 0x00001300 Dynamic pixel engine configuration for layerblend4 */
  un_VIDEOSS_COMPENGCFG_LAYERBLEND4_STATUS_t unLAYERBLEND4_STATUS; /*!< 0x00001304 Status information for pixel engine configuration of
                                                                                layerblend4 */
  uint32_t                         au32Reserved24[6];
  un_VIDEOSS_COMPENGCFG_LAYERBLEND5_DYNAMIC_t unLAYERBLEND5_DYNAMIC; /*!< 0x00001320 Dynamic pixel engine configuration for layerblend5 */
  un_VIDEOSS_COMPENGCFG_LAYERBLEND5_STATUS_t unLAYERBLEND5_STATUS; /*!< 0x00001324 Status information for pixel engine configuration of
                                                                                layerblend5 */
  uint32_t                         au32Reserved25[6];
  un_VIDEOSS_COMPENGCFG_EXTSRC8_STATUS_t unEXTSRC8_STATUS; /*!< 0x00001340 Status information for pixel engine configuration of
                                                                                extsrc8 */
  uint32_t                         au32Reserved26[815];
} stc_VIDEOSS_VIDEOIO_SUBIO_COMPENG_COMPENGCFG_t;        /*!< Size = 8192 (0x2000) */

/**
  * \brief ConstFrame #0 (Content) (VIDEOSS_VIDEOIO_SUBIO_COMPENG_CONSTFRAME0)
  */
typedef struct stc_VIDEOSS_VIDEOIO_SUBIO_COMPENG_CONSTFRAME0 {
  un_VIDEOSS_CONSTFRAME0_STATICCONTROL_t unSTATICCONTROL; /*!< 0x00000000 ConstFrame unit static control register */
  un_VIDEOSS_CONSTFRAME0_FRAMEDIMENSIONS_t unFRAMEDIMENSIONS; /*!< 0x00000004 Output frame dimensions. */
  un_VIDEOSS_CONSTFRAME0_CONSTANTCOLOR_t unCONSTANTCOLOR; /*!< 0x00000008 Color of output frame. */
  un_VIDEOSS_CONSTFRAME0_CONTROLTRIGGER_t unCONTROLTRIGGER; /*!< 0x0000000C ConstFrame unit trigger register */
  un_VIDEOSS_CONSTFRAME0_START_t   unSTART;            /*!< 0x00000010 ConstFrame unit start register */
  uint32_t                         au32Reserved[251];
} stc_VIDEOSS_VIDEOIO_SUBIO_COMPENG_CONSTFRAME0_t;        /*!< Size = 1024 (0x400) */

/**
  * \brief ExtDst #0 (Content) (VIDEOSS_VIDEOIO_SUBIO_COMPENG_EXTDST0)
  */
typedef struct stc_VIDEOSS_VIDEOIO_SUBIO_COMPENG_EXTDST0 {
  un_VIDEOSS_EXTDST0_STATICCONTROL_t unSTATICCONTROL;  /*!< 0x00000000 External Destination static control register */
  un_VIDEOSS_EXTDST0_CONTROL_t     unCONTROL;          /*!< 0x00000004 External Destination shadowed control register */
  un_VIDEOSS_EXTDST0_SOFTWAREKICK_t unSOFTWAREKICK;    /*!< 0x00000008 External Destination software kick */
  un_VIDEOSS_EXTDST0_STATUS_t      unSTATUS;           /*!< 0x0000000C External Destination Unit current status */
  un_VIDEOSS_EXTDST0_CONTROLWORD_t unCONTROLWORD;      /*!< 0x00000010 Value of last received control word */
  un_VIDEOSS_EXTDST0_CURPIXELCNT_t unCURPIXELCNT;      /*!< 0x00000014 pixel count of currently running frame */
  un_VIDEOSS_EXTDST0_LASTPIXELCNT_t unLASTPIXELCNT;    /*!< 0x00000018 pixel count between last two control words */
  un_VIDEOSS_EXTDST0_PERFCOUNTER_t unPERFCOUNTER;      /*!< 0x0000001C Performance counter result */
  uint32_t                         au32Reserved[248];
} stc_VIDEOSS_VIDEOIO_SUBIO_COMPENG_EXTDST0_t;         /*!< Size = 1024 (0x400) */

/**
  * \brief ConstFrame #4 (Safety) (VIDEOSS_VIDEOIO_SUBIO_COMPENG_CONSTFRAME4)
  */
typedef struct stc_VIDEOSS_VIDEOIO_SUBIO_COMPENG_CONSTFRAME4 {
  un_VIDEOSS_CONSTFRAME4_STATICCONTROL_t unSTATICCONTROL; /*!< 0x00000000 ConstFrame unit static control register */
  un_VIDEOSS_CONSTFRAME4_FRAMEDIMENSIONS_t unFRAMEDIMENSIONS; /*!< 0x00000004 Output frame dimensions. */
  un_VIDEOSS_CONSTFRAME4_CONSTANTCOLOR_t unCONSTANTCOLOR; /*!< 0x00000008 Color of output frame. */
  un_VIDEOSS_CONSTFRAME4_CONTROLTRIGGER_t unCONTROLTRIGGER; /*!< 0x0000000C ConstFrame unit trigger register */
  un_VIDEOSS_CONSTFRAME4_START_t   unSTART;            /*!< 0x00000010 ConstFrame unit start register */
  uint32_t                         au32Reserved[251];
} stc_VIDEOSS_VIDEOIO_SUBIO_COMPENG_CONSTFRAME4_t;        /*!< Size = 1024 (0x400) */

/**
  * \brief ExtDst #4 (Safety) (VIDEOSS_VIDEOIO_SUBIO_COMPENG_EXTDST4)
  */
typedef struct stc_VIDEOSS_VIDEOIO_SUBIO_COMPENG_EXTDST4 {
  un_VIDEOSS_EXTDST4_STATICCONTROL_t unSTATICCONTROL;  /*!< 0x00000000 External Destination static control register */
  un_VIDEOSS_EXTDST4_CONTROL_t     unCONTROL;          /*!< 0x00000004 External Destination shadowed control register */
  un_VIDEOSS_EXTDST4_SOFTWAREKICK_t unSOFTWAREKICK;    /*!< 0x00000008 External Destination software kick */
  un_VIDEOSS_EXTDST4_STATUS_t      unSTATUS;           /*!< 0x0000000C External Destination Unit current status */
  un_VIDEOSS_EXTDST4_CONTROLWORD_t unCONTROLWORD;      /*!< 0x00000010 Value of last received control word */
  un_VIDEOSS_EXTDST4_CURPIXELCNT_t unCURPIXELCNT;      /*!< 0x00000014 pixel count of currently running frame */
  un_VIDEOSS_EXTDST4_LASTPIXELCNT_t unLASTPIXELCNT;    /*!< 0x00000018 pixel count between last two control words */
  un_VIDEOSS_EXTDST4_PERFCOUNTER_t unPERFCOUNTER;      /*!< 0x0000001C Performance counter result */
  uint32_t                         au32Reserved[248];
} stc_VIDEOSS_VIDEOIO_SUBIO_COMPENG_EXTDST4_t;         /*!< Size = 1024 (0x400) */

/**
  * \brief ConstFrame #1 (Content) (VIDEOSS_VIDEOIO_SUBIO_COMPENG_CONSTFRAME1)
  */
typedef struct stc_VIDEOSS_VIDEOIO_SUBIO_COMPENG_CONSTFRAME1 {
  un_VIDEOSS_CONSTFRAME1_STATICCONTROL_t unSTATICCONTROL; /*!< 0x00000000 ConstFrame unit static control register */
  un_VIDEOSS_CONSTFRAME1_FRAMEDIMENSIONS_t unFRAMEDIMENSIONS; /*!< 0x00000004 Output frame dimensions. */
  un_VIDEOSS_CONSTFRAME1_CONSTANTCOLOR_t unCONSTANTCOLOR; /*!< 0x00000008 Color of output frame. */
  un_VIDEOSS_CONSTFRAME1_CONTROLTRIGGER_t unCONTROLTRIGGER; /*!< 0x0000000C ConstFrame unit trigger register */
  un_VIDEOSS_CONSTFRAME1_START_t   unSTART;            /*!< 0x00000010 ConstFrame unit start register */
  uint32_t                         au32Reserved[251];
} stc_VIDEOSS_VIDEOIO_SUBIO_COMPENG_CONSTFRAME1_t;        /*!< Size = 1024 (0x400) */

/**
  * \brief ExtDst #1 (Content) (VIDEOSS_VIDEOIO_SUBIO_COMPENG_EXTDST1)
  */
typedef struct stc_VIDEOSS_VIDEOIO_SUBIO_COMPENG_EXTDST1 {
  un_VIDEOSS_EXTDST1_STATICCONTROL_t unSTATICCONTROL;  /*!< 0x00000000 External Destination static control register */
  un_VIDEOSS_EXTDST1_CONTROL_t     unCONTROL;          /*!< 0x00000004 External Destination shadowed control register */
  un_VIDEOSS_EXTDST1_SOFTWAREKICK_t unSOFTWAREKICK;    /*!< 0x00000008 External Destination software kick */
  un_VIDEOSS_EXTDST1_STATUS_t      unSTATUS;           /*!< 0x0000000C External Destination Unit current status */
  un_VIDEOSS_EXTDST1_CONTROLWORD_t unCONTROLWORD;      /*!< 0x00000010 Value of last received control word */
  un_VIDEOSS_EXTDST1_CURPIXELCNT_t unCURPIXELCNT;      /*!< 0x00000014 pixel count of currently running frame */
  un_VIDEOSS_EXTDST1_LASTPIXELCNT_t unLASTPIXELCNT;    /*!< 0x00000018 pixel count between last two control words */
  un_VIDEOSS_EXTDST1_PERFCOUNTER_t unPERFCOUNTER;      /*!< 0x0000001C Performance counter result */
  uint32_t                         au32Reserved[248];
} stc_VIDEOSS_VIDEOIO_SUBIO_COMPENG_EXTDST1_t;         /*!< Size = 1024 (0x400) */

/**
  * \brief ConstFrame #5 (Safety) (VIDEOSS_VIDEOIO_SUBIO_COMPENG_CONSTFRAME5)
  */
typedef struct stc_VIDEOSS_VIDEOIO_SUBIO_COMPENG_CONSTFRAME5 {
  un_VIDEOSS_CONSTFRAME5_STATICCONTROL_t unSTATICCONTROL; /*!< 0x00000000 ConstFrame unit static control register */
  un_VIDEOSS_CONSTFRAME5_FRAMEDIMENSIONS_t unFRAMEDIMENSIONS; /*!< 0x00000004 Output frame dimensions. */
  un_VIDEOSS_CONSTFRAME5_CONSTANTCOLOR_t unCONSTANTCOLOR; /*!< 0x00000008 Color of output frame. */
  un_VIDEOSS_CONSTFRAME5_CONTROLTRIGGER_t unCONTROLTRIGGER; /*!< 0x0000000C ConstFrame unit trigger register */
  un_VIDEOSS_CONSTFRAME5_START_t   unSTART;            /*!< 0x00000010 ConstFrame unit start register */
  uint32_t                         au32Reserved[251];
} stc_VIDEOSS_VIDEOIO_SUBIO_COMPENG_CONSTFRAME5_t;        /*!< Size = 1024 (0x400) */

/**
  * \brief ExtDst #5 (Safety) (VIDEOSS_VIDEOIO_SUBIO_COMPENG_EXTDST5)
  */
typedef struct stc_VIDEOSS_VIDEOIO_SUBIO_COMPENG_EXTDST5 {
  un_VIDEOSS_EXTDST5_STATICCONTROL_t unSTATICCONTROL;  /*!< 0x00000000 External Destination static control register */
  un_VIDEOSS_EXTDST5_CONTROL_t     unCONTROL;          /*!< 0x00000004 External Destination shadowed control register */
  un_VIDEOSS_EXTDST5_SOFTWAREKICK_t unSOFTWAREKICK;    /*!< 0x00000008 External Destination software kick */
  un_VIDEOSS_EXTDST5_STATUS_t      unSTATUS;           /*!< 0x0000000C External Destination Unit current status */
  un_VIDEOSS_EXTDST5_CONTROLWORD_t unCONTROLWORD;      /*!< 0x00000010 Value of last received control word */
  un_VIDEOSS_EXTDST5_CURPIXELCNT_t unCURPIXELCNT;      /*!< 0x00000014 pixel count of currently running frame */
  un_VIDEOSS_EXTDST5_LASTPIXELCNT_t unLASTPIXELCNT;    /*!< 0x00000018 pixel count between last two control words */
  un_VIDEOSS_EXTDST5_PERFCOUNTER_t unPERFCOUNTER;      /*!< 0x0000001C Performance counter result */
  uint32_t                         au32Reserved[248];
} stc_VIDEOSS_VIDEOIO_SUBIO_COMPENG_EXTDST5_t;         /*!< Size = 1024 (0x400) */

/**
  * \brief ExtSrc #0 (Capture) (VIDEOSS_VIDEOIO_SUBIO_COMPENG_EXTSRC4)
  */
typedef struct stc_VIDEOSS_VIDEOIO_SUBIO_COMPENG_EXTSRC4 {
  un_VIDEOSS_EXTSRC4_STATICCONTROL_t unSTATICCONTROL;  /*!< 0x00000000 ExtSrc static control register */
  un_VIDEOSS_EXTSRC4_CLIPWINDOWOFFSET_t unCLIPWINDOWOFFSET; /*!< 0x00000004 Clip window offset, to generate a clipping of the frame.
                                                                                It has to be within the input frame. */
  un_VIDEOSS_EXTSRC4_CLIPWINDOWDIMENSION_t unCLIPWINDOWDIMENSION; /*!< 0x00000008 Define the clip window dimension. If the clip window
                                                                                feature is enabled this dimension is used for
                                                                                the new frame dimension. Note that the clip
                                                                                window has to be smaller or equal to the
                                                                                original frame dimensions. The new frame has to
                                                                                be within the active area of the original frame. */
  un_VIDEOSS_EXTSRC4_COLORCOMPONENTBITS_t unCOLORCOMPONENTBITS; /*!< 0x0000000C Color component size of raw input data. Please note that
                                                                                the width must be equal or lower than the output
                                                                                width. */
  un_VIDEOSS_EXTSRC4_COLORCOMPONENTSHIFT_t unCOLORCOMPONENTSHIFT; /*!< 0x00000010 Color component offset of raw input data. */
  un_VIDEOSS_EXTSRC4_CONSTANTCOLOR_t unCONSTANTCOLOR;  /*!< 0x00000014 Constant color register */
  un_VIDEOSS_EXTSRC4_CONTROL_t     unCONTROL;          /*!< 0x00000018 Common control settings. */
  un_VIDEOSS_EXTSRC4_CONTROLTRIGGER_t unCONTROLTRIGGER; /*!< 0x0000001C ExtSrc unit trigger token generation */
  un_VIDEOSS_EXTSRC4_START_t       unSTART;            /*!< 0x00000020 ExtSrc unit start register */
  uint32_t                         au32Reserved[247];
} stc_VIDEOSS_VIDEOIO_SUBIO_COMPENG_EXTSRC4_t;         /*!< Size = 1024 (0x400) */

/**
  * \brief Store #0 (Capture) (VIDEOSS_VIDEOIO_SUBIO_COMPENG_STORE4)
  */
typedef struct stc_VIDEOSS_VIDEOIO_SUBIO_COMPENG_STORE4 {
  un_VIDEOSS_STORE4_STATICCONTROL_t unSTATICCONTROL;   /*!< 0x00000000 Store unit static control register. */
  un_VIDEOSS_STORE4_BURSTBUFFERMANAGEMENT_t unBURSTBUFFERMANAGEMENT; /*!< 0x00000004 Burst Buffer setup register. */
  un_VIDEOSS_STORE4_RINGBUFSTARTADDR_t unRINGBUFSTARTADDR; /*!< 0x00000008 Ring buffer setup for destination. */
  un_VIDEOSS_STORE4_RINGBUFWRAPADDR_t unRINGBUFWRAPADDR; /*!< 0x0000000C Ring buffer setup for destination. */
  un_VIDEOSS_STORE4_BASEADDRESS_t  unBASEADDRESS;      /*!< 0x00000010 Destination buffer base address. */
  un_VIDEOSS_STORE4_DESTINATIONBUFFERATTRIBUTES_t unDESTINATIONBUFFERATTRIBUTES; /*!< 0x00000014 Destination buffer attributes. */
  un_VIDEOSS_STORE4_DESTINATIONBUFFERDIMENSION_t unDESTINATIONBUFFERDIMENSION; /*!< 0x00000018 Destination buffer dimension. */
  un_VIDEOSS_STORE4_FRAMEOFFSET_t  unFRAMEOFFSET;      /*!< 0x0000001C Offset between destination frame and buffer. */
  un_VIDEOSS_STORE4_COLORCOMPONENTBITS_t unCOLORCOMPONENTBITS; /*!< 0x00000020 Color component size of destination buffer */
  un_VIDEOSS_STORE4_COLORCOMPONENTSHIFT_t unCOLORCOMPONENTSHIFT; /*!< 0x00000024 Color component offset of destination buffer. */
  un_VIDEOSS_STORE4_CONTROL_t      unCONTROL;          /*!< 0x00000028 Store unit dynamic control register */
  un_VIDEOSS_STORE4_ENCODECONTROL_t unENCODECONTROL;   /*!< 0x0000002C Control options for RLAD compression. */
  un_VIDEOSS_STORE4_DESTINATIONBUFFERLENGTH_t unDESTINATIONBUFFERLENGTH; /*!< 0x00000030 Destination buffer length for compressed data. */
  un_VIDEOSS_STORE4_START_t        unSTART;            /*!< 0x00000034 Store unit start register */
  un_VIDEOSS_STORE4_ENCODERSTATUS_t unENCODERSTATUS;   /*!< 0x00000038 Status information of the RLAD encoder. */
  un_VIDEOSS_STORE4_WRITEADDRESS_t unWRITEADDRESS;     /*!< 0x0000003C Ring buffer synchronization. */
  un_VIDEOSS_STORE4_FRAMEPROPERTIES_t unFRAMEPROPERTIES; /*!< 0x00000040 Ring buffer synchronization. */
  un_VIDEOSS_STORE4_BURSTBUFFERPROPERTIES_t unBURSTBUFFERPROPERTIES; /*!< 0x00000044 Burst Buffer Property register */
  un_VIDEOSS_STORE4_LASTCONTROLWORD_t unLASTCONTROLWORD; /*!< 0x00000048 Shows the last control word received */
  un_VIDEOSS_STORE4_PERFCOUNTER_t  unPERFCOUNTER;      /*!< 0x0000004C Performance counter result */
  uint32_t                         au32Reserved[236];
} stc_VIDEOSS_VIDEOIO_SUBIO_COMPENG_STORE4_t;          /*!< Size = 1024 (0x400) */

/**
  * \brief FetchLayer #0 (Display) (VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0)
  */
typedef struct stc_VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0 {
  un_VIDEOSS_FETCHLAYER0_STATICCONTROL_t unSTATICCONTROL; /*!< 0x00000000 Common static control options. */
  un_VIDEOSS_FETCHLAYER0_BURSTBUFFERMANAGEMENT_t unBURSTBUFFERMANAGEMENT; /*!< 0x00000004 AXI interface buffer management register */
  un_VIDEOSS_FETCHLAYER0_BASEADDRESS0_t unBASEADDRESS0; /*!< 0x00000008 Source buffer base address of layer 0. */
  un_VIDEOSS_FETCHLAYER0_SOURCEBUFFERATTRIBUTES0_t unSOURCEBUFFERATTRIBUTES0; /*!< 0x0000000C Source buffer attributes for layer 0. */
  un_VIDEOSS_FETCHLAYER0_SOURCEBUFFERDIMENSION0_t unSOURCEBUFFERDIMENSION0; /*!< 0x00000010 Source buffer dimension of layer 0. */
  un_VIDEOSS_FETCHLAYER0_COLORCOMPONENTBITS0_t unCOLORCOMPONENTBITS0; /*!< 0x00000014 Size of color components for RGB, YUV and index formats
                                                                                (layer 0). */
  un_VIDEOSS_FETCHLAYER0_COLORCOMPONENTSHIFT0_t unCOLORCOMPONENTSHIFT0; /*!< 0x00000018 Bit position of color components for RGB, YUV and index
                                                                                formats (layer 0). */
  un_VIDEOSS_FETCHLAYER0_LAYEROFFSET0_t unLAYEROFFSET0; /*!< 0x0000001C Position of layer 0 within the destination frame. */
  un_VIDEOSS_FETCHLAYER0_CLIPWINDOWOFFSET0_t unCLIPWINDOWOFFSET0; /*!< 0x00000020 Clip window position for layer 0. */
  un_VIDEOSS_FETCHLAYER0_CLIPWINDOWDIMENSIONS0_t unCLIPWINDOWDIMENSIONS0; /*!< 0x00000024 Clip window size for layer 0. */
  un_VIDEOSS_FETCHLAYER0_CONSTANTCOLOR0_t unCONSTANTCOLOR0; /*!< 0x00000028 Constant color for layer 0. */
  un_VIDEOSS_FETCHLAYER0_LAYERPROPERTY0_t unLAYERPROPERTY0; /*!< 0x0000002C Common properties of layer 0. */
  un_VIDEOSS_FETCHLAYER0_BASEADDRESS1_t unBASEADDRESS1; /*!< 0x00000030 Source buffer base address of layer 1. */
  un_VIDEOSS_FETCHLAYER0_SOURCEBUFFERATTRIBUTES1_t unSOURCEBUFFERATTRIBUTES1; /*!< 0x00000034 Source buffer attributes for layer 1. */
  un_VIDEOSS_FETCHLAYER0_SOURCEBUFFERDIMENSION1_t unSOURCEBUFFERDIMENSION1; /*!< 0x00000038 Source buffer dimensions of layer 1, */
  un_VIDEOSS_FETCHLAYER0_COLORCOMPONENTBITS1_t unCOLORCOMPONENTBITS1; /*!< 0x0000003C Size of color components for RGB, YUV and index formats
                                                                                (layer 1). */
  un_VIDEOSS_FETCHLAYER0_COLORCOMPONENTSHIFT1_t unCOLORCOMPONENTSHIFT1; /*!< 0x00000040 Bit position of color components for RGB, YUV and index
                                                                                formats (layer 1). */
  un_VIDEOSS_FETCHLAYER0_LAYEROFFSET1_t unLAYEROFFSET1; /*!< 0x00000044 Position of layer 1 within the destination frame. */
  un_VIDEOSS_FETCHLAYER0_CLIPWINDOWOFFSET1_t unCLIPWINDOWOFFSET1; /*!< 0x00000048 Clip window position for layer 1. */
  un_VIDEOSS_FETCHLAYER0_CLIPWINDOWDIMENSIONS1_t unCLIPWINDOWDIMENSIONS1; /*!< 0x0000004C Clip window size for layer 1. */
  un_VIDEOSS_FETCHLAYER0_CONSTANTCOLOR1_t unCONSTANTCOLOR1; /*!< 0x00000050 Constant color for layer 1. */
  un_VIDEOSS_FETCHLAYER0_LAYERPROPERTY1_t unLAYERPROPERTY1; /*!< 0x00000054 Common properties of layer 1. */
  un_VIDEOSS_FETCHLAYER0_BASEADDRESS2_t unBASEADDRESS2; /*!< 0x00000058 Source buffer base address of layer 2. */
  un_VIDEOSS_FETCHLAYER0_SOURCEBUFFERATTRIBUTES2_t unSOURCEBUFFERATTRIBUTES2; /*!< 0x0000005C Source buffer attributes for layer 2. */
  un_VIDEOSS_FETCHLAYER0_SOURCEBUFFERDIMENSION2_t unSOURCEBUFFERDIMENSION2; /*!< 0x00000060 Source buffer dimension of layer 2. */
  un_VIDEOSS_FETCHLAYER0_COLORCOMPONENTBITS2_t unCOLORCOMPONENTBITS2; /*!< 0x00000064 Size of color components for RGB, YUV and index formats
                                                                                (layer 2). */
  un_VIDEOSS_FETCHLAYER0_COLORCOMPONENTSHIFT2_t unCOLORCOMPONENTSHIFT2; /*!< 0x00000068 Bit position of color components for RGB, YUV and index
                                                                                formats (layer 2). */
  un_VIDEOSS_FETCHLAYER0_LAYEROFFSET2_t unLAYEROFFSET2; /*!< 0x0000006C Position of layer 2 within the destination frame. */
  un_VIDEOSS_FETCHLAYER0_CLIPWINDOWOFFSET2_t unCLIPWINDOWOFFSET2; /*!< 0x00000070 Clip window position for layer 2. */
  un_VIDEOSS_FETCHLAYER0_CLIPWINDOWDIMENSIONS2_t unCLIPWINDOWDIMENSIONS2; /*!< 0x00000074 Clip window size for layer 2. */
  un_VIDEOSS_FETCHLAYER0_CONSTANTCOLOR2_t unCONSTANTCOLOR2; /*!< 0x00000078 Constant color for layer 2. */
  un_VIDEOSS_FETCHLAYER0_LAYERPROPERTY2_t unLAYERPROPERTY2; /*!< 0x0000007C Common properties of layer 2. */
  un_VIDEOSS_FETCHLAYER0_BASEADDRESS3_t unBASEADDRESS3; /*!< 0x00000080 Source buffer base address of layer 3. */
  un_VIDEOSS_FETCHLAYER0_SOURCEBUFFERATTRIBUTES3_t unSOURCEBUFFERATTRIBUTES3; /*!< 0x00000084 Source buffer attributes for layer 3. */
  un_VIDEOSS_FETCHLAYER0_SOURCEBUFFERDIMENSION3_t unSOURCEBUFFERDIMENSION3; /*!< 0x00000088 Source buffer dimension of layer 3. */
  un_VIDEOSS_FETCHLAYER0_COLORCOMPONENTBITS3_t unCOLORCOMPONENTBITS3; /*!< 0x0000008C Size of color components for RGB, YUV and index formats
                                                                                (layer 3). */
  un_VIDEOSS_FETCHLAYER0_COLORCOMPONENTSHIFT3_t unCOLORCOMPONENTSHIFT3; /*!< 0x00000090 Bit position of color components for RGB, YUV and index
                                                                                formats (layer 3). */
  un_VIDEOSS_FETCHLAYER0_LAYEROFFSET3_t unLAYEROFFSET3; /*!< 0x00000094 Position of layer 3 within the destination frame. */
  un_VIDEOSS_FETCHLAYER0_CLIPWINDOWOFFSET3_t unCLIPWINDOWOFFSET3; /*!< 0x00000098 Clip window position for layer 3. */
  un_VIDEOSS_FETCHLAYER0_CLIPWINDOWDIMENSIONS3_t unCLIPWINDOWDIMENSIONS3; /*!< 0x0000009C Clip window size for layer 3. */
  un_VIDEOSS_FETCHLAYER0_CONSTANTCOLOR3_t unCONSTANTCOLOR3; /*!< 0x000000A0 Constant color for layer 3. */
  un_VIDEOSS_FETCHLAYER0_LAYERPROPERTY3_t unLAYERPROPERTY3; /*!< 0x000000A4 Common properties of layer 3. */
  un_VIDEOSS_FETCHLAYER0_BASEADDRESS4_t unBASEADDRESS4; /*!< 0x000000A8 Source buffer base address of layer 4. */
  un_VIDEOSS_FETCHLAYER0_SOURCEBUFFERATTRIBUTES4_t unSOURCEBUFFERATTRIBUTES4; /*!< 0x000000AC Source buffer attributes for layer 4. */
  un_VIDEOSS_FETCHLAYER0_SOURCEBUFFERDIMENSION4_t unSOURCEBUFFERDIMENSION4; /*!< 0x000000B0 Source buffer dimension of layer 4. */
  un_VIDEOSS_FETCHLAYER0_COLORCOMPONENTBITS4_t unCOLORCOMPONENTBITS4; /*!< 0x000000B4 Size of color components for RGB, YUV and index formats
                                                                                (layer 4). */
  un_VIDEOSS_FETCHLAYER0_COLORCOMPONENTSHIFT4_t unCOLORCOMPONENTSHIFT4; /*!< 0x000000B8 Bit position of color components for RGB, YUV and index
                                                                                formats (layer 4). */
  un_VIDEOSS_FETCHLAYER0_LAYEROFFSET4_t unLAYEROFFSET4; /*!< 0x000000BC Position of layer 4 within the destination frame. */
  un_VIDEOSS_FETCHLAYER0_CLIPWINDOWOFFSET4_t unCLIPWINDOWOFFSET4; /*!< 0x000000C0 Clip window position for layer 4. */
  un_VIDEOSS_FETCHLAYER0_CLIPWINDOWDIMENSIONS4_t unCLIPWINDOWDIMENSIONS4; /*!< 0x000000C4 Clip window size for layer 4. */
  un_VIDEOSS_FETCHLAYER0_CONSTANTCOLOR4_t unCONSTANTCOLOR4; /*!< 0x000000C8 Constant color for layer 4. */
  un_VIDEOSS_FETCHLAYER0_LAYERPROPERTY4_t unLAYERPROPERTY4; /*!< 0x000000CC Common properties of layer 4. */
  un_VIDEOSS_FETCHLAYER0_BASEADDRESS5_t unBASEADDRESS5; /*!< 0x000000D0 Source buffer base address of layer 5. */
  un_VIDEOSS_FETCHLAYER0_SOURCEBUFFERATTRIBUTES5_t unSOURCEBUFFERATTRIBUTES5; /*!< 0x000000D4 Source buffer attributes for layer 5. */
  un_VIDEOSS_FETCHLAYER0_SOURCEBUFFERDIMENSION5_t unSOURCEBUFFERDIMENSION5; /*!< 0x000000D8 Source buffer dimension of layer 5. */
  un_VIDEOSS_FETCHLAYER0_COLORCOMPONENTBITS5_t unCOLORCOMPONENTBITS5; /*!< 0x000000DC Size of color components for RGB, YUV and index formats
                                                                                (layer 5). */
  un_VIDEOSS_FETCHLAYER0_COLORCOMPONENTSHIFT5_t unCOLORCOMPONENTSHIFT5; /*!< 0x000000E0 Bit position of color components for RGB, YUV and index
                                                                                formats (layer 5). */
  un_VIDEOSS_FETCHLAYER0_LAYEROFFSET5_t unLAYEROFFSET5; /*!< 0x000000E4 Position of layer 5 within the destination frame. */
  un_VIDEOSS_FETCHLAYER0_CLIPWINDOWOFFSET5_t unCLIPWINDOWOFFSET5; /*!< 0x000000E8 Clip window position for layer 5. */
  un_VIDEOSS_FETCHLAYER0_CLIPWINDOWDIMENSIONS5_t unCLIPWINDOWDIMENSIONS5; /*!< 0x000000EC Clip window size for layer 5. */
  un_VIDEOSS_FETCHLAYER0_CONSTANTCOLOR5_t unCONSTANTCOLOR5; /*!< 0x000000F0 Constant color for layer 5. */
  un_VIDEOSS_FETCHLAYER0_LAYERPROPERTY5_t unLAYERPROPERTY5; /*!< 0x000000F4 Common properties of layer 5. */
  un_VIDEOSS_FETCHLAYER0_BASEADDRESS6_t unBASEADDRESS6; /*!< 0x000000F8 Source buffer base address of layer 6. */
  un_VIDEOSS_FETCHLAYER0_SOURCEBUFFERATTRIBUTES6_t unSOURCEBUFFERATTRIBUTES6; /*!< 0x000000FC Source buffer attributes for layer 6. */
  un_VIDEOSS_FETCHLAYER0_SOURCEBUFFERDIMENSION6_t unSOURCEBUFFERDIMENSION6; /*!< 0x00000100 Source buffer dimension of layer 6. */
  un_VIDEOSS_FETCHLAYER0_COLORCOMPONENTBITS6_t unCOLORCOMPONENTBITS6; /*!< 0x00000104 Size of color components for RGB, YUV and index formats
                                                                                (layer 6). */
  un_VIDEOSS_FETCHLAYER0_COLORCOMPONENTSHIFT6_t unCOLORCOMPONENTSHIFT6; /*!< 0x00000108 Bit position of color components for RGB, YUV and index
                                                                                formats (layer 6). */
  un_VIDEOSS_FETCHLAYER0_LAYEROFFSET6_t unLAYEROFFSET6; /*!< 0x0000010C Position of layer 1 within the destination frame. */
  un_VIDEOSS_FETCHLAYER0_CLIPWINDOWOFFSET6_t unCLIPWINDOWOFFSET6; /*!< 0x00000110 Clip window position for layer 6. */
  un_VIDEOSS_FETCHLAYER0_CLIPWINDOWDIMENSIONS6_t unCLIPWINDOWDIMENSIONS6; /*!< 0x00000114 Clip window size for layer 6. */
  un_VIDEOSS_FETCHLAYER0_CONSTANTCOLOR6_t unCONSTANTCOLOR6; /*!< 0x00000118 Constant color for layer 6. */
  un_VIDEOSS_FETCHLAYER0_LAYERPROPERTY6_t unLAYERPROPERTY6; /*!< 0x0000011C Common properties of layer 6. */
  un_VIDEOSS_FETCHLAYER0_BASEADDRESS7_t unBASEADDRESS7; /*!< 0x00000120 Source buffer base address of layer 7. */
  un_VIDEOSS_FETCHLAYER0_SOURCEBUFFERATTRIBUTES7_t unSOURCEBUFFERATTRIBUTES7; /*!< 0x00000124 Source buffer stride for layer 7. */
  un_VIDEOSS_FETCHLAYER0_SOURCEBUFFERDIMENSION7_t unSOURCEBUFFERDIMENSION7; /*!< 0x00000128 Source buffer dimension of layer 7. */
  un_VIDEOSS_FETCHLAYER0_COLORCOMPONENTBITS7_t unCOLORCOMPONENTBITS7; /*!< 0x0000012C Size of color components for RGB, YUV and index formats
                                                                                (layer 7). */
  un_VIDEOSS_FETCHLAYER0_COLORCOMPONENTSHIFT7_t unCOLORCOMPONENTSHIFT7; /*!< 0x00000130 Bit position of color components for RGB, YUV and index
                                                                                formats (layer 7). */
  un_VIDEOSS_FETCHLAYER0_LAYEROFFSET7_t unLAYEROFFSET7; /*!< 0x00000134 Position of layer 7 within the destination frame. */
  un_VIDEOSS_FETCHLAYER0_CLIPWINDOWOFFSET7_t unCLIPWINDOWOFFSET7; /*!< 0x00000138 Clip window position for layer 7. */
  un_VIDEOSS_FETCHLAYER0_CLIPWINDOWDIMENSIONS7_t unCLIPWINDOWDIMENSIONS7; /*!< 0x0000013C Clip window size for layer 7. */
  un_VIDEOSS_FETCHLAYER0_CONSTANTCOLOR7_t unCONSTANTCOLOR7; /*!< 0x00000140 Constant color for layer 7. */
  un_VIDEOSS_FETCHLAYER0_LAYERPROPERTY7_t unLAYERPROPERTY7; /*!< 0x00000144 Common properties of layer 7. */
  un_VIDEOSS_FETCHLAYER0_FRAMEDIMENSIONS_t unFRAMEDIMENSIONS; /*!< 0x00000148 Output frame dimension. */
  un_VIDEOSS_FETCHLAYER0_FRAMERESAMPLING_t unFRAMERESAMPLING; /*!< 0x0000014C Resampling options for output frame. */
  un_VIDEOSS_FETCHLAYER0_CONTROL_t unCONTROL;          /*!< 0x00000150 Shared common control settings for all layers. */
  un_VIDEOSS_FETCHLAYER0_TRIGGERENABLE_t unTRIGGERENABLE; /*!< 0x00000154 Shadow load enable flags for all layers. */
  un_VIDEOSS_FETCHLAYER0_CONTROLTRIGGER_t unCONTROLTRIGGER; /*!< 0x00000158 Shadow load trigger. */
  un_VIDEOSS_FETCHLAYER0_START_t   unSTART;            /*!< 0x0000015C Frame start trigger. */
  un_VIDEOSS_FETCHLAYER0_FETCHTYPE_t unFETCHTYPE;      /*!< 0x00000160 Fetch unit type. */
  un_VIDEOSS_FETCHLAYER0_BURSTBUFFERPROPERTIES_t unBURSTBUFFERPROPERTIES; /*!< 0x00000164 Burst buffer properties. */
  un_VIDEOSS_FETCHLAYER0_STATUS_t  unSTATUS;           /*!< 0x00000168 Status information. */
  uint32_t                         au32Reserved[165];
} stc_VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_t;        /*!< Size = 1024 (0x400) */

/**
  * \brief FetchDecode #4 (Capture) (VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHDECODE4)
  */
typedef struct stc_VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHDECODE4 {
  un_VIDEOSS_FETCHDECODE4_STATICCONTROL_t unSTATICCONTROL; /*!< 0x00000000 Common static control options. */
  un_VIDEOSS_FETCHDECODE4_BURSTBUFFERMANAGEMENT_t unBURSTBUFFERMANAGEMENT; /*!< 0x00000004 AXI interface buffer management register */
  un_VIDEOSS_FETCHDECODE4_RINGBUFSTARTADDR0_t unRINGBUFSTARTADDR0; /*!< 0x00000008 Ring buffer setup for layer 0. */
  un_VIDEOSS_FETCHDECODE4_RINGBUFWRAPADDR0_t unRINGBUFWRAPADDR0; /*!< 0x0000000C Ring buffer setup for layer 0. */
  un_VIDEOSS_FETCHDECODE4_FRAMEPROPERTIES0_t unFRAMEPROPERTIES0; /*!< 0x00000010 Frame property setup for layer 0. */
  un_VIDEOSS_FETCHDECODE4_BASEADDRESS0_t unBASEADDRESS0; /*!< 0x00000014 Source buffer base address of layer 0. */
  un_VIDEOSS_FETCHDECODE4_SOURCEBUFFERATTRIBUTES0_t unSOURCEBUFFERATTRIBUTES0; /*!< 0x00000018 Source buffer attributes for layer 0. */
  un_VIDEOSS_FETCHDECODE4_SOURCEBUFFERDIMENSION0_t unSOURCEBUFFERDIMENSION0; /*!< 0x0000001C Source buffer dimension of layer 0. */
  un_VIDEOSS_FETCHDECODE4_COLORCOMPONENTBITS0_t unCOLORCOMPONENTBITS0; /*!< 0x00000020 Size of color components for RGB, YUV and index formats
                                                                                (layer 0). */
  un_VIDEOSS_FETCHDECODE4_COLORCOMPONENTSHIFT0_t unCOLORCOMPONENTSHIFT0; /*!< 0x00000024 Bit position of color components for RGB, YUV and index
                                                                                formats (layer 0). */
  un_VIDEOSS_FETCHDECODE4_LAYEROFFSET0_t unLAYEROFFSET0; /*!< 0x00000028 Position of layer 0 within the destination frame. */
  un_VIDEOSS_FETCHDECODE4_CLIPWINDOWOFFSET0_t unCLIPWINDOWOFFSET0; /*!< 0x0000002C Clip window position for layer 0. */
  un_VIDEOSS_FETCHDECODE4_CLIPWINDOWDIMENSIONS0_t unCLIPWINDOWDIMENSIONS0; /*!< 0x00000030 Clip window size for layer 0. */
  un_VIDEOSS_FETCHDECODE4_CONSTANTCOLOR0_t unCONSTANTCOLOR0; /*!< 0x00000034 Constant color for layer 0. */
  un_VIDEOSS_FETCHDECODE4_LAYERPROPERTY0_t unLAYERPROPERTY0; /*!< 0x00000038 Common properties of layer 0. */
  un_VIDEOSS_FETCHDECODE4_FRAMEDIMENSIONS_t unFRAMEDIMENSIONS; /*!< 0x0000003C Output frame dimension. */
  un_VIDEOSS_FETCHDECODE4_FRAMERESAMPLING_t unFRAMERESAMPLING; /*!< 0x00000040 Resampling options for output frame. */
  un_VIDEOSS_FETCHDECODE4_DECODECONTROL_t unDECODECONTROL; /*!< 0x00000044 Control options for RLAD decompression. */
  un_VIDEOSS_FETCHDECODE4_SOURCEBUFFERLENGTH_t unSOURCEBUFFERLENGTH; /*!< 0x00000048 Source buffer length for compressed data. */
  un_VIDEOSS_FETCHDECODE4_CONTROL_t unCONTROL;         /*!< 0x0000004C Shared common control settings for all layers. */
  un_VIDEOSS_FETCHDECODE4_CONTROLTRIGGER_t unCONTROLTRIGGER; /*!< 0x00000050 Shadow load trigger. */
  un_VIDEOSS_FETCHDECODE4_START_t  unSTART;            /*!< 0x00000054 Frame start trigger. */
  un_VIDEOSS_FETCHDECODE4_FETCHTYPE_t unFETCHTYPE;     /*!< 0x00000058 Fetch unit type. */
  un_VIDEOSS_FETCHDECODE4_DECODERSTATUS_t unDECODERSTATUS; /*!< 0x0000005C Status information of the RLAD decoder. */
  un_VIDEOSS_FETCHDECODE4_READADDRESS0_t unREADADDRESS0; /*!< 0x00000060 Ring buffer synchronization for layer 0. */
  un_VIDEOSS_FETCHDECODE4_BURSTBUFFERPROPERTIES_t unBURSTBUFFERPROPERTIES; /*!< 0x00000064 Burst buffer properties. */
  un_VIDEOSS_FETCHDECODE4_STATUS_t unSTATUS;           /*!< 0x00000068 Status information. */
  uint32_t                         au32Reserved[229];
} stc_VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHDECODE4_t;        /*!< Size = 1024 (0x400) */

/**
  * \brief FetchEco #4 (Capture) (VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHECO4)
  */
typedef struct stc_VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHECO4 {
  un_VIDEOSS_FETCHECO4_STATICCONTROL_t unSTATICCONTROL; /*!< 0x00000000 Common static control options. */
  un_VIDEOSS_FETCHECO4_BURSTBUFFERMANAGEMENT_t unBURSTBUFFERMANAGEMENT; /*!< 0x00000004 AXI interface buffer management register */
  un_VIDEOSS_FETCHECO4_BASEADDRESS0_t unBASEADDRESS0;  /*!< 0x00000008 Source buffer base address of layer 0. */
  un_VIDEOSS_FETCHECO4_SOURCEBUFFERATTRIBUTES0_t unSOURCEBUFFERATTRIBUTES0; /*!< 0x0000000C Source buffer attributes for layer 0. */
  un_VIDEOSS_FETCHECO4_SOURCEBUFFERDIMENSION0_t unSOURCEBUFFERDIMENSION0; /*!< 0x00000010 Source buffer dimension of layer 0. */
  un_VIDEOSS_FETCHECO4_COLORCOMPONENTBITS0_t unCOLORCOMPONENTBITS0; /*!< 0x00000014 Size of color components for RGB, YUV and index formats
                                                                                (layer 0). */
  un_VIDEOSS_FETCHECO4_COLORCOMPONENTSHIFT0_t unCOLORCOMPONENTSHIFT0; /*!< 0x00000018 Bit position of color components for RGB, YUV and index
                                                                                formats (layer 0). */
  un_VIDEOSS_FETCHECO4_LAYEROFFSET0_t unLAYEROFFSET0;  /*!< 0x0000001C Position of layer 0 within the destination frame. */
  un_VIDEOSS_FETCHECO4_CLIPWINDOWOFFSET0_t unCLIPWINDOWOFFSET0; /*!< 0x00000020 Clip window position for layer 0. */
  un_VIDEOSS_FETCHECO4_CLIPWINDOWDIMENSIONS0_t unCLIPWINDOWDIMENSIONS0; /*!< 0x00000024 Clip window size for layer 0. */
  un_VIDEOSS_FETCHECO4_CONSTANTCOLOR0_t unCONSTANTCOLOR0; /*!< 0x00000028 Constant color for layer 0. */
  un_VIDEOSS_FETCHECO4_LAYERPROPERTY0_t unLAYERPROPERTY0; /*!< 0x0000002C Common properties of layer 0. */
  un_VIDEOSS_FETCHECO4_FRAMEDIMENSIONS_t unFRAMEDIMENSIONS; /*!< 0x00000030 Output frame dimension. */
  un_VIDEOSS_FETCHECO4_FRAMERESAMPLING_t unFRAMERESAMPLING; /*!< 0x00000034 Resampling options for output frame. */
  un_VIDEOSS_FETCHECO4_CONTROL_t   unCONTROL;          /*!< 0x00000038 Shared common control settings for all layers. */
  un_VIDEOSS_FETCHECO4_CONTROLTRIGGER_t unCONTROLTRIGGER; /*!< 0x0000003C Shadow load trigger. */
  un_VIDEOSS_FETCHECO4_START_t     unSTART;            /*!< 0x00000040 Frame start trigger. */
  un_VIDEOSS_FETCHECO4_FETCHTYPE_t unFETCHTYPE;        /*!< 0x00000044 Fetch unit type. */
  un_VIDEOSS_FETCHECO4_BURSTBUFFERPROPERTIES_t unBURSTBUFFERPROPERTIES; /*!< 0x00000048 Burst buffer properties. */
  uint32_t                         au32Reserved[237];
} stc_VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHECO4_t;        /*!< Size = 1024 (0x400) */

/**
  * \brief FetchWarp #1 (Display) (VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1)
  */
typedef struct stc_VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1 {
  un_VIDEOSS_FETCHWARP1_STATICCONTROL_t unSTATICCONTROL; /*!< 0x00000000 Common static control options. */
  un_VIDEOSS_FETCHWARP1_BURSTBUFFERMANAGEMENT_t unBURSTBUFFERMANAGEMENT; /*!< 0x00000004 AXI interface buffer management register */
  un_VIDEOSS_FETCHWARP1_BASEADDRESS0_t unBASEADDRESS0; /*!< 0x00000008 Source buffer base address of layer 0. */
  un_VIDEOSS_FETCHWARP1_SOURCEBUFFERATTRIBUTES0_t unSOURCEBUFFERATTRIBUTES0; /*!< 0x0000000C Source buffer attributes for layer 0. */
  un_VIDEOSS_FETCHWARP1_SOURCEBUFFERDIMENSION0_t unSOURCEBUFFERDIMENSION0; /*!< 0x00000010 Source buffer dimension of layer 0. */
  un_VIDEOSS_FETCHWARP1_COLORCOMPONENTBITS0_t unCOLORCOMPONENTBITS0; /*!< 0x00000014 Size of color components for RGB, YUV and index formats
                                                                                (layer 0). */
  un_VIDEOSS_FETCHWARP1_COLORCOMPONENTSHIFT0_t unCOLORCOMPONENTSHIFT0; /*!< 0x00000018 Bit position of color components for RGB, YUV and index
                                                                                formats (layer 0). */
  un_VIDEOSS_FETCHWARP1_LAYEROFFSET0_t unLAYEROFFSET0; /*!< 0x0000001C Position of layer 0 within the destination frame. */
  un_VIDEOSS_FETCHWARP1_CLIPWINDOWOFFSET0_t unCLIPWINDOWOFFSET0; /*!< 0x00000020 Clip window position for layer 0. */
  un_VIDEOSS_FETCHWARP1_CLIPWINDOWDIMENSIONS0_t unCLIPWINDOWDIMENSIONS0; /*!< 0x00000024 Clip window size for layer 0. */
  un_VIDEOSS_FETCHWARP1_CONSTANTCOLOR0_t unCONSTANTCOLOR0; /*!< 0x00000028 Constant color for layer 0. */
  un_VIDEOSS_FETCHWARP1_LAYERPROPERTY0_t unLAYERPROPERTY0; /*!< 0x0000002C Common properties of layer 0. */
  un_VIDEOSS_FETCHWARP1_BASEADDRESS1_t unBASEADDRESS1; /*!< 0x00000030 Source buffer base address of layer 1. */
  un_VIDEOSS_FETCHWARP1_SOURCEBUFFERATTRIBUTES1_t unSOURCEBUFFERATTRIBUTES1; /*!< 0x00000034 Source buffer attributes for layer 1. */
  un_VIDEOSS_FETCHWARP1_SOURCEBUFFERDIMENSION1_t unSOURCEBUFFERDIMENSION1; /*!< 0x00000038 Source buffer dimensions of layer 1, */
  un_VIDEOSS_FETCHWARP1_COLORCOMPONENTBITS1_t unCOLORCOMPONENTBITS1; /*!< 0x0000003C Size of color components for RGB, YUV and index formats
                                                                                (layer 1). */
  un_VIDEOSS_FETCHWARP1_COLORCOMPONENTSHIFT1_t unCOLORCOMPONENTSHIFT1; /*!< 0x00000040 Bit position of color components for RGB, YUV and index
                                                                                formats (layer 1). */
  un_VIDEOSS_FETCHWARP1_LAYEROFFSET1_t unLAYEROFFSET1; /*!< 0x00000044 Position of layer 1 within the destination frame. */
  un_VIDEOSS_FETCHWARP1_CLIPWINDOWOFFSET1_t unCLIPWINDOWOFFSET1; /*!< 0x00000048 Clip window position for layer 1. */
  un_VIDEOSS_FETCHWARP1_CLIPWINDOWDIMENSIONS1_t unCLIPWINDOWDIMENSIONS1; /*!< 0x0000004C Clip window size for layer 1. */
  un_VIDEOSS_FETCHWARP1_CONSTANTCOLOR1_t unCONSTANTCOLOR1; /*!< 0x00000050 Constant color for layer 1. */
  un_VIDEOSS_FETCHWARP1_LAYERPROPERTY1_t unLAYERPROPERTY1; /*!< 0x00000054 Common properties of layer 1. */
  un_VIDEOSS_FETCHWARP1_BASEADDRESS2_t unBASEADDRESS2; /*!< 0x00000058 Source buffer base address of layer 2. */
  un_VIDEOSS_FETCHWARP1_SOURCEBUFFERATTRIBUTES2_t unSOURCEBUFFERATTRIBUTES2; /*!< 0x0000005C Source buffer attributes for layer 2. */
  un_VIDEOSS_FETCHWARP1_SOURCEBUFFERDIMENSION2_t unSOURCEBUFFERDIMENSION2; /*!< 0x00000060 Source buffer dimension of layer 2. */
  un_VIDEOSS_FETCHWARP1_COLORCOMPONENTBITS2_t unCOLORCOMPONENTBITS2; /*!< 0x00000064 Size of color components for RGB, YUV and index formats
                                                                                (layer 2). */
  un_VIDEOSS_FETCHWARP1_COLORCOMPONENTSHIFT2_t unCOLORCOMPONENTSHIFT2; /*!< 0x00000068 Bit position of color components for RGB, YUV and index
                                                                                formats (layer 2). */
  un_VIDEOSS_FETCHWARP1_LAYEROFFSET2_t unLAYEROFFSET2; /*!< 0x0000006C Position of layer 2 within the destination frame. */
  un_VIDEOSS_FETCHWARP1_CLIPWINDOWOFFSET2_t unCLIPWINDOWOFFSET2; /*!< 0x00000070 Clip window position for layer 2. */
  un_VIDEOSS_FETCHWARP1_CLIPWINDOWDIMENSIONS2_t unCLIPWINDOWDIMENSIONS2; /*!< 0x00000074 Clip window size for layer 2. */
  un_VIDEOSS_FETCHWARP1_CONSTANTCOLOR2_t unCONSTANTCOLOR2; /*!< 0x00000078 Constant color for layer 2. */
  un_VIDEOSS_FETCHWARP1_LAYERPROPERTY2_t unLAYERPROPERTY2; /*!< 0x0000007C Common properties of layer 2. */
  un_VIDEOSS_FETCHWARP1_BASEADDRESS3_t unBASEADDRESS3; /*!< 0x00000080 Source buffer base address of layer 3. */
  un_VIDEOSS_FETCHWARP1_SOURCEBUFFERATTRIBUTES3_t unSOURCEBUFFERATTRIBUTES3; /*!< 0x00000084 Source buffer attributes for layer 3. */
  un_VIDEOSS_FETCHWARP1_SOURCEBUFFERDIMENSION3_t unSOURCEBUFFERDIMENSION3; /*!< 0x00000088 Source buffer dimension of layer 3. */
  un_VIDEOSS_FETCHWARP1_COLORCOMPONENTBITS3_t unCOLORCOMPONENTBITS3; /*!< 0x0000008C Size of color components for RGB, YUV and index formats
                                                                                (layer 3). */
  un_VIDEOSS_FETCHWARP1_COLORCOMPONENTSHIFT3_t unCOLORCOMPONENTSHIFT3; /*!< 0x00000090 Bit position of color components for RGB, YUV and index
                                                                                formats (layer 3). */
  un_VIDEOSS_FETCHWARP1_LAYEROFFSET3_t unLAYEROFFSET3; /*!< 0x00000094 Position of layer 3 within the destination frame. */
  un_VIDEOSS_FETCHWARP1_CLIPWINDOWOFFSET3_t unCLIPWINDOWOFFSET3; /*!< 0x00000098 Clip window position for layer 3. */
  un_VIDEOSS_FETCHWARP1_CLIPWINDOWDIMENSIONS3_t unCLIPWINDOWDIMENSIONS3; /*!< 0x0000009C Clip window size for layer 3. */
  un_VIDEOSS_FETCHWARP1_CONSTANTCOLOR3_t unCONSTANTCOLOR3; /*!< 0x000000A0 Constant color for layer 3. */
  un_VIDEOSS_FETCHWARP1_LAYERPROPERTY3_t unLAYERPROPERTY3; /*!< 0x000000A4 Common properties of layer 3. */
  un_VIDEOSS_FETCHWARP1_BASEADDRESS4_t unBASEADDRESS4; /*!< 0x000000A8 Source buffer base address of layer 4. */
  un_VIDEOSS_FETCHWARP1_SOURCEBUFFERATTRIBUTES4_t unSOURCEBUFFERATTRIBUTES4; /*!< 0x000000AC Source buffer attributes for layer 4. */
  un_VIDEOSS_FETCHWARP1_SOURCEBUFFERDIMENSION4_t unSOURCEBUFFERDIMENSION4; /*!< 0x000000B0 Source buffer dimension of layer 4. */
  un_VIDEOSS_FETCHWARP1_COLORCOMPONENTBITS4_t unCOLORCOMPONENTBITS4; /*!< 0x000000B4 Size of color components for RGB, YUV and index formats
                                                                                (layer 4). */
  un_VIDEOSS_FETCHWARP1_COLORCOMPONENTSHIFT4_t unCOLORCOMPONENTSHIFT4; /*!< 0x000000B8 Bit position of color components for RGB, YUV and index
                                                                                formats (layer 4). */
  un_VIDEOSS_FETCHWARP1_LAYEROFFSET4_t unLAYEROFFSET4; /*!< 0x000000BC Position of layer 4 within the destination frame. */
  un_VIDEOSS_FETCHWARP1_CLIPWINDOWOFFSET4_t unCLIPWINDOWOFFSET4; /*!< 0x000000C0 Clip window position for layer 4. */
  un_VIDEOSS_FETCHWARP1_CLIPWINDOWDIMENSIONS4_t unCLIPWINDOWDIMENSIONS4; /*!< 0x000000C4 Clip window size for layer 4. */
  un_VIDEOSS_FETCHWARP1_CONSTANTCOLOR4_t unCONSTANTCOLOR4; /*!< 0x000000C8 Constant color for layer 4. */
  un_VIDEOSS_FETCHWARP1_LAYERPROPERTY4_t unLAYERPROPERTY4; /*!< 0x000000CC Common properties of layer 4. */
  un_VIDEOSS_FETCHWARP1_BASEADDRESS5_t unBASEADDRESS5; /*!< 0x000000D0 Source buffer base address of layer 5. */
  un_VIDEOSS_FETCHWARP1_SOURCEBUFFERATTRIBUTES5_t unSOURCEBUFFERATTRIBUTES5; /*!< 0x000000D4 Source buffer attributes for layer 5. */
  un_VIDEOSS_FETCHWARP1_SOURCEBUFFERDIMENSION5_t unSOURCEBUFFERDIMENSION5; /*!< 0x000000D8 Source buffer dimension of layer 5. */
  un_VIDEOSS_FETCHWARP1_COLORCOMPONENTBITS5_t unCOLORCOMPONENTBITS5; /*!< 0x000000DC Size of color components for RGB, YUV and index formats
                                                                                (layer 5). */
  un_VIDEOSS_FETCHWARP1_COLORCOMPONENTSHIFT5_t unCOLORCOMPONENTSHIFT5; /*!< 0x000000E0 Bit position of color components for RGB, YUV and index
                                                                                formats (layer 5). */
  un_VIDEOSS_FETCHWARP1_LAYEROFFSET5_t unLAYEROFFSET5; /*!< 0x000000E4 Position of layer 5 within the destination frame. */
  un_VIDEOSS_FETCHWARP1_CLIPWINDOWOFFSET5_t unCLIPWINDOWOFFSET5; /*!< 0x000000E8 Clip window position for layer 5. */
  un_VIDEOSS_FETCHWARP1_CLIPWINDOWDIMENSIONS5_t unCLIPWINDOWDIMENSIONS5; /*!< 0x000000EC Clip window size for layer 5. */
  un_VIDEOSS_FETCHWARP1_CONSTANTCOLOR5_t unCONSTANTCOLOR5; /*!< 0x000000F0 Constant color for layer 5. */
  un_VIDEOSS_FETCHWARP1_LAYERPROPERTY5_t unLAYERPROPERTY5; /*!< 0x000000F4 Common properties of layer 5. */
  un_VIDEOSS_FETCHWARP1_BASEADDRESS6_t unBASEADDRESS6; /*!< 0x000000F8 Source buffer base address of layer 6. */
  un_VIDEOSS_FETCHWARP1_SOURCEBUFFERATTRIBUTES6_t unSOURCEBUFFERATTRIBUTES6; /*!< 0x000000FC Source buffer attributes for layer 6. */
  un_VIDEOSS_FETCHWARP1_SOURCEBUFFERDIMENSION6_t unSOURCEBUFFERDIMENSION6; /*!< 0x00000100 Source buffer dimension of layer 6. */
  un_VIDEOSS_FETCHWARP1_COLORCOMPONENTBITS6_t unCOLORCOMPONENTBITS6; /*!< 0x00000104 Size of color components for RGB, YUV and index formats
                                                                                (layer 6). */
  un_VIDEOSS_FETCHWARP1_COLORCOMPONENTSHIFT6_t unCOLORCOMPONENTSHIFT6; /*!< 0x00000108 Bit position of color components for RGB, YUV and index
                                                                                formats (layer 6). */
  un_VIDEOSS_FETCHWARP1_LAYEROFFSET6_t unLAYEROFFSET6; /*!< 0x0000010C Position of layer 1 within the destination frame. */
  un_VIDEOSS_FETCHWARP1_CLIPWINDOWOFFSET6_t unCLIPWINDOWOFFSET6; /*!< 0x00000110 Clip window position for layer 6. */
  un_VIDEOSS_FETCHWARP1_CLIPWINDOWDIMENSIONS6_t unCLIPWINDOWDIMENSIONS6; /*!< 0x00000114 Clip window size for layer 6. */
  un_VIDEOSS_FETCHWARP1_CONSTANTCOLOR6_t unCONSTANTCOLOR6; /*!< 0x00000118 Constant color for layer 6. */
  un_VIDEOSS_FETCHWARP1_LAYERPROPERTY6_t unLAYERPROPERTY6; /*!< 0x0000011C Common properties of layer 6. */
  un_VIDEOSS_FETCHWARP1_BASEADDRESS7_t unBASEADDRESS7; /*!< 0x00000120 Source buffer base address of layer 7. */
  un_VIDEOSS_FETCHWARP1_SOURCEBUFFERATTRIBUTES7_t unSOURCEBUFFERATTRIBUTES7; /*!< 0x00000124 Source buffer stride for layer 7. */
  un_VIDEOSS_FETCHWARP1_SOURCEBUFFERDIMENSION7_t unSOURCEBUFFERDIMENSION7; /*!< 0x00000128 Source buffer dimension of layer 7. */
  un_VIDEOSS_FETCHWARP1_COLORCOMPONENTBITS7_t unCOLORCOMPONENTBITS7; /*!< 0x0000012C Size of color components for RGB, YUV and index formats
                                                                                (layer 7). */
  un_VIDEOSS_FETCHWARP1_COLORCOMPONENTSHIFT7_t unCOLORCOMPONENTSHIFT7; /*!< 0x00000130 Bit position of color components for RGB, YUV and index
                                                                                formats (layer 7). */
  un_VIDEOSS_FETCHWARP1_LAYEROFFSET7_t unLAYEROFFSET7; /*!< 0x00000134 Position of layer 7 within the destination frame. */
  un_VIDEOSS_FETCHWARP1_CLIPWINDOWOFFSET7_t unCLIPWINDOWOFFSET7; /*!< 0x00000138 Clip window position for layer 7. */
  un_VIDEOSS_FETCHWARP1_CLIPWINDOWDIMENSIONS7_t unCLIPWINDOWDIMENSIONS7; /*!< 0x0000013C Clip window size for layer 7. */
  un_VIDEOSS_FETCHWARP1_CONSTANTCOLOR7_t unCONSTANTCOLOR7; /*!< 0x00000140 Constant color for layer 7. */
  un_VIDEOSS_FETCHWARP1_LAYERPROPERTY7_t unLAYERPROPERTY7; /*!< 0x00000144 Common properties of layer 7. */
  un_VIDEOSS_FETCHWARP1_FRAMEDIMENSIONS_t unFRAMEDIMENSIONS; /*!< 0x00000148 Output frame dimension. */
  un_VIDEOSS_FETCHWARP1_FRAMERESAMPLING_t unFRAMERESAMPLING; /*!< 0x0000014C Resampling options for output frame. */
  un_VIDEOSS_FETCHWARP1_WARPCONTROL_t unWARPCONTROL;   /*!< 0x00000150 Warping control options. */
  un_VIDEOSS_FETCHWARP1_ARBSTARTX_t unARBSTARTX;       /*!< 0x00000154 Start value X for arbitrary warping. */
  un_VIDEOSS_FETCHWARP1_ARBSTARTY_t unARBSTARTY;       /*!< 0x00000158 Start value Y for arbitrary warping. */
  un_VIDEOSS_FETCHWARP1_ARBDELTA_t unARBDELTA;         /*!< 0x0000015C Start values for delta incrementation of arbitrary
                                                                                warping. */
  un_VIDEOSS_FETCHWARP1_FIRPOSITIONS_t unFIRPOSITIONS; /*!< 0x00000160 FIR sequence control register. */
  un_VIDEOSS_FETCHWARP1_FIRCOEFFICIENTS_t unFIRCOEFFICIENTS; /*!< 0x00000164 FIR coefficients register. */
  un_VIDEOSS_FETCHWARP1_CONTROL_t  unCONTROL;          /*!< 0x00000168 Shared common control settings for all layers. */
  un_VIDEOSS_FETCHWARP1_TRIGGERENABLE_t unTRIGGERENABLE; /*!< 0x0000016C Shadow load enable flags for all layers. */
  un_VIDEOSS_FETCHWARP1_CONTROLTRIGGER_t unCONTROLTRIGGER; /*!< 0x00000170 Shadow load trigger. */
  un_VIDEOSS_FETCHWARP1_START_t    unSTART;            /*!< 0x00000174 Frame start trigger. */
  un_VIDEOSS_FETCHWARP1_FETCHTYPE_t unFETCHTYPE;       /*!< 0x00000178 Fetch unit type. */
  un_VIDEOSS_FETCHWARP1_BURSTBUFFERPROPERTIES_t unBURSTBUFFERPROPERTIES; /*!< 0x0000017C Burst buffer properties. */
  un_VIDEOSS_FETCHWARP1_STATUS_t   unSTATUS;           /*!< 0x00000180 Status information. */
  uint32_t                         au32Reserved[159];
} stc_VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_t;        /*!< Size = 1024 (0x400) */

/**
  * \brief FetchEco #1 (Display) (VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHECO1)
  */
typedef struct stc_VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHECO1 {
  un_VIDEOSS_FETCHECO1_STATICCONTROL_t unSTATICCONTROL; /*!< 0x00000000 Common static control options. */
  un_VIDEOSS_FETCHECO1_BURSTBUFFERMANAGEMENT_t unBURSTBUFFERMANAGEMENT; /*!< 0x00000004 AXI interface buffer management register */
  un_VIDEOSS_FETCHECO1_BASEADDRESS0_t unBASEADDRESS0;  /*!< 0x00000008 Source buffer base address of layer 0. */
  un_VIDEOSS_FETCHECO1_SOURCEBUFFERATTRIBUTES0_t unSOURCEBUFFERATTRIBUTES0; /*!< 0x0000000C Source buffer attributes for layer 0. */
  un_VIDEOSS_FETCHECO1_SOURCEBUFFERDIMENSION0_t unSOURCEBUFFERDIMENSION0; /*!< 0x00000010 Source buffer dimension of layer 0. */
  un_VIDEOSS_FETCHECO1_COLORCOMPONENTBITS0_t unCOLORCOMPONENTBITS0; /*!< 0x00000014 Size of color components for RGB, YUV and index formats
                                                                                (layer 0). */
  un_VIDEOSS_FETCHECO1_COLORCOMPONENTSHIFT0_t unCOLORCOMPONENTSHIFT0; /*!< 0x00000018 Bit position of color components for RGB, YUV and index
                                                                                formats (layer 0). */
  un_VIDEOSS_FETCHECO1_LAYEROFFSET0_t unLAYEROFFSET0;  /*!< 0x0000001C Position of layer 0 within the destination frame. */
  un_VIDEOSS_FETCHECO1_CLIPWINDOWOFFSET0_t unCLIPWINDOWOFFSET0; /*!< 0x00000020 Clip window position for layer 0. */
  un_VIDEOSS_FETCHECO1_CLIPWINDOWDIMENSIONS0_t unCLIPWINDOWDIMENSIONS0; /*!< 0x00000024 Clip window size for layer 0. */
  un_VIDEOSS_FETCHECO1_CONSTANTCOLOR0_t unCONSTANTCOLOR0; /*!< 0x00000028 Constant color for layer 0. */
  un_VIDEOSS_FETCHECO1_LAYERPROPERTY0_t unLAYERPROPERTY0; /*!< 0x0000002C Common properties of layer 0. */
  un_VIDEOSS_FETCHECO1_FRAMEDIMENSIONS_t unFRAMEDIMENSIONS; /*!< 0x00000030 Output frame dimension. */
  un_VIDEOSS_FETCHECO1_FRAMERESAMPLING_t unFRAMERESAMPLING; /*!< 0x00000034 Resampling options for output frame. */
  un_VIDEOSS_FETCHECO1_CONTROL_t   unCONTROL;          /*!< 0x00000038 Shared common control settings for all layers. */
  un_VIDEOSS_FETCHECO1_CONTROLTRIGGER_t unCONTROLTRIGGER; /*!< 0x0000003C Shadow load trigger. */
  un_VIDEOSS_FETCHECO1_START_t     unSTART;            /*!< 0x00000040 Frame start trigger. */
  un_VIDEOSS_FETCHECO1_FETCHTYPE_t unFETCHTYPE;        /*!< 0x00000044 Fetch unit type. */
  un_VIDEOSS_FETCHECO1_BURSTBUFFERPROPERTIES_t unBURSTBUFFERPROPERTIES; /*!< 0x00000048 Burst buffer properties. */
  uint32_t                         au32Reserved[237];
} stc_VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHECO1_t;        /*!< Size = 1024 (0x400) */

/**
  * \brief FetchLayer #1 (Display) (VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1)
  */
typedef struct stc_VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1 {
  un_VIDEOSS_FETCHLAYER1_STATICCONTROL_t unSTATICCONTROL; /*!< 0x00000000 Common static control options. */
  un_VIDEOSS_FETCHLAYER1_BURSTBUFFERMANAGEMENT_t unBURSTBUFFERMANAGEMENT; /*!< 0x00000004 AXI interface buffer management register */
  un_VIDEOSS_FETCHLAYER1_BASEADDRESS0_t unBASEADDRESS0; /*!< 0x00000008 Source buffer base address of layer 0. */
  un_VIDEOSS_FETCHLAYER1_SOURCEBUFFERATTRIBUTES0_t unSOURCEBUFFERATTRIBUTES0; /*!< 0x0000000C Source buffer attributes for layer 0. */
  un_VIDEOSS_FETCHLAYER1_SOURCEBUFFERDIMENSION0_t unSOURCEBUFFERDIMENSION0; /*!< 0x00000010 Source buffer dimension of layer 0. */
  un_VIDEOSS_FETCHLAYER1_COLORCOMPONENTBITS0_t unCOLORCOMPONENTBITS0; /*!< 0x00000014 Size of color components for RGB, YUV and index formats
                                                                                (layer 0). */
  un_VIDEOSS_FETCHLAYER1_COLORCOMPONENTSHIFT0_t unCOLORCOMPONENTSHIFT0; /*!< 0x00000018 Bit position of color components for RGB, YUV and index
                                                                                formats (layer 0). */
  un_VIDEOSS_FETCHLAYER1_LAYEROFFSET0_t unLAYEROFFSET0; /*!< 0x0000001C Position of layer 0 within the destination frame. */
  un_VIDEOSS_FETCHLAYER1_CLIPWINDOWOFFSET0_t unCLIPWINDOWOFFSET0; /*!< 0x00000020 Clip window position for layer 0. */
  un_VIDEOSS_FETCHLAYER1_CLIPWINDOWDIMENSIONS0_t unCLIPWINDOWDIMENSIONS0; /*!< 0x00000024 Clip window size for layer 0. */
  un_VIDEOSS_FETCHLAYER1_CONSTANTCOLOR0_t unCONSTANTCOLOR0; /*!< 0x00000028 Constant color for layer 0. */
  un_VIDEOSS_FETCHLAYER1_LAYERPROPERTY0_t unLAYERPROPERTY0; /*!< 0x0000002C Common properties of layer 0. */
  un_VIDEOSS_FETCHLAYER1_BASEADDRESS1_t unBASEADDRESS1; /*!< 0x00000030 Source buffer base address of layer 1. */
  un_VIDEOSS_FETCHLAYER1_SOURCEBUFFERATTRIBUTES1_t unSOURCEBUFFERATTRIBUTES1; /*!< 0x00000034 Source buffer attributes for layer 1. */
  un_VIDEOSS_FETCHLAYER1_SOURCEBUFFERDIMENSION1_t unSOURCEBUFFERDIMENSION1; /*!< 0x00000038 Source buffer dimensions of layer 1, */
  un_VIDEOSS_FETCHLAYER1_COLORCOMPONENTBITS1_t unCOLORCOMPONENTBITS1; /*!< 0x0000003C Size of color components for RGB, YUV and index formats
                                                                                (layer 1). */
  un_VIDEOSS_FETCHLAYER1_COLORCOMPONENTSHIFT1_t unCOLORCOMPONENTSHIFT1; /*!< 0x00000040 Bit position of color components for RGB, YUV and index
                                                                                formats (layer 1). */
  un_VIDEOSS_FETCHLAYER1_LAYEROFFSET1_t unLAYEROFFSET1; /*!< 0x00000044 Position of layer 1 within the destination frame. */
  un_VIDEOSS_FETCHLAYER1_CLIPWINDOWOFFSET1_t unCLIPWINDOWOFFSET1; /*!< 0x00000048 Clip window position for layer 1. */
  un_VIDEOSS_FETCHLAYER1_CLIPWINDOWDIMENSIONS1_t unCLIPWINDOWDIMENSIONS1; /*!< 0x0000004C Clip window size for layer 1. */
  un_VIDEOSS_FETCHLAYER1_CONSTANTCOLOR1_t unCONSTANTCOLOR1; /*!< 0x00000050 Constant color for layer 1. */
  un_VIDEOSS_FETCHLAYER1_LAYERPROPERTY1_t unLAYERPROPERTY1; /*!< 0x00000054 Common properties of layer 1. */
  un_VIDEOSS_FETCHLAYER1_BASEADDRESS2_t unBASEADDRESS2; /*!< 0x00000058 Source buffer base address of layer 2. */
  un_VIDEOSS_FETCHLAYER1_SOURCEBUFFERATTRIBUTES2_t unSOURCEBUFFERATTRIBUTES2; /*!< 0x0000005C Source buffer attributes for layer 2. */
  un_VIDEOSS_FETCHLAYER1_SOURCEBUFFERDIMENSION2_t unSOURCEBUFFERDIMENSION2; /*!< 0x00000060 Source buffer dimension of layer 2. */
  un_VIDEOSS_FETCHLAYER1_COLORCOMPONENTBITS2_t unCOLORCOMPONENTBITS2; /*!< 0x00000064 Size of color components for RGB, YUV and index formats
                                                                                (layer 2). */
  un_VIDEOSS_FETCHLAYER1_COLORCOMPONENTSHIFT2_t unCOLORCOMPONENTSHIFT2; /*!< 0x00000068 Bit position of color components for RGB, YUV and index
                                                                                formats (layer 2). */
  un_VIDEOSS_FETCHLAYER1_LAYEROFFSET2_t unLAYEROFFSET2; /*!< 0x0000006C Position of layer 2 within the destination frame. */
  un_VIDEOSS_FETCHLAYER1_CLIPWINDOWOFFSET2_t unCLIPWINDOWOFFSET2; /*!< 0x00000070 Clip window position for layer 2. */
  un_VIDEOSS_FETCHLAYER1_CLIPWINDOWDIMENSIONS2_t unCLIPWINDOWDIMENSIONS2; /*!< 0x00000074 Clip window size for layer 2. */
  un_VIDEOSS_FETCHLAYER1_CONSTANTCOLOR2_t unCONSTANTCOLOR2; /*!< 0x00000078 Constant color for layer 2. */
  un_VIDEOSS_FETCHLAYER1_LAYERPROPERTY2_t unLAYERPROPERTY2; /*!< 0x0000007C Common properties of layer 2. */
  un_VIDEOSS_FETCHLAYER1_BASEADDRESS3_t unBASEADDRESS3; /*!< 0x00000080 Source buffer base address of layer 3. */
  un_VIDEOSS_FETCHLAYER1_SOURCEBUFFERATTRIBUTES3_t unSOURCEBUFFERATTRIBUTES3; /*!< 0x00000084 Source buffer attributes for layer 3. */
  un_VIDEOSS_FETCHLAYER1_SOURCEBUFFERDIMENSION3_t unSOURCEBUFFERDIMENSION3; /*!< 0x00000088 Source buffer dimension of layer 3. */
  un_VIDEOSS_FETCHLAYER1_COLORCOMPONENTBITS3_t unCOLORCOMPONENTBITS3; /*!< 0x0000008C Size of color components for RGB, YUV and index formats
                                                                                (layer 3). */
  un_VIDEOSS_FETCHLAYER1_COLORCOMPONENTSHIFT3_t unCOLORCOMPONENTSHIFT3; /*!< 0x00000090 Bit position of color components for RGB, YUV and index
                                                                                formats (layer 3). */
  un_VIDEOSS_FETCHLAYER1_LAYEROFFSET3_t unLAYEROFFSET3; /*!< 0x00000094 Position of layer 3 within the destination frame. */
  un_VIDEOSS_FETCHLAYER1_CLIPWINDOWOFFSET3_t unCLIPWINDOWOFFSET3; /*!< 0x00000098 Clip window position for layer 3. */
  un_VIDEOSS_FETCHLAYER1_CLIPWINDOWDIMENSIONS3_t unCLIPWINDOWDIMENSIONS3; /*!< 0x0000009C Clip window size for layer 3. */
  un_VIDEOSS_FETCHLAYER1_CONSTANTCOLOR3_t unCONSTANTCOLOR3; /*!< 0x000000A0 Constant color for layer 3. */
  un_VIDEOSS_FETCHLAYER1_LAYERPROPERTY3_t unLAYERPROPERTY3; /*!< 0x000000A4 Common properties of layer 3. */
  un_VIDEOSS_FETCHLAYER1_BASEADDRESS4_t unBASEADDRESS4; /*!< 0x000000A8 Source buffer base address of layer 4. */
  un_VIDEOSS_FETCHLAYER1_SOURCEBUFFERATTRIBUTES4_t unSOURCEBUFFERATTRIBUTES4; /*!< 0x000000AC Source buffer attributes for layer 4. */
  un_VIDEOSS_FETCHLAYER1_SOURCEBUFFERDIMENSION4_t unSOURCEBUFFERDIMENSION4; /*!< 0x000000B0 Source buffer dimension of layer 4. */
  un_VIDEOSS_FETCHLAYER1_COLORCOMPONENTBITS4_t unCOLORCOMPONENTBITS4; /*!< 0x000000B4 Size of color components for RGB, YUV and index formats
                                                                                (layer 4). */
  un_VIDEOSS_FETCHLAYER1_COLORCOMPONENTSHIFT4_t unCOLORCOMPONENTSHIFT4; /*!< 0x000000B8 Bit position of color components for RGB, YUV and index
                                                                                formats (layer 4). */
  un_VIDEOSS_FETCHLAYER1_LAYEROFFSET4_t unLAYEROFFSET4; /*!< 0x000000BC Position of layer 4 within the destination frame. */
  un_VIDEOSS_FETCHLAYER1_CLIPWINDOWOFFSET4_t unCLIPWINDOWOFFSET4; /*!< 0x000000C0 Clip window position for layer 4. */
  un_VIDEOSS_FETCHLAYER1_CLIPWINDOWDIMENSIONS4_t unCLIPWINDOWDIMENSIONS4; /*!< 0x000000C4 Clip window size for layer 4. */
  un_VIDEOSS_FETCHLAYER1_CONSTANTCOLOR4_t unCONSTANTCOLOR4; /*!< 0x000000C8 Constant color for layer 4. */
  un_VIDEOSS_FETCHLAYER1_LAYERPROPERTY4_t unLAYERPROPERTY4; /*!< 0x000000CC Common properties of layer 4. */
  un_VIDEOSS_FETCHLAYER1_BASEADDRESS5_t unBASEADDRESS5; /*!< 0x000000D0 Source buffer base address of layer 5. */
  un_VIDEOSS_FETCHLAYER1_SOURCEBUFFERATTRIBUTES5_t unSOURCEBUFFERATTRIBUTES5; /*!< 0x000000D4 Source buffer attributes for layer 5. */
  un_VIDEOSS_FETCHLAYER1_SOURCEBUFFERDIMENSION5_t unSOURCEBUFFERDIMENSION5; /*!< 0x000000D8 Source buffer dimension of layer 5. */
  un_VIDEOSS_FETCHLAYER1_COLORCOMPONENTBITS5_t unCOLORCOMPONENTBITS5; /*!< 0x000000DC Size of color components for RGB, YUV and index formats
                                                                                (layer 5). */
  un_VIDEOSS_FETCHLAYER1_COLORCOMPONENTSHIFT5_t unCOLORCOMPONENTSHIFT5; /*!< 0x000000E0 Bit position of color components for RGB, YUV and index
                                                                                formats (layer 5). */
  un_VIDEOSS_FETCHLAYER1_LAYEROFFSET5_t unLAYEROFFSET5; /*!< 0x000000E4 Position of layer 5 within the destination frame. */
  un_VIDEOSS_FETCHLAYER1_CLIPWINDOWOFFSET5_t unCLIPWINDOWOFFSET5; /*!< 0x000000E8 Clip window position for layer 5. */
  un_VIDEOSS_FETCHLAYER1_CLIPWINDOWDIMENSIONS5_t unCLIPWINDOWDIMENSIONS5; /*!< 0x000000EC Clip window size for layer 5. */
  un_VIDEOSS_FETCHLAYER1_CONSTANTCOLOR5_t unCONSTANTCOLOR5; /*!< 0x000000F0 Constant color for layer 5. */
  un_VIDEOSS_FETCHLAYER1_LAYERPROPERTY5_t unLAYERPROPERTY5; /*!< 0x000000F4 Common properties of layer 5. */
  un_VIDEOSS_FETCHLAYER1_BASEADDRESS6_t unBASEADDRESS6; /*!< 0x000000F8 Source buffer base address of layer 6. */
  un_VIDEOSS_FETCHLAYER1_SOURCEBUFFERATTRIBUTES6_t unSOURCEBUFFERATTRIBUTES6; /*!< 0x000000FC Source buffer attributes for layer 6. */
  un_VIDEOSS_FETCHLAYER1_SOURCEBUFFERDIMENSION6_t unSOURCEBUFFERDIMENSION6; /*!< 0x00000100 Source buffer dimension of layer 6. */
  un_VIDEOSS_FETCHLAYER1_COLORCOMPONENTBITS6_t unCOLORCOMPONENTBITS6; /*!< 0x00000104 Size of color components for RGB, YUV and index formats
                                                                                (layer 6). */
  un_VIDEOSS_FETCHLAYER1_COLORCOMPONENTSHIFT6_t unCOLORCOMPONENTSHIFT6; /*!< 0x00000108 Bit position of color components for RGB, YUV and index
                                                                                formats (layer 6). */
  un_VIDEOSS_FETCHLAYER1_LAYEROFFSET6_t unLAYEROFFSET6; /*!< 0x0000010C Position of layer 1 within the destination frame. */
  un_VIDEOSS_FETCHLAYER1_CLIPWINDOWOFFSET6_t unCLIPWINDOWOFFSET6; /*!< 0x00000110 Clip window position for layer 6. */
  un_VIDEOSS_FETCHLAYER1_CLIPWINDOWDIMENSIONS6_t unCLIPWINDOWDIMENSIONS6; /*!< 0x00000114 Clip window size for layer 6. */
  un_VIDEOSS_FETCHLAYER1_CONSTANTCOLOR6_t unCONSTANTCOLOR6; /*!< 0x00000118 Constant color for layer 6. */
  un_VIDEOSS_FETCHLAYER1_LAYERPROPERTY6_t unLAYERPROPERTY6; /*!< 0x0000011C Common properties of layer 6. */
  un_VIDEOSS_FETCHLAYER1_BASEADDRESS7_t unBASEADDRESS7; /*!< 0x00000120 Source buffer base address of layer 7. */
  un_VIDEOSS_FETCHLAYER1_SOURCEBUFFERATTRIBUTES7_t unSOURCEBUFFERATTRIBUTES7; /*!< 0x00000124 Source buffer stride for layer 7. */
  un_VIDEOSS_FETCHLAYER1_SOURCEBUFFERDIMENSION7_t unSOURCEBUFFERDIMENSION7; /*!< 0x00000128 Source buffer dimension of layer 7. */
  un_VIDEOSS_FETCHLAYER1_COLORCOMPONENTBITS7_t unCOLORCOMPONENTBITS7; /*!< 0x0000012C Size of color components for RGB, YUV and index formats
                                                                                (layer 7). */
  un_VIDEOSS_FETCHLAYER1_COLORCOMPONENTSHIFT7_t unCOLORCOMPONENTSHIFT7; /*!< 0x00000130 Bit position of color components for RGB, YUV and index
                                                                                formats (layer 7). */
  un_VIDEOSS_FETCHLAYER1_LAYEROFFSET7_t unLAYEROFFSET7; /*!< 0x00000134 Position of layer 7 within the destination frame. */
  un_VIDEOSS_FETCHLAYER1_CLIPWINDOWOFFSET7_t unCLIPWINDOWOFFSET7; /*!< 0x00000138 Clip window position for layer 7. */
  un_VIDEOSS_FETCHLAYER1_CLIPWINDOWDIMENSIONS7_t unCLIPWINDOWDIMENSIONS7; /*!< 0x0000013C Clip window size for layer 7. */
  un_VIDEOSS_FETCHLAYER1_CONSTANTCOLOR7_t unCONSTANTCOLOR7; /*!< 0x00000140 Constant color for layer 7. */
  un_VIDEOSS_FETCHLAYER1_LAYERPROPERTY7_t unLAYERPROPERTY7; /*!< 0x00000144 Common properties of layer 7. */
  un_VIDEOSS_FETCHLAYER1_FRAMEDIMENSIONS_t unFRAMEDIMENSIONS; /*!< 0x00000148 Output frame dimension. */
  un_VIDEOSS_FETCHLAYER1_FRAMERESAMPLING_t unFRAMERESAMPLING; /*!< 0x0000014C Resampling options for output frame. */
  un_VIDEOSS_FETCHLAYER1_CONTROL_t unCONTROL;          /*!< 0x00000150 Shared common control settings for all layers. */
  un_VIDEOSS_FETCHLAYER1_TRIGGERENABLE_t unTRIGGERENABLE; /*!< 0x00000154 Shadow load enable flags for all layers. */
  un_VIDEOSS_FETCHLAYER1_CONTROLTRIGGER_t unCONTROLTRIGGER; /*!< 0x00000158 Shadow load trigger. */
  un_VIDEOSS_FETCHLAYER1_START_t   unSTART;            /*!< 0x0000015C Frame start trigger. */
  un_VIDEOSS_FETCHLAYER1_FETCHTYPE_t unFETCHTYPE;      /*!< 0x00000160 Fetch unit type. */
  un_VIDEOSS_FETCHLAYER1_BURSTBUFFERPROPERTIES_t unBURSTBUFFERPROPERTIES; /*!< 0x00000164 Burst buffer properties. */
  un_VIDEOSS_FETCHLAYER1_STATUS_t  unSTATUS;           /*!< 0x00000168 Status information. */
  uint32_t                         au32Reserved[165];
} stc_VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_t;        /*!< Size = 1024 (0x400) */

/**
  * \brief FetchDecode #0 (Display) (VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHDECODE0)
  */
typedef struct stc_VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHDECODE0 {
  un_VIDEOSS_FETCHDECODE0_STATICCONTROL_t unSTATICCONTROL; /*!< 0x00000000 Common static control options. */
  un_VIDEOSS_FETCHDECODE0_BURSTBUFFERMANAGEMENT_t unBURSTBUFFERMANAGEMENT; /*!< 0x00000004 AXI interface buffer management register */
  un_VIDEOSS_FETCHDECODE0_RINGBUFSTARTADDR0_t unRINGBUFSTARTADDR0; /*!< 0x00000008 Ring buffer setup for layer 0. */
  un_VIDEOSS_FETCHDECODE0_RINGBUFWRAPADDR0_t unRINGBUFWRAPADDR0; /*!< 0x0000000C Ring buffer setup for layer 0. */
  un_VIDEOSS_FETCHDECODE0_FRAMEPROPERTIES0_t unFRAMEPROPERTIES0; /*!< 0x00000010 Frame property setup for layer 0. */
  un_VIDEOSS_FETCHDECODE0_BASEADDRESS0_t unBASEADDRESS0; /*!< 0x00000014 Source buffer base address of layer 0. */
  un_VIDEOSS_FETCHDECODE0_SOURCEBUFFERATTRIBUTES0_t unSOURCEBUFFERATTRIBUTES0; /*!< 0x00000018 Source buffer attributes for layer 0. */
  un_VIDEOSS_FETCHDECODE0_SOURCEBUFFERDIMENSION0_t unSOURCEBUFFERDIMENSION0; /*!< 0x0000001C Source buffer dimension of layer 0. */
  un_VIDEOSS_FETCHDECODE0_COLORCOMPONENTBITS0_t unCOLORCOMPONENTBITS0; /*!< 0x00000020 Size of color components for RGB, YUV and index formats
                                                                                (layer 0). */
  un_VIDEOSS_FETCHDECODE0_COLORCOMPONENTSHIFT0_t unCOLORCOMPONENTSHIFT0; /*!< 0x00000024 Bit position of color components for RGB, YUV and index
                                                                                formats (layer 0). */
  un_VIDEOSS_FETCHDECODE0_LAYEROFFSET0_t unLAYEROFFSET0; /*!< 0x00000028 Position of layer 0 within the destination frame. */
  un_VIDEOSS_FETCHDECODE0_CLIPWINDOWOFFSET0_t unCLIPWINDOWOFFSET0; /*!< 0x0000002C Clip window position for layer 0. */
  un_VIDEOSS_FETCHDECODE0_CLIPWINDOWDIMENSIONS0_t unCLIPWINDOWDIMENSIONS0; /*!< 0x00000030 Clip window size for layer 0. */
  un_VIDEOSS_FETCHDECODE0_CONSTANTCOLOR0_t unCONSTANTCOLOR0; /*!< 0x00000034 Constant color for layer 0. */
  un_VIDEOSS_FETCHDECODE0_LAYERPROPERTY0_t unLAYERPROPERTY0; /*!< 0x00000038 Common properties of layer 0. */
  un_VIDEOSS_FETCHDECODE0_FRAMEDIMENSIONS_t unFRAMEDIMENSIONS; /*!< 0x0000003C Output frame dimension. */
  un_VIDEOSS_FETCHDECODE0_FRAMERESAMPLING_t unFRAMERESAMPLING; /*!< 0x00000040 Resampling options for output frame. */
  un_VIDEOSS_FETCHDECODE0_DECODECONTROL_t unDECODECONTROL; /*!< 0x00000044 Control options for RLAD decompression. */
  un_VIDEOSS_FETCHDECODE0_SOURCEBUFFERLENGTH_t unSOURCEBUFFERLENGTH; /*!< 0x00000048 Source buffer length for compressed data. */
  un_VIDEOSS_FETCHDECODE0_CONTROL_t unCONTROL;         /*!< 0x0000004C Shared common control settings for all layers. */
  un_VIDEOSS_FETCHDECODE0_CONTROLTRIGGER_t unCONTROLTRIGGER; /*!< 0x00000050 Shadow load trigger. */
  un_VIDEOSS_FETCHDECODE0_START_t  unSTART;            /*!< 0x00000054 Frame start trigger. */
  un_VIDEOSS_FETCHDECODE0_FETCHTYPE_t unFETCHTYPE;     /*!< 0x00000058 Fetch unit type. */
  un_VIDEOSS_FETCHDECODE0_DECODERSTATUS_t unDECODERSTATUS; /*!< 0x0000005C Status information of the RLAD decoder. */
  un_VIDEOSS_FETCHDECODE0_READADDRESS0_t unREADADDRESS0; /*!< 0x00000060 Ring buffer synchronization for layer 0. */
  un_VIDEOSS_FETCHDECODE0_BURSTBUFFERPROPERTIES_t unBURSTBUFFERPROPERTIES; /*!< 0x00000064 Burst buffer properties. */
  un_VIDEOSS_FETCHDECODE0_STATUS_t unSTATUS;           /*!< 0x00000068 Status information. */
  uint32_t                         au32Reserved[229];
} stc_VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHDECODE0_t;        /*!< Size = 1024 (0x400) */

/**
  * \brief Video Processing Block #0 GammaCor (Capture) (VIDEOSS_VIDEOIO_SUBIO_COMPENG_GAMMACOR4)
  */
typedef struct stc_VIDEOSS_VIDEOIO_SUBIO_COMPENG_GAMMACOR4 {
  un_VIDEOSS_GAMMACOR4_STATICCONTROL_t unSTATICCONTROL; /*!< 0x00000000 Static control settings. */
  un_VIDEOSS_GAMMACOR4_LUTSTART_t  unLUTSTART;         /*!< 0x00000004 Start values for look-up table programming. */
  un_VIDEOSS_GAMMACOR4_LUTDELTAS_t unLUTDELTAS;        /*!< 0x00000008 Delta values for look-up table programming. */
  un_VIDEOSS_GAMMACOR4_CONTROL_t   unCONTROL;          /*!< 0x0000000C Dynamic control settings. */
  uint32_t                         au32Reserved[252];
} stc_VIDEOSS_VIDEOIO_SUBIO_COMPENG_GAMMACOR4_t;        /*!< Size = 1024 (0x400) */

/**
  * \brief Video Processing Block #0 Matrix (Capture) (VIDEOSS_VIDEOIO_SUBIO_COMPENG_MATRIX4)
  */
typedef struct stc_VIDEOSS_VIDEOIO_SUBIO_COMPENG_MATRIX4 {
  un_VIDEOSS_MATRIX4_STATICCONTROL_t unSTATICCONTROL;  /*!< 0x00000000 Color Matrix static control register */
  un_VIDEOSS_MATRIX4_CONTROL_t     unCONTROL;          /*!< 0x00000004 Color Matrix control register */
  un_VIDEOSS_MATRIX4_RED0_t        unRED0;             /*!< 0x00000008 Matrix values for calculation of the red output value. */
  un_VIDEOSS_MATRIX4_RED1_t        unRED1;             /*!< 0x0000000C Matrix values for calculation of the red output value. */
  un_VIDEOSS_MATRIX4_GREEN0_t      unGREEN0;           /*!< 0x00000010 Matrix values for calculation of the green output value. */
  un_VIDEOSS_MATRIX4_GREEN1_t      unGREEN1;           /*!< 0x00000014 Matrix values for calculation of the green output value. */
  un_VIDEOSS_MATRIX4_BLUE0_t       unBLUE0;            /*!< 0x00000018 Matrix values for calculation of the blue output value. */
  un_VIDEOSS_MATRIX4_BLUE1_t       unBLUE1;            /*!< 0x0000001C Matrix values for calculation of the blue output value. */
  un_VIDEOSS_MATRIX4_ALPHA0_t      unALPHA0;           /*!< 0x00000020 Matrix values for calculation of the alpha output value. */
  un_VIDEOSS_MATRIX4_ALPHA1_t      unALPHA1;           /*!< 0x00000024 Matrix values for calculation of the alpha output value. */
  un_VIDEOSS_MATRIX4_OFFSETVECTOR0_t unOFFSETVECTOR0;  /*!< 0x00000028 Offset vectors for red and green output. */
  un_VIDEOSS_MATRIX4_OFFSETVECTOR1_t unOFFSETVECTOR1;  /*!< 0x0000002C Offset vectors for blue and alpha output. */
  uint32_t                         au32Reserved[244];
} stc_VIDEOSS_VIDEOIO_SUBIO_COMPENG_MATRIX4_t;         /*!< Size = 1024 (0x400) */

/**
  * \brief GPscaler #4 (Capture) (VIDEOSS_VIDEOIO_SUBIO_COMPENG_GPSCALER4)
  */
typedef struct stc_VIDEOSS_VIDEOIO_SUBIO_COMPENG_GPSCALER4 {
  un_VIDEOSS_GPSCALER4_STATICCONTROL_t unSTATICCONTROL; /*!< 0x00000000 Static control settings that must typically be setup
                                                                                once only. */
  un_VIDEOSS_GPSCALER4_CONTROL_t   unCONTROL;          /*!< 0x00000004 Global operation control. */
  un_VIDEOSS_GPSCALER4_OUTPUTDIMENSION_t unOUTPUTDIMENSION; /*!< 0x00000008 Dimensions of the output frame or fame slice. This
                                                                                values are required for both FIR filter and
                                                                                scaler, since their output may have other
                                                                                dimension than input. The dimension of scaler's
                                                                                output is defined by the scale factor. The
                                                                                dimension of FIR filter's output depends on the
                                                                                tiling at the begin and the end of the slice. */
  un_VIDEOSS_GPSCALER4_SCALERCONTROL_t unSCALERCONTROL; /*!< 0x0000000C Scaler operation control. */
  un_VIDEOSS_GPSCALER4_SCALERSETUPH0_t unSCALERSETUPH0; /*!< 0x00000010 Phase interpolator setup. */
  un_VIDEOSS_GPSCALER4_SCALERSETUPH1_t unSCALERSETUPH1; /*!< 0x00000014 Phase interpolator setup. */
  un_VIDEOSS_GPSCALER4_SCALERSETUPV0_t unSCALERSETUPV0; /*!< 0x00000018 Phase interpolator setup. */
  un_VIDEOSS_GPSCALER4_SCALERSETUPV1_t unSCALERSETUPV1; /*!< 0x0000001C Phase interpolator setup, selected if input and output
                                                                                field polarity is 0. */
  un_VIDEOSS_GPSCALER4_SCALERSETUPV2_t unSCALERSETUPV2; /*!< 0x00000020 Phase interpolator setup, selected if input field
                                                                                polarity is 1 and output field polarity is 0. */
  un_VIDEOSS_GPSCALER4_SCALERSETUPV3_t unSCALERSETUPV3; /*!< 0x00000024 Phase interpolator setup, selected if input field
                                                                                polarity is 0 and output field polarity is 1. */
  un_VIDEOSS_GPSCALER4_SCALERSETUPV4_t unSCALERSETUPV4; /*!< 0x00000028 Phase interpolator setup, selected if input and output
                                                                                field polarity is 1. */
  un_VIDEOSS_GPSCALER4_FILTERCONTROL_t unFILTERCONTROL; /*!< 0x0000002C Filter operation control. */
  un_VIDEOSS_GPSCALER4_TILECOLORRGB_t unTILECOLORRGB;  /*!< 0x00000030 Color for outside of the slice. */
  un_VIDEOSS_GPSCALER4_COEFFICIENTSH0_t unCOEFFICIENTSH0; /*!< 0x00000034 Horizontal coefficients for filter_mode FIR. */
  un_VIDEOSS_GPSCALER4_COEFFICIENTSH1_t unCOEFFICIENTSH1; /*!< 0x00000038 Horizontal coefficients for filter_mode FIR. */
  un_VIDEOSS_GPSCALER4_COEFFICIENTSH2_t unCOEFFICIENTSH2; /*!< 0x0000003C Horizontal coefficients for filter_mode FIR. */
  un_VIDEOSS_GPSCALER4_COEFFICIENTSH3_t unCOEFFICIENTSH3; /*!< 0x00000040 Horizontal coefficients for filter_mode FIR. */
  un_VIDEOSS_GPSCALER4_COEFFICIENTSV0_t unCOEFFICIENTSV0; /*!< 0x00000044 Vertical coefficients for filter_mode FIR. */
  un_VIDEOSS_GPSCALER4_COEFFICIENTSV1_t unCOEFFICIENTSV1; /*!< 0x00000048 Vertical coefficients for filter_mode FIR. */
  un_VIDEOSS_GPSCALER4_COEFFICIENTSV2_t unCOEFFICIENTSV2; /*!< 0x0000004C Vertical coefficients for filter_mode FIR. */
  un_VIDEOSS_GPSCALER4_COEFFICIENTSV3_t unCOEFFICIENTSV3; /*!< 0x00000050 Vertical coefficients for filter_mode FIR. */
  uint32_t                         au32Reserved[235];
} stc_VIDEOSS_VIDEOIO_SUBIO_COMPENG_GPSCALER4_t;        /*!< Size = 1024 (0x400) */

/**
  * \brief Video Processing Block #0 Histogram (Capture) (VIDEOSS_VIDEOIO_SUBIO_COMPENG_HISTOGRAM4)
  */
typedef struct stc_VIDEOSS_VIDEOIO_SUBIO_COMPENG_HISTOGRAM4 {
  un_VIDEOSS_HISTOGRAM4_CONTROL_t  unCONTROL;          /*!< 0x00000000 Controls some settings concerning input components and
                                                                                alpha mask. */
  un_VIDEOSS_HISTOGRAM4_BINPROPERTIES_t unBINPROPERTIES; /*!< 0x00000004 Configures the histogram bins. */
  un_VIDEOSS_HISTOGRAM4_BINCNTTHRESH_t unBINCNTTHRESH; /*!< 0x00000008 Bin counter threshold value. */
  un_VIDEOSS_HISTOGRAM4_CLIPWINUPPERLEFT_t unCLIPWINUPPERLEFT; /*!< 0x0000000C Coordinates of upper left corner of clip window. */
  un_VIDEOSS_HISTOGRAM4_CLIPWINSIZE_t unCLIPWINSIZE;   /*!< 0x00000010 Dimensions of clip window. */
  un_VIDEOSS_HISTOGRAM4_RSLTRDY_t  unRSLTRDY;          /*!< 0x00000014 Measurement result status. */
  un_VIDEOSS_HISTOGRAM4_RSLTFRMINF_t unRSLTFRMINF;     /*!< 0x00000018 Additional information on the measurement results. */
  un_VIDEOSS_HISTOGRAM4_RSLTCOMP0BINIDX_t unRSLTCOMP0BINIDX; /*!< 0x0000001C Results of frame measurement for component 0. */
  un_VIDEOSS_HISTOGRAM4_RSLTCOMP1BINIDX_t unRSLTCOMP1BINIDX; /*!< 0x00000020 Results of frame measurement for component 1. */
  un_VIDEOSS_HISTOGRAM4_RSLTCOMP2BINIDX_t unRSLTCOMP2BINIDX; /*!< 0x00000024 Results of frame measurement for component 2. */
  un_VIDEOSS_HISTOGRAM4_RSLTCOMP0SUM_t unRSLTCOMP0SUM; /*!< 0x00000028 Sum of all component 0 values. */
  un_VIDEOSS_HISTOGRAM4_RSLTCOMP1SUM_t unRSLTCOMP1SUM; /*!< 0x0000002C Sum of all component 1 values. */
  un_VIDEOSS_HISTOGRAM4_RSLTCOMP2SUM_t unRSLTCOMP2SUM; /*!< 0x00000030 Sum of all component 2 values. */
  un_VIDEOSS_HISTOGRAM4_RSLTCOMP0BINCNT_t unRSLTCOMP0BINCNT; /*!< 0x00000034 Bin counters of component 0 histogram. This register do
                                                                                NOT support debugger access followed by software
                                                                                access (they clear on read) */
  un_VIDEOSS_HISTOGRAM4_RSLTCOMP1BINCNT_t unRSLTCOMP1BINCNT; /*!< 0x00000038 Bin counters of component 1 histogram. This register do
                                                                                NOT support debugger access followed by software
                                                                                access (they clear on read) */
  un_VIDEOSS_HISTOGRAM4_RSLTCOMP2BINCNT_t unRSLTCOMP2BINCNT; /*!< 0x0000003C Bin counters of component 2 histogram. This register do
                                                                                NOT support debugger access followed by software
                                                                                access (they clear on read) */
  un_VIDEOSS_HISTOGRAM4_FRMSTRTTRIG_t unFRMSTRTTRIG;   /*!< 0x00000040 Triggers for loading shadow registers and starting
                                                                                measurement with next input frame. */
  uint32_t                         au32Reserved[239];
} stc_VIDEOSS_VIDEOIO_SUBIO_COMPENG_HISTOGRAM4_t;        /*!< Size = 1024 (0x400) */

/**
  * \brief LayerBlend #1 (Display, Alpha Plane 1) (VIDEOSS_VIDEOIO_SUBIO_COMPENG_LAYERBLEND1)
  */
typedef struct stc_VIDEOSS_VIDEOIO_SUBIO_COMPENG_LAYERBLEND1 {
  un_VIDEOSS_LAYERBLEND1_STATICCONTROL_t unSTATICCONTROL; /*!< 0x00000000 Static control settings. */
  un_VIDEOSS_LAYERBLEND1_CONTROL_t unCONTROL;          /*!< 0x00000004 Common control settings. */
  un_VIDEOSS_LAYERBLEND1_BLENDCONTROL_t unBLENDCONTROL; /*!< 0x00000008 Options for blend operations */
  un_VIDEOSS_LAYERBLEND1_POSITION_t unPOSITION;        /*!< 0x0000000C Position of secondary (overlay) input frame */
  uint32_t                         au32Reserved[252];
} stc_VIDEOSS_VIDEOIO_SUBIO_COMPENG_LAYERBLEND1_t;        /*!< Size = 1024 (0x400) */

/**
  * \brief LayerBlend #2 (Display, Alpha Plane 2) (VIDEOSS_VIDEOIO_SUBIO_COMPENG_LAYERBLEND2)
  */
typedef struct stc_VIDEOSS_VIDEOIO_SUBIO_COMPENG_LAYERBLEND2 {
  un_VIDEOSS_LAYERBLEND2_STATICCONTROL_t unSTATICCONTROL; /*!< 0x00000000 Static control settings. */
  un_VIDEOSS_LAYERBLEND2_CONTROL_t unCONTROL;          /*!< 0x00000004 Common control settings. */
  un_VIDEOSS_LAYERBLEND2_BLENDCONTROL_t unBLENDCONTROL; /*!< 0x00000008 Options for blend operations */
  un_VIDEOSS_LAYERBLEND2_POSITION_t unPOSITION;        /*!< 0x0000000C Position of secondary (overlay) input frame */
  uint32_t                         au32Reserved[252];
} stc_VIDEOSS_VIDEOIO_SUBIO_COMPENG_LAYERBLEND2_t;        /*!< Size = 1024 (0x400) */

/**
  * \brief LayerBlend #3 (Display, Alpha Plane 3) (VIDEOSS_VIDEOIO_SUBIO_COMPENG_LAYERBLEND3)
  */
typedef struct stc_VIDEOSS_VIDEOIO_SUBIO_COMPENG_LAYERBLEND3 {
  un_VIDEOSS_LAYERBLEND3_STATICCONTROL_t unSTATICCONTROL; /*!< 0x00000000 Static control settings. */
  un_VIDEOSS_LAYERBLEND3_CONTROL_t unCONTROL;          /*!< 0x00000004 Common control settings. */
  un_VIDEOSS_LAYERBLEND3_BLENDCONTROL_t unBLENDCONTROL; /*!< 0x00000008 Options for blend operations */
  un_VIDEOSS_LAYERBLEND3_POSITION_t unPOSITION;        /*!< 0x0000000C Position of secondary (overlay) input frame */
  uint32_t                         au32Reserved[252];
} stc_VIDEOSS_VIDEOIO_SUBIO_COMPENG_LAYERBLEND3_t;        /*!< Size = 1024 (0x400) */

/**
  * \brief LayerBlend #4 (Display, Alpha Plane 4) (VIDEOSS_VIDEOIO_SUBIO_COMPENG_LAYERBLEND4)
  */
typedef struct stc_VIDEOSS_VIDEOIO_SUBIO_COMPENG_LAYERBLEND4 {
  un_VIDEOSS_LAYERBLEND4_STATICCONTROL_t unSTATICCONTROL; /*!< 0x00000000 Static control settings. */
  un_VIDEOSS_LAYERBLEND4_CONTROL_t unCONTROL;          /*!< 0x00000004 Common control settings. */
  un_VIDEOSS_LAYERBLEND4_BLENDCONTROL_t unBLENDCONTROL; /*!< 0x00000008 Options for blend operations */
  un_VIDEOSS_LAYERBLEND4_POSITION_t unPOSITION;        /*!< 0x0000000C Position of secondary (overlay) input frame */
  uint32_t                         au32Reserved[252];
} stc_VIDEOSS_VIDEOIO_SUBIO_COMPENG_LAYERBLEND4_t;        /*!< Size = 1024 (0x400) */

/**
  * \brief LayerBlend #5 (Display, Alpha Plane 5) (VIDEOSS_VIDEOIO_SUBIO_COMPENG_LAYERBLEND5)
  */
typedef struct stc_VIDEOSS_VIDEOIO_SUBIO_COMPENG_LAYERBLEND5 {
  un_VIDEOSS_LAYERBLEND5_STATICCONTROL_t unSTATICCONTROL; /*!< 0x00000000 Static control settings. */
  un_VIDEOSS_LAYERBLEND5_CONTROL_t unCONTROL;          /*!< 0x00000004 Common control settings. */
  un_VIDEOSS_LAYERBLEND5_BLENDCONTROL_t unBLENDCONTROL; /*!< 0x00000008 Options for blend operations */
  un_VIDEOSS_LAYERBLEND5_POSITION_t unPOSITION;        /*!< 0x0000000C Position of secondary (overlay) input frame */
  uint32_t                         au32Reserved[252];
} stc_VIDEOSS_VIDEOIO_SUBIO_COMPENG_LAYERBLEND5_t;        /*!< Size = 1024 (0x400) */

/**
  * \brief ExtSrc #8 (Display) (VIDEOSS_VIDEOIO_SUBIO_COMPENG_EXTSRC8)
  */
typedef struct stc_VIDEOSS_VIDEOIO_SUBIO_COMPENG_EXTSRC8 {
  un_VIDEOSS_EXTSRC8_STATICCONTROL_t unSTATICCONTROL;  /*!< 0x00000000 ExtSrc static control register */
  un_VIDEOSS_EXTSRC8_CLIPWINDOWOFFSET_t unCLIPWINDOWOFFSET; /*!< 0x00000004 Clip window offset, to generate a clipping of the frame.
                                                                                It has to be within the input frame. */
  un_VIDEOSS_EXTSRC8_CLIPWINDOWDIMENSION_t unCLIPWINDOWDIMENSION; /*!< 0x00000008 Define the clip window dimension. If the clip window
                                                                                feature is enabled this dimension is used for
                                                                                the new frame dimension. Note that the clip
                                                                                window has to be smaller or equal to the
                                                                                original frame dimensions. The new frame has to
                                                                                be within the active area of the original frame. */
  un_VIDEOSS_EXTSRC8_COLORCOMPONENTBITS_t unCOLORCOMPONENTBITS; /*!< 0x0000000C Color component size of raw input data. Please note that
                                                                                the width must be equal or lower than the output
                                                                                width. */
  un_VIDEOSS_EXTSRC8_COLORCOMPONENTSHIFT_t unCOLORCOMPONENTSHIFT; /*!< 0x00000010 Color component offset of raw input data. */
  un_VIDEOSS_EXTSRC8_CONSTANTCOLOR_t unCONSTANTCOLOR;  /*!< 0x00000014 Constant color register */
  un_VIDEOSS_EXTSRC8_CONTROL_t     unCONTROL;          /*!< 0x00000018 Common control settings. */
  un_VIDEOSS_EXTSRC8_CONTROLTRIGGER_t unCONTROLTRIGGER; /*!< 0x0000001C ExtSrc unit trigger token generation */
  un_VIDEOSS_EXTSRC8_START_t       unSTART;            /*!< 0x00000020 ExtSrc unit start register */
  uint32_t                         au32Reserved[247];
} stc_VIDEOSS_VIDEOIO_SUBIO_COMPENG_EXTSRC8_t;         /*!< Size = 1024 (0x400) */

/**
  * \brief Composition Engine (VIDEOSS_VIDEOIO_SUBIO_COMPENG)
  */
typedef struct stc_VIDEOSS_VIDEOIO_SUBIO_COMPENG {
  stc_VIDEOSS_VIDEOIO_SUBIO_COMPENG_COMPENGCFG_t COMPENGCFG; /*!< 0x00000000 Top-Level */
  stc_VIDEOSS_VIDEOIO_SUBIO_COMPENG_CONSTFRAME0_t CONSTFRAME0; /*!< 0x00002000 ConstFrame #0 (Content) */
  stc_VIDEOSS_VIDEOIO_SUBIO_COMPENG_EXTDST0_t EXTDST0; /*!< 0x00002400 ExtDst #0 (Content) */
  stc_VIDEOSS_VIDEOIO_SUBIO_COMPENG_CONSTFRAME4_t CONSTFRAME4; /*!< 0x00002800 ConstFrame #4 (Safety) */
  stc_VIDEOSS_VIDEOIO_SUBIO_COMPENG_EXTDST4_t EXTDST4; /*!< 0x00002C00 ExtDst #4 (Safety) */
  stc_VIDEOSS_VIDEOIO_SUBIO_COMPENG_CONSTFRAME1_t CONSTFRAME1; /*!< 0x00003000 ConstFrame #1 (Content) */
  stc_VIDEOSS_VIDEOIO_SUBIO_COMPENG_EXTDST1_t EXTDST1; /*!< 0x00003400 ExtDst #1 (Content) */
  stc_VIDEOSS_VIDEOIO_SUBIO_COMPENG_CONSTFRAME5_t CONSTFRAME5; /*!< 0x00003800 ConstFrame #5 (Safety) */
  stc_VIDEOSS_VIDEOIO_SUBIO_COMPENG_EXTDST5_t EXTDST5; /*!< 0x00003C00 ExtDst #5 (Safety) */
  stc_VIDEOSS_VIDEOIO_SUBIO_COMPENG_EXTSRC4_t EXTSRC4; /*!< 0x00004000 ExtSrc #0 (Capture) */
  stc_VIDEOSS_VIDEOIO_SUBIO_COMPENG_STORE4_t STORE4;   /*!< 0x00004400 Store #0 (Capture) */
  stc_VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_t FETCHLAYER0; /*!< 0x00004800 FetchLayer #0 (Display) */
  stc_VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHDECODE4_t FETCHDECODE4; /*!< 0x00004C00 FetchDecode #4 (Capture) */
  stc_VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHECO4_t FETCHECO4; /*!< 0x00005000 FetchEco #4 (Capture) */
  uint32_t                         au32Reserved[256];
  stc_VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_t FETCHWARP1; /*!< 0x00005800 FetchWarp #1 (Display) */
  stc_VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHECO1_t FETCHECO1; /*!< 0x00005C00 FetchEco #1 (Display) */
  stc_VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_t FETCHLAYER1; /*!< 0x00006000 FetchLayer #1 (Display) */
  stc_VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHDECODE0_t FETCHDECODE0; /*!< 0x00006400 FetchDecode #0 (Display) */
  stc_VIDEOSS_VIDEOIO_SUBIO_COMPENG_GAMMACOR4_t GAMMACOR4; /*!< 0x00006800 Video Processing Block #0 GammaCor (Capture) */
  stc_VIDEOSS_VIDEOIO_SUBIO_COMPENG_MATRIX4_t MATRIX4; /*!< 0x00006C00 Video Processing Block #0 Matrix (Capture) */
  stc_VIDEOSS_VIDEOIO_SUBIO_COMPENG_GPSCALER4_t GPSCALER4; /*!< 0x00007000 GPscaler #4 (Capture) */
  stc_VIDEOSS_VIDEOIO_SUBIO_COMPENG_HISTOGRAM4_t HISTOGRAM4; /*!< 0x00007400 Video Processing Block #0 Histogram (Capture) */
  stc_VIDEOSS_VIDEOIO_SUBIO_COMPENG_LAYERBLEND1_t LAYERBLEND1; /*!< 0x00007800 LayerBlend #1 (Display, Alpha Plane 1) */
  stc_VIDEOSS_VIDEOIO_SUBIO_COMPENG_LAYERBLEND2_t LAYERBLEND2; /*!< 0x00007C00 LayerBlend #2 (Display, Alpha Plane 2) */
  stc_VIDEOSS_VIDEOIO_SUBIO_COMPENG_LAYERBLEND3_t LAYERBLEND3; /*!< 0x00008000 LayerBlend #3 (Display, Alpha Plane 3) */
  stc_VIDEOSS_VIDEOIO_SUBIO_COMPENG_LAYERBLEND4_t LAYERBLEND4; /*!< 0x00008400 LayerBlend #4 (Display, Alpha Plane 4) */
  stc_VIDEOSS_VIDEOIO_SUBIO_COMPENG_LAYERBLEND5_t LAYERBLEND5; /*!< 0x00008800 LayerBlend #5 (Display, Alpha Plane 5) */
  stc_VIDEOSS_VIDEOIO_SUBIO_COMPENG_EXTSRC8_t EXTSRC8; /*!< 0x00008C00 ExtSrc #8 (Display) */
  uint32_t                         au32Reserved1[7168];
} stc_VIDEOSS_VIDEOIO_SUBIO_COMPENG_t;                 /*!< Size = 65536 (0x10000) */

/**
  * \brief Sub Interface (VIDEOSS_VIDEOIO_SUBIO)
  */
typedef struct stc_VIDEOSS_VIDEOIO_SUBIO {
  stc_VIDEOSS_VIDEOIO_SUBIO_VIDEOIOCFG_t VIDEOIOCFG;   /*!< 0x00000000 Video I/O Core Configuration */
  stc_VIDEOSS_VIDEOIO_SUBIO_FRAMEDUMP_t FRAMEDUMP;     /*!< 0x00000400 Frame Dump Unit */
  uint32_t                         au32Reserved[512];
  stc_VIDEOSS_VIDEOIO_SUBIO_CAPENG0_t CAPENG0[1];      /*!< 0x00001000 Capture Engine */
  uint32_t                         au32Reserved1[14336];
  stc_VIDEOSS_VIDEOIO_SUBIO_COMPENG_t COMPENG[1];      /*!< 0x00010000 Composition Engine */
} stc_VIDEOSS_VIDEOIO_SUBIO_t;                         /*!< Size = 131072 (0x20000) */

/**
  * \brief Top-Level Configuration (VIDEOSS_VIDEOIO_DISENG0_DISENGCFG0)
  */
typedef struct stc_VIDEOSS_VIDEOIO_DISENG0_DISENGCFG0 {
  un_VIDEOSS_DISENGCFG0_CTL_t      unCTL;              /*!< 0x00000000 Display engine control register. */
  un_VIDEOSS_DISENGCFG0_POLARITYCTRL_t unPOLARITYCTRL; /*!< 0x00000004 Polarity control for TCon input and corresponding
                                                                                top-level output (TCon by-pass port). */
  uint32_t                         au32Reserved[2];
  un_VIDEOSS_DISENGCFG0_SIGSELECT_t unSIGSELECT;       /*!< 0x00000010 Tap selection for Signature. */
  uint32_t                         au32Reserved1[3];
  un_VIDEOSS_DISENGCFG0_DUMPSELECT_t unDUMPSELECT;     /*!< 0x00000020 Tap selection for Frame Dump. */
  uint32_t                         au32Reserved2[247];
} stc_VIDEOSS_VIDEOIO_DISENG0_DISENGCFG0_t;            /*!< Size = 1024 (0x400) */

/**
  * \brief Signature Unit (VIDEOSS_VIDEOIO_DISENG0_SIG0)
  */
typedef struct stc_VIDEOSS_VIDEOIO_DISENG0_SIG0 {
  un_VIDEOSS_SIG0_STATICCONTROL_t  unSTATICCONTROL;    /*!< 0x00000000 Global configuration shared by all evaluation windows. */
  un_VIDEOSS_SIG0_PANICCOLOR_t     unPANICCOLOR;       /*!< 0x00000004 Overlay color for evaluation windows in panic mode. */
  un_VIDEOSS_SIG0_EVALCONTROL0_t   unEVALCONTROL0;     /*!< 0x00000008 Control settings for evaluation window 0. */
  un_VIDEOSS_SIG0_EVALUPPERLEFT0_t unEVALUPPERLEFT0;   /*!< 0x0000000C Upper left corner of evaluation window 0. */
  un_VIDEOSS_SIG0_EVALLOWERRIGHT0_t unEVALLOWERRIGHT0; /*!< 0x00000010 Lower right corner of evaluation window 0. */
  un_VIDEOSS_SIG0_SIGCRCREDREF0_t  unSIGCRCREDREF0;    /*!< 0x00000014 Reference signature of red channel for evaluation window
                                                                                0. */
  un_VIDEOSS_SIG0_SIGCRCGREENREF0_t unSIGCRCGREENREF0; /*!< 0x00000018 Reference signature of green channel for evaluation
                                                                                window 0. */
  un_VIDEOSS_SIG0_SIGCRCBLUEREF0_t unSIGCRCBLUEREF0;   /*!< 0x0000001C Reference signature of blue channel for evaluation
                                                                                window 0. */
  un_VIDEOSS_SIG0_SIGCRCRED0_t     unSIGCRCRED0;       /*!< 0x00000020 Measured signature of red channel for evaluation window
                                                                                0. */
  un_VIDEOSS_SIG0_SIGCRCGREEN0_t   unSIGCRCGREEN0;     /*!< 0x00000024 Measured signature of green channel for evaluation
                                                                                window 0. */
  un_VIDEOSS_SIG0_SIGCRCBLUE0_t    unSIGCRCBLUE0;      /*!< 0x00000028 Measured signature of blue channel for evaluation window
                                                                                0. */
  un_VIDEOSS_SIG0_EVALCONTROL1_t   unEVALCONTROL1;     /*!< 0x0000002C Control settings for evaluation window 1. */
  un_VIDEOSS_SIG0_EVALUPPERLEFT1_t unEVALUPPERLEFT1;   /*!< 0x00000030 Upper left corner of evaluation window 1. */
  un_VIDEOSS_SIG0_EVALLOWERRIGHT1_t unEVALLOWERRIGHT1; /*!< 0x00000034 Lower right corner of evaluation window 1. */
  un_VIDEOSS_SIG0_SIGCRCREDREF1_t  unSIGCRCREDREF1;    /*!< 0x00000038 Reference signature of red channel for evaluation window
                                                                                1. */
  un_VIDEOSS_SIG0_SIGCRCGREENREF1_t unSIGCRCGREENREF1; /*!< 0x0000003C Reference signature of green channel for evaluation
                                                                                window 1. */
  un_VIDEOSS_SIG0_SIGCRCBLUEREF1_t unSIGCRCBLUEREF1;   /*!< 0x00000040 Reference signature of blue channel for evaluation
                                                                                window 1. */
  un_VIDEOSS_SIG0_SIGCRCRED1_t     unSIGCRCRED1;       /*!< 0x00000044 Measured signature of red channel for evaluation window
                                                                                1. */
  un_VIDEOSS_SIG0_SIGCRCGREEN1_t   unSIGCRCGREEN1;     /*!< 0x00000048 Measured signature of green channel for evaluation
                                                                                window 1. */
  un_VIDEOSS_SIG0_SIGCRCBLUE1_t    unSIGCRCBLUE1;      /*!< 0x0000004C Measured signature of blue channel for evaluation window
                                                                                1. */
  un_VIDEOSS_SIG0_EVALCONTROL2_t   unEVALCONTROL2;     /*!< 0x00000050 Control settings for evaluation window 2. */
  un_VIDEOSS_SIG0_EVALUPPERLEFT2_t unEVALUPPERLEFT2;   /*!< 0x00000054 Upper left corner of evaluation window 2. */
  un_VIDEOSS_SIG0_EVALLOWERRIGHT2_t unEVALLOWERRIGHT2; /*!< 0x00000058 Lower right corner of evaluation window 2. */
  un_VIDEOSS_SIG0_SIGCRCREDREF2_t  unSIGCRCREDREF2;    /*!< 0x0000005C Reference signature of red channel for evaluation window
                                                                                2. */
  un_VIDEOSS_SIG0_SIGCRCGREENREF2_t unSIGCRCGREENREF2; /*!< 0x00000060 Reference signature of green channel for evaluation
                                                                                window 2. */
  un_VIDEOSS_SIG0_SIGCRCBLUEREF2_t unSIGCRCBLUEREF2;   /*!< 0x00000064 Reference signature of blue channel for evaluation
                                                                                window 2. */
  un_VIDEOSS_SIG0_SIGCRCRED2_t     unSIGCRCRED2;       /*!< 0x00000068 Measured signature of red channel for evaluation window
                                                                                2. */
  un_VIDEOSS_SIG0_SIGCRCGREEN2_t   unSIGCRCGREEN2;     /*!< 0x0000006C Measured signature of green channel for evaluation
                                                                                window 2. */
  un_VIDEOSS_SIG0_SIGCRCBLUE2_t    unSIGCRCBLUE2;      /*!< 0x00000070 Measured signature of blue channel for evaluation window
                                                                                2. */
  un_VIDEOSS_SIG0_EVALCONTROL3_t   unEVALCONTROL3;     /*!< 0x00000074 Control settings for evaluation window 3. */
  un_VIDEOSS_SIG0_EVALUPPERLEFT3_t unEVALUPPERLEFT3;   /*!< 0x00000078 Upper left corner of evaluation window 3. */
  un_VIDEOSS_SIG0_EVALLOWERRIGHT3_t unEVALLOWERRIGHT3; /*!< 0x0000007C Lower right corner of evaluation window 3. */
  un_VIDEOSS_SIG0_SIGCRCREDREF3_t  unSIGCRCREDREF3;    /*!< 0x00000080 Reference signature of red channel for evaluation window
                                                                                3. */
  un_VIDEOSS_SIG0_SIGCRCGREENREF3_t unSIGCRCGREENREF3; /*!< 0x00000084 Reference signature of green channel for evaluation
                                                                                window 3. */
  un_VIDEOSS_SIG0_SIGCRCBLUEREF3_t unSIGCRCBLUEREF3;   /*!< 0x00000088 Reference signature of blue channel for evaluation
                                                                                window 3. */
  un_VIDEOSS_SIG0_SIGCRCRED3_t     unSIGCRCRED3;       /*!< 0x0000008C Measured signature of red channel for evaluation window
                                                                                3. */
  un_VIDEOSS_SIG0_SIGCRCGREEN3_t   unSIGCRCGREEN3;     /*!< 0x00000090 Measured signature of green channel for evaluation
                                                                                window 3. */
  un_VIDEOSS_SIG0_SIGCRCBLUE3_t    unSIGCRCBLUE3;      /*!< 0x00000094 Measured signature of blue channel for evaluation window
                                                                                3. */
  un_VIDEOSS_SIG0_EVALCONTROL4_t   unEVALCONTROL4;     /*!< 0x00000098 Control settings for evaluation window 4. */
  un_VIDEOSS_SIG0_EVALUPPERLEFT4_t unEVALUPPERLEFT4;   /*!< 0x0000009C Upper left corner of evaluation window 4. */
  un_VIDEOSS_SIG0_EVALLOWERRIGHT4_t unEVALLOWERRIGHT4; /*!< 0x000000A0 Lower right corner of evaluation window 4. */
  un_VIDEOSS_SIG0_SIGCRCREDREF4_t  unSIGCRCREDREF4;    /*!< 0x000000A4 Reference signature of red channel for evaluation window
                                                                                4. */
  un_VIDEOSS_SIG0_SIGCRCGREENREF4_t unSIGCRCGREENREF4; /*!< 0x000000A8 Reference signature of green channel for evaluation
                                                                                window 4. */
  un_VIDEOSS_SIG0_SIGCRCBLUEREF4_t unSIGCRCBLUEREF4;   /*!< 0x000000AC Reference signature of blue channel for evaluation
                                                                                window 4. */
  un_VIDEOSS_SIG0_SIGCRCRED4_t     unSIGCRCRED4;       /*!< 0x000000B0 Measured signature of red channel for evaluation window
                                                                                4. */
  un_VIDEOSS_SIG0_SIGCRCGREEN4_t   unSIGCRCGREEN4;     /*!< 0x000000B4 Measured signature of green channel for evaluation
                                                                                window 4. */
  un_VIDEOSS_SIG0_SIGCRCBLUE4_t    unSIGCRCBLUE4;      /*!< 0x000000B8 Measured signature of blue channel for evaluation window
                                                                                4. */
  un_VIDEOSS_SIG0_EVALCONTROL5_t   unEVALCONTROL5;     /*!< 0x000000BC Control settings for evaluation window 5. */
  un_VIDEOSS_SIG0_EVALUPPERLEFT5_t unEVALUPPERLEFT5;   /*!< 0x000000C0 Upper left corner of evaluation window 5. */
  un_VIDEOSS_SIG0_EVALLOWERRIGHT5_t unEVALLOWERRIGHT5; /*!< 0x000000C4 Lower right corner of evaluation window 5. */
  un_VIDEOSS_SIG0_SIGCRCREDREF5_t  unSIGCRCREDREF5;    /*!< 0x000000C8 Reference signature of red channel for evaluation window
                                                                                5. */
  un_VIDEOSS_SIG0_SIGCRCGREENREF5_t unSIGCRCGREENREF5; /*!< 0x000000CC Reference signature of green channel for evaluation
                                                                                window 5. */
  un_VIDEOSS_SIG0_SIGCRCBLUEREF5_t unSIGCRCBLUEREF5;   /*!< 0x000000D0 Reference signature of blue channel for evaluation
                                                                                window 5. */
  un_VIDEOSS_SIG0_SIGCRCRED5_t     unSIGCRCRED5;       /*!< 0x000000D4 Measured signature of red channel for evaluation window
                                                                                5. */
  un_VIDEOSS_SIG0_SIGCRCGREEN5_t   unSIGCRCGREEN5;     /*!< 0x000000D8 Measured signature of green channel for evaluation
                                                                                window 5. */
  un_VIDEOSS_SIG0_SIGCRCBLUE5_t    unSIGCRCBLUE5;      /*!< 0x000000DC Measured signature of blue channel for evaluation window
                                                                                5. */
  un_VIDEOSS_SIG0_EVALCONTROL6_t   unEVALCONTROL6;     /*!< 0x000000E0 Control settings for evaluation window 6. */
  un_VIDEOSS_SIG0_EVALUPPERLEFT6_t unEVALUPPERLEFT6;   /*!< 0x000000E4 Upper left corner of evaluation window 6. */
  un_VIDEOSS_SIG0_EVALLOWERRIGHT6_t unEVALLOWERRIGHT6; /*!< 0x000000E8 Lower right corner of evaluation window 6. */
  un_VIDEOSS_SIG0_SIGCRCREDREF6_t  unSIGCRCREDREF6;    /*!< 0x000000EC Reference signature of red channel for evaluation window
                                                                                6. */
  un_VIDEOSS_SIG0_SIGCRCGREENREF6_t unSIGCRCGREENREF6; /*!< 0x000000F0 Reference signature of green channel for evaluation
                                                                                window 6. */
  un_VIDEOSS_SIG0_SIGCRCBLUEREF6_t unSIGCRCBLUEREF6;   /*!< 0x000000F4 Reference signature of blue channel for evaluation
                                                                                window 6. */
  un_VIDEOSS_SIG0_SIGCRCRED6_t     unSIGCRCRED6;       /*!< 0x000000F8 Measured signature of red channel for evaluation window
                                                                                6. */
  un_VIDEOSS_SIG0_SIGCRCGREEN6_t   unSIGCRCGREEN6;     /*!< 0x000000FC Measured signature of green channel for evaluation
                                                                                window 6. */
  un_VIDEOSS_SIG0_SIGCRCBLUE6_t    unSIGCRCBLUE6;      /*!< 0x00000100 Measured signature of blue channel for evaluation window
                                                                                6. */
  un_VIDEOSS_SIG0_EVALCONTROL7_t   unEVALCONTROL7;     /*!< 0x00000104 Control settings for evaluation window 7. */
  un_VIDEOSS_SIG0_EVALUPPERLEFT7_t unEVALUPPERLEFT7;   /*!< 0x00000108 Upper left corner of evaluation window 7. */
  un_VIDEOSS_SIG0_EVALLOWERRIGHT7_t unEVALLOWERRIGHT7; /*!< 0x0000010C Lower right corner of evaluation window 7. */
  un_VIDEOSS_SIG0_SIGCRCREDREF7_t  unSIGCRCREDREF7;    /*!< 0x00000110 Reference signature of red channel for evaluation window
                                                                                7. */
  un_VIDEOSS_SIG0_SIGCRCGREENREF7_t unSIGCRCGREENREF7; /*!< 0x00000114 Reference signature of green channel for evaluation
                                                                                window 7. */
  un_VIDEOSS_SIG0_SIGCRCBLUEREF7_t unSIGCRCBLUEREF7;   /*!< 0x00000118 Reference signature of blue channel for evaluation
                                                                                window 7. */
  un_VIDEOSS_SIG0_SIGCRCRED7_t     unSIGCRCRED7;       /*!< 0x0000011C Measured signature of red channel for evaluation window
                                                                                7. */
  un_VIDEOSS_SIG0_SIGCRCGREEN7_t   unSIGCRCGREEN7;     /*!< 0x00000120 Measured signature of green channel for evaluation
                                                                                window 7. */
  un_VIDEOSS_SIG0_SIGCRCBLUE7_t    unSIGCRCBLUE7;      /*!< 0x00000124 Measured signature of blue channel for evaluation window
                                                                                7. */
  un_VIDEOSS_SIG0_SHADOWLOAD_t     unSHADOWLOAD;       /*!< 0x00000128 Shadow load control register. */
  un_VIDEOSS_SIG0_CONTINUOUSMODE_t unCONTINUOUSMODE;   /*!< 0x0000012C Signature operation mode control. */
  un_VIDEOSS_SIG0_SOFTWAREKICK_t   unSOFTWAREKICK;     /*!< 0x00000130 Signature measurement trigger. */
  un_VIDEOSS_SIG0_STATUS_t         unSTATUS;           /*!< 0x00000134 Module status. */
  uint32_t                         au32Reserved[178];
} stc_VIDEOSS_VIDEOIO_DISENG0_SIG0_t;                  /*!< Size = 1024 (0x400) */

/**
  * \brief Frame Generator (VIDEOSS_VIDEOIO_DISENG0_FRAMEGEN0)
  */
typedef struct stc_VIDEOSS_VIDEOIO_DISENG0_FRAMEGEN0 {
  un_VIDEOSS_FRAMEGEN0_FGSTCTRL_t  unFGSTCTRL;         /*!< 0x00000000 FrameGen Static Control Register */
  un_VIDEOSS_FRAMEGEN0_HTCFG1_t    unHTCFG1;           /*!< 0x00000004 FrameGen Horizontal Timing Config Register 1 */
  un_VIDEOSS_FRAMEGEN0_HTCFG2_t    unHTCFG2;           /*!< 0x00000008 FrameGen Horizontal Timing Config Register 2 */
  un_VIDEOSS_FRAMEGEN0_VTCFG1_t    unVTCFG1;           /*!< 0x0000000C FrameGen Vertical Timing Config Register 1 */
  un_VIDEOSS_FRAMEGEN0_VTCFG2_t    unVTCFG2;           /*!< 0x00000010 FrameGen Vertical Timing Config Register 2 */
  un_VIDEOSS_FRAMEGEN0_INT0CONFIG_t unINT0CONFIG;      /*!< 0x00000014 Coordinates of the trigger point for generation of the
                                                                                Int0 interrupt signal */
  un_VIDEOSS_FRAMEGEN0_INT1CONFIG_t unINT1CONFIG;      /*!< 0x00000018 Coordinates of the trigger point for generation of the
                                                                                Int1 interrupt signal */
  un_VIDEOSS_FRAMEGEN0_INT2CONFIG_t unINT2CONFIG;      /*!< 0x0000001C Coordinates of the trigger point for generation of the
                                                                                Int2 interrupt signal */
  un_VIDEOSS_FRAMEGEN0_INT3CONFIG_t unINT3CONFIG;      /*!< 0x00000020 Coordinates of the trigger point for generation of the
                                                                                Int3 interrupt signal */
  un_VIDEOSS_FRAMEGEN0_PKICKCONFIG_t unPKICKCONFIG;    /*!< 0x00000024 Coordinates of the trigger point for generation of the
                                                                                primary kick signal */
  un_VIDEOSS_FRAMEGEN0_SKICKCONFIG_t unSKICKCONFIG;    /*!< 0x00000028 Coordinates of the trigger point for generation of the
                                                                                secondary kick signal */
  un_VIDEOSS_FRAMEGEN0_SECSTATCONFIG_t unSECSTATCONFIG; /*!< 0x0000002C Configuration register for controlling the behavior of
                                                                                the SecSyncStat field in the FgSecChStat
                                                                                register. */
  un_VIDEOSS_FRAMEGEN0_FGSRCR1_t   unFGSRCR1;          /*!< 0x00000030 FrameGen Skew Regulation Control Register 1. */
  un_VIDEOSS_FRAMEGEN0_FGSRCR2_t   unFGSRCR2;          /*!< 0x00000034 FrameGen Skew Regulation Control Register 2 */
  un_VIDEOSS_FRAMEGEN0_FGSRCR3_t   unFGSRCR3;          /*!< 0x00000038 FrameGen Skew Regulation Control Register 3 */
  un_VIDEOSS_FRAMEGEN0_FGSRCR4_t   unFGSRCR4;          /*!< 0x0000003C FrameGen Skew Regulation Control Register 4 */
  un_VIDEOSS_FRAMEGEN0_FGSRCR5_t   unFGSRCR5;          /*!< 0x00000040 FrameGen Skew Regulation Control Register 5 */
  un_VIDEOSS_FRAMEGEN0_FGSRCR6_t   unFGSRCR6;          /*!< 0x00000044 FrameGen Skew Regulation Control Register 6 */
  un_VIDEOSS_FRAMEGEN0_FGKSDR_t    unFGKSDR;           /*!< 0x00000048 FrameGen Kick System Debug Register */
  un_VIDEOSS_FRAMEGEN0_PACFG_t     unPACFG;            /*!< 0x0000004C FrameGen Primary Area Config Register 1 (shadowed) */
  un_VIDEOSS_FRAMEGEN0_SACFG_t     unSACFG;            /*!< 0x00000050 FrameGen Secondary Area Config Register 1 (shadowed) */
  un_VIDEOSS_FRAMEGEN0_FGINCTRL_t  unFGINCTRL;         /*!< 0x00000054 FrameGen Input Control Register (shadowed) */
  un_VIDEOSS_FRAMEGEN0_FGINCTRLPANIC_t unFGINCTRLPANIC; /*!< 0x00000058 FrameGen Input Control Panic Register (shadowed) */
  un_VIDEOSS_FRAMEGEN0_FGCCR_t     unFGCCR;            /*!< 0x0000005C FrameGen Constant Color Register (shadowed) */
  un_VIDEOSS_FRAMEGEN0_BLENDCONTROL_t unBLENDCONTROL;  /*!< 0x00000060 Options for blend operations. (shadowed) */
  un_VIDEOSS_FRAMEGEN0_FGENABLE_t  unFGENABLE;         /*!< 0x00000064 FrameGen Enable Register */
  un_VIDEOSS_FRAMEGEN0_FGSLR_t     unFGSLR;            /*!< 0x00000068 FrameGen Shadow Load Register */
  un_VIDEOSS_FRAMEGEN0_FGENSTS_t   unFGENSTS;          /*!< 0x0000006C FrameGen Enable Status Register */
  un_VIDEOSS_FRAMEGEN0_FGTIMESTAMP_t unFGTIMESTAMP;    /*!< 0x00000070 Time stamp status. */
  un_VIDEOSS_FRAMEGEN0_FGCHSTAT_t  unFGCHSTAT;         /*!< 0x00000074 FrameGen Channel Status Register */
  un_VIDEOSS_FRAMEGEN0_FGCHSTATCLR_t unFGCHSTATCLR;    /*!< 0x00000078 FrameGen Channel Status Clear Register */
  un_VIDEOSS_FRAMEGEN0_FGSKEWMON_t unFGSKEWMON;        /*!< 0x0000007C FrameGen Skew Monitor Register for Secondary Channel
                                                                                Skew Control */
  un_VIDEOSS_FRAMEGEN0_FGSFIFOMIN_t unFGSFIFOMIN;      /*!< 0x00000080 FrameGen Secondary FIFO Min Fill Register */
  un_VIDEOSS_FRAMEGEN0_FGSFIFOMAX_t unFGSFIFOMAX;      /*!< 0x00000084 FrameGen Secondary FIFO Max Fill Register */
  un_VIDEOSS_FRAMEGEN0_FGSFIFOFILLCLR_t unFGSFIFOFILLCLR; /*!< 0x00000088 FrameGen Secondary FIFO Fill Clear Register */
  un_VIDEOSS_FRAMEGEN0_FGSREPD_t   unFGSREPD;          /*!< 0x0000008C FrameGen Skew Regulation ExtraPolation Debug Register */
  un_VIDEOSS_FRAMEGEN0_FGSRFTD_t   unFGSRFTD;          /*!< 0x00000090 FrameGen Skew Regulation Frame Total Debug Register */
  un_VIDEOSS_FRAMEGEN0_FGTGPOSITION_t unFGTGPOSITION;  /*!< 0x00000094 Current (x,y) positions of the timing generator Register
                                                                                in FrameGen timing generator. Please don't use
                                                                                it due to lack of verification. */
  uint32_t                         au32Reserved[218];
} stc_VIDEOSS_VIDEOIO_DISENG0_FRAMEGEN0_t;             /*!< Size = 1024 (0x400) */

/**
  * \brief Gamma Correction Unit (VIDEOSS_VIDEOIO_DISENG0_GAMMACOR0)
  */
typedef struct stc_VIDEOSS_VIDEOIO_DISENG0_GAMMACOR0 {
  un_VIDEOSS_GAMMACOR0_STATICCONTROL_t unSTATICCONTROL; /*!< 0x00000000 Static control settings. */
  un_VIDEOSS_GAMMACOR0_LUTSTART_t  unLUTSTART;         /*!< 0x00000004 Start values for look-up table programming. */
  un_VIDEOSS_GAMMACOR0_LUTDELTAS_t unLUTDELTAS;        /*!< 0x00000008 Delta values for look-up table programming. */
  un_VIDEOSS_GAMMACOR0_CONTROL_t   unCONTROL;          /*!< 0x0000000C Dynamic control settings. */
  uint32_t                         au32Reserved[252];
} stc_VIDEOSS_VIDEOIO_DISENG0_GAMMACOR0_t;             /*!< Size = 1024 (0x400) */

/**
  * \brief Dither Unit (VIDEOSS_VIDEOIO_DISENG0_DITHER0)
  */
typedef struct stc_VIDEOSS_VIDEOIO_DISENG0_DITHER0 {
  un_VIDEOSS_DITHER0_CONTROL_t     unCONTROL;          /*!< 0x00000000 Dither Unit common control. */
  un_VIDEOSS_DITHER0_DITHERCONTROL_t unDITHERCONTROL;  /*!< 0x00000004 Dither Unit processing control. */
  un_VIDEOSS_DITHER0_RELEASE_t     unRELEASE;          /*!< 0x00000008 Dither Unit release. */
  uint32_t                         au32Reserved[253];
} stc_VIDEOSS_VIDEOIO_DISENG0_DITHER0_t;               /*!< Size = 1024 (0x400) */

/**
  * \brief Timing Controller (VIDEOSS_VIDEOIO_DISENG0_TCON0)
  */
typedef struct stc_VIDEOSS_VIDEOIO_DISENG0_TCON0 {
  un_VIDEOSS_TCON0_SSQCNTS_t       unSSQCNTS[64];      /*!< 0x00000000 The 64 Sequencer Position Definitions registers define
                                                                                the X/Y scan positions of the sequencers, hold
                                                                                their output value and assign the sequencer to
                                                                                an odd/even field */
  uint32_t                         au32Reserved[192];
  un_VIDEOSS_TCON0_SSQCYCLE_t      unSSQCYCLE;         /*!< 0x00000400 This bitfield sets the sequencer cycle length. The value
                                                                                set here -1 is the number of sequencer cycles */
  un_VIDEOSS_TCON0_SWRESET_t       unSWRESET;          /*!< 0x00000404 TCON Software Reset - Reset all tcon registers except
                                                                                configuration registers. Detailed description in
                                                                                specification document Note 1/ if tsig[11]
                                                                                pulse=n*pixel_period, (n-1)*0xFF will be blended
                                                                                between ResetWordStart and ResetWordEnd into
                                                                                miniLVDS stream Note 2/ if( EnResetWord=0)
                                                                                Reset-Pulse (ResetWordStart,ResetWordEnd) won't
                                                                                be blended into miniLVDS stream. Pixels will be
                                                                                transferred unchanged */
  un_VIDEOSS_TCON0_TCON_CTRL_t     unTCON_CTRL;        /*!< 0x00000408 TCON Control register */
  un_VIDEOSS_TCON0_RSDSINVCTRL_t   unRSDSINVCTRL;      /*!< 0x0000040C Controls inversion of output polarity when connected IO
                                                                                cells operate in RSDS mode */
  un_VIDEOSS_TCON0_MAPBIT3_0_t     unMAPBIT3_0;        /*!< 0x00000410 Mapping of 24 bit RGB or Timing Generator TSig[5-0] to
                                                                                bit 0 .. 3 */
  un_VIDEOSS_TCON0_MAPBIT7_4_t     unMAPBIT7_4;        /*!< 0x00000414 Mapping of 24 bit RGB or Timing Generator TSig[5-0] to
                                                                                bit 4 .. 7 */
  un_VIDEOSS_TCON0_MAPBIT11_8_t    unMAPBIT11_8;       /*!< 0x00000418 Mapping of 24 bit RGB or Timing Generator TSig[5-0] to
                                                                                bit 8 .. 11 */
  un_VIDEOSS_TCON0_MAPBIT15_12_t   unMAPBIT15_12;      /*!< 0x0000041C Mapping of 24 bit RGB or Timing Generator TSig[5-0] to
                                                                                bit 12 .. 15 */
  un_VIDEOSS_TCON0_MAPBIT19_16_t   unMAPBIT19_16;      /*!< 0x00000420 Mapping of 24 bit RGB or Timing Generator TSig[5-0] to
                                                                                bit 16 .. 19 */
  un_VIDEOSS_TCON0_MAPBIT23_20_t   unMAPBIT23_20;      /*!< 0x00000424 Mapping of 24 bit RGB or Timing Generator TSig[5-0] to
                                                                                bit 20 .. 23 */
  un_VIDEOSS_TCON0_MAPBIT27_24_t   unMAPBIT27_24;      /*!< 0x00000428 Mapping of 24 bit RGB or Timing Generator TSig[5-0] to
                                                                                bit 24 .. 27 */
  un_VIDEOSS_TCON0_MAPBIT3_0_DUAL_t unMAPBIT3_0_DUAL;  /*!< 0x0000042C Same as MapBit3_0 for 2nd channel */
  un_VIDEOSS_TCON0_MAPBIT7_4_DUAL_t unMAPBIT7_4_DUAL;  /*!< 0x00000430 Same as MapBit7_4 for 2nd channel */
  un_VIDEOSS_TCON0_MAPBIT11_8_DUAL_t unMAPBIT11_8_DUAL; /*!< 0x00000434 Same as MapBit11_8 for 2nd channel */
  un_VIDEOSS_TCON0_MAPBIT15_12_DUAL_t unMAPBIT15_12_DUAL; /*!< 0x00000438 Same as MapBit15_12 for 2nd channel */
  un_VIDEOSS_TCON0_MAPBIT19_16_DUAL_t unMAPBIT19_16_DUAL; /*!< 0x0000043C Same as MapBit19_16 for 2nd channel */
  un_VIDEOSS_TCON0_MAPBIT23_20_DUAL_t unMAPBIT23_20_DUAL; /*!< 0x00000440 Same as MapBit23_20 for 2nd channel */
  un_VIDEOSS_TCON0_MAPBIT27_24_DUAL_t unMAPBIT27_24_DUAL; /*!< 0x00000444 Same as MapBit27_24 for 2nd channel */
  un_VIDEOSS_TCON0_SPG0POSON_t     unSPG0POSON;        /*!< 0x00000448 Sync pulse generator 0, 'Switch on' position */
  un_VIDEOSS_TCON0_SPG0MASKON_t    unSPG0MASKON;       /*!< 0x0000044C The Sequencer Pulse Generator 0 Mask Enable register is
                                                                                used to mask the enable of SPG 0 */
  un_VIDEOSS_TCON0_SPG0POSOFF_t    unSPG0POSOFF;       /*!< 0x00000450 Sync pulse generator 0, 'Switch off' position */
  un_VIDEOSS_TCON0_SPG0MASKOFF_t   unSPG0MASKOFF;      /*!< 0x00000454 The Sequencer Pulse Generator 0 Mask Enable register is
                                                                                used to mask the disable of SPG 0 */
  un_VIDEOSS_TCON0_SPG1POSON_t     unSPG1POSON;        /*!< 0x00000458 Sync pulse generator 1, 'Switch on' position */
  un_VIDEOSS_TCON0_SPG1MASKON_t    unSPG1MASKON;       /*!< 0x0000045C The Sequencer Pulse Generator 1 Mask Enable register is
                                                                                used to mask the enable of SPG 1 */
  un_VIDEOSS_TCON0_SPG1POSOFF_t    unSPG1POSOFF;       /*!< 0x00000460 Sync pulse generator 1, 'Switch off' position */
  un_VIDEOSS_TCON0_SPG1MASKOFF_t   unSPG1MASKOFF;      /*!< 0x00000464 The Sequencer Pulse Generator 1 Mask Enable register is
                                                                                used to mask the disable of SPG 1 */
  un_VIDEOSS_TCON0_SPG2POSON_t     unSPG2POSON;        /*!< 0x00000468 Sync pulse generator 2, 'Switch on' position */
  un_VIDEOSS_TCON0_SPG2MASKON_t    unSPG2MASKON;       /*!< 0x0000046C The Sequencer Pulse Generator 2 Mask Enable register is
                                                                                used to mask the enable of SPG 2 */
  un_VIDEOSS_TCON0_SPG2POSOFF_t    unSPG2POSOFF;       /*!< 0x00000470 Sync pulse generator 2, 'Switch off' position */
  un_VIDEOSS_TCON0_SPG2MASKOFF_t   unSPG2MASKOFF;      /*!< 0x00000474 The Sequencer Pulse Generator 2 Mask Enable register is
                                                                                used to mask the disable of SPG 2 */
  un_VIDEOSS_TCON0_SPG3POSON_t     unSPG3POSON;        /*!< 0x00000478 Sync pulse generator 3, 'Switch on' position */
  un_VIDEOSS_TCON0_SPG3MASKON_t    unSPG3MASKON;       /*!< 0x0000047C The Sequencer Pulse Generator 3 Mask Enable register is
                                                                                used to mask the enable of SPG 3 */
  un_VIDEOSS_TCON0_SPG3POSOFF_t    unSPG3POSOFF;       /*!< 0x00000480 Sync pulse generator 3, 'Switch off' position */
  un_VIDEOSS_TCON0_SPG3MASKOFF_t   unSPG3MASKOFF;      /*!< 0x00000484 The Sequencer Pulse Generator 3 Mask Enable register is
                                                                                used to mask the disable of SPG 3 */
  un_VIDEOSS_TCON0_SPG4POSON_t     unSPG4POSON;        /*!< 0x00000488 Sync pulse generator 4, 'Switch on' position */
  un_VIDEOSS_TCON0_SPG4MASKON_t    unSPG4MASKON;       /*!< 0x0000048C The Sequencer Pulse Generator 4 Mask Enable register is
                                                                                used to mask the enable of SPG 4 */
  un_VIDEOSS_TCON0_SPG4POSOFF_t    unSPG4POSOFF;       /*!< 0x00000490 Sync pulse generator 4, 'Switch off' position */
  un_VIDEOSS_TCON0_SPG4MASKOFF_t   unSPG4MASKOFF;      /*!< 0x00000494 The Sequencer Pulse Generator 4 Mask Enable register is
                                                                                used to mask the disable of SPG 4 */
  un_VIDEOSS_TCON0_SPG5POSON_t     unSPG5POSON;        /*!< 0x00000498 Sync pulse generator 5, 'Switch on' position */
  un_VIDEOSS_TCON0_SPG5MASKON_t    unSPG5MASKON;       /*!< 0x0000049C The Sequencer Pulse Generator 5 Mask Enable register is
                                                                                used to mask the enable of SPG 5 */
  un_VIDEOSS_TCON0_SPG5POSOFF_t    unSPG5POSOFF;       /*!< 0x000004A0 Sync pulse generator 5, 'Switch off' position */
  un_VIDEOSS_TCON0_SPG5MASKOFF_t   unSPG5MASKOFF;      /*!< 0x000004A4 The Sequencer Pulse Generator 5 Mask Enable register is
                                                                                used to mask the disable of SPG 5 */
  un_VIDEOSS_TCON0_SPG6POSON_t     unSPG6POSON;        /*!< 0x000004A8 Sync pulse generator 6, 'Switch on' position */
  un_VIDEOSS_TCON0_SPG6MASKON_t    unSPG6MASKON;       /*!< 0x000004AC The Sequencer Pulse Generator 6 Mask Enable register is
                                                                                used to mask the enable of SPG 6 */
  un_VIDEOSS_TCON0_SPG6POSOFF_t    unSPG6POSOFF;       /*!< 0x000004B0 Sync pulse generator 6, 'Switch off' position */
  un_VIDEOSS_TCON0_SPG6MASKOFF_t   unSPG6MASKOFF;      /*!< 0x000004B4 The Sequencer Pulse Generator 6 Mask Enable register is
                                                                                used to mask the disable of SPG 6 */
  un_VIDEOSS_TCON0_SPG7POSON_t     unSPG7POSON;        /*!< 0x000004B8 Sync pulse generator 7, 'Switch on' position */
  un_VIDEOSS_TCON0_SPG7MASKON_t    unSPG7MASKON;       /*!< 0x000004BC The Sequencer Pulse Generator 7 Mask Enable register is
                                                                                used to mask the enable of SPG 7 */
  un_VIDEOSS_TCON0_SPG7POSOFF_t    unSPG7POSOFF;       /*!< 0x000004C0 Sync pulse generator 7, 'Switch off' position */
  un_VIDEOSS_TCON0_SPG7MASKOFF_t   unSPG7MASKOFF;      /*!< 0x000004C4 The Sequencer Pulse Generator 7 Mask Enable register is
                                                                                used to mask the disable of SPG 7 */
  un_VIDEOSS_TCON0_SPG8POSON_t     unSPG8POSON;        /*!< 0x000004C8 Sync pulse generator 8, 'Switch on' position */
  un_VIDEOSS_TCON0_SPG8MASKON_t    unSPG8MASKON;       /*!< 0x000004CC The Sequencer Pulse Generator 8 Mask Enable register is
                                                                                used to mask the enable of SPG 8 */
  un_VIDEOSS_TCON0_SPG8POSOFF_t    unSPG8POSOFF;       /*!< 0x000004D0 Sync pulse generator 8, 'Switch off' position */
  un_VIDEOSS_TCON0_SPG8MASKOFF_t   unSPG8MASKOFF;      /*!< 0x000004D4 The Sequencer Pulse Generator 8 Mask Enable register is
                                                                                used to mask the disable of SPG 8 */
  un_VIDEOSS_TCON0_SPG9POSON_t     unSPG9POSON;        /*!< 0x000004D8 Sync pulse generator 9, 'Switch on' position */
  un_VIDEOSS_TCON0_SPG9MASKON_t    unSPG9MASKON;       /*!< 0x000004DC The Sequencer Pulse Generator 9 Mask Enable register is
                                                                                used to mask the enable of SPG 9 */
  un_VIDEOSS_TCON0_SPG9POSOFF_t    unSPG9POSOFF;       /*!< 0x000004E0 Sync pulse generator 9, 'Switch off' position */
  un_VIDEOSS_TCON0_SPG9MASKOFF_t   unSPG9MASKOFF;      /*!< 0x000004E4 The Sequencer Pulse Generator 9 Mask Enable register is
                                                                                used to mask the disable of SPG 9 */
  un_VIDEOSS_TCON0_SPG10POSON_t    unSPG10POSON;       /*!< 0x000004E8 Sync pulse generator 10, 'Switch on' position */
  un_VIDEOSS_TCON0_SPG10MASKON_t   unSPG10MASKON;      /*!< 0x000004EC The Sequencer Pulse Generator 10 Mask Enable register is
                                                                                used to mask the enable of SPG 10 */
  un_VIDEOSS_TCON0_SPG10POSOFF_t   unSPG10POSOFF;      /*!< 0x000004F0 Sync pulse generator 10, 'Switch off' position */
  un_VIDEOSS_TCON0_SPG10MASKOFF_t  unSPG10MASKOFF;     /*!< 0x000004F4 The Sequencer Pulse Generator 10 Mask Enable register is
                                                                                used to mask the disable of SPG 10 */
  un_VIDEOSS_TCON0_SPG11POSON_t    unSPG11POSON;       /*!< 0x000004F8 Sync pulse generator 11, 'Switch on' position */
  un_VIDEOSS_TCON0_SPG11MASKON_t   unSPG11MASKON;      /*!< 0x000004FC The Sequencer Pulse Generator 11 Mask Enable register is
                                                                                used to mask the enable of SPG 11 */
  un_VIDEOSS_TCON0_SPG11POSOFF_t   unSPG11POSOFF;      /*!< 0x00000500 Sync pulse generator 11, 'Switch off' position */
  un_VIDEOSS_TCON0_SPG11MASKOFF_t  unSPG11MASKOFF;     /*!< 0x00000504 The Sequencer Pulse Generator 11 Mask Enable register is
                                                                                used to mask the disable of SPG 11 */
  un_VIDEOSS_TCON0_SMX0SIGS_t      unSMX0SIGS;         /*!< 0x00000508 Selection of input signals of sync mixer */
  un_VIDEOSS_TCON0_SMX0FCTTABLE_t  unSMX0FCTTABLE;     /*!< 0x0000050C The sync mixer output is the result of the function
                                                                                table a=s4*2**4+s3*2**3+s2*2**2+s1*2**1+s0*2**0
                                                                                whereby a is bit number and s result of sync
                                                                                mixer input selection */
  un_VIDEOSS_TCON0_SMX1SIGS_t      unSMX1SIGS;         /*!< 0x00000510 Selection of input signals of sync mixer */
  un_VIDEOSS_TCON0_SMX1FCTTABLE_t  unSMX1FCTTABLE;     /*!< 0x00000514 The sync mixer output is the result of the function
                                                                                table a=s4*2**4+s3*2**3+s2*2**2+s1*2**1+s0*2**0
                                                                                whereby a is bit number and s result of sync
                                                                                mixer input selection */
  un_VIDEOSS_TCON0_SMX2SIGS_t      unSMX2SIGS;         /*!< 0x00000518 Selection of input signals of sync mixer */
  un_VIDEOSS_TCON0_SMX2FCTTABLE_t  unSMX2FCTTABLE;     /*!< 0x0000051C The sync mixer output is the result of the function
                                                                                table
                                                                                a=s4*2**4+s**3*2**3+s2*2**2+s1*2**1+s0*2**0
                                                                                whereby a is bit number and s result of sync
                                                                                mixer input selection */
  un_VIDEOSS_TCON0_SMX3SIGS_t      unSMX3SIGS;         /*!< 0x00000520 Selection of input signals of sync mixer */
  un_VIDEOSS_TCON0_SMX3FCTTABLE_t  unSMX3FCTTABLE;     /*!< 0x00000524 The sync mixer output is the result of the function
                                                                                table a=s4*2**4+s3*2**3+s2*2**2+s1*2**1+s0*2**0
                                                                                whereby a is bit number and s result of sync
                                                                                mixer input selection */
  un_VIDEOSS_TCON0_SMX4SIGS_t      unSMX4SIGS;         /*!< 0x00000528 Selection of input signals of sync mixer */
  un_VIDEOSS_TCON0_SMX4FCTTABLE_t  unSMX4FCTTABLE;     /*!< 0x0000052C The sync mixer output is the result of the function
                                                                                table a=s4*2**4+s3*2**3+s2*2**2+s1*2**1+s0*2**0
                                                                                whereby a is bit number and s result of sync
                                                                                mixer input selection */
  un_VIDEOSS_TCON0_SMX5SIGS_t      unSMX5SIGS;         /*!< 0x00000530 Selection of input signals of sync mixer */
  un_VIDEOSS_TCON0_SMX5FCTTABLE_t  unSMX5FCTTABLE;     /*!< 0x00000534 The sync mixer output is the result of the function
                                                                                table a=s4*2**4+s3*2**3+s2*2**2+s1*2**1+s0*2**0
                                                                                whereby a is bit number and s result of sync
                                                                                mixer input selection */
  un_VIDEOSS_TCON0_SMX6SIGS_t      unSMX6SIGS;         /*!< 0x00000538 Selection of input signals of sync mixer */
  un_VIDEOSS_TCON0_SMX6FCTTABLE_t  unSMX6FCTTABLE;     /*!< 0x0000053C The sync mixer output is the result of the function
                                                                                table a=s4*2**4+s3*2**3+s2*2**2+s1*2**1+s0*2**0
                                                                                whereby a is bit number and s result of sync
                                                                                mixer input selection */
  un_VIDEOSS_TCON0_SMX7SIGS_t      unSMX7SIGS;         /*!< 0x00000540 Selection of input signals of sync mixer */
  un_VIDEOSS_TCON0_SMX7FCTTABLE_t  unSMX7FCTTABLE;     /*!< 0x00000544 The sync mixer output is the result of the function
                                                                                table a=s4*2**4+s3*2**3+s2*2**2+s1*2**1+s0*2**0
                                                                                whereby a is bit number and s result of sync
                                                                                mixer input selection */
  un_VIDEOSS_TCON0_SMX8SIGS_t      unSMX8SIGS;         /*!< 0x00000548 Selection of input signals of sync mixer */
  un_VIDEOSS_TCON0_SMX8FCTTABLE_t  unSMX8FCTTABLE;     /*!< 0x0000054C The sync mixer output is the result of the function
                                                                                table a=s4*2**4+s3*2**3+s2*2**2+s1*2**1+s0*2**0
                                                                                whereby a is bit number and s result of sync
                                                                                mixer input selection */
  un_VIDEOSS_TCON0_SMX9SIGS_t      unSMX9SIGS;         /*!< 0x00000550 Selection of input signals of sync mixer */
  un_VIDEOSS_TCON0_SMX9FCTTABLE_t  unSMX9FCTTABLE;     /*!< 0x00000554 The sync mixer output is the result of the function
                                                                                table a=s4*2**4+s3*2**3+s2*2**2+s1*2**1+s0*2**0
                                                                                whereby a is bit number and s result of sync
                                                                                mixer input selection */
  un_VIDEOSS_TCON0_SMX10SIGS_t     unSMX10SIGS;        /*!< 0x00000558 Selection of input signals of sync mixer */
  un_VIDEOSS_TCON0_SMX10FCTTABLE_t unSMX10FCTTABLE;    /*!< 0x0000055C The sync mixer output is the result of the function
                                                                                table a=s4*2**4+s3*2**3+s2*2**2+s1*2**1+s0*2**0
                                                                                whereby a is bit number and s result of sync
                                                                                mixer input selection */
  un_VIDEOSS_TCON0_SMX11SIGS_t     unSMX11SIGS;        /*!< 0x00000560 Selection of input signals of sync mixer */
  un_VIDEOSS_TCON0_SMX11FCTTABLE_t unSMX11FCTTABLE;    /*!< 0x00000564 The sync mixer output is the result of the function
                                                                                table a=s4*2**4+s3*2**3+s2*2**2+s1*2**1+s0*2**0
                                                                                whereby a is bit number and s result of sync
                                                                                mixer input selection */
  uint32_t                         au32Reserved1[166];
} stc_VIDEOSS_VIDEOIO_DISENG0_TCON0_t;                 /*!< Size = 2048 (0x800) */

/**
  * \brief Display Engine (VIDEOSS_VIDEOIO_DISENG0)
  */
typedef struct stc_VIDEOSS_VIDEOIO_DISENG0 {
  stc_VIDEOSS_VIDEOIO_DISENG0_DISENGCFG0_t DISENGCFG0; /*!< 0x00000000 Top-Level Configuration */
  uint32_t                         au32Reserved[768];
  stc_VIDEOSS_VIDEOIO_DISENG0_SIG0_t SIG0;             /*!< 0x00001000 Signature Unit */
  uint32_t                         au32Reserved1[768];
  stc_VIDEOSS_VIDEOIO_DISENG0_FRAMEGEN0_t FRAMEGEN0;   /*!< 0x00002000 Frame Generator */
  stc_VIDEOSS_VIDEOIO_DISENG0_GAMMACOR0_t GAMMACOR0;   /*!< 0x00002400 Gamma Correction Unit */
  stc_VIDEOSS_VIDEOIO_DISENG0_DITHER0_t DITHER0;       /*!< 0x00002800 Dither Unit */
  uint32_t                         au32Reserved2[256];
  stc_VIDEOSS_VIDEOIO_DISENG0_TCON0_t TCON0;           /*!< 0x00003000 Timing Controller */
  uint32_t                         au32Reserved3[512];
} stc_VIDEOSS_VIDEOIO_DISENG0_t;                       /*!< Size = 16384 (0x4000) */

/**
  * \brief Top-Level Configuration (VIDEOSS_VIDEOIO_DISENG1_DISENGCFG1)
  */
typedef struct stc_VIDEOSS_VIDEOIO_DISENG1_DISENGCFG1 {
  un_VIDEOSS_DISENGCFG1_CTL_t      unCTL;              /*!< 0x00000000 Display engine control register. */
  un_VIDEOSS_DISENGCFG1_POLARITYCTRL_t unPOLARITYCTRL; /*!< 0x00000004 Polarity control for TCon input and corresponding
                                                                                top-level output (TCon by-pass port). */
  uint32_t                         au32Reserved[2];
  un_VIDEOSS_DISENGCFG1_SIGSELECT_t unSIGSELECT;       /*!< 0x00000010 Tap selection for Signature. */
  uint32_t                         au32Reserved1[3];
  un_VIDEOSS_DISENGCFG1_DUMPSELECT_t unDUMPSELECT;     /*!< 0x00000020 Tap selection for Frame Dump. */
  uint32_t                         au32Reserved2[247];
} stc_VIDEOSS_VIDEOIO_DISENG1_DISENGCFG1_t;            /*!< Size = 1024 (0x400) */

/**
  * \brief Signature Unit (VIDEOSS_VIDEOIO_DISENG1_SIG1)
  */
typedef struct stc_VIDEOSS_VIDEOIO_DISENG1_SIG1 {
  un_VIDEOSS_SIG1_STATICCONTROL_t  unSTATICCONTROL;    /*!< 0x00000000 Global configuration shared by all evaluation windows. */
  un_VIDEOSS_SIG1_PANICCOLOR_t     unPANICCOLOR;       /*!< 0x00000004 Overlay color for evaluation windows in panic mode. */
  un_VIDEOSS_SIG1_EVALCONTROL0_t   unEVALCONTROL0;     /*!< 0x00000008 Control settings for evaluation window 0. */
  un_VIDEOSS_SIG1_EVALUPPERLEFT0_t unEVALUPPERLEFT0;   /*!< 0x0000000C Upper left corner of evaluation window 0. */
  un_VIDEOSS_SIG1_EVALLOWERRIGHT0_t unEVALLOWERRIGHT0; /*!< 0x00000010 Lower right corner of evaluation window 0. */
  un_VIDEOSS_SIG1_SIGCRCREDREF0_t  unSIGCRCREDREF0;    /*!< 0x00000014 Reference signature of red channel for evaluation window
                                                                                0. */
  un_VIDEOSS_SIG1_SIGCRCGREENREF0_t unSIGCRCGREENREF0; /*!< 0x00000018 Reference signature of green channel for evaluation
                                                                                window 0. */
  un_VIDEOSS_SIG1_SIGCRCBLUEREF0_t unSIGCRCBLUEREF0;   /*!< 0x0000001C Reference signature of blue channel for evaluation
                                                                                window 0. */
  un_VIDEOSS_SIG1_SIGCRCRED0_t     unSIGCRCRED0;       /*!< 0x00000020 Measured signature of red channel for evaluation window
                                                                                0. */
  un_VIDEOSS_SIG1_SIGCRCGREEN0_t   unSIGCRCGREEN0;     /*!< 0x00000024 Measured signature of green channel for evaluation
                                                                                window 0. */
  un_VIDEOSS_SIG1_SIGCRCBLUE0_t    unSIGCRCBLUE0;      /*!< 0x00000028 Measured signature of blue channel for evaluation window
                                                                                0. */
  un_VIDEOSS_SIG1_EVALCONTROL1_t   unEVALCONTROL1;     /*!< 0x0000002C Control settings for evaluation window 1. */
  un_VIDEOSS_SIG1_EVALUPPERLEFT1_t unEVALUPPERLEFT1;   /*!< 0x00000030 Upper left corner of evaluation window 1. */
  un_VIDEOSS_SIG1_EVALLOWERRIGHT1_t unEVALLOWERRIGHT1; /*!< 0x00000034 Lower right corner of evaluation window 1. */
  un_VIDEOSS_SIG1_SIGCRCREDREF1_t  unSIGCRCREDREF1;    /*!< 0x00000038 Reference signature of red channel for evaluation window
                                                                                1. */
  un_VIDEOSS_SIG1_SIGCRCGREENREF1_t unSIGCRCGREENREF1; /*!< 0x0000003C Reference signature of green channel for evaluation
                                                                                window 1. */
  un_VIDEOSS_SIG1_SIGCRCBLUEREF1_t unSIGCRCBLUEREF1;   /*!< 0x00000040 Reference signature of blue channel for evaluation
                                                                                window 1. */
  un_VIDEOSS_SIG1_SIGCRCRED1_t     unSIGCRCRED1;       /*!< 0x00000044 Measured signature of red channel for evaluation window
                                                                                1. */
  un_VIDEOSS_SIG1_SIGCRCGREEN1_t   unSIGCRCGREEN1;     /*!< 0x00000048 Measured signature of green channel for evaluation
                                                                                window 1. */
  un_VIDEOSS_SIG1_SIGCRCBLUE1_t    unSIGCRCBLUE1;      /*!< 0x0000004C Measured signature of blue channel for evaluation window
                                                                                1. */
  un_VIDEOSS_SIG1_EVALCONTROL2_t   unEVALCONTROL2;     /*!< 0x00000050 Control settings for evaluation window 2. */
  un_VIDEOSS_SIG1_EVALUPPERLEFT2_t unEVALUPPERLEFT2;   /*!< 0x00000054 Upper left corner of evaluation window 2. */
  un_VIDEOSS_SIG1_EVALLOWERRIGHT2_t unEVALLOWERRIGHT2; /*!< 0x00000058 Lower right corner of evaluation window 2. */
  un_VIDEOSS_SIG1_SIGCRCREDREF2_t  unSIGCRCREDREF2;    /*!< 0x0000005C Reference signature of red channel for evaluation window
                                                                                2. */
  un_VIDEOSS_SIG1_SIGCRCGREENREF2_t unSIGCRCGREENREF2; /*!< 0x00000060 Reference signature of green channel for evaluation
                                                                                window 2. */
  un_VIDEOSS_SIG1_SIGCRCBLUEREF2_t unSIGCRCBLUEREF2;   /*!< 0x00000064 Reference signature of blue channel for evaluation
                                                                                window 2. */
  un_VIDEOSS_SIG1_SIGCRCRED2_t     unSIGCRCRED2;       /*!< 0x00000068 Measured signature of red channel for evaluation window
                                                                                2. */
  un_VIDEOSS_SIG1_SIGCRCGREEN2_t   unSIGCRCGREEN2;     /*!< 0x0000006C Measured signature of green channel for evaluation
                                                                                window 2. */
  un_VIDEOSS_SIG1_SIGCRCBLUE2_t    unSIGCRCBLUE2;      /*!< 0x00000070 Measured signature of blue channel for evaluation window
                                                                                2. */
  un_VIDEOSS_SIG1_EVALCONTROL3_t   unEVALCONTROL3;     /*!< 0x00000074 Control settings for evaluation window 3. */
  un_VIDEOSS_SIG1_EVALUPPERLEFT3_t unEVALUPPERLEFT3;   /*!< 0x00000078 Upper left corner of evaluation window 3. */
  un_VIDEOSS_SIG1_EVALLOWERRIGHT3_t unEVALLOWERRIGHT3; /*!< 0x0000007C Lower right corner of evaluation window 3. */
  un_VIDEOSS_SIG1_SIGCRCREDREF3_t  unSIGCRCREDREF3;    /*!< 0x00000080 Reference signature of red channel for evaluation window
                                                                                3. */
  un_VIDEOSS_SIG1_SIGCRCGREENREF3_t unSIGCRCGREENREF3; /*!< 0x00000084 Reference signature of green channel for evaluation
                                                                                window 3. */
  un_VIDEOSS_SIG1_SIGCRCBLUEREF3_t unSIGCRCBLUEREF3;   /*!< 0x00000088 Reference signature of blue channel for evaluation
                                                                                window 3. */
  un_VIDEOSS_SIG1_SIGCRCRED3_t     unSIGCRCRED3;       /*!< 0x0000008C Measured signature of red channel for evaluation window
                                                                                3. */
  un_VIDEOSS_SIG1_SIGCRCGREEN3_t   unSIGCRCGREEN3;     /*!< 0x00000090 Measured signature of green channel for evaluation
                                                                                window 3. */
  un_VIDEOSS_SIG1_SIGCRCBLUE3_t    unSIGCRCBLUE3;      /*!< 0x00000094 Measured signature of blue channel for evaluation window
                                                                                3. */
  un_VIDEOSS_SIG1_EVALCONTROL4_t   unEVALCONTROL4;     /*!< 0x00000098 Control settings for evaluation window 4. */
  un_VIDEOSS_SIG1_EVALUPPERLEFT4_t unEVALUPPERLEFT4;   /*!< 0x0000009C Upper left corner of evaluation window 4. */
  un_VIDEOSS_SIG1_EVALLOWERRIGHT4_t unEVALLOWERRIGHT4; /*!< 0x000000A0 Lower right corner of evaluation window 4. */
  un_VIDEOSS_SIG1_SIGCRCREDREF4_t  unSIGCRCREDREF4;    /*!< 0x000000A4 Reference signature of red channel for evaluation window
                                                                                4. */
  un_VIDEOSS_SIG1_SIGCRCGREENREF4_t unSIGCRCGREENREF4; /*!< 0x000000A8 Reference signature of green channel for evaluation
                                                                                window 4. */
  un_VIDEOSS_SIG1_SIGCRCBLUEREF4_t unSIGCRCBLUEREF4;   /*!< 0x000000AC Reference signature of blue channel for evaluation
                                                                                window 4. */
  un_VIDEOSS_SIG1_SIGCRCRED4_t     unSIGCRCRED4;       /*!< 0x000000B0 Measured signature of red channel for evaluation window
                                                                                4. */
  un_VIDEOSS_SIG1_SIGCRCGREEN4_t   unSIGCRCGREEN4;     /*!< 0x000000B4 Measured signature of green channel for evaluation
                                                                                window 4. */
  un_VIDEOSS_SIG1_SIGCRCBLUE4_t    unSIGCRCBLUE4;      /*!< 0x000000B8 Measured signature of blue channel for evaluation window
                                                                                4. */
  un_VIDEOSS_SIG1_EVALCONTROL5_t   unEVALCONTROL5;     /*!< 0x000000BC Control settings for evaluation window 5. */
  un_VIDEOSS_SIG1_EVALUPPERLEFT5_t unEVALUPPERLEFT5;   /*!< 0x000000C0 Upper left corner of evaluation window 5. */
  un_VIDEOSS_SIG1_EVALLOWERRIGHT5_t unEVALLOWERRIGHT5; /*!< 0x000000C4 Lower right corner of evaluation window 5. */
  un_VIDEOSS_SIG1_SIGCRCREDREF5_t  unSIGCRCREDREF5;    /*!< 0x000000C8 Reference signature of red channel for evaluation window
                                                                                5. */
  un_VIDEOSS_SIG1_SIGCRCGREENREF5_t unSIGCRCGREENREF5; /*!< 0x000000CC Reference signature of green channel for evaluation
                                                                                window 5. */
  un_VIDEOSS_SIG1_SIGCRCBLUEREF5_t unSIGCRCBLUEREF5;   /*!< 0x000000D0 Reference signature of blue channel for evaluation
                                                                                window 5. */
  un_VIDEOSS_SIG1_SIGCRCRED5_t     unSIGCRCRED5;       /*!< 0x000000D4 Measured signature of red channel for evaluation window
                                                                                5. */
  un_VIDEOSS_SIG1_SIGCRCGREEN5_t   unSIGCRCGREEN5;     /*!< 0x000000D8 Measured signature of green channel for evaluation
                                                                                window 5. */
  un_VIDEOSS_SIG1_SIGCRCBLUE5_t    unSIGCRCBLUE5;      /*!< 0x000000DC Measured signature of blue channel for evaluation window
                                                                                5. */
  un_VIDEOSS_SIG1_EVALCONTROL6_t   unEVALCONTROL6;     /*!< 0x000000E0 Control settings for evaluation window 6. */
  un_VIDEOSS_SIG1_EVALUPPERLEFT6_t unEVALUPPERLEFT6;   /*!< 0x000000E4 Upper left corner of evaluation window 6. */
  un_VIDEOSS_SIG1_EVALLOWERRIGHT6_t unEVALLOWERRIGHT6; /*!< 0x000000E8 Lower right corner of evaluation window 6. */
  un_VIDEOSS_SIG1_SIGCRCREDREF6_t  unSIGCRCREDREF6;    /*!< 0x000000EC Reference signature of red channel for evaluation window
                                                                                6. */
  un_VIDEOSS_SIG1_SIGCRCGREENREF6_t unSIGCRCGREENREF6; /*!< 0x000000F0 Reference signature of green channel for evaluation
                                                                                window 6. */
  un_VIDEOSS_SIG1_SIGCRCBLUEREF6_t unSIGCRCBLUEREF6;   /*!< 0x000000F4 Reference signature of blue channel for evaluation
                                                                                window 6. */
  un_VIDEOSS_SIG1_SIGCRCRED6_t     unSIGCRCRED6;       /*!< 0x000000F8 Measured signature of red channel for evaluation window
                                                                                6. */
  un_VIDEOSS_SIG1_SIGCRCGREEN6_t   unSIGCRCGREEN6;     /*!< 0x000000FC Measured signature of green channel for evaluation
                                                                                window 6. */
  un_VIDEOSS_SIG1_SIGCRCBLUE6_t    unSIGCRCBLUE6;      /*!< 0x00000100 Measured signature of blue channel for evaluation window
                                                                                6. */
  un_VIDEOSS_SIG1_EVALCONTROL7_t   unEVALCONTROL7;     /*!< 0x00000104 Control settings for evaluation window 7. */
  un_VIDEOSS_SIG1_EVALUPPERLEFT7_t unEVALUPPERLEFT7;   /*!< 0x00000108 Upper left corner of evaluation window 7. */
  un_VIDEOSS_SIG1_EVALLOWERRIGHT7_t unEVALLOWERRIGHT7; /*!< 0x0000010C Lower right corner of evaluation window 7. */
  un_VIDEOSS_SIG1_SIGCRCREDREF7_t  unSIGCRCREDREF7;    /*!< 0x00000110 Reference signature of red channel for evaluation window
                                                                                7. */
  un_VIDEOSS_SIG1_SIGCRCGREENREF7_t unSIGCRCGREENREF7; /*!< 0x00000114 Reference signature of green channel for evaluation
                                                                                window 7. */
  un_VIDEOSS_SIG1_SIGCRCBLUEREF7_t unSIGCRCBLUEREF7;   /*!< 0x00000118 Reference signature of blue channel for evaluation
                                                                                window 7. */
  un_VIDEOSS_SIG1_SIGCRCRED7_t     unSIGCRCRED7;       /*!< 0x0000011C Measured signature of red channel for evaluation window
                                                                                7. */
  un_VIDEOSS_SIG1_SIGCRCGREEN7_t   unSIGCRCGREEN7;     /*!< 0x00000120 Measured signature of green channel for evaluation
                                                                                window 7. */
  un_VIDEOSS_SIG1_SIGCRCBLUE7_t    unSIGCRCBLUE7;      /*!< 0x00000124 Measured signature of blue channel for evaluation window
                                                                                7. */
  un_VIDEOSS_SIG1_SHADOWLOAD_t     unSHADOWLOAD;       /*!< 0x00000128 Shadow load control register. */
  un_VIDEOSS_SIG1_CONTINUOUSMODE_t unCONTINUOUSMODE;   /*!< 0x0000012C Signature operation mode control. */
  un_VIDEOSS_SIG1_SOFTWAREKICK_t   unSOFTWAREKICK;     /*!< 0x00000130 Signature measurement trigger. */
  un_VIDEOSS_SIG1_STATUS_t         unSTATUS;           /*!< 0x00000134 Module status. */
  uint32_t                         au32Reserved[178];
} stc_VIDEOSS_VIDEOIO_DISENG1_SIG1_t;                  /*!< Size = 1024 (0x400) */

/**
  * \brief Frame Generator (VIDEOSS_VIDEOIO_DISENG1_FRAMEGEN1)
  */
typedef struct stc_VIDEOSS_VIDEOIO_DISENG1_FRAMEGEN1 {
  un_VIDEOSS_FRAMEGEN1_FGSTCTRL_t  unFGSTCTRL;         /*!< 0x00000000 FrameGen Static Control Register */
  un_VIDEOSS_FRAMEGEN1_HTCFG1_t    unHTCFG1;           /*!< 0x00000004 FrameGen Horizontal Timing Config Register 1 */
  un_VIDEOSS_FRAMEGEN1_HTCFG2_t    unHTCFG2;           /*!< 0x00000008 FrameGen Horizontal Timing Config Register 2 */
  un_VIDEOSS_FRAMEGEN1_VTCFG1_t    unVTCFG1;           /*!< 0x0000000C FrameGen Vertical Timing Config Register 1 */
  un_VIDEOSS_FRAMEGEN1_VTCFG2_t    unVTCFG2;           /*!< 0x00000010 FrameGen Vertical Timing Config Register 2 */
  un_VIDEOSS_FRAMEGEN1_INT0CONFIG_t unINT0CONFIG;      /*!< 0x00000014 Coordinates of the trigger point for generation of the
                                                                                Int0 interrupt signal */
  un_VIDEOSS_FRAMEGEN1_INT1CONFIG_t unINT1CONFIG;      /*!< 0x00000018 Coordinates of the trigger point for generation of the
                                                                                Int1 interrupt signal */
  un_VIDEOSS_FRAMEGEN1_INT2CONFIG_t unINT2CONFIG;      /*!< 0x0000001C Coordinates of the trigger point for generation of the
                                                                                Int2 interrupt signal */
  un_VIDEOSS_FRAMEGEN1_INT3CONFIG_t unINT3CONFIG;      /*!< 0x00000020 Coordinates of the trigger point for generation of the
                                                                                Int3 interrupt signal */
  un_VIDEOSS_FRAMEGEN1_PKICKCONFIG_t unPKICKCONFIG;    /*!< 0x00000024 Coordinates of the trigger point for generation of the
                                                                                primary kick signal */
  un_VIDEOSS_FRAMEGEN1_SKICKCONFIG_t unSKICKCONFIG;    /*!< 0x00000028 Coordinates of the trigger point for generation of the
                                                                                secondary kick signal */
  un_VIDEOSS_FRAMEGEN1_SECSTATCONFIG_t unSECSTATCONFIG; /*!< 0x0000002C Configuration register for controlling the behavior of
                                                                                the SecSyncStat field in the FgSecChStat
                                                                                register. */
  un_VIDEOSS_FRAMEGEN1_FGSRCR1_t   unFGSRCR1;          /*!< 0x00000030 FrameGen Skew Regulation Control Register 1. */
  un_VIDEOSS_FRAMEGEN1_FGSRCR2_t   unFGSRCR2;          /*!< 0x00000034 FrameGen Skew Regulation Control Register 2 */
  un_VIDEOSS_FRAMEGEN1_FGSRCR3_t   unFGSRCR3;          /*!< 0x00000038 FrameGen Skew Regulation Control Register 3 */
  un_VIDEOSS_FRAMEGEN1_FGSRCR4_t   unFGSRCR4;          /*!< 0x0000003C FrameGen Skew Regulation Control Register 4 */
  un_VIDEOSS_FRAMEGEN1_FGSRCR5_t   unFGSRCR5;          /*!< 0x00000040 FrameGen Skew Regulation Control Register 5 */
  un_VIDEOSS_FRAMEGEN1_FGSRCR6_t   unFGSRCR6;          /*!< 0x00000044 FrameGen Skew Regulation Control Register 6 */
  un_VIDEOSS_FRAMEGEN1_FGKSDR_t    unFGKSDR;           /*!< 0x00000048 FrameGen Kick System Debug Register */
  un_VIDEOSS_FRAMEGEN1_PACFG_t     unPACFG;            /*!< 0x0000004C FrameGen Primary Area Config Register 1 (shadowed) */
  un_VIDEOSS_FRAMEGEN1_SACFG_t     unSACFG;            /*!< 0x00000050 FrameGen Secondary Area Config Register 1 (shadowed) */
  un_VIDEOSS_FRAMEGEN1_FGINCTRL_t  unFGINCTRL;         /*!< 0x00000054 FrameGen Input Control Register (shadowed) */
  un_VIDEOSS_FRAMEGEN1_FGINCTRLPANIC_t unFGINCTRLPANIC; /*!< 0x00000058 FrameGen Input Control Panic Register (shadowed) */
  un_VIDEOSS_FRAMEGEN1_FGCCR_t     unFGCCR;            /*!< 0x0000005C FrameGen Constant Color Register (shadowed) */
  un_VIDEOSS_FRAMEGEN1_BLENDCONTROL_t unBLENDCONTROL;  /*!< 0x00000060 Options for blend operations. (shadowed) */
  un_VIDEOSS_FRAMEGEN1_FGENABLE_t  unFGENABLE;         /*!< 0x00000064 FrameGen Enable Register */
  un_VIDEOSS_FRAMEGEN1_FGSLR_t     unFGSLR;            /*!< 0x00000068 FrameGen Shadow Load Register */
  un_VIDEOSS_FRAMEGEN1_FGENSTS_t   unFGENSTS;          /*!< 0x0000006C FrameGen Enable Status Register */
  un_VIDEOSS_FRAMEGEN1_FGTIMESTAMP_t unFGTIMESTAMP;    /*!< 0x00000070 Time stamp status. */
  un_VIDEOSS_FRAMEGEN1_FGCHSTAT_t  unFGCHSTAT;         /*!< 0x00000074 FrameGen Channel Status Register */
  un_VIDEOSS_FRAMEGEN1_FGCHSTATCLR_t unFGCHSTATCLR;    /*!< 0x00000078 FrameGen Channel Status Clear Register */
  un_VIDEOSS_FRAMEGEN1_FGSKEWMON_t unFGSKEWMON;        /*!< 0x0000007C FrameGen Skew Monitor Register for Secondary Channel
                                                                                Skew Control */
  un_VIDEOSS_FRAMEGEN1_FGSFIFOMIN_t unFGSFIFOMIN;      /*!< 0x00000080 FrameGen Secondary FIFO Min Fill Register */
  un_VIDEOSS_FRAMEGEN1_FGSFIFOMAX_t unFGSFIFOMAX;      /*!< 0x00000084 FrameGen Secondary FIFO Max Fill Register */
  un_VIDEOSS_FRAMEGEN1_FGSFIFOFILLCLR_t unFGSFIFOFILLCLR; /*!< 0x00000088 FrameGen Secondary FIFO Fill Clear Register */
  un_VIDEOSS_FRAMEGEN1_FGSREPD_t   unFGSREPD;          /*!< 0x0000008C FrameGen Skew Regulation ExtraPolation Debug Register */
  un_VIDEOSS_FRAMEGEN1_FGSRFTD_t   unFGSRFTD;          /*!< 0x00000090 FrameGen Skew Regulation Frame Total Debug Register */
  un_VIDEOSS_FRAMEGEN1_FGTGPOSITION_t unFGTGPOSITION;  /*!< 0x00000094 Current (x,y) positions of the timing generator Register
                                                                                in FrameGen timing generator. Please don't use
                                                                                it due to lack of verification. */
  uint32_t                         au32Reserved[218];
} stc_VIDEOSS_VIDEOIO_DISENG1_FRAMEGEN1_t;             /*!< Size = 1024 (0x400) */

/**
  * \brief Gamma Correction Unit (VIDEOSS_VIDEOIO_DISENG1_GAMMACOR1)
  */
typedef struct stc_VIDEOSS_VIDEOIO_DISENG1_GAMMACOR1 {
  un_VIDEOSS_GAMMACOR1_STATICCONTROL_t unSTATICCONTROL; /*!< 0x00000000 Static control settings. */
  un_VIDEOSS_GAMMACOR1_LUTSTART_t  unLUTSTART;         /*!< 0x00000004 Start values for look-up table programming. */
  un_VIDEOSS_GAMMACOR1_LUTDELTAS_t unLUTDELTAS;        /*!< 0x00000008 Delta values for look-up table programming. */
  un_VIDEOSS_GAMMACOR1_CONTROL_t   unCONTROL;          /*!< 0x0000000C Dynamic control settings. */
  uint32_t                         au32Reserved[252];
} stc_VIDEOSS_VIDEOIO_DISENG1_GAMMACOR1_t;             /*!< Size = 1024 (0x400) */

/**
  * \brief Dither Unit (VIDEOSS_VIDEOIO_DISENG1_DITHER1)
  */
typedef struct stc_VIDEOSS_VIDEOIO_DISENG1_DITHER1 {
  un_VIDEOSS_DITHER1_CONTROL_t     unCONTROL;          /*!< 0x00000000 Dither Unit common control. */
  un_VIDEOSS_DITHER1_DITHERCONTROL_t unDITHERCONTROL;  /*!< 0x00000004 Dither Unit processing control. */
  un_VIDEOSS_DITHER1_RELEASE_t     unRELEASE;          /*!< 0x00000008 Dither Unit release. */
  uint32_t                         au32Reserved[253];
} stc_VIDEOSS_VIDEOIO_DISENG1_DITHER1_t;               /*!< Size = 1024 (0x400) */

/**
  * \brief Timing Controller (VIDEOSS_VIDEOIO_DISENG1_TCON1)
  */
typedef struct stc_VIDEOSS_VIDEOIO_DISENG1_TCON1 {
  un_VIDEOSS_TCON1_SSQCNTS_t       unSSQCNTS[64];      /*!< 0x00000000 The 64 Sequencer Position Definitions registers define
                                                                                the X/Y scan positions of the sequencers, hold
                                                                                their output value and assign the sequencer to
                                                                                an odd/even field */
  uint32_t                         au32Reserved[192];
  un_VIDEOSS_TCON1_SSQCYCLE_t      unSSQCYCLE;         /*!< 0x00000400 This bitfield sets the sequencer cycle length. The value
                                                                                set here -1 is the number of sequencer cycles */
  un_VIDEOSS_TCON1_SWRESET_t       unSWRESET;          /*!< 0x00000404 TCON Software Reset - Reset all tcon registers except
                                                                                configuration registers. Detailed description in
                                                                                specification document Note 1/ if tsig[11]
                                                                                pulse=n*pixel_period, (n-1)*0xFF will be blended
                                                                                between ResetWordStart and ResetWordEnd into
                                                                                miniLVDS stream Note 2/ if( EnResetWord=0)
                                                                                Reset-Pulse (ResetWordStart,ResetWordEnd) won't
                                                                                be blended into miniLVDS stream. Pixels will be
                                                                                transferred unchanged */
  un_VIDEOSS_TCON1_TCON_CTRL_t     unTCON_CTRL;        /*!< 0x00000408 TCON Control register */
  un_VIDEOSS_TCON1_RSDSINVCTRL_t   unRSDSINVCTRL;      /*!< 0x0000040C Controls inversion of output polarity when connected IO
                                                                                cells operate in RSDS mode */
  un_VIDEOSS_TCON1_MAPBIT3_0_t     unMAPBIT3_0;        /*!< 0x00000410 Mapping of 24 bit RGB or Timing Generator TSig[5-0] to
                                                                                bit 0 .. 3 */
  un_VIDEOSS_TCON1_MAPBIT7_4_t     unMAPBIT7_4;        /*!< 0x00000414 Mapping of 24 bit RGB or Timing Generator TSig[5-0] to
                                                                                bit 4 .. 7 */
  un_VIDEOSS_TCON1_MAPBIT11_8_t    unMAPBIT11_8;       /*!< 0x00000418 Mapping of 24 bit RGB or Timing Generator TSig[5-0] to
                                                                                bit 8 .. 11 */
  un_VIDEOSS_TCON1_MAPBIT15_12_t   unMAPBIT15_12;      /*!< 0x0000041C Mapping of 24 bit RGB or Timing Generator TSig[5-0] to
                                                                                bit 12 .. 15 */
  un_VIDEOSS_TCON1_MAPBIT19_16_t   unMAPBIT19_16;      /*!< 0x00000420 Mapping of 24 bit RGB or Timing Generator TSig[5-0] to
                                                                                bit 16 .. 19 */
  un_VIDEOSS_TCON1_MAPBIT23_20_t   unMAPBIT23_20;      /*!< 0x00000424 Mapping of 24 bit RGB or Timing Generator TSig[5-0] to
                                                                                bit 20 .. 23 */
  un_VIDEOSS_TCON1_MAPBIT27_24_t   unMAPBIT27_24;      /*!< 0x00000428 Mapping of 24 bit RGB or Timing Generator TSig[5-0] to
                                                                                bit 24 .. 27 */
  un_VIDEOSS_TCON1_MAPBIT3_0_DUAL_t unMAPBIT3_0_DUAL;  /*!< 0x0000042C Same as MapBit3_0 for 2nd channel */
  un_VIDEOSS_TCON1_MAPBIT7_4_DUAL_t unMAPBIT7_4_DUAL;  /*!< 0x00000430 Same as MapBit7_4 for 2nd channel */
  un_VIDEOSS_TCON1_MAPBIT11_8_DUAL_t unMAPBIT11_8_DUAL; /*!< 0x00000434 Same as MapBit11_8 for 2nd channel */
  un_VIDEOSS_TCON1_MAPBIT15_12_DUAL_t unMAPBIT15_12_DUAL; /*!< 0x00000438 Same as MapBit15_12 for 2nd channel */
  un_VIDEOSS_TCON1_MAPBIT19_16_DUAL_t unMAPBIT19_16_DUAL; /*!< 0x0000043C Same as MapBit19_16 for 2nd channel */
  un_VIDEOSS_TCON1_MAPBIT23_20_DUAL_t unMAPBIT23_20_DUAL; /*!< 0x00000440 Same as MapBit23_20 for 2nd channel */
  un_VIDEOSS_TCON1_MAPBIT27_24_DUAL_t unMAPBIT27_24_DUAL; /*!< 0x00000444 Same as MapBit27_24 for 2nd channel */
  un_VIDEOSS_TCON1_SPG0POSON_t     unSPG0POSON;        /*!< 0x00000448 Sync pulse generator 0, 'Switch on' position */
  un_VIDEOSS_TCON1_SPG0MASKON_t    unSPG0MASKON;       /*!< 0x0000044C The Sequencer Pulse Generator 0 Mask Enable register is
                                                                                used to mask the enable of SPG 0 */
  un_VIDEOSS_TCON1_SPG0POSOFF_t    unSPG0POSOFF;       /*!< 0x00000450 Sync pulse generator 0, 'Switch off' position */
  un_VIDEOSS_TCON1_SPG0MASKOFF_t   unSPG0MASKOFF;      /*!< 0x00000454 The Sequencer Pulse Generator 0 Mask Enable register is
                                                                                used to mask the disable of SPG 0 */
  un_VIDEOSS_TCON1_SPG1POSON_t     unSPG1POSON;        /*!< 0x00000458 Sync pulse generator 1, 'Switch on' position */
  un_VIDEOSS_TCON1_SPG1MASKON_t    unSPG1MASKON;       /*!< 0x0000045C The Sequencer Pulse Generator 1 Mask Enable register is
                                                                                used to mask the enable of SPG 1 */
  un_VIDEOSS_TCON1_SPG1POSOFF_t    unSPG1POSOFF;       /*!< 0x00000460 Sync pulse generator 1, 'Switch off' position */
  un_VIDEOSS_TCON1_SPG1MASKOFF_t   unSPG1MASKOFF;      /*!< 0x00000464 The Sequencer Pulse Generator 1 Mask Enable register is
                                                                                used to mask the disable of SPG 1 */
  un_VIDEOSS_TCON1_SPG2POSON_t     unSPG2POSON;        /*!< 0x00000468 Sync pulse generator 2, 'Switch on' position */
  un_VIDEOSS_TCON1_SPG2MASKON_t    unSPG2MASKON;       /*!< 0x0000046C The Sequencer Pulse Generator 2 Mask Enable register is
                                                                                used to mask the enable of SPG 2 */
  un_VIDEOSS_TCON1_SPG2POSOFF_t    unSPG2POSOFF;       /*!< 0x00000470 Sync pulse generator 2, 'Switch off' position */
  un_VIDEOSS_TCON1_SPG2MASKOFF_t   unSPG2MASKOFF;      /*!< 0x00000474 The Sequencer Pulse Generator 2 Mask Enable register is
                                                                                used to mask the disable of SPG 2 */
  un_VIDEOSS_TCON1_SPG3POSON_t     unSPG3POSON;        /*!< 0x00000478 Sync pulse generator 3, 'Switch on' position */
  un_VIDEOSS_TCON1_SPG3MASKON_t    unSPG3MASKON;       /*!< 0x0000047C The Sequencer Pulse Generator 3 Mask Enable register is
                                                                                used to mask the enable of SPG 3 */
  un_VIDEOSS_TCON1_SPG3POSOFF_t    unSPG3POSOFF;       /*!< 0x00000480 Sync pulse generator 3, 'Switch off' position */
  un_VIDEOSS_TCON1_SPG3MASKOFF_t   unSPG3MASKOFF;      /*!< 0x00000484 The Sequencer Pulse Generator 3 Mask Enable register is
                                                                                used to mask the disable of SPG 3 */
  un_VIDEOSS_TCON1_SPG4POSON_t     unSPG4POSON;        /*!< 0x00000488 Sync pulse generator 4, 'Switch on' position */
  un_VIDEOSS_TCON1_SPG4MASKON_t    unSPG4MASKON;       /*!< 0x0000048C The Sequencer Pulse Generator 4 Mask Enable register is
                                                                                used to mask the enable of SPG 4 */
  un_VIDEOSS_TCON1_SPG4POSOFF_t    unSPG4POSOFF;       /*!< 0x00000490 Sync pulse generator 4, 'Switch off' position */
  un_VIDEOSS_TCON1_SPG4MASKOFF_t   unSPG4MASKOFF;      /*!< 0x00000494 The Sequencer Pulse Generator 4 Mask Enable register is
                                                                                used to mask the disable of SPG 4 */
  un_VIDEOSS_TCON1_SPG5POSON_t     unSPG5POSON;        /*!< 0x00000498 Sync pulse generator 5, 'Switch on' position */
  un_VIDEOSS_TCON1_SPG5MASKON_t    unSPG5MASKON;       /*!< 0x0000049C The Sequencer Pulse Generator 5 Mask Enable register is
                                                                                used to mask the enable of SPG 5 */
  un_VIDEOSS_TCON1_SPG5POSOFF_t    unSPG5POSOFF;       /*!< 0x000004A0 Sync pulse generator 5, 'Switch off' position */
  un_VIDEOSS_TCON1_SPG5MASKOFF_t   unSPG5MASKOFF;      /*!< 0x000004A4 The Sequencer Pulse Generator 5 Mask Enable register is
                                                                                used to mask the disable of SPG 5 */
  un_VIDEOSS_TCON1_SPG6POSON_t     unSPG6POSON;        /*!< 0x000004A8 Sync pulse generator 6, 'Switch on' position */
  un_VIDEOSS_TCON1_SPG6MASKON_t    unSPG6MASKON;       /*!< 0x000004AC The Sequencer Pulse Generator 6 Mask Enable register is
                                                                                used to mask the enable of SPG 6 */
  un_VIDEOSS_TCON1_SPG6POSOFF_t    unSPG6POSOFF;       /*!< 0x000004B0 Sync pulse generator 6, 'Switch off' position */
  un_VIDEOSS_TCON1_SPG6MASKOFF_t   unSPG6MASKOFF;      /*!< 0x000004B4 The Sequencer Pulse Generator 6 Mask Enable register is
                                                                                used to mask the disable of SPG 6 */
  un_VIDEOSS_TCON1_SPG7POSON_t     unSPG7POSON;        /*!< 0x000004B8 Sync pulse generator 7, 'Switch on' position */
  un_VIDEOSS_TCON1_SPG7MASKON_t    unSPG7MASKON;       /*!< 0x000004BC The Sequencer Pulse Generator 7 Mask Enable register is
                                                                                used to mask the enable of SPG 7 */
  un_VIDEOSS_TCON1_SPG7POSOFF_t    unSPG7POSOFF;       /*!< 0x000004C0 Sync pulse generator 7, 'Switch off' position */
  un_VIDEOSS_TCON1_SPG7MASKOFF_t   unSPG7MASKOFF;      /*!< 0x000004C4 The Sequencer Pulse Generator 7 Mask Enable register is
                                                                                used to mask the disable of SPG 7 */
  un_VIDEOSS_TCON1_SPG8POSON_t     unSPG8POSON;        /*!< 0x000004C8 Sync pulse generator 8, 'Switch on' position */
  un_VIDEOSS_TCON1_SPG8MASKON_t    unSPG8MASKON;       /*!< 0x000004CC The Sequencer Pulse Generator 8 Mask Enable register is
                                                                                used to mask the enable of SPG 8 */
  un_VIDEOSS_TCON1_SPG8POSOFF_t    unSPG8POSOFF;       /*!< 0x000004D0 Sync pulse generator 8, 'Switch off' position */
  un_VIDEOSS_TCON1_SPG8MASKOFF_t   unSPG8MASKOFF;      /*!< 0x000004D4 The Sequencer Pulse Generator 8 Mask Enable register is
                                                                                used to mask the disable of SPG 8 */
  un_VIDEOSS_TCON1_SPG9POSON_t     unSPG9POSON;        /*!< 0x000004D8 Sync pulse generator 9, 'Switch on' position */
  un_VIDEOSS_TCON1_SPG9MASKON_t    unSPG9MASKON;       /*!< 0x000004DC The Sequencer Pulse Generator 9 Mask Enable register is
                                                                                used to mask the enable of SPG 9 */
  un_VIDEOSS_TCON1_SPG9POSOFF_t    unSPG9POSOFF;       /*!< 0x000004E0 Sync pulse generator 9, 'Switch off' position */
  un_VIDEOSS_TCON1_SPG9MASKOFF_t   unSPG9MASKOFF;      /*!< 0x000004E4 The Sequencer Pulse Generator 9 Mask Enable register is
                                                                                used to mask the disable of SPG 9 */
  un_VIDEOSS_TCON1_SPG10POSON_t    unSPG10POSON;       /*!< 0x000004E8 Sync pulse generator 10, 'Switch on' position */
  un_VIDEOSS_TCON1_SPG10MASKON_t   unSPG10MASKON;      /*!< 0x000004EC The Sequencer Pulse Generator 10 Mask Enable register is
                                                                                used to mask the enable of SPG 10 */
  un_VIDEOSS_TCON1_SPG10POSOFF_t   unSPG10POSOFF;      /*!< 0x000004F0 Sync pulse generator 10, 'Switch off' position */
  un_VIDEOSS_TCON1_SPG10MASKOFF_t  unSPG10MASKOFF;     /*!< 0x000004F4 The Sequencer Pulse Generator 10 Mask Enable register is
                                                                                used to mask the disable of SPG 10 */
  un_VIDEOSS_TCON1_SPG11POSON_t    unSPG11POSON;       /*!< 0x000004F8 Sync pulse generator 11, 'Switch on' position */
  un_VIDEOSS_TCON1_SPG11MASKON_t   unSPG11MASKON;      /*!< 0x000004FC The Sequencer Pulse Generator 11 Mask Enable register is
                                                                                used to mask the enable of SPG 11 */
  un_VIDEOSS_TCON1_SPG11POSOFF_t   unSPG11POSOFF;      /*!< 0x00000500 Sync pulse generator 11, 'Switch off' position */
  un_VIDEOSS_TCON1_SPG11MASKOFF_t  unSPG11MASKOFF;     /*!< 0x00000504 The Sequencer Pulse Generator 11 Mask Enable register is
                                                                                used to mask the disable of SPG 11 */
  un_VIDEOSS_TCON1_SMX0SIGS_t      unSMX0SIGS;         /*!< 0x00000508 Selection of input signals of sync mixer */
  un_VIDEOSS_TCON1_SMX0FCTTABLE_t  unSMX0FCTTABLE;     /*!< 0x0000050C The sync mixer output is the result of the function
                                                                                table a=s4*2**4+s3*2**3+s2*2**2+s1*2**1+s0*2**0
                                                                                whereby a is bit number and s result of sync
                                                                                mixer input selection */
  un_VIDEOSS_TCON1_SMX1SIGS_t      unSMX1SIGS;         /*!< 0x00000510 Selection of input signals of sync mixer */
  un_VIDEOSS_TCON1_SMX1FCTTABLE_t  unSMX1FCTTABLE;     /*!< 0x00000514 The sync mixer output is the result of the function
                                                                                table a=s4*2**4+s3*2**3+s2*2**2+s1*2**1+s0*2**0
                                                                                whereby a is bit number and s result of sync
                                                                                mixer input selection */
  un_VIDEOSS_TCON1_SMX2SIGS_t      unSMX2SIGS;         /*!< 0x00000518 Selection of input signals of sync mixer */
  un_VIDEOSS_TCON1_SMX2FCTTABLE_t  unSMX2FCTTABLE;     /*!< 0x0000051C The sync mixer output is the result of the function
                                                                                table
                                                                                a=s4*2**4+s**3*2**3+s2*2**2+s1*2**1+s0*2**0
                                                                                whereby a is bit number and s result of sync
                                                                                mixer input selection */
  un_VIDEOSS_TCON1_SMX3SIGS_t      unSMX3SIGS;         /*!< 0x00000520 Selection of input signals of sync mixer */
  un_VIDEOSS_TCON1_SMX3FCTTABLE_t  unSMX3FCTTABLE;     /*!< 0x00000524 The sync mixer output is the result of the function
                                                                                table a=s4*2**4+s3*2**3+s2*2**2+s1*2**1+s0*2**0
                                                                                whereby a is bit number and s result of sync
                                                                                mixer input selection */
  un_VIDEOSS_TCON1_SMX4SIGS_t      unSMX4SIGS;         /*!< 0x00000528 Selection of input signals of sync mixer */
  un_VIDEOSS_TCON1_SMX4FCTTABLE_t  unSMX4FCTTABLE;     /*!< 0x0000052C The sync mixer output is the result of the function
                                                                                table a=s4*2**4+s3*2**3+s2*2**2+s1*2**1+s0*2**0
                                                                                whereby a is bit number and s result of sync
                                                                                mixer input selection */
  un_VIDEOSS_TCON1_SMX5SIGS_t      unSMX5SIGS;         /*!< 0x00000530 Selection of input signals of sync mixer */
  un_VIDEOSS_TCON1_SMX5FCTTABLE_t  unSMX5FCTTABLE;     /*!< 0x00000534 The sync mixer output is the result of the function
                                                                                table a=s4*2**4+s3*2**3+s2*2**2+s1*2**1+s0*2**0
                                                                                whereby a is bit number and s result of sync
                                                                                mixer input selection */
  un_VIDEOSS_TCON1_SMX6SIGS_t      unSMX6SIGS;         /*!< 0x00000538 Selection of input signals of sync mixer */
  un_VIDEOSS_TCON1_SMX6FCTTABLE_t  unSMX6FCTTABLE;     /*!< 0x0000053C The sync mixer output is the result of the function
                                                                                table a=s4*2**4+s3*2**3+s2*2**2+s1*2**1+s0*2**0
                                                                                whereby a is bit number and s result of sync
                                                                                mixer input selection */
  un_VIDEOSS_TCON1_SMX7SIGS_t      unSMX7SIGS;         /*!< 0x00000540 Selection of input signals of sync mixer */
  un_VIDEOSS_TCON1_SMX7FCTTABLE_t  unSMX7FCTTABLE;     /*!< 0x00000544 The sync mixer output is the result of the function
                                                                                table a=s4*2**4+s3*2**3+s2*2**2+s1*2**1+s0*2**0
                                                                                whereby a is bit number and s result of sync
                                                                                mixer input selection */
  un_VIDEOSS_TCON1_SMX8SIGS_t      unSMX8SIGS;         /*!< 0x00000548 Selection of input signals of sync mixer */
  un_VIDEOSS_TCON1_SMX8FCTTABLE_t  unSMX8FCTTABLE;     /*!< 0x0000054C The sync mixer output is the result of the function
                                                                                table a=s4*2**4+s3*2**3+s2*2**2+s1*2**1+s0*2**0
                                                                                whereby a is bit number and s result of sync
                                                                                mixer input selection */
  un_VIDEOSS_TCON1_SMX9SIGS_t      unSMX9SIGS;         /*!< 0x00000550 Selection of input signals of sync mixer */
  un_VIDEOSS_TCON1_SMX9FCTTABLE_t  unSMX9FCTTABLE;     /*!< 0x00000554 The sync mixer output is the result of the function
                                                                                table a=s4*2**4+s3*2**3+s2*2**2+s1*2**1+s0*2**0
                                                                                whereby a is bit number and s result of sync
                                                                                mixer input selection */
  un_VIDEOSS_TCON1_SMX10SIGS_t     unSMX10SIGS;        /*!< 0x00000558 Selection of input signals of sync mixer */
  un_VIDEOSS_TCON1_SMX10FCTTABLE_t unSMX10FCTTABLE;    /*!< 0x0000055C The sync mixer output is the result of the function
                                                                                table a=s4*2**4+s3*2**3+s2*2**2+s1*2**1+s0*2**0
                                                                                whereby a is bit number and s result of sync
                                                                                mixer input selection */
  un_VIDEOSS_TCON1_SMX11SIGS_t     unSMX11SIGS;        /*!< 0x00000560 Selection of input signals of sync mixer */
  un_VIDEOSS_TCON1_SMX11FCTTABLE_t unSMX11FCTTABLE;    /*!< 0x00000564 The sync mixer output is the result of the function
                                                                                table a=s4*2**4+s3*2**3+s2*2**2+s1*2**1+s0*2**0
                                                                                whereby a is bit number and s result of sync
                                                                                mixer input selection */
  uint32_t                         au32Reserved1[166];
} stc_VIDEOSS_VIDEOIO_DISENG1_TCON1_t;                 /*!< Size = 2048 (0x800) */

/**
  * \brief Display Engine (VIDEOSS_VIDEOIO_DISENG1)
  */
typedef struct stc_VIDEOSS_VIDEOIO_DISENG1 {
  stc_VIDEOSS_VIDEOIO_DISENG1_DISENGCFG1_t DISENGCFG1; /*!< 0x00000000 Top-Level Configuration */
  uint32_t                         au32Reserved[768];
  stc_VIDEOSS_VIDEOIO_DISENG1_SIG1_t SIG1;             /*!< 0x00001000 Signature Unit */
  uint32_t                         au32Reserved1[768];
  stc_VIDEOSS_VIDEOIO_DISENG1_FRAMEGEN1_t FRAMEGEN1;   /*!< 0x00002000 Frame Generator */
  stc_VIDEOSS_VIDEOIO_DISENG1_GAMMACOR1_t GAMMACOR1;   /*!< 0x00002400 Gamma Correction Unit */
  stc_VIDEOSS_VIDEOIO_DISENG1_DITHER1_t DITHER1;       /*!< 0x00002800 Dither Unit */
  uint32_t                         au32Reserved2[256];
  stc_VIDEOSS_VIDEOIO_DISENG1_TCON1_t TCON1;           /*!< 0x00003000 Timing Controller */
  uint32_t                         au32Reserved3[512];
} stc_VIDEOSS_VIDEOIO_DISENG1_t;                       /*!< Size = 16384 (0x4000) */

/**
  * \brief Video I/O Core (VIDEOSS_VIDEOIO)
  */
typedef struct stc_VIDEOSS_VIDEOIO {
  stc_VIDEOSS_VIDEOIO_SUBIO_t      SUBIO[1];           /*!< 0x00000000 Sub Interface */
  stc_VIDEOSS_VIDEOIO_DISENG0_t    DISENG0[1];         /*!< 0x00020000 Display Engine */
  stc_VIDEOSS_VIDEOIO_DISENG1_t    DISENG1[1];         /*!< 0x00024000 Display Engine */
  uint32_t                         au32Reserved[24576];
} stc_VIDEOSS_VIDEOIO_t;                               /*!< Size = 262144 (0x40000) */

/**
  * \brief FPD-Link Interface (VIDEOSS_FPDLINK0)
  */
typedef struct stc_VIDEOSS_FPDLINK0 {
  un_VIDEOSS_FPDLINK0_CTL_t        unCTL;              /*!< 0x00000000 IP Control register for FPDLink */
  un_VIDEOSS_FPDLINK0_CMD_t        unCMD;              /*!< 0x00000004 IP Command register for FPDLink */
  un_VIDEOSS_FPDLINK0_CLK_GEN_CMD_t unCLK_GEN_CMD;     /*!< 0x00000008 Control register for CLK_GEN */
  un_VIDEOSS_FPDLINK0_CLK_GEN_CTL_t unCLK_GEN_CTL;     /*!< 0x0000000C Configuration register for CKGEN */
  un_VIDEOSS_FPDLINK0_CLK_GEN_STATUS_t unCLK_GEN_STATUS; /*!< 0x00000010 Status register for CKGEN */
  uint32_t                         au32Reserved[251];
} stc_VIDEOSS_FPDLINK0_t;                              /*!< Size = 1024 (0x400) */

/**
  * \brief FPD-Link Interface (VIDEOSS_FPDLINK1)
  */
typedef struct stc_VIDEOSS_FPDLINK1 {
  un_VIDEOSS_FPDLINK1_CTL_t        unCTL;              /*!< 0x00000000 IP Control register for FPDLink */
  un_VIDEOSS_FPDLINK1_CMD_t        unCMD;              /*!< 0x00000004 IP Command register for FPDLink */
  un_VIDEOSS_FPDLINK1_CLK_GEN_CMD_t unCLK_GEN_CMD;     /*!< 0x00000008 Control register for CLK_GEN */
  un_VIDEOSS_FPDLINK1_CLK_GEN_CTL_t unCLK_GEN_CTL;     /*!< 0x0000000C Configuration register for CKGEN */
  un_VIDEOSS_FPDLINK1_CLK_GEN_STATUS_t unCLK_GEN_STATUS; /*!< 0x00000010 Status register for CKGEN */
  uint32_t                         au32Reserved[251];
} stc_VIDEOSS_FPDLINK1_t;                              /*!< Size = 1024 (0x400) */

/**
  * \brief MIPI CSI-2 D-PHY wrapper configuration and status (VIDEOSS_MIPICSI_MIPICSI_STRUCT_MIPICSI_WRAP)
  */
typedef struct stc_VIDEOSS_MIPICSI_MIPICSI_STRUCT_MIPICSI_WRAP {
  un_VIDEOSS_MIPICSI_MIPICSI_STRUCT_MIPICSI_WRAP_CTL_t unCTL; /*!< 0x00000000 Control */
  un_VIDEOSS_MIPICSI_MIPICSI_STRUCT_MIPICSI_WRAP_DPHY_CTL_t unDPHY_CTL; /*!< 0x00000004 D-PHY Control */
  un_VIDEOSS_MIPICSI_MIPICSI_STRUCT_MIPICSI_WRAP_CLOCK_CTL_t unCLOCK_CTL; /*!< 0x00000008 Clock Control */
  uint32_t                         au32Reserved[13];
  un_VIDEOSS_MIPICSI_MIPICSI_STRUCT_MIPICSI_WRAP_CAL_CTL_t unCAL_CTL; /*!< 0x00000040 Calibration Control */
  un_VIDEOSS_MIPICSI_MIPICSI_STRUCT_MIPICSI_WRAP_CAL_STAT_t unCAL_STAT; /*!< 0x00000044 Calibration Status */
  uint32_t                         au32Reserved1[30];
  un_VIDEOSS_MIPICSI_MIPICSI_STRUCT_MIPICSI_WRAP_TMG_DATA_CTL_t unTMG_DATA_CTL; /*!< 0x000000C0 Timing Data Lane Control */
  un_VIDEOSS_MIPICSI_MIPICSI_STRUCT_MIPICSI_WRAP_TMG_CLOCK_CTL_t unTMG_CLOCK_CTL; /*!< 0x000000C4 Timing Clock Lane Control */
  uint32_t                         au32Reserved2[14];
} stc_VIDEOSS_MIPICSI_MIPICSI_STRUCT_MIPICSI_WRAP_t;        /*!< Size = 256 (0x100) */

/**
  * \brief MIPICSI2 RX Core through APB interface (3PIP) (VIDEOSS_MIPICSI_MIPICSI_STRUCT_MIPICSI_CORE)
  */
typedef struct stc_VIDEOSS_MIPICSI_MIPICSI_STRUCT_MIPICSI_CORE {
  un_VIDEOSS_MIPICSI_MIPICSI_STRUCT_MIPICSI_CORE_CFG_NUM_LANES_t unCFG_NUM_LANES; /*!< 0x00000000 CFG_NUM_LANES is a register within the CSI-2 RX
                                                                                Controller Core. */
  un_VIDEOSS_MIPICSI_MIPICSI_STRUCT_MIPICSI_CORE_CFG_CLK_LANE_EN_t unCFG_CLK_LANE_EN; /*!< 0x00000004 CFG_CLK_LANE_EN is a register within the CSI-2 RX
                                                                                Controller Core. */
  un_VIDEOSS_MIPICSI_MIPICSI_STRUCT_MIPICSI_CORE_CFG_DATA_LANE_EN_t unCFG_DATA_LANE_EN; /*!< 0x00000008 CFG_DATA_LANE_EN is a register within the CSI-2 RX
                                                                                Controller Core. */
  un_VIDEOSS_MIPICSI_MIPICSI_STRUCT_MIPICSI_CORE_CFG_FLUSH_COUNT_t unCFG_FLUSH_COUNT; /*!< 0x0000000C CFG_FLUSH_COUNT is a register within the CSI-2 RX
                                                                                Controller Core. */
  un_VIDEOSS_MIPICSI_MIPICSI_STRUCT_MIPICSI_CORE_CFG_BIT_ERR_t unCFG_BIT_ERR; /*!< 0x00000010 CFG_BIT_ERR is a register within the CSI-2 RX Controller
                                                                                Core. */
  un_VIDEOSS_MIPICSI_MIPICSI_STRUCT_MIPICSI_CORE_IRQ_STATUS_t unIRQ_STATUS; /*!< 0x00000014 IRQ_STATUS is a register within the CSI-2 RX Controller
                                                                                Core. */
  un_VIDEOSS_MIPICSI_MIPICSI_STRUCT_MIPICSI_CORE_IRQ_ENABLE_t unIRQ_ENABLE; /*!< 0x00000018 IRQ_ENABLE is a register within the CSI-2 RX Controller
                                                                                Core. */
  un_VIDEOSS_MIPICSI_MIPICSI_STRUCT_MIPICSI_CORE_IRQ_CLR_t unIRQ_CLR; /*!< 0x0000001C IRQ_CLR is a register within the CSI-2 RX Controller
                                                                                Core. */
  un_VIDEOSS_MIPICSI_MIPICSI_STRUCT_MIPICSI_CORE_ULPS_CLK_STATUS_t unULPS_CLK_STATUS; /*!< 0x00000020 ULPS_CLK_STATUS is a register within the CSI-2 RX
                                                                                Controller Core. */
  un_VIDEOSS_MIPICSI_MIPICSI_STRUCT_MIPICSI_CORE_ULPS_STATUS_t unULPS_STATUS; /*!< 0x00000024 ULPS_STATUS is a register within the CSI-2 RX Controller
                                                                                Core. */
  un_VIDEOSS_MIPICSI_MIPICSI_STRUCT_MIPICSI_CORE_ULPS_CLK_MARK_STATUS_t unULPS_CLK_MARK_STATUS; /*!< 0x00000028 ULPS_CLK_MARK_STATUS is a register within the CSI-2 RX
                                                                                Controller Core. */
  un_VIDEOSS_MIPICSI_MIPICSI_STRUCT_MIPICSI_CORE_ULPS_MARK_STATUS_t unULPS_MARK_STATUS; /*!< 0x0000002C ULPS_MARK_STATUS is a register within the CSI-2 RX
                                                                                Controller Core. */
  uint32_t                         au32Reserved[10];
  un_VIDEOSS_MIPICSI_MIPICSI_STRUCT_MIPICSI_CORE_CFG_DISABLE_PAYLOAD_0_t unCFG_DISABLE_PAYLOAD_0; /*!< 0x00000058 CFG_DISABLE_PAYLOAD_0 is a register within the CSI-2 RX
                                                                                Controller Core. */
  un_VIDEOSS_MIPICSI_MIPICSI_STRUCT_MIPICSI_CORE_CFG_DISABLE_PAYLOAD_1_t unCFG_DISABLE_PAYLOAD_1; /*!< 0x0000005C CFG_DISABLE_PAYLOAD_1 is a register within the CSI-2 RX
                                                                                Controller Core. */
  uint32_t                         au32Reserved1[104];
} stc_VIDEOSS_MIPICSI_MIPICSI_STRUCT_MIPICSI_CORE_t;        /*!< Size = 512 (0x200) */

/**
  * \brief MIPICSI Structure (VIDEOSS_MIPICSI_MIPICSI_STRUCT)
  */
typedef struct stc_VIDEOSS_MIPICSI_MIPICSI_STRUCT {
  stc_VIDEOSS_MIPICSI_MIPICSI_STRUCT_MIPICSI_WRAP_t MIPICSI_WRAP; /*!< 0x00000000 MIPI CSI-2 D-PHY wrapper configuration and status */
  uint32_t                         au32Reserved[64];
  stc_VIDEOSS_MIPICSI_MIPICSI_STRUCT_MIPICSI_CORE_t MIPICSI_CORE; /*!< 0x00000200 MIPICSI2 RX Core through APB interface (3PIP) */
} stc_VIDEOSS_MIPICSI_MIPICSI_STRUCT_t;                /*!< Size = 1024 (0x400) */

/**
  * \brief MIPICSI (VIDEOSS_MIPICSI)
  */
typedef struct stc_VIDEOSS_MIPICSI {
  stc_VIDEOSS_MIPICSI_MIPICSI_STRUCT_t MIPICSI_STRUCT; /*!< 0x00000000 MIPICSI Structure */
} stc_VIDEOSS_MIPICSI_t;                               /*!< Size = 1024 (0x400) */

/**
  * \brief VRPU structures. (VIDEOSS_INFRA_VRPU_VRPU_STRUCT)
  */
typedef struct stc_VIDEOSS_INFRA_VRPU_VRPU_STRUCT {
  un_VIDEOSS_VRPU_VRPU_STRUCT_ADDR0_t unADDR0;         /*!< 0x00000000 VRPU region address 0 (slave structure) */
  un_VIDEOSS_VRPU_VRPU_STRUCT_ATT0_t unATT0;           /*!< 0x00000004 VRPU region attributes 0 (slave structure) */
  uint32_t                         au32Reserved[6];
  un_VIDEOSS_VRPU_VRPU_STRUCT_ADDR1_t unADDR1;         /*!< 0x00000020 VRPU region address 1 (master structure) */
  un_VIDEOSS_VRPU_VRPU_STRUCT_ATT1_t unATT1;           /*!< 0x00000024 VRPU region attributes 1 (master structure) */
  uint32_t                         au32Reserved1[6];
} stc_VIDEOSS_INFRA_VRPU_VRPU_STRUCT_t;                /*!< Size = 64 (0x40) */

/**
  * \brief VRPU configuration. (VIDEOSS_INFRA_VRPU)
  */
typedef struct stc_VIDEOSS_INFRA_VRPU {
  un_VIDEOSS_VRPU_RD0_CTL_t        unRD0_CTL;          /*!< 0x00000000 VRAM Protection for read master with ID=0 */
  un_VIDEOSS_VRPU_RD1_CTL_t        unRD1_CTL;          /*!< 0x00000004 VRAM Protection for read master with ID=1 */
  un_VIDEOSS_VRPU_RD2_CTL_t        unRD2_CTL;          /*!< 0x00000008 VRAM Protection for read master with ID=2 */
  un_VIDEOSS_VRPU_RD3_CTL_t        unRD3_CTL;          /*!< 0x0000000C VRAM Protection for read master with ID=3 */
  un_VIDEOSS_VRPU_RD4_CTL_t        unRD4_CTL;          /*!< 0x00000010 VRAM Protection for read master with ID=4 */
  un_VIDEOSS_VRPU_RD5_CTL_t        unRD5_CTL;          /*!< 0x00000014 VRAM Protection for read master with ID=5 */
  un_VIDEOSS_VRPU_RD6_CTL_t        unRD6_CTL;          /*!< 0x00000018 VRAM Protection for read master with ID=6 */
  un_VIDEOSS_VRPU_RD7_CTL_t        unRD7_CTL;          /*!< 0x0000001C VRAM Protection for read master with ID=7 */
  un_VIDEOSS_VRPU_RD8_CTL_t        unRD8_CTL;          /*!< 0x00000020 VRAM Protection for read master with ID=8 */
  un_VIDEOSS_VRPU_RD9_CTL_t        unRD9_CTL;          /*!< 0x00000024 VRAM Protection for read master with ID=9 */
  un_VIDEOSS_VRPU_RD10_CTL_t       unRD10_CTL;         /*!< 0x00000028 VRAM Protection for read master with ID=10 */
  un_VIDEOSS_VRPU_RD11_CTL_t       unRD11_CTL;         /*!< 0x0000002C VRAM Protection for read master with ID=11 */
  un_VIDEOSS_VRPU_RD12_CTL_t       unRD12_CTL;         /*!< 0x00000030 VRAM Protection for read master with ID=12 */
  un_VIDEOSS_VRPU_RD13_CTL_t       unRD13_CTL;         /*!< 0x00000034 VRAM Protection for read master with ID=13 */
  un_VIDEOSS_VRPU_RD14_CTL_t       unRD14_CTL;         /*!< 0x00000038 VRAM Protection for read master with ID=14 */
  un_VIDEOSS_VRPU_RD15_CTL_t       unRD15_CTL;         /*!< 0x0000003C VRAM Protection for read master with ID=15 */
  un_VIDEOSS_VRPU_WR0_CTL_t        unWR0_CTL;          /*!< 0x00000040 VRAM Protection for write master with ID=0 */
  un_VIDEOSS_VRPU_WR1_CTL_t        unWR1_CTL;          /*!< 0x00000044 VRAM Protection for write master with ID=1 */
  un_VIDEOSS_VRPU_WR2_CTL_t        unWR2_CTL;          /*!< 0x00000048 VRAM Protection for write master with ID=2 */
  un_VIDEOSS_VRPU_WR3_CTL_t        unWR3_CTL;          /*!< 0x0000004C VRAM Protection for write master with ID=3 */
  un_VIDEOSS_VRPU_WR4_CTL_t        unWR4_CTL;          /*!< 0x00000050 VRAM Protection for write master with ID=4 */
  un_VIDEOSS_VRPU_WR5_CTL_t        unWR5_CTL;          /*!< 0x00000054 VRAM Protection for write master with ID=5 */
  un_VIDEOSS_VRPU_WR6_CTL_t        unWR6_CTL;          /*!< 0x00000058 VRAM Protection for write master with ID=6 */
  un_VIDEOSS_VRPU_WR7_CTL_t        unWR7_CTL;          /*!< 0x0000005C VRAM Protection for write master with ID=7 */
  un_VIDEOSS_VRPU_WR8_CTL_t        unWR8_CTL;          /*!< 0x00000060 VRAM Protection for write master with ID=8 */
  un_VIDEOSS_VRPU_WR9_CTL_t        unWR9_CTL;          /*!< 0x00000064 VRAM Protection for write master with ID=9 */
  un_VIDEOSS_VRPU_WR10_CTL_t       unWR10_CTL;         /*!< 0x00000068 VRAM Protection for write master with ID=10 */
  un_VIDEOSS_VRPU_WR11_CTL_t       unWR11_CTL;         /*!< 0x0000006C VRAM Protection for write master with ID=11 */
  un_VIDEOSS_VRPU_WR12_CTL_t       unWR12_CTL;         /*!< 0x00000070 VRAM Protection for write master with ID=12 */
  un_VIDEOSS_VRPU_WR13_CTL_t       unWR13_CTL;         /*!< 0x00000074 VRAM Protection for write master with ID=13 */
  un_VIDEOSS_VRPU_WR14_CTL_t       unWR14_CTL;         /*!< 0x00000078 VRAM Protection for write master with ID=14 */
  un_VIDEOSS_VRPU_WR15_CTL_t       unWR15_CTL;         /*!< 0x0000007C VRAM Protection for write master with ID=15 */
  uint32_t                         au32Reserved[2016];
  stc_VIDEOSS_INFRA_VRPU_VRPU_STRUCT_t VRPU_STRUCT[32]; /*!< 0x00002000 VRPU structures. */
  uint32_t                         au32Reserved1[1536];
} stc_VIDEOSS_INFRA_VRPU_t;                            /*!< Size = 16384 (0x4000) */

/**
  * \brief MPU configuration for read masters. (VIDEOSS_INFRA_GFX_MPU_RD)
  */
typedef struct stc_VIDEOSS_INFRA_GFX_MPU_RD {
  un_VIDEOSS_GFX_MPU_RD_RD_CTL_t   unRD_CTL;           /*!< 0x00000000 Memory protection context for AXI read master */
  uint32_t                         au32Reserved[255];
} stc_VIDEOSS_INFRA_GFX_MPU_RD_t;                      /*!< Size = 1024 (0x400) */

/**
  * \brief MPU configuration for write masters. (VIDEOSS_INFRA_GFX_MPU_WR)
  */
typedef struct stc_VIDEOSS_INFRA_GFX_MPU_WR {
  un_VIDEOSS_GFX_MPU_WR_WR_CTL_t   unWR_CTL;           /*!< 0x00000000 Memory protection context for AXI write master */
  uint32_t                         au32Reserved[255];
} stc_VIDEOSS_INFRA_GFX_MPU_WR_t;                      /*!< Size = 1024 (0x400) */

/**
  * \brief Bus infrastructure (VIDEOSS_INFRA)
  */
typedef struct stc_VIDEOSS_INFRA {
  stc_VIDEOSS_INFRA_VRPU_t         VRPU;               /*!< 0x00000000 VRPU configuration. */
  stc_VIDEOSS_INFRA_GFX_MPU_RD_t   GFX_MPU_RD[16];     /*!< 0x00004000 MPU configuration for read masters. */
  stc_VIDEOSS_INFRA_GFX_MPU_WR_t   GFX_MPU_WR[16];     /*!< 0x00008000 MPU configuration for write masters. */
  uint32_t                         au32Reserved[4096];
} stc_VIDEOSS_INFRA_t;                                 /*!< Size = 65536 (0x10000) */

/**
  * \brief Video and Graphics Subsystem IP (VIDEOSS)
  */
typedef struct stc_VIDEOSS {
  stc_VIDEOSS_SUBSS_t              SUBSS[1];           /*!< 0x00000000 Sub Interface */
  stc_VIDEOSS_VIDEOIO_t            VIDEOIO[1];         /*!< 0x00080000 Video I/O Core */
  stc_VIDEOSS_FPDLINK0_t           FPDLINK0;           /*!< 0x000C0000 FPD-Link Interface */
  uint32_t                         au32Reserved[7936];
  stc_VIDEOSS_FPDLINK1_t           FPDLINK1;           /*!< 0x000C8000 FPD-Link Interface */
  uint32_t                         au32Reserved1[7936];
  stc_VIDEOSS_MIPICSI_t            MIPICSI[1];         /*!< 0x000D0000 MIPICSI */
  uint32_t                         au32Reserved2[32512];
  stc_VIDEOSS_INFRA_t              INFRA[1];           /*!< 0x000F0000 Bus infrastructure */
} stc_VIDEOSS_t;                                       /*!< Size = 1048576 (0x100000) */


/* VIDEOSS_SUBSS_VIDEOSSCFG.CTL */
#define VIDEOSS_SUBSS_VIDEOSSCFG_CTL_ENABLED_Pos 31UL
#define VIDEOSS_SUBSS_VIDEOSSCFG_CTL_ENABLED_Msk 0x80000000UL
/* VIDEOSS_SUBSS_VIDEOSSCFG.GFX2D_CTL */
#define VIDEOSS_SUBSS_VIDEOSSCFG_GFX2D_CTL_GFX2D_ENABLED_Pos 31UL
#define VIDEOSS_SUBSS_VIDEOSSCFG_GFX2D_CTL_GFX2D_ENABLED_Msk 0x80000000UL
/* VIDEOSS_SUBSS_VIDEOSSCFG.IPIDENTIFIER */
#define VIDEOSS_SUBSS_VIDEOSSCFG_IPIDENTIFIER_IPPLATFORM_Pos 0UL
#define VIDEOSS_SUBSS_VIDEOSSCFG_IPIDENTIFIER_IPPLATFORM_Msk 0x1UL
#define VIDEOSS_SUBSS_VIDEOSSCFG_IPIDENTIFIER_IPNAME_Pos 4UL
#define VIDEOSS_SUBSS_VIDEOSSCFG_IPIDENTIFIER_IPNAME_Msk 0x30UL
#define VIDEOSS_SUBSS_VIDEOSSCFG_IPIDENTIFIER_IPVERSION_Pos 8UL
#define VIDEOSS_SUBSS_VIDEOSSCFG_IPIDENTIFIER_IPVERSION_Msk 0x300UL
#define VIDEOSS_SUBSS_VIDEOSSCFG_IPIDENTIFIER_IPPHASE_Pos 12UL
#define VIDEOSS_SUBSS_VIDEOSSCFG_IPIDENTIFIER_IPPHASE_Msk 0x3000UL
#define VIDEOSS_SUBSS_VIDEOSSCFG_IPIDENTIFIER_IPMATURITY_Pos 16UL
#define VIDEOSS_SUBSS_VIDEOSSCFG_IPIDENTIFIER_IPMATURITY_Msk 0x30000UL
#define VIDEOSS_SUBSS_VIDEOSSCFG_IPIDENTIFIER_IPRELEASE_Pos 20UL
#define VIDEOSS_SUBSS_VIDEOSSCFG_IPIDENTIFIER_IPRELEASE_Msk 0xFF00000UL
/* VIDEOSS_SUBSS_VIDEOSSCFG.IPCONFIGURATION */
#define VIDEOSS_SUBSS_VIDEOSSCFG_IPCONFIGURATION_GFX2D_Pos 0UL
#define VIDEOSS_SUBSS_VIDEOSSCFG_IPCONFIGURATION_GFX2D_Msk 0x1UL
#define VIDEOSS_SUBSS_VIDEOSSCFG_IPCONFIGURATION_MIPICSI_Pos 1UL
#define VIDEOSS_SUBSS_VIDEOSSCFG_IPCONFIGURATION_MIPICSI_Msk 0x2UL
#define VIDEOSS_SUBSS_VIDEOSSCFG_IPCONFIGURATION_FPDLINK0_Pos 2UL
#define VIDEOSS_SUBSS_VIDEOSSCFG_IPCONFIGURATION_FPDLINK0_Msk 0x4UL
#define VIDEOSS_SUBSS_VIDEOSSCFG_IPCONFIGURATION_FPDLINK1_Pos 3UL
#define VIDEOSS_SUBSS_VIDEOSSCFG_IPCONFIGURATION_FPDLINK1_Msk 0x8UL
#define VIDEOSS_SUBSS_VIDEOSSCFG_IPCONFIGURATION_LCDBUSIF_Pos 4UL
#define VIDEOSS_SUBSS_VIDEOSSCFG_IPCONFIGURATION_LCDBUSIF_Msk 0x10UL
#define VIDEOSS_SUBSS_VIDEOSSCFG_IPCONFIGURATION_DISPLAY1_Pos 5UL
#define VIDEOSS_SUBSS_VIDEOSSCFG_IPCONFIGURATION_DISPLAY1_Msk 0x20UL
#define VIDEOSS_SUBSS_VIDEOSSCFG_IPCONFIGURATION_CAPTURE0_Pos 6UL
#define VIDEOSS_SUBSS_VIDEOSSCFG_IPCONFIGURATION_CAPTURE0_Msk 0x40UL
#define VIDEOSS_SUBSS_VIDEOSSCFG_IPCONFIGURATION_WARPING_Pos 7UL
#define VIDEOSS_SUBSS_VIDEOSSCFG_IPCONFIGURATION_WARPING_Msk 0x80UL
#define VIDEOSS_SUBSS_VIDEOSSCFG_IPCONFIGURATION_TCON_Pos 8UL
#define VIDEOSS_SUBSS_VIDEOSSCFG_IPCONFIGURATION_TCON_Msk 0x100UL
#define VIDEOSS_SUBSS_VIDEOSSCFG_IPCONFIGURATION_VRAM_Pos 9UL
#define VIDEOSS_SUBSS_VIDEOSSCFG_IPCONFIGURATION_VRAM_Msk 0x200UL
#define VIDEOSS_SUBSS_VIDEOSSCFG_IPCONFIGURATION_VRAMSIZE_Pos 16UL
#define VIDEOSS_SUBSS_VIDEOSSCFG_IPCONFIGURATION_VRAMSIZE_Msk 0xF0000UL
/* VIDEOSS_SUBSS_VIDEOSSCFG.CLKDSP0CFG */
#define VIDEOSS_SUBSS_VIDEOSSCFG_CLKDSP0CFG_DIVVAL0_Pos 0UL
#define VIDEOSS_SUBSS_VIDEOSSCFG_CLKDSP0CFG_DIVVAL0_Msk 0x3UL
#define VIDEOSS_SUBSS_VIDEOSSCFG_CLKDSP0CFG_TTLCLKINV0_Pos 4UL
#define VIDEOSS_SUBSS_VIDEOSSCFG_CLKDSP0CFG_TTLCLKINV0_Msk 0x10UL
/* VIDEOSS_SUBSS_VIDEOSSCFG.CLKDSP1CFG */
#define VIDEOSS_SUBSS_VIDEOSSCFG_CLKDSP1CFG_DIVVAL1_Pos 0UL
#define VIDEOSS_SUBSS_VIDEOSSCFG_CLKDSP1CFG_DIVVAL1_Msk 0x3UL
#define VIDEOSS_SUBSS_VIDEOSSCFG_CLKDSP1CFG_TTLCLKINV1_Pos 4UL
#define VIDEOSS_SUBSS_VIDEOSSCFG_CLKDSP1CFG_TTLCLKINV1_Msk 0x10UL
/* VIDEOSS_SUBSS_VIDEOSSCFG.CAP0CFG */
#define VIDEOSS_SUBSS_VIDEOSSCFG_CAP0CFG_CAP0SRC_Pos 0UL
#define VIDEOSS_SUBSS_VIDEOSSCFG_CAP0CFG_CAP0SRC_Msk 0x3UL
/* VIDEOSS_SUBSS_VIDEOSSCFG.FPDLINKCFG */
#define VIDEOSS_SUBSS_VIDEOSSCFG_FPDLINKCFG_FPDLINKSEL_Pos 0UL
#define VIDEOSS_SUBSS_VIDEOSSCFG_FPDLINKCFG_FPDLINKSEL_Msk 0x1UL
/* VIDEOSS_SUBSS_VIDEOSSCFG.DSP0_CTL */
#define VIDEOSS_SUBSS_VIDEOSSCFG_DSP0_CTL_DSP0_ENABLED_Pos 31UL
#define VIDEOSS_SUBSS_VIDEOSSCFG_DSP0_CTL_DSP0_ENABLED_Msk 0x80000000UL
/* VIDEOSS_SUBSS_VIDEOSSCFG.DSP1_CTL */
#define VIDEOSS_SUBSS_VIDEOSSCFG_DSP1_CTL_DSP1_ENABLED_Pos 31UL
#define VIDEOSS_SUBSS_VIDEOSSCFG_DSP1_CTL_DSP1_ENABLED_Msk 0x80000000UL


/* VIDEOSS_SUBSS_VRAM.ARBITER_PRIORITY */
#define VIDEOSS_SUBSS_VRAM_ARBITER_PRIORITY_PRIORITY_WR0_Pos 0UL
#define VIDEOSS_SUBSS_VRAM_ARBITER_PRIORITY_PRIORITY_WR0_Msk 0x3UL
#define VIDEOSS_SUBSS_VRAM_ARBITER_PRIORITY_PRIORITY_WR1_Pos 2UL
#define VIDEOSS_SUBSS_VRAM_ARBITER_PRIORITY_PRIORITY_WR1_Msk 0xCUL
#define VIDEOSS_SUBSS_VRAM_ARBITER_PRIORITY_PRIORITY_RD0_Pos 8UL
#define VIDEOSS_SUBSS_VRAM_ARBITER_PRIORITY_PRIORITY_RD0_Msk 0x300UL
#define VIDEOSS_SUBSS_VRAM_ARBITER_PRIORITY_PRIORITY_RD1_Pos 12UL
#define VIDEOSS_SUBSS_VRAM_ARBITER_PRIORITY_PRIORITY_RD1_Msk 0x3000UL
#define VIDEOSS_SUBSS_VRAM_ARBITER_PRIORITY_PRIORITY_RD2_Pos 16UL
#define VIDEOSS_SUBSS_VRAM_ARBITER_PRIORITY_PRIORITY_RD2_Msk 0x30000UL
#define VIDEOSS_SUBSS_VRAM_ARBITER_PRIORITY_PRIORITY_RD3_Pos 20UL
#define VIDEOSS_SUBSS_VRAM_ARBITER_PRIORITY_PRIORITY_RD3_Msk 0x300000UL
#define VIDEOSS_SUBSS_VRAM_ARBITER_PRIORITY_PRIORITY_RD4_Pos 24UL
#define VIDEOSS_SUBSS_VRAM_ARBITER_PRIORITY_PRIORITY_RD4_Msk 0x3000000UL


/* VIDEOSS_SUBSS_GFX2D_GFX2DCFG.INTR_GFX2D */
#define VIDEOSS_SUBSS_GFX2D_GFX2DCFG_INTR_GFX2D_INTR_GFX2D_Pos 0UL
#define VIDEOSS_SUBSS_GFX2D_GFX2DCFG_INTR_GFX2D_INTR_GFX2D_Msk 0xFFFFFFUL
/* VIDEOSS_SUBSS_GFX2D_GFX2DCFG.INTR_GFX2D_SET */
#define VIDEOSS_SUBSS_GFX2D_GFX2DCFG_INTR_GFX2D_SET_INTR_GFX2D_SET_Pos 0UL
#define VIDEOSS_SUBSS_GFX2D_GFX2DCFG_INTR_GFX2D_SET_INTR_GFX2D_SET_Msk 0xFFFFFFUL
/* VIDEOSS_SUBSS_GFX2D_GFX2DCFG.INTR_GFX2D_MASK */
#define VIDEOSS_SUBSS_GFX2D_GFX2DCFG_INTR_GFX2D_MASK_INTR_GFX2D_MASK_Pos 0UL
#define VIDEOSS_SUBSS_GFX2D_GFX2DCFG_INTR_GFX2D_MASK_INTR_GFX2D_MASK_Msk 0xFFFFFFUL
/* VIDEOSS_SUBSS_GFX2D_GFX2DCFG.INTR_GFX2D_MASKED */
#define VIDEOSS_SUBSS_GFX2D_GFX2DCFG_INTR_GFX2D_MASKED_INTR_GFX2D_MASKED_Pos 0UL
#define VIDEOSS_SUBSS_GFX2D_GFX2DCFG_INTR_GFX2D_MASKED_INTR_GFX2D_MASKED_Msk 0xFFFFFFUL
/* VIDEOSS_SUBSS_GFX2D_GFX2DCFG.INTR_CMDSEQ */
#define VIDEOSS_SUBSS_GFX2D_GFX2DCFG_INTR_CMDSEQ_INTR_CMDSEQ_Pos 0UL
#define VIDEOSS_SUBSS_GFX2D_GFX2DCFG_INTR_CMDSEQ_INTR_CMDSEQ_Msk 0x3FFFFFUL
/* VIDEOSS_SUBSS_GFX2D_GFX2DCFG.INTR_CMDSEQ_SET */
#define VIDEOSS_SUBSS_GFX2D_GFX2DCFG_INTR_CMDSEQ_SET_INTR_CMDSEQ_SET_Pos 0UL
#define VIDEOSS_SUBSS_GFX2D_GFX2DCFG_INTR_CMDSEQ_SET_INTR_CMDSEQ_SET_Msk 0x3FFFFFUL
/* VIDEOSS_SUBSS_GFX2D_GFX2DCFG.GENERALPURPOSE */
#define VIDEOSS_SUBSS_GFX2D_GFX2DCFG_GENERALPURPOSE_GENERALPURPOSE_Pos 0UL
#define VIDEOSS_SUBSS_GFX2D_GFX2DCFG_GENERALPURPOSE_GENERALPURPOSE_Msk 0xFFFFFFFFUL


/* VIDEOSS_SUBSS_GFX2D_CMDSEQ.TASKBUFFERADDRESS0 */
#define VIDEOSS_SUBSS_GFX2D_CMDSEQ_TASKBUFFERADDRESS0_ADDRESSTB0_Pos 3UL
#define VIDEOSS_SUBSS_GFX2D_CMDSEQ_TASKBUFFERADDRESS0_ADDRESSTB0_Msk 0xFFFFFFF8UL
/* VIDEOSS_SUBSS_GFX2D_CMDSEQ.TASKBUFFERSIZE0 */
#define VIDEOSS_SUBSS_GFX2D_CMDSEQ_TASKBUFFERSIZE0_SIZETB0_Pos 0UL
#define VIDEOSS_SUBSS_GFX2D_CMDSEQ_TASKBUFFERSIZE0_SIZETB0_Msk 0xFFFFUL
/* VIDEOSS_SUBSS_GFX2D_CMDSEQ.TASKBUFFERSTOPOFFSET0 */
#define VIDEOSS_SUBSS_GFX2D_CMDSEQ_TASKBUFFERSTOPOFFSET0_STOPOFFSETTB0_Pos 0UL
#define VIDEOSS_SUBSS_GFX2D_CMDSEQ_TASKBUFFERSTOPOFFSET0_STOPOFFSETTB0_Msk 0xFFFFUL
/* VIDEOSS_SUBSS_GFX2D_CMDSEQ.TASKBUFFERADDRESS1 */
#define VIDEOSS_SUBSS_GFX2D_CMDSEQ_TASKBUFFERADDRESS1_ADDRESSTB1_Pos 3UL
#define VIDEOSS_SUBSS_GFX2D_CMDSEQ_TASKBUFFERADDRESS1_ADDRESSTB1_Msk 0xFFFFFFF8UL
/* VIDEOSS_SUBSS_GFX2D_CMDSEQ.TASKBUFFERSIZE1 */
#define VIDEOSS_SUBSS_GFX2D_CMDSEQ_TASKBUFFERSIZE1_SIZETB1_Pos 0UL
#define VIDEOSS_SUBSS_GFX2D_CMDSEQ_TASKBUFFERSIZE1_SIZETB1_Msk 0xFFFFUL
/* VIDEOSS_SUBSS_GFX2D_CMDSEQ.TASKBUFFERSTOPOFFSET1 */
#define VIDEOSS_SUBSS_GFX2D_CMDSEQ_TASKBUFFERSTOPOFFSET1_STOPOFFSETTB1_Pos 0UL
#define VIDEOSS_SUBSS_GFX2D_CMDSEQ_TASKBUFFERSTOPOFFSET1_STOPOFFSETTB1_Msk 0xFFFFUL
/* VIDEOSS_SUBSS_GFX2D_CMDSEQ.TASKBUFFERADDRESS2 */
#define VIDEOSS_SUBSS_GFX2D_CMDSEQ_TASKBUFFERADDRESS2_ADDRESSTB2_Pos 3UL
#define VIDEOSS_SUBSS_GFX2D_CMDSEQ_TASKBUFFERADDRESS2_ADDRESSTB2_Msk 0xFFFFFFF8UL
/* VIDEOSS_SUBSS_GFX2D_CMDSEQ.TASKBUFFERSIZE2 */
#define VIDEOSS_SUBSS_GFX2D_CMDSEQ_TASKBUFFERSIZE2_SIZETB2_Pos 0UL
#define VIDEOSS_SUBSS_GFX2D_CMDSEQ_TASKBUFFERSIZE2_SIZETB2_Msk 0xFFFFUL
/* VIDEOSS_SUBSS_GFX2D_CMDSEQ.TASKBUFFERSTOPOFFSET2 */
#define VIDEOSS_SUBSS_GFX2D_CMDSEQ_TASKBUFFERSTOPOFFSET2_STOPOFFSETTB2_Pos 0UL
#define VIDEOSS_SUBSS_GFX2D_CMDSEQ_TASKBUFFERSTOPOFFSET2_STOPOFFSETTB2_Msk 0xFFFFUL
/* VIDEOSS_SUBSS_GFX2D_CMDSEQ.TASKBUFFERADDRESS3 */
#define VIDEOSS_SUBSS_GFX2D_CMDSEQ_TASKBUFFERADDRESS3_ADDRESSTB3_Pos 3UL
#define VIDEOSS_SUBSS_GFX2D_CMDSEQ_TASKBUFFERADDRESS3_ADDRESSTB3_Msk 0xFFFFFFF8UL
/* VIDEOSS_SUBSS_GFX2D_CMDSEQ.TASKBUFFERSIZE3 */
#define VIDEOSS_SUBSS_GFX2D_CMDSEQ_TASKBUFFERSIZE3_SIZETB3_Pos 0UL
#define VIDEOSS_SUBSS_GFX2D_CMDSEQ_TASKBUFFERSIZE3_SIZETB3_Msk 0xFFFFUL
/* VIDEOSS_SUBSS_GFX2D_CMDSEQ.TASKBUFFERSTOPOFFSET3 */
#define VIDEOSS_SUBSS_GFX2D_CMDSEQ_TASKBUFFERSTOPOFFSET3_STOPOFFSETTB3_Pos 0UL
#define VIDEOSS_SUBSS_GFX2D_CMDSEQ_TASKBUFFERSTOPOFFSET3_STOPOFFSETTB3_Msk 0xFFFFUL
/* VIDEOSS_SUBSS_GFX2D_CMDSEQ.TASKBUFFERADDRESS4 */
#define VIDEOSS_SUBSS_GFX2D_CMDSEQ_TASKBUFFERADDRESS4_ADDRESSTB4_Pos 3UL
#define VIDEOSS_SUBSS_GFX2D_CMDSEQ_TASKBUFFERADDRESS4_ADDRESSTB4_Msk 0xFFFFFFF8UL
/* VIDEOSS_SUBSS_GFX2D_CMDSEQ.TASKBUFFERSIZE4 */
#define VIDEOSS_SUBSS_GFX2D_CMDSEQ_TASKBUFFERSIZE4_SIZETB4_Pos 0UL
#define VIDEOSS_SUBSS_GFX2D_CMDSEQ_TASKBUFFERSIZE4_SIZETB4_Msk 0xFFFFUL
/* VIDEOSS_SUBSS_GFX2D_CMDSEQ.TASKBUFFERSTOPOFFSET4 */
#define VIDEOSS_SUBSS_GFX2D_CMDSEQ_TASKBUFFERSTOPOFFSET4_STOPOFFSETTB4_Pos 0UL
#define VIDEOSS_SUBSS_GFX2D_CMDSEQ_TASKBUFFERSTOPOFFSET4_STOPOFFSETTB4_Msk 0xFFFFUL
/* VIDEOSS_SUBSS_GFX2D_CMDSEQ.TASKBUFFERADDRESS5 */
#define VIDEOSS_SUBSS_GFX2D_CMDSEQ_TASKBUFFERADDRESS5_ADDRESSTB5_Pos 3UL
#define VIDEOSS_SUBSS_GFX2D_CMDSEQ_TASKBUFFERADDRESS5_ADDRESSTB5_Msk 0xFFFFFFF8UL
/* VIDEOSS_SUBSS_GFX2D_CMDSEQ.TASKBUFFERSIZE5 */
#define VIDEOSS_SUBSS_GFX2D_CMDSEQ_TASKBUFFERSIZE5_SIZETB5_Pos 0UL
#define VIDEOSS_SUBSS_GFX2D_CMDSEQ_TASKBUFFERSIZE5_SIZETB5_Msk 0xFFFFUL
/* VIDEOSS_SUBSS_GFX2D_CMDSEQ.TASKBUFFERSTOPOFFSET5 */
#define VIDEOSS_SUBSS_GFX2D_CMDSEQ_TASKBUFFERSTOPOFFSET5_STOPOFFSETTB5_Pos 0UL
#define VIDEOSS_SUBSS_GFX2D_CMDSEQ_TASKBUFFERSTOPOFFSET5_STOPOFFSETTB5_Msk 0xFFFFUL
/* VIDEOSS_SUBSS_GFX2D_CMDSEQ.TASKBUFFERADDRESS6 */
#define VIDEOSS_SUBSS_GFX2D_CMDSEQ_TASKBUFFERADDRESS6_ADDRESSTB6_Pos 3UL
#define VIDEOSS_SUBSS_GFX2D_CMDSEQ_TASKBUFFERADDRESS6_ADDRESSTB6_Msk 0xFFFFFFF8UL
/* VIDEOSS_SUBSS_GFX2D_CMDSEQ.TASKBUFFERSIZE6 */
#define VIDEOSS_SUBSS_GFX2D_CMDSEQ_TASKBUFFERSIZE6_SIZETB6_Pos 0UL
#define VIDEOSS_SUBSS_GFX2D_CMDSEQ_TASKBUFFERSIZE6_SIZETB6_Msk 0xFFFFUL
/* VIDEOSS_SUBSS_GFX2D_CMDSEQ.TASKBUFFERSTOPOFFSET6 */
#define VIDEOSS_SUBSS_GFX2D_CMDSEQ_TASKBUFFERSTOPOFFSET6_STOPOFFSETTB6_Pos 0UL
#define VIDEOSS_SUBSS_GFX2D_CMDSEQ_TASKBUFFERSTOPOFFSET6_STOPOFFSETTB6_Msk 0xFFFFUL
/* VIDEOSS_SUBSS_GFX2D_CMDSEQ.TASKBUFFERADDRESS7 */
#define VIDEOSS_SUBSS_GFX2D_CMDSEQ_TASKBUFFERADDRESS7_ADDRESSTB7_Pos 3UL
#define VIDEOSS_SUBSS_GFX2D_CMDSEQ_TASKBUFFERADDRESS7_ADDRESSTB7_Msk 0xFFFFFFF8UL
/* VIDEOSS_SUBSS_GFX2D_CMDSEQ.TASKBUFFERSIZE7 */
#define VIDEOSS_SUBSS_GFX2D_CMDSEQ_TASKBUFFERSIZE7_SIZETB7_Pos 0UL
#define VIDEOSS_SUBSS_GFX2D_CMDSEQ_TASKBUFFERSIZE7_SIZETB7_Msk 0xFFFFUL
/* VIDEOSS_SUBSS_GFX2D_CMDSEQ.TASKBUFFERSTOPOFFSET7 */
#define VIDEOSS_SUBSS_GFX2D_CMDSEQ_TASKBUFFERSTOPOFFSET7_STOPOFFSETTB7_Pos 0UL
#define VIDEOSS_SUBSS_GFX2D_CMDSEQ_TASKBUFFERSTOPOFFSET7_STOPOFFSETTB7_Msk 0xFFFFUL
/* VIDEOSS_SUBSS_GFX2D_CMDSEQ.TASKBUFFEREXECOFFSET0 */
#define VIDEOSS_SUBSS_GFX2D_CMDSEQ_TASKBUFFEREXECOFFSET0_EXECOFFSETTB0_Pos 0UL
#define VIDEOSS_SUBSS_GFX2D_CMDSEQ_TASKBUFFEREXECOFFSET0_EXECOFFSETTB0_Msk 0xFFFFUL
/* VIDEOSS_SUBSS_GFX2D_CMDSEQ.TASKBUFFEREXECOFFSET1 */
#define VIDEOSS_SUBSS_GFX2D_CMDSEQ_TASKBUFFEREXECOFFSET1_EXECOFFSETTB1_Pos 0UL
#define VIDEOSS_SUBSS_GFX2D_CMDSEQ_TASKBUFFEREXECOFFSET1_EXECOFFSETTB1_Msk 0xFFFFUL
/* VIDEOSS_SUBSS_GFX2D_CMDSEQ.TASKBUFFEREXECOFFSET2 */
#define VIDEOSS_SUBSS_GFX2D_CMDSEQ_TASKBUFFEREXECOFFSET2_EXECOFFSETTB2_Pos 0UL
#define VIDEOSS_SUBSS_GFX2D_CMDSEQ_TASKBUFFEREXECOFFSET2_EXECOFFSETTB2_Msk 0xFFFFUL
/* VIDEOSS_SUBSS_GFX2D_CMDSEQ.TASKBUFFEREXECOFFSET3 */
#define VIDEOSS_SUBSS_GFX2D_CMDSEQ_TASKBUFFEREXECOFFSET3_EXECOFFSETTB3_Pos 0UL
#define VIDEOSS_SUBSS_GFX2D_CMDSEQ_TASKBUFFEREXECOFFSET3_EXECOFFSETTB3_Msk 0xFFFFUL
/* VIDEOSS_SUBSS_GFX2D_CMDSEQ.TASKBUFFEREXECOFFSET4 */
#define VIDEOSS_SUBSS_GFX2D_CMDSEQ_TASKBUFFEREXECOFFSET4_EXECOFFSETTB4_Pos 0UL
#define VIDEOSS_SUBSS_GFX2D_CMDSEQ_TASKBUFFEREXECOFFSET4_EXECOFFSETTB4_Msk 0xFFFFUL
/* VIDEOSS_SUBSS_GFX2D_CMDSEQ.TASKBUFFEREXECOFFSET5 */
#define VIDEOSS_SUBSS_GFX2D_CMDSEQ_TASKBUFFEREXECOFFSET5_EXECOFFSETTB5_Pos 0UL
#define VIDEOSS_SUBSS_GFX2D_CMDSEQ_TASKBUFFEREXECOFFSET5_EXECOFFSETTB5_Msk 0xFFFFUL
/* VIDEOSS_SUBSS_GFX2D_CMDSEQ.TASKBUFFEREXECOFFSET6 */
#define VIDEOSS_SUBSS_GFX2D_CMDSEQ_TASKBUFFEREXECOFFSET6_EXECOFFSETTB6_Pos 0UL
#define VIDEOSS_SUBSS_GFX2D_CMDSEQ_TASKBUFFEREXECOFFSET6_EXECOFFSETTB6_Msk 0xFFFFUL
/* VIDEOSS_SUBSS_GFX2D_CMDSEQ.TASKBUFFEREXECOFFSET7 */
#define VIDEOSS_SUBSS_GFX2D_CMDSEQ_TASKBUFFEREXECOFFSET7_EXECOFFSETTB7_Pos 0UL
#define VIDEOSS_SUBSS_GFX2D_CMDSEQ_TASKBUFFEREXECOFFSET7_EXECOFFSETTB7_Msk 0xFFFFUL
/* VIDEOSS_SUBSS_GFX2D_CMDSEQ.STATUS */
#define VIDEOSS_SUBSS_GFX2D_CMDSEQ_STATUS_TASKBUFFERDONE_Pos 0UL
#define VIDEOSS_SUBSS_GFX2D_CMDSEQ_STATUS_TASKBUFFERDONE_Msk 0xFFUL
#define VIDEOSS_SUBSS_GFX2D_CMDSEQ_STATUS_TASKBUFFERSYNC_Pos 8UL
#define VIDEOSS_SUBSS_GFX2D_CMDSEQ_STATUS_TASKBUFFERSYNC_Msk 0xFF00UL
#define VIDEOSS_SUBSS_GFX2D_CMDSEQ_STATUS_SCHEDULERACTIVETB_Pos 16UL
#define VIDEOSS_SUBSS_GFX2D_CMDSEQ_STATUS_SCHEDULERACTIVETB_Msk 0x70000UL
#define VIDEOSS_SUBSS_GFX2D_CMDSEQ_STATUS_SCHEDULERIDLE_Pos 19UL
#define VIDEOSS_SUBSS_GFX2D_CMDSEQ_STATUS_SCHEDULERIDLE_Msk 0x80000UL
#define VIDEOSS_SUBSS_GFX2D_CMDSEQ_STATUS_FETCHEDACTIVETB_Pos 20UL
#define VIDEOSS_SUBSS_GFX2D_CMDSEQ_STATUS_FETCHEDACTIVETB_Msk 0x700000UL
#define VIDEOSS_SUBSS_GFX2D_CMDSEQ_STATUS_REQUESTEDAXITRANSACTIONS_Pos 23UL
#define VIDEOSS_SUBSS_GFX2D_CMDSEQ_STATUS_REQUESTEDAXITRANSACTIONS_Msk 0x800000UL
#define VIDEOSS_SUBSS_GFX2D_CMDSEQ_STATUS_PROGRAMMERSTATE_Pos 24UL
#define VIDEOSS_SUBSS_GFX2D_CMDSEQ_STATUS_PROGRAMMERSTATE_Msk 0x3000000UL
#define VIDEOSS_SUBSS_GFX2D_CMDSEQ_STATUS_CMDSEQIDLE_Pos 26UL
#define VIDEOSS_SUBSS_GFX2D_CMDSEQ_STATUS_CMDSEQIDLE_Msk 0x4000000UL
/* VIDEOSS_SUBSS_GFX2D_CMDSEQ.ERRORCODE */
#define VIDEOSS_SUBSS_GFX2D_CMDSEQ_ERRORCODE_ERRORSCHEDULEROPCODE_Pos 0UL
#define VIDEOSS_SUBSS_GFX2D_CMDSEQ_ERRORCODE_ERRORSCHEDULEROPCODE_Msk 0x1UL
#define VIDEOSS_SUBSS_GFX2D_CMDSEQ_ERRORCODE_ERRORPROGRAMMEROPCODE_Pos 1UL
#define VIDEOSS_SUBSS_GFX2D_CMDSEQ_ERRORCODE_ERRORPROGRAMMEROPCODE_Msk 0x2UL
#define VIDEOSS_SUBSS_GFX2D_CMDSEQ_ERRORCODE_ERROREXECUTIONOFFSET_Pos 2UL
#define VIDEOSS_SUBSS_GFX2D_CMDSEQ_ERRORCODE_ERROREXECUTIONOFFSET_Msk 0x4UL
#define VIDEOSS_SUBSS_GFX2D_CMDSEQ_ERRORCODE_ERRORSTOPOFFSETWITHININSTRUCTION_Pos 3UL
#define VIDEOSS_SUBSS_GFX2D_CMDSEQ_ERRORCODE_ERRORSTOPOFFSETWITHININSTRUCTION_Msk 0x8UL
#define VIDEOSS_SUBSS_GFX2D_CMDSEQ_ERRORCODE_ERRORAXISLV_Pos 4UL
#define VIDEOSS_SUBSS_GFX2D_CMDSEQ_ERRORCODE_ERRORAXISLV_Msk 0x10UL
#define VIDEOSS_SUBSS_GFX2D_CMDSEQ_ERRORCODE_ERRORAXIDEC_Pos 5UL
#define VIDEOSS_SUBSS_GFX2D_CMDSEQ_ERRORCODE_ERRORAXIDEC_Msk 0x20UL
#define VIDEOSS_SUBSS_GFX2D_CMDSEQ_ERRORCODE_ERRORREGID_Pos 6UL
#define VIDEOSS_SUBSS_GFX2D_CMDSEQ_ERRORCODE_ERRORREGID_Msk 0x40UL
#define VIDEOSS_SUBSS_GFX2D_CMDSEQ_ERRORCODE_ERRORDELAYEDSYNC_Pos 7UL
#define VIDEOSS_SUBSS_GFX2D_CMDSEQ_ERRORCODE_ERRORDELAYEDSYNC_Msk 0x80UL
#define VIDEOSS_SUBSS_GFX2D_CMDSEQ_ERRORCODE_ERRORSTOPOFFSETOUTSIDETB_Pos 8UL
#define VIDEOSS_SUBSS_GFX2D_CMDSEQ_ERRORCODE_ERRORSTOPOFFSETOUTSIDETB_Msk 0x100UL
#define VIDEOSS_SUBSS_GFX2D_CMDSEQ_ERRORCODE_ERRORFUNCTIONOFFSET_Pos 9UL
#define VIDEOSS_SUBSS_GFX2D_CMDSEQ_ERRORCODE_ERRORFUNCTIONOFFSET_Msk 0x200UL
/* VIDEOSS_SUBSS_GFX2D_CMDSEQ.DESIGNCONFIGURATION */
#define VIDEOSS_SUBSS_GFX2D_CMDSEQ_DESIGNCONFIGURATION_BUFFERDEPTH_Pos 0UL
#define VIDEOSS_SUBSS_GFX2D_CMDSEQ_DESIGNCONFIGURATION_BUFFERDEPTH_Msk 0xFUL
#define VIDEOSS_SUBSS_GFX2D_CMDSEQ_DESIGNCONFIGURATION_BUFFERDEPTHSCHEDULER_Pos 8UL
#define VIDEOSS_SUBSS_GFX2D_CMDSEQ_DESIGNCONFIGURATION_BUFFERDEPTHSCHEDULER_Msk 0xFF00UL
#define VIDEOSS_SUBSS_GFX2D_CMDSEQ_DESIGNCONFIGURATION_BUFFERDEPTHPROGRAMMER_Pos 16UL
#define VIDEOSS_SUBSS_GFX2D_CMDSEQ_DESIGNCONFIGURATION_BUFFERDEPTHPROGRAMMER_Msk 0xFF0000UL
/* VIDEOSS_SUBSS_GFX2D_CMDSEQ.SCHEDULERADDRESS */
#define VIDEOSS_SUBSS_GFX2D_CMDSEQ_SCHEDULERADDRESS_SCHEDULERADDRESS_Pos 0UL
#define VIDEOSS_SUBSS_GFX2D_CMDSEQ_SCHEDULERADDRESS_SCHEDULERADDRESS_Msk 0xFFFFFFFFUL
/* VIDEOSS_SUBSS_GFX2D_CMDSEQ.PROGRAMMERADDRESS */
#define VIDEOSS_SUBSS_GFX2D_CMDSEQ_PROGRAMMERADDRESS_PROGRAMMERADDRESS_Pos 0UL
#define VIDEOSS_SUBSS_GFX2D_CMDSEQ_PROGRAMMERADDRESS_PROGRAMMERADDRESS_Msk 0xFFFFFFFFUL
/* VIDEOSS_SUBSS_GFX2D_CMDSEQ.GPR0 */
#define VIDEOSS_SUBSS_GFX2D_CMDSEQ_GPR0_GENERALPURPOSEREGISTER0_Pos 0UL
#define VIDEOSS_SUBSS_GFX2D_CMDSEQ_GPR0_GENERALPURPOSEREGISTER0_Msk 0xFFFFFFFFUL
/* VIDEOSS_SUBSS_GFX2D_CMDSEQ.GPR1 */
#define VIDEOSS_SUBSS_GFX2D_CMDSEQ_GPR1_GENERALPURPOSEREGISTER1_Pos 0UL
#define VIDEOSS_SUBSS_GFX2D_CMDSEQ_GPR1_GENERALPURPOSEREGISTER1_Msk 0xFFFFFFFFUL
/* VIDEOSS_SUBSS_GFX2D_CMDSEQ.GPR2 */
#define VIDEOSS_SUBSS_GFX2D_CMDSEQ_GPR2_GENERALPURPOSEREGISTER2_Pos 0UL
#define VIDEOSS_SUBSS_GFX2D_CMDSEQ_GPR2_GENERALPURPOSEREGISTER2_Msk 0xFFFFFFFFUL
/* VIDEOSS_SUBSS_GFX2D_CMDSEQ.GPR3 */
#define VIDEOSS_SUBSS_GFX2D_CMDSEQ_GPR3_GENERALPURPOSEREGISTER3_Pos 0UL
#define VIDEOSS_SUBSS_GFX2D_CMDSEQ_GPR3_GENERALPURPOSEREGISTER3_Msk 0xFFFFFFFFUL
/* VIDEOSS_SUBSS_GFX2D_CMDSEQ.GPR4 */
#define VIDEOSS_SUBSS_GFX2D_CMDSEQ_GPR4_GENERALPURPOSEREGISTER4_Pos 0UL
#define VIDEOSS_SUBSS_GFX2D_CMDSEQ_GPR4_GENERALPURPOSEREGISTER4_Msk 0xFFFFFFFFUL
/* VIDEOSS_SUBSS_GFX2D_CMDSEQ.GPR5 */
#define VIDEOSS_SUBSS_GFX2D_CMDSEQ_GPR5_GENERALPURPOSEREGISTER5_Pos 0UL
#define VIDEOSS_SUBSS_GFX2D_CMDSEQ_GPR5_GENERALPURPOSEREGISTER5_Msk 0xFFFFFFFFUL
/* VIDEOSS_SUBSS_GFX2D_CMDSEQ.GPR6 */
#define VIDEOSS_SUBSS_GFX2D_CMDSEQ_GPR6_GENERALPURPOSEREGISTER6_Pos 0UL
#define VIDEOSS_SUBSS_GFX2D_CMDSEQ_GPR6_GENERALPURPOSEREGISTER6_Msk 0xFFFFFFFFUL
/* VIDEOSS_SUBSS_GFX2D_CMDSEQ.GPR7 */
#define VIDEOSS_SUBSS_GFX2D_CMDSEQ_GPR7_GENERALPURPOSEREGISTER7_Pos 0UL
#define VIDEOSS_SUBSS_GFX2D_CMDSEQ_GPR7_GENERALPURPOSEREGISTER7_Msk 0xFFFFFFFFUL
/* VIDEOSS_SUBSS_GFX2D_CMDSEQ.GPR8 */
#define VIDEOSS_SUBSS_GFX2D_CMDSEQ_GPR8_GENERALPURPOSEREGISTER8_Pos 0UL
#define VIDEOSS_SUBSS_GFX2D_CMDSEQ_GPR8_GENERALPURPOSEREGISTER8_Msk 0xFFFFFFFFUL
/* VIDEOSS_SUBSS_GFX2D_CMDSEQ.GPR9 */
#define VIDEOSS_SUBSS_GFX2D_CMDSEQ_GPR9_GENERALPURPOSEREGISTER9_Pos 0UL
#define VIDEOSS_SUBSS_GFX2D_CMDSEQ_GPR9_GENERALPURPOSEREGISTER9_Msk 0xFFFFFFFFUL
/* VIDEOSS_SUBSS_GFX2D_CMDSEQ.GPR10 */
#define VIDEOSS_SUBSS_GFX2D_CMDSEQ_GPR10_GENERALPURPOSEREGISTER10_Pos 0UL
#define VIDEOSS_SUBSS_GFX2D_CMDSEQ_GPR10_GENERALPURPOSEREGISTER10_Msk 0xFFFFFFFFUL
/* VIDEOSS_SUBSS_GFX2D_CMDSEQ.GPR11 */
#define VIDEOSS_SUBSS_GFX2D_CMDSEQ_GPR11_GENERALPURPOSEREGISTER11_Pos 0UL
#define VIDEOSS_SUBSS_GFX2D_CMDSEQ_GPR11_GENERALPURPOSEREGISTER11_Msk 0xFFFFFFFFUL
/* VIDEOSS_SUBSS_GFX2D_CMDSEQ.GPR12 */
#define VIDEOSS_SUBSS_GFX2D_CMDSEQ_GPR12_GENERALPURPOSEREGISTER12_Pos 0UL
#define VIDEOSS_SUBSS_GFX2D_CMDSEQ_GPR12_GENERALPURPOSEREGISTER12_Msk 0xFFFFFFFFUL
/* VIDEOSS_SUBSS_GFX2D_CMDSEQ.GPR13 */
#define VIDEOSS_SUBSS_GFX2D_CMDSEQ_GPR13_GENERALPURPOSEREGISTER13_Pos 0UL
#define VIDEOSS_SUBSS_GFX2D_CMDSEQ_GPR13_GENERALPURPOSEREGISTER13_Msk 0xFFFFFFFFUL
/* VIDEOSS_SUBSS_GFX2D_CMDSEQ.GPR14 */
#define VIDEOSS_SUBSS_GFX2D_CMDSEQ_GPR14_GENERALPURPOSEREGISTER14_Pos 0UL
#define VIDEOSS_SUBSS_GFX2D_CMDSEQ_GPR14_GENERALPURPOSEREGISTER14_Msk 0xFFFFFFFFUL
/* VIDEOSS_SUBSS_GFX2D_CMDSEQ.GPR15 */
#define VIDEOSS_SUBSS_GFX2D_CMDSEQ_GPR15_GENERALPURPOSEREGISTER15_Pos 0UL
#define VIDEOSS_SUBSS_GFX2D_CMDSEQ_GPR15_GENERALPURPOSEREGISTER15_Msk 0xFFFFFFFFUL
/* VIDEOSS_SUBSS_GFX2D_CMDSEQ.SPR0 */
#define VIDEOSS_SUBSS_GFX2D_CMDSEQ_SPR0_LINECOUNTERTB0_Pos 0UL
#define VIDEOSS_SUBSS_GFX2D_CMDSEQ_SPR0_LINECOUNTERTB0_Msk 0xFFFFUL
/* VIDEOSS_SUBSS_GFX2D_CMDSEQ.SPR1 */
#define VIDEOSS_SUBSS_GFX2D_CMDSEQ_SPR1_LINECOUNTERTB1_Pos 0UL
#define VIDEOSS_SUBSS_GFX2D_CMDSEQ_SPR1_LINECOUNTERTB1_Msk 0xFFFFUL
/* VIDEOSS_SUBSS_GFX2D_CMDSEQ.SPR2 */
#define VIDEOSS_SUBSS_GFX2D_CMDSEQ_SPR2_LINECOUNTERTB2_Pos 0UL
#define VIDEOSS_SUBSS_GFX2D_CMDSEQ_SPR2_LINECOUNTERTB2_Msk 0xFFFFUL
/* VIDEOSS_SUBSS_GFX2D_CMDSEQ.SPR3 */
#define VIDEOSS_SUBSS_GFX2D_CMDSEQ_SPR3_LINECOUNTERTB3_Pos 0UL
#define VIDEOSS_SUBSS_GFX2D_CMDSEQ_SPR3_LINECOUNTERTB3_Msk 0xFFFFUL
/* VIDEOSS_SUBSS_GFX2D_CMDSEQ.SPR4 */
#define VIDEOSS_SUBSS_GFX2D_CMDSEQ_SPR4_LINECOUNTERTB4_Pos 0UL
#define VIDEOSS_SUBSS_GFX2D_CMDSEQ_SPR4_LINECOUNTERTB4_Msk 0xFFFFUL
/* VIDEOSS_SUBSS_GFX2D_CMDSEQ.SPR5 */
#define VIDEOSS_SUBSS_GFX2D_CMDSEQ_SPR5_LINECOUNTERTB5_Pos 0UL
#define VIDEOSS_SUBSS_GFX2D_CMDSEQ_SPR5_LINECOUNTERTB5_Msk 0xFFFFUL
/* VIDEOSS_SUBSS_GFX2D_CMDSEQ.SPR6 */
#define VIDEOSS_SUBSS_GFX2D_CMDSEQ_SPR6_LINECOUNTERTB6_Pos 0UL
#define VIDEOSS_SUBSS_GFX2D_CMDSEQ_SPR6_LINECOUNTERTB6_Msk 0xFFFFUL
/* VIDEOSS_SUBSS_GFX2D_CMDSEQ.SPR7 */
#define VIDEOSS_SUBSS_GFX2D_CMDSEQ_SPR7_LINECOUNTERTB7_Pos 0UL
#define VIDEOSS_SUBSS_GFX2D_CMDSEQ_SPR7_LINECOUNTERTB7_Msk 0xFFFFUL


/* VIDEOSS_SUBSS_GFX2D_BLITENG_BLITENGCFG.STATICCONTROL */
#define VIDEOSS_SUBSS_GFX2D_BLITENG_BLITENGCFG_STATICCONTROL_SHDEN_Pos 0UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_BLITENGCFG_STATICCONTROL_SHDEN_Msk 0x1UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_BLITENGCFG_STATICCONTROL_LRSTATUSSELECT_Pos 4UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_BLITENGCFG_STATICCONTROL_LRSTATUSSELECT_Msk 0x30UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_BLITENGCFG_STATICCONTROL_BLITENGUTILIZATIONMEASUREMENTEN_Pos 8UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_BLITENGCFG_STATICCONTROL_BLITENGUTILIZATIONMEASUREMENTEN_Msk 0x100UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_BLITENGCFG_STATICCONTROL_LBOUTILIZATIONMEASUREMENTEN_Pos 9UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_BLITENGCFG_STATICCONTROL_LBOUTILIZATIONMEASUREMENTEN_Msk 0x200UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_BLITENGCFG_STATICCONTROL_TBUTILIZATIONMEASUREMENTEN_Pos 10UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_BLITENGCFG_STATICCONTROL_TBUTILIZATIONMEASUREMENTEN_Msk 0x400UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_BLITENGCFG_STATICCONTROL_LBOSOURCEPIXELMEASUREMENTEN_Pos 11UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_BLITENGCFG_STATICCONTROL_LBOSOURCEPIXELMEASUREMENTEN_Msk 0x800UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_BLITENGCFG_STATICCONTROL_DESTINATIONPIXELMEASUREMENTEN_Pos 12UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_BLITENGCFG_STATICCONTROL_DESTINATIONPIXELMEASUREMENTEN_Msk 0x1000UL
/* VIDEOSS_SUBSS_GFX2D_BLITENG_BLITENGCFG.TASKSETUP */
#define VIDEOSS_SUBSS_GFX2D_BLITENG_BLITENGCFG_TASKSETUP_TASKSELECT_Pos 0UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_BLITENGCFG_TASKSETUP_TASKSELECT_Msk 0x7UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_BLITENGCFG_TASKSETUP_RENDERMODE_Pos 4UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_BLITENGCFG_TASKSETUP_RENDERMODE_Msk 0x10UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_BLITENGCFG_TASKSETUP_PROXYSELECT_Pos 8UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_BLITENGCFG_TASKSETUP_PROXYSELECT_Msk 0x700UL
/* VIDEOSS_SUBSS_GFX2D_BLITENG_BLITENGCFG.LRFRAMEDIMENSION */
#define VIDEOSS_SUBSS_GFX2D_BLITENG_BLITENGCFG_LRFRAMEDIMENSION_TOTALWIDTH_Pos 0UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_BLITENGCFG_LRFRAMEDIMENSION_TOTALWIDTH_Msk 0x3FFFUL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_BLITENGCFG_LRFRAMEDIMENSION_TOTALHEIGHT_Pos 16UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_BLITENGCFG_LRFRAMEDIMENSION_TOTALHEIGHT_Msk 0x3FFF0000UL
/* VIDEOSS_SUBSS_GFX2D_BLITENG_BLITENGCFG.OPERATIONSETUP */
#define VIDEOSS_SUBSS_GFX2D_BLITENG_BLITENGCFG_OPERATIONSETUP_DESTINATIONSELECT_Pos 0UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_BLITENGCFG_OPERATIONSETUP_DESTINATIONSELECT_Msk 0x3UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_BLITENGCFG_OPERATIONSETUP_MASKSELECT_Pos 4UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_BLITENGCFG_OPERATIONSETUP_MASKSELECT_Msk 0x30UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_BLITENGCFG_OPERATIONSETUP_BUFFERSELECT_Pos 8UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_BLITENGCFG_OPERATIONSETUP_BUFFERSELECT_Msk 0x100UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_BLITENGCFG_OPERATIONSETUP_ENABLEROP_Pos 9UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_BLITENGCFG_OPERATIONSETUP_ENABLEROP_Msk 0x200UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_BLITENGCFG_OPERATIONSETUP_ENABLECLUT_Pos 10UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_BLITENGCFG_OPERATIONSETUP_ENABLECLUT_Msk 0x400UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_BLITENGCFG_OPERATIONSETUP_ENABLEMATRIX_Pos 11UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_BLITENGCFG_OPERATIONSETUP_ENABLEMATRIX_Msk 0x800UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_BLITENGCFG_OPERATIONSETUP_ENABLEGPSCALER_Pos 12UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_BLITENGCFG_OPERATIONSETUP_ENABLEGPSCALER_Msk 0x1000UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_BLITENGCFG_OPERATIONSETUP_ENABLEBLITBLEND_Pos 13UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_BLITENGCFG_OPERATIONSETUP_ENABLEBLITBLEND_Msk 0x2000UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_BLITENGCFG_OPERATIONSETUP_CONSTANTCOLORFILL_Pos 14UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_BLITENGCFG_OPERATIONSETUP_CONSTANTCOLORFILL_Msk 0x4000UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_BLITENGCFG_OPERATIONSETUP_USECOPS_Pos 15UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_BLITENGCFG_OPERATIONSETUP_USECOPS_Msk 0x8000UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_BLITENGCFG_OPERATIONSETUP_COPSADDRESS_Pos 16UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_BLITENGCFG_OPERATIONSETUP_COPSADDRESS_Msk 0xFF0000UL
/* VIDEOSS_SUBSS_GFX2D_BLITENG_BLITENGCFG.LROBJECTDIMENSION */
#define VIDEOSS_SUBSS_GFX2D_BLITENG_BLITENGCFG_LROBJECTDIMENSION_OBJECTWIDTH_Pos 0UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_BLITENGCFG_LROBJECTDIMENSION_OBJECTWIDTH_Msk 0x3FFFUL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_BLITENGCFG_LROBJECTDIMENSION_OBJECTHEIGHT_Pos 16UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_BLITENGCFG_LROBJECTDIMENSION_OBJECTHEIGHT_Msk 0x3FFF0000UL
/* VIDEOSS_SUBSS_GFX2D_BLITENG_BLITENGCFG.LROBJECTPOSITION */
#define VIDEOSS_SUBSS_GFX2D_BLITENG_BLITENGCFG_LROBJECTPOSITION_OBJECTOFFSETX_Pos 0UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_BLITENGCFG_LROBJECTPOSITION_OBJECTOFFSETX_Msk 0x3FFFUL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_BLITENGCFG_LROBJECTPOSITION_OBJECTOFFSETY_Pos 16UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_BLITENGCFG_LROBJECTPOSITION_OBJECTOFFSETY_Msk 0x3FFF0000UL
/* VIDEOSS_SUBSS_GFX2D_BLITENG_BLITENGCFG.LRCONSTALPHA */
#define VIDEOSS_SUBSS_GFX2D_BLITENG_BLITENGCFG_LRCONSTALPHA_CONSTANTALPHA_Pos 0UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_BLITENGCFG_LRCONSTALPHA_CONSTANTALPHA_Msk 0xFFUL
/* VIDEOSS_SUBSS_GFX2D_BLITENG_BLITENGCFG.LRCONSTRGB */
#define VIDEOSS_SUBSS_GFX2D_BLITENG_BLITENGCFG_LRCONSTRGB_CONSTANTCOLORRED_Pos 0UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_BLITENGCFG_LRCONSTRGB_CONSTANTCOLORRED_Msk 0x3FFUL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_BLITENGCFG_LRCONSTRGB_CONSTANTCOLORGREEN_Pos 10UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_BLITENGCFG_LRCONSTRGB_CONSTANTCOLORGREEN_Msk 0xFFC00UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_BLITENGCFG_LRCONSTRGB_CONSTANTCOLORBLUE_Pos 20UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_BLITENGCFG_LRCONSTRGB_CONSTANTCOLORBLUE_Msk 0x3FF00000UL
/* VIDEOSS_SUBSS_GFX2D_BLITENG_BLITENGCFG.SYNCIDREQUEST0 */
#define VIDEOSS_SUBSS_GFX2D_BLITENG_BLITENGCFG_SYNCIDREQUEST0_SYNCIDREQUEST0_Pos 0UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_BLITENGCFG_SYNCIDREQUEST0_SYNCIDREQUEST0_Msk 0xFFFFFFFFUL
/* VIDEOSS_SUBSS_GFX2D_BLITENG_BLITENGCFG.SYNCIDREQUEST1 */
#define VIDEOSS_SUBSS_GFX2D_BLITENG_BLITENGCFG_SYNCIDREQUEST1_SYNCIDREQUEST1_Pos 0UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_BLITENGCFG_SYNCIDREQUEST1_SYNCIDREQUEST1_Msk 0xFFFFFFFFUL
/* VIDEOSS_SUBSS_GFX2D_BLITENG_BLITENGCFG.SYNCIDREQUEST2 */
#define VIDEOSS_SUBSS_GFX2D_BLITENG_BLITENGCFG_SYNCIDREQUEST2_SYNCIDREQUEST2_Pos 0UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_BLITENGCFG_SYNCIDREQUEST2_SYNCIDREQUEST2_Msk 0xFFFFFFFFUL
/* VIDEOSS_SUBSS_GFX2D_BLITENG_BLITENGCFG.SYNCIDREQUEST3 */
#define VIDEOSS_SUBSS_GFX2D_BLITENG_BLITENGCFG_SYNCIDREQUEST3_SYNCIDREQUEST3_Pos 0UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_BLITENGCFG_SYNCIDREQUEST3_SYNCIDREQUEST3_Msk 0xFFFFFFFFUL
/* VIDEOSS_SUBSS_GFX2D_BLITENG_BLITENGCFG.SYNCIDREQUEST4 */
#define VIDEOSS_SUBSS_GFX2D_BLITENG_BLITENGCFG_SYNCIDREQUEST4_SYNCIDREQUEST4_Pos 0UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_BLITENGCFG_SYNCIDREQUEST4_SYNCIDREQUEST4_Msk 0xFFFFFFFFUL
/* VIDEOSS_SUBSS_GFX2D_BLITENG_BLITENGCFG.SYNCIDREQUEST5 */
#define VIDEOSS_SUBSS_GFX2D_BLITENG_BLITENGCFG_SYNCIDREQUEST5_SYNCIDREQUEST5_Pos 0UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_BLITENGCFG_SYNCIDREQUEST5_SYNCIDREQUEST5_Msk 0xFFFFFFFFUL
/* VIDEOSS_SUBSS_GFX2D_BLITENG_BLITENGCFG.SYNCIDREQUEST6 */
#define VIDEOSS_SUBSS_GFX2D_BLITENG_BLITENGCFG_SYNCIDREQUEST6_SYNCIDREQUEST6_Pos 0UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_BLITENGCFG_SYNCIDREQUEST6_SYNCIDREQUEST6_Msk 0xFFFFFFFFUL
/* VIDEOSS_SUBSS_GFX2D_BLITENG_BLITENGCFG.SYNCIDREQUEST7 */
#define VIDEOSS_SUBSS_GFX2D_BLITENG_BLITENGCFG_SYNCIDREQUEST7_SYNCIDREQUEST7_Pos 0UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_BLITENGCFG_SYNCIDREQUEST7_SYNCIDREQUEST7_Msk 0xFFFFFFFFUL
/* VIDEOSS_SUBSS_GFX2D_BLITENG_BLITENGCFG.SYNCCONTROL */
#define VIDEOSS_SUBSS_GFX2D_BLITENG_BLITENGCFG_SYNCCONTROL_SYNCIDTRIGGER_Pos 0UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_BLITENGCFG_SYNCCONTROL_SYNCIDTRIGGER_Msk 0xFFUL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_BLITENGCFG_SYNCCONTROL_SEQUENCECOMPLETE_Pos 8UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_BLITENGCFG_SYNCCONTROL_SEQUENCECOMPLETE_Msk 0x100UL
/* VIDEOSS_SUBSS_GFX2D_BLITENG_BLITENGCFG.LINERENDERINGCONTROL */
#define VIDEOSS_SUBSS_GFX2D_BLITENG_BLITENGCFG_LINERENDERINGCONTROL_LRSTART_Pos 0UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_BLITENGCFG_LINERENDERINGCONTROL_LRSTART_Msk 0x1UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_BLITENGCFG_LINERENDERINGCONTROL_CLEARTASK_Pos 8UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_BLITENGCFG_LINERENDERINGCONTROL_CLEARTASK_Msk 0xFF00UL
/* VIDEOSS_SUBSS_GFX2D_BLITENG_BLITENGCFG.PERFORMANCEMEASUREMENTCONTROL */
#define VIDEOSS_SUBSS_GFX2D_BLITENG_BLITENGCFG_PERFORMANCEMEASUREMENTCONTROL_SAVEANDRESETMEASUREMENTS_Pos 0UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_BLITENGCFG_PERFORMANCEMEASUREMENTCONTROL_SAVEANDRESETMEASUREMENTS_Msk 0x1UL
/* VIDEOSS_SUBSS_GFX2D_BLITENG_BLITENGCFG.SYNCIDSTATUS0 */
#define VIDEOSS_SUBSS_GFX2D_BLITENG_BLITENGCFG_SYNCIDSTATUS0_SYNCIDCOMPLETE0_Pos 0UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_BLITENGCFG_SYNCIDSTATUS0_SYNCIDCOMPLETE0_Msk 0xFFFFFFFFUL
/* VIDEOSS_SUBSS_GFX2D_BLITENG_BLITENGCFG.SYNCIDSTATUS1 */
#define VIDEOSS_SUBSS_GFX2D_BLITENG_BLITENGCFG_SYNCIDSTATUS1_SYNCIDCOMPLETE1_Pos 0UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_BLITENGCFG_SYNCIDSTATUS1_SYNCIDCOMPLETE1_Msk 0xFFFFFFFFUL
/* VIDEOSS_SUBSS_GFX2D_BLITENG_BLITENGCFG.SYNCIDSTATUS2 */
#define VIDEOSS_SUBSS_GFX2D_BLITENG_BLITENGCFG_SYNCIDSTATUS2_SYNCIDCOMPLETE2_Pos 0UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_BLITENGCFG_SYNCIDSTATUS2_SYNCIDCOMPLETE2_Msk 0xFFFFFFFFUL
/* VIDEOSS_SUBSS_GFX2D_BLITENG_BLITENGCFG.SYNCIDSTATUS3 */
#define VIDEOSS_SUBSS_GFX2D_BLITENG_BLITENGCFG_SYNCIDSTATUS3_SYNCIDCOMPLETE3_Pos 0UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_BLITENGCFG_SYNCIDSTATUS3_SYNCIDCOMPLETE3_Msk 0xFFFFFFFFUL
/* VIDEOSS_SUBSS_GFX2D_BLITENG_BLITENGCFG.SYNCIDSTATUS4 */
#define VIDEOSS_SUBSS_GFX2D_BLITENG_BLITENGCFG_SYNCIDSTATUS4_SYNCIDCOMPLETE4_Pos 0UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_BLITENGCFG_SYNCIDSTATUS4_SYNCIDCOMPLETE4_Msk 0xFFFFFFFFUL
/* VIDEOSS_SUBSS_GFX2D_BLITENG_BLITENGCFG.SYNCIDSTATUS5 */
#define VIDEOSS_SUBSS_GFX2D_BLITENG_BLITENGCFG_SYNCIDSTATUS5_SYNCIDCOMPLETE5_Pos 0UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_BLITENGCFG_SYNCIDSTATUS5_SYNCIDCOMPLETE5_Msk 0xFFFFFFFFUL
/* VIDEOSS_SUBSS_GFX2D_BLITENG_BLITENGCFG.SYNCIDSTATUS6 */
#define VIDEOSS_SUBSS_GFX2D_BLITENG_BLITENGCFG_SYNCIDSTATUS6_SYNCIDCOMPLETE6_Pos 0UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_BLITENGCFG_SYNCIDSTATUS6_SYNCIDCOMPLETE6_Msk 0xFFFFFFFFUL
/* VIDEOSS_SUBSS_GFX2D_BLITENG_BLITENGCFG.SYNCIDSTATUS7 */
#define VIDEOSS_SUBSS_GFX2D_BLITENG_BLITENGCFG_SYNCIDSTATUS7_SYNCIDCOMPLETE7_Pos 0UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_BLITENGCFG_SYNCIDSTATUS7_SYNCIDCOMPLETE7_Msk 0xFFFFFFFFUL
/* VIDEOSS_SUBSS_GFX2D_BLITENG_BLITENGCFG.DESIGNATTRIBUTES0 */
#define VIDEOSS_SUBSS_GFX2D_BLITENG_BLITENGCFG_DESIGNATTRIBUTES0_SLICEHEIGHT_Pos 0UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_BLITENGCFG_DESIGNATTRIBUTES0_SLICEHEIGHT_Msk 0xFUL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_BLITENGCFG_DESIGNATTRIBUTES0_PROCESSINGPIPELINES_Pos 8UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_BLITENGCFG_DESIGNATTRIBUTES0_PROCESSINGPIPELINES_Msk 0x700UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_BLITENGCFG_DESIGNATTRIBUTES0_SLICEWIDTH_Pos 16UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_BLITENGCFG_DESIGNATTRIBUTES0_SLICEWIDTH_Msk 0x3FFF0000UL
/* VIDEOSS_SUBSS_GFX2D_BLITENG_BLITENGCFG.DESIGNATTRIBUTES1 */
#define VIDEOSS_SUBSS_GFX2D_BLITENG_BLITENGCFG_DESIGNATTRIBUTES1_GPSCALERWIDTH_Pos 0UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_BLITENGCFG_DESIGNATTRIBUTES1_GPSCALERWIDTH_Msk 0x3FFFUL
/* VIDEOSS_SUBSS_GFX2D_BLITENG_BLITENGCFG.CLOCKCOUNTER */
#define VIDEOSS_SUBSS_GFX2D_BLITENG_BLITENGCFG_CLOCKCOUNTER_CLOCKCOUNTER_Pos 0UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_BLITENGCFG_CLOCKCOUNTER_CLOCKCOUNTER_Msk 0xFFFFFFFFUL
/* VIDEOSS_SUBSS_GFX2D_BLITENG_BLITENGCFG.CLOCKCOUNTEROVERFLOW */
#define VIDEOSS_SUBSS_GFX2D_BLITENG_BLITENGCFG_CLOCKCOUNTEROVERFLOW_CLOCKCOUNTEROVERFLOW_Pos 0UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_BLITENGCFG_CLOCKCOUNTEROVERFLOW_CLOCKCOUNTEROVERFLOW_Msk 0x1UL
/* VIDEOSS_SUBSS_GFX2D_BLITENG_BLITENGCFG.IBOACTIVECOUNTER */
#define VIDEOSS_SUBSS_GFX2D_BLITENG_BLITENGCFG_IBOACTIVECOUNTER_IBOACTIVECOUNTER_Pos 0UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_BLITENGCFG_IBOACTIVECOUNTER_IBOACTIVECOUNTER_Msk 0xFFFFFFFFUL
/* VIDEOSS_SUBSS_GFX2D_BLITENG_BLITENGCFG.LBOACTIVECOUNTER */
#define VIDEOSS_SUBSS_GFX2D_BLITENG_BLITENGCFG_LBOACTIVECOUNTER_LBOACTIVECOUNTER_Pos 0UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_BLITENGCFG_LBOACTIVECOUNTER_LBOACTIVECOUNTER_Msk 0xFFFFFFFFUL
/* VIDEOSS_SUBSS_GFX2D_BLITENG_BLITENGCFG.LBOALLFETCHESACTIVECOUNTER */
#define VIDEOSS_SUBSS_GFX2D_BLITENG_BLITENGCFG_LBOALLFETCHESACTIVECOUNTER_LBOALLFETCHESACTIVECOUNTER_Pos 0UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_BLITENGCFG_LBOALLFETCHESACTIVECOUNTER_LBOALLFETCHESACTIVECOUNTER_Msk 0xFFFFFFFFUL
/* VIDEOSS_SUBSS_GFX2D_BLITENG_BLITENGCFG.LBOWAITBLITENGRESSOURCESCOUNTER */
#define VIDEOSS_SUBSS_GFX2D_BLITENG_BLITENGCFG_LBOWAITBLITENGRESSOURCESCOUNTER_LBOWAITBLITENGRESSOURCESCOUNTER_Pos 0UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_BLITENGCFG_LBOWAITBLITENGRESSOURCESCOUNTER_LBOWAITBLITENGRESSOURCESCOUNTER_Msk 0xFFFFFFFFUL
/* VIDEOSS_SUBSS_GFX2D_BLITENG_BLITENGCFG.TB0ACTIVECOUNTER */
#define VIDEOSS_SUBSS_GFX2D_BLITENG_BLITENGCFG_TB0ACTIVECOUNTER_TB0ACTIVECOUNTER_Pos 0UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_BLITENGCFG_TB0ACTIVECOUNTER_TB0ACTIVECOUNTER_Msk 0xFFFFFFFFUL
/* VIDEOSS_SUBSS_GFX2D_BLITENG_BLITENGCFG.TB1ACTIVECOUNTER */
#define VIDEOSS_SUBSS_GFX2D_BLITENG_BLITENGCFG_TB1ACTIVECOUNTER_TB1ACTIVECOUNTER_Pos 0UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_BLITENGCFG_TB1ACTIVECOUNTER_TB1ACTIVECOUNTER_Msk 0xFFFFFFFFUL
/* VIDEOSS_SUBSS_GFX2D_BLITENG_BLITENGCFG.TB2ACTIVECOUNTER */
#define VIDEOSS_SUBSS_GFX2D_BLITENG_BLITENGCFG_TB2ACTIVECOUNTER_TB2ACTIVECOUNTER_Pos 0UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_BLITENGCFG_TB2ACTIVECOUNTER_TB2ACTIVECOUNTER_Msk 0xFFFFFFFFUL
/* VIDEOSS_SUBSS_GFX2D_BLITENG_BLITENGCFG.TB3ACTIVECOUNTER */
#define VIDEOSS_SUBSS_GFX2D_BLITENG_BLITENGCFG_TB3ACTIVECOUNTER_TB3ACTIVECOUNTER_Pos 0UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_BLITENGCFG_TB3ACTIVECOUNTER_TB3ACTIVECOUNTER_Msk 0xFFFFFFFFUL
/* VIDEOSS_SUBSS_GFX2D_BLITENG_BLITENGCFG.TB4ACTIVECOUNTER */
#define VIDEOSS_SUBSS_GFX2D_BLITENG_BLITENGCFG_TB4ACTIVECOUNTER_TB4ACTIVECOUNTER_Pos 0UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_BLITENGCFG_TB4ACTIVECOUNTER_TB4ACTIVECOUNTER_Msk 0xFFFFFFFFUL
/* VIDEOSS_SUBSS_GFX2D_BLITENG_BLITENGCFG.TB5ACTIVECOUNTER */
#define VIDEOSS_SUBSS_GFX2D_BLITENG_BLITENGCFG_TB5ACTIVECOUNTER_TB5ACTIVECOUNTER_Pos 0UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_BLITENGCFG_TB5ACTIVECOUNTER_TB5ACTIVECOUNTER_Msk 0xFFFFFFFFUL
/* VIDEOSS_SUBSS_GFX2D_BLITENG_BLITENGCFG.TB6ACTIVECOUNTER */
#define VIDEOSS_SUBSS_GFX2D_BLITENG_BLITENGCFG_TB6ACTIVECOUNTER_TB6ACTIVECOUNTER_Pos 0UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_BLITENGCFG_TB6ACTIVECOUNTER_TB6ACTIVECOUNTER_Msk 0xFFFFFFFFUL
/* VIDEOSS_SUBSS_GFX2D_BLITENG_BLITENGCFG.TB7ACTIVECOUNTER */
#define VIDEOSS_SUBSS_GFX2D_BLITENG_BLITENGCFG_TB7ACTIVECOUNTER_TB7ACTIVECOUNTER_Pos 0UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_BLITENGCFG_TB7ACTIVECOUNTER_TB7ACTIVECOUNTER_Msk 0xFFFFFFFFUL
/* VIDEOSS_SUBSS_GFX2D_BLITENG_BLITENGCFG.LBOSOURCEPIXELRGBACOUNTER */
#define VIDEOSS_SUBSS_GFX2D_BLITENG_BLITENGCFG_LBOSOURCEPIXELRGBACOUNTER_LBOSOURCEPIXELRGBACOUNTER_Pos 0UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_BLITENGCFG_LBOSOURCEPIXELRGBACOUNTER_LBOSOURCEPIXELRGBACOUNTER_Msk 0xFFFFFFFFUL
/* VIDEOSS_SUBSS_GFX2D_BLITENG_BLITENGCFG.LBOSOURCEPIXELALPHACOUNTER */
#define VIDEOSS_SUBSS_GFX2D_BLITENG_BLITENGCFG_LBOSOURCEPIXELALPHACOUNTER_LBOSOURCEPIXELALPHACOUNTER_Pos 0UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_BLITENGCFG_LBOSOURCEPIXELALPHACOUNTER_LBOSOURCEPIXELALPHACOUNTER_Msk 0xFFFFFFFFUL
/* VIDEOSS_SUBSS_GFX2D_BLITENG_BLITENGCFG.LBODESTINATIONPIXELCOUNTER */
#define VIDEOSS_SUBSS_GFX2D_BLITENG_BLITENGCFG_LBODESTINATIONPIXELCOUNTER_LBODESTINATIONPIXELCOUNTER_Pos 0UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_BLITENGCFG_LBODESTINATIONPIXELCOUNTER_LBODESTINATIONPIXELCOUNTER_Msk 0xFFFFFFFFUL
/* VIDEOSS_SUBSS_GFX2D_BLITENG_BLITENGCFG.IBODESTINATIONPIXELCOUNTER */
#define VIDEOSS_SUBSS_GFX2D_BLITENG_BLITENGCFG_IBODESTINATIONPIXELCOUNTER_IBODESTINATIONPIXELCOUNTER_Pos 0UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_BLITENGCFG_IBODESTINATIONPIXELCOUNTER_IBODESTINATIONPIXELCOUNTER_Msk 0xFFFFFFFFUL
/* VIDEOSS_SUBSS_GFX2D_BLITENG_BLITENGCFG.LBHLINK0BUFFERCONFIG0 */
#define VIDEOSS_SUBSS_GFX2D_BLITENG_BLITENGCFG_LBHLINK0BUFFERCONFIG0_LBHLINK0ENABLE_Pos 0UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_BLITENGCFG_LBHLINK0BUFFERCONFIG0_LBHLINK0ENABLE_Msk 0x1UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_BLITENGCFG_LBHLINK0BUFFERCONFIG0_LBHLINK0SIZEENABLE_Pos 4UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_BLITENGCFG_LBHLINK0BUFFERCONFIG0_LBHLINK0SIZEENABLE_Msk 0x10UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_BLITENGCFG_LBHLINK0BUFFERCONFIG0_LBHLINK0BUFLINES_Pos 8UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_BLITENGCFG_LBHLINK0BUFFERCONFIG0_LBHLINK0BUFLINES_Msk 0xF00UL
/* VIDEOSS_SUBSS_GFX2D_BLITENG_BLITENGCFG.LBHLINK0BUFFERCONFIG1 */
#define VIDEOSS_SUBSS_GFX2D_BLITENG_BLITENGCFG_LBHLINK0BUFFERCONFIG1_LBHLINK0FRAMELINES_Pos 0UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_BLITENGCFG_LBHLINK0BUFFERCONFIG1_LBHLINK0FRAMELINES_Msk 0x3FFFUL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_BLITENGCFG_LBHLINK0BUFFERCONFIG1_LBHLINK0KEEPLINES_Pos 16UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_BLITENGCFG_LBHLINK0BUFFERCONFIG1_LBHLINK0KEEPLINES_Msk 0x3FFF0000UL
/* VIDEOSS_SUBSS_GFX2D_BLITENG_BLITENGCFG.LBHLINK0BUFFERSTATUS0 */
#define VIDEOSS_SUBSS_GFX2D_BLITENG_BLITENGCFG_LBHLINK0BUFFERSTATUS0_LBHLINK0MAXFREELINES_Pos 0UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_BLITENGCFG_LBHLINK0BUFFERSTATUS0_LBHLINK0MAXFREELINES_Msk 0x7FFFUL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_BLITENGCFG_LBHLINK0BUFFERSTATUS0_LBHLINK0MAXFREELINESSTORE_Pos 16UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_BLITENGCFG_LBHLINK0BUFFERSTATUS0_LBHLINK0MAXFREELINESSTORE_Msk 0x7FFF0000UL
/* VIDEOSS_SUBSS_GFX2D_BLITENG_BLITENGCFG.LBHLINK0BUFFERSTATUS1 */
#define VIDEOSS_SUBSS_GFX2D_BLITENG_BLITENGCFG_LBHLINK0BUFFERSTATUS1_LBHLINK0AVAILABLELINES_Pos 0UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_BLITENGCFG_LBHLINK0BUFFERSTATUS1_LBHLINK0AVAILABLELINES_Msk 0x7FFFUL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_BLITENGCFG_LBHLINK0BUFFERSTATUS1_LBHLINK0SAMEFRAME_Pos 16UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_BLITENGCFG_LBHLINK0BUFFERSTATUS1_LBHLINK0SAMEFRAME_Msk 0x10000UL
/* VIDEOSS_SUBSS_GFX2D_BLITENG_BLITENGCFG.LBHLINK0BUFFERSTATUS3 */
#define VIDEOSS_SUBSS_GFX2D_BLITENG_BLITENGCFG_LBHLINK0BUFFERSTATUS3_LBHLINK0FETCHLINE_Pos 0UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_BLITENGCFG_LBHLINK0BUFFERSTATUS3_LBHLINK0FETCHLINE_Msk 0x3FFFUL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_BLITENGCFG_LBHLINK0BUFFERSTATUS3_LBHLINK0STORELINE_Pos 16UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_BLITENGCFG_LBHLINK0BUFFERSTATUS3_LBHLINK0STORELINE_Msk 0x3FFF0000UL
/* VIDEOSS_SUBSS_GFX2D_BLITENG_BLITENGCFG.LBHLINK0BUFFERSTATUS4 */
#define VIDEOSS_SUBSS_GFX2D_BLITENG_BLITENGCFG_LBHLINK0BUFFERSTATUS4_LBHLINK0FETCHSTOPLINE_Pos 0UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_BLITENGCFG_LBHLINK0BUFFERSTATUS4_LBHLINK0FETCHSTOPLINE_Msk 0x7FFFUL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_BLITENGCFG_LBHLINK0BUFFERSTATUS4_LBHLINK0STORESTOPLINE_Pos 16UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_BLITENGCFG_LBHLINK0BUFFERSTATUS4_LBHLINK0STORESTOPLINE_Msk 0x7FFF0000UL
/* VIDEOSS_SUBSS_GFX2D_BLITENG_BLITENGCFG.LBHLINK1BUFFERCONFIG0 */
#define VIDEOSS_SUBSS_GFX2D_BLITENG_BLITENGCFG_LBHLINK1BUFFERCONFIG0_LBHLINK1ENABLE_Pos 0UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_BLITENGCFG_LBHLINK1BUFFERCONFIG0_LBHLINK1ENABLE_Msk 0x1UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_BLITENGCFG_LBHLINK1BUFFERCONFIG0_LBHLINK1SIZEENABLE_Pos 4UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_BLITENGCFG_LBHLINK1BUFFERCONFIG0_LBHLINK1SIZEENABLE_Msk 0x10UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_BLITENGCFG_LBHLINK1BUFFERCONFIG0_LBHLINK1BUFLINES_Pos 8UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_BLITENGCFG_LBHLINK1BUFFERCONFIG0_LBHLINK1BUFLINES_Msk 0xF00UL
/* VIDEOSS_SUBSS_GFX2D_BLITENG_BLITENGCFG.LBHLINK1BUFFERCONFIG1 */
#define VIDEOSS_SUBSS_GFX2D_BLITENG_BLITENGCFG_LBHLINK1BUFFERCONFIG1_LBHLINK1FRAMELINES_Pos 0UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_BLITENGCFG_LBHLINK1BUFFERCONFIG1_LBHLINK1FRAMELINES_Msk 0x3FFFUL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_BLITENGCFG_LBHLINK1BUFFERCONFIG1_LBHLINK1KEEPLINES_Pos 16UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_BLITENGCFG_LBHLINK1BUFFERCONFIG1_LBHLINK1KEEPLINES_Msk 0x3FFF0000UL
/* VIDEOSS_SUBSS_GFX2D_BLITENG_BLITENGCFG.LBHLINK1BUFFERSTATUS0 */
#define VIDEOSS_SUBSS_GFX2D_BLITENG_BLITENGCFG_LBHLINK1BUFFERSTATUS0_LBHLINK1MAXFREELINES_Pos 0UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_BLITENGCFG_LBHLINK1BUFFERSTATUS0_LBHLINK1MAXFREELINES_Msk 0x7FFFUL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_BLITENGCFG_LBHLINK1BUFFERSTATUS0_LBHLINK1MAXFREELINESSTORE_Pos 16UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_BLITENGCFG_LBHLINK1BUFFERSTATUS0_LBHLINK1MAXFREELINESSTORE_Msk 0x7FFF0000UL
/* VIDEOSS_SUBSS_GFX2D_BLITENG_BLITENGCFG.LBHLINK1BUFFERSTATUS1 */
#define VIDEOSS_SUBSS_GFX2D_BLITENG_BLITENGCFG_LBHLINK1BUFFERSTATUS1_LBHLINK1AVAILABLELINES_Pos 0UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_BLITENGCFG_LBHLINK1BUFFERSTATUS1_LBHLINK1AVAILABLELINES_Msk 0x7FFFUL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_BLITENGCFG_LBHLINK1BUFFERSTATUS1_LBHLINK1SAMEFRAME_Pos 16UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_BLITENGCFG_LBHLINK1BUFFERSTATUS1_LBHLINK1SAMEFRAME_Msk 0x10000UL
/* VIDEOSS_SUBSS_GFX2D_BLITENG_BLITENGCFG.LBHLINK1BUFFERSTATUS3 */
#define VIDEOSS_SUBSS_GFX2D_BLITENG_BLITENGCFG_LBHLINK1BUFFERSTATUS3_LBHLINK1FETCHLINE_Pos 0UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_BLITENGCFG_LBHLINK1BUFFERSTATUS3_LBHLINK1FETCHLINE_Msk 0x3FFFUL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_BLITENGCFG_LBHLINK1BUFFERSTATUS3_LBHLINK1STORELINE_Pos 16UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_BLITENGCFG_LBHLINK1BUFFERSTATUS3_LBHLINK1STORELINE_Msk 0x3FFF0000UL
/* VIDEOSS_SUBSS_GFX2D_BLITENG_BLITENGCFG.LBHLINK1BUFFERSTATUS4 */
#define VIDEOSS_SUBSS_GFX2D_BLITENG_BLITENGCFG_LBHLINK1BUFFERSTATUS4_LBHLINK1FETCHSTOPLINE_Pos 0UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_BLITENGCFG_LBHLINK1BUFFERSTATUS4_LBHLINK1FETCHSTOPLINE_Msk 0x7FFFUL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_BLITENGCFG_LBHLINK1BUFFERSTATUS4_LBHLINK1STORESTOPLINE_Pos 16UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_BLITENGCFG_LBHLINK1BUFFERSTATUS4_LBHLINK1STORESTOPLINE_Msk 0x7FFF0000UL
/* VIDEOSS_SUBSS_GFX2D_BLITENG_BLITENGCFG.LBHLINK2BUFFERCONFIG0 */
#define VIDEOSS_SUBSS_GFX2D_BLITENG_BLITENGCFG_LBHLINK2BUFFERCONFIG0_LBHLINK2ENABLE_Pos 0UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_BLITENGCFG_LBHLINK2BUFFERCONFIG0_LBHLINK2ENABLE_Msk 0x1UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_BLITENGCFG_LBHLINK2BUFFERCONFIG0_LBHLINK2SIZEENABLE_Pos 4UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_BLITENGCFG_LBHLINK2BUFFERCONFIG0_LBHLINK2SIZEENABLE_Msk 0x10UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_BLITENGCFG_LBHLINK2BUFFERCONFIG0_LBHLINK2BUFLINES_Pos 8UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_BLITENGCFG_LBHLINK2BUFFERCONFIG0_LBHLINK2BUFLINES_Msk 0xF00UL
/* VIDEOSS_SUBSS_GFX2D_BLITENG_BLITENGCFG.LBHLINK2BUFFERCONFIG1 */
#define VIDEOSS_SUBSS_GFX2D_BLITENG_BLITENGCFG_LBHLINK2BUFFERCONFIG1_LBHLINK2FRAMELINES_Pos 0UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_BLITENGCFG_LBHLINK2BUFFERCONFIG1_LBHLINK2FRAMELINES_Msk 0x3FFFUL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_BLITENGCFG_LBHLINK2BUFFERCONFIG1_LBHLINK2KEEPLINES_Pos 16UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_BLITENGCFG_LBHLINK2BUFFERCONFIG1_LBHLINK2KEEPLINES_Msk 0x3FFF0000UL
/* VIDEOSS_SUBSS_GFX2D_BLITENG_BLITENGCFG.LBHLINK2BUFFERSTATUS0 */
#define VIDEOSS_SUBSS_GFX2D_BLITENG_BLITENGCFG_LBHLINK2BUFFERSTATUS0_LBHLINK2MAXFREELINES_Pos 0UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_BLITENGCFG_LBHLINK2BUFFERSTATUS0_LBHLINK2MAXFREELINES_Msk 0x7FFFUL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_BLITENGCFG_LBHLINK2BUFFERSTATUS0_LBHLINK2MAXFREELINESSTORE_Pos 16UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_BLITENGCFG_LBHLINK2BUFFERSTATUS0_LBHLINK2MAXFREELINESSTORE_Msk 0x7FFF0000UL
/* VIDEOSS_SUBSS_GFX2D_BLITENG_BLITENGCFG.LBHLINK2BUFFERSTATUS1 */
#define VIDEOSS_SUBSS_GFX2D_BLITENG_BLITENGCFG_LBHLINK2BUFFERSTATUS1_LBHLINK2AVAILABLELINES_Pos 0UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_BLITENGCFG_LBHLINK2BUFFERSTATUS1_LBHLINK2AVAILABLELINES_Msk 0x7FFFUL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_BLITENGCFG_LBHLINK2BUFFERSTATUS1_LBHLINK2SAMEFRAME_Pos 16UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_BLITENGCFG_LBHLINK2BUFFERSTATUS1_LBHLINK2SAMEFRAME_Msk 0x10000UL
/* VIDEOSS_SUBSS_GFX2D_BLITENG_BLITENGCFG.LBHLINK2BUFFERSTATUS3 */
#define VIDEOSS_SUBSS_GFX2D_BLITENG_BLITENGCFG_LBHLINK2BUFFERSTATUS3_LBHLINK2FETCHLINE_Pos 0UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_BLITENGCFG_LBHLINK2BUFFERSTATUS3_LBHLINK2FETCHLINE_Msk 0x3FFFUL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_BLITENGCFG_LBHLINK2BUFFERSTATUS3_LBHLINK2STORELINE_Pos 16UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_BLITENGCFG_LBHLINK2BUFFERSTATUS3_LBHLINK2STORELINE_Msk 0x3FFF0000UL
/* VIDEOSS_SUBSS_GFX2D_BLITENG_BLITENGCFG.LBHLINK2BUFFERSTATUS4 */
#define VIDEOSS_SUBSS_GFX2D_BLITENG_BLITENGCFG_LBHLINK2BUFFERSTATUS4_LBHLINK2FETCHSTOPLINE_Pos 0UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_BLITENGCFG_LBHLINK2BUFFERSTATUS4_LBHLINK2FETCHSTOPLINE_Msk 0x7FFFUL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_BLITENGCFG_LBHLINK2BUFFERSTATUS4_LBHLINK2STORESTOPLINE_Pos 16UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_BLITENGCFG_LBHLINK2BUFFERSTATUS4_LBHLINK2STORESTOPLINE_Msk 0x7FFF0000UL
/* VIDEOSS_SUBSS_GFX2D_BLITENG_BLITENGCFG.LBHLINK3BUFFERCONFIG0 */
#define VIDEOSS_SUBSS_GFX2D_BLITENG_BLITENGCFG_LBHLINK3BUFFERCONFIG0_LBHLINK3ENABLE_Pos 0UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_BLITENGCFG_LBHLINK3BUFFERCONFIG0_LBHLINK3ENABLE_Msk 0x1UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_BLITENGCFG_LBHLINK3BUFFERCONFIG0_LBHLINK3SIZEENABLE_Pos 4UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_BLITENGCFG_LBHLINK3BUFFERCONFIG0_LBHLINK3SIZEENABLE_Msk 0x10UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_BLITENGCFG_LBHLINK3BUFFERCONFIG0_LBHLINK3BUFLINES_Pos 8UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_BLITENGCFG_LBHLINK3BUFFERCONFIG0_LBHLINK3BUFLINES_Msk 0xF00UL
/* VIDEOSS_SUBSS_GFX2D_BLITENG_BLITENGCFG.LBHLINK3BUFFERCONFIG1 */
#define VIDEOSS_SUBSS_GFX2D_BLITENG_BLITENGCFG_LBHLINK3BUFFERCONFIG1_LBHLINK3FRAMELINES_Pos 0UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_BLITENGCFG_LBHLINK3BUFFERCONFIG1_LBHLINK3FRAMELINES_Msk 0x3FFFUL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_BLITENGCFG_LBHLINK3BUFFERCONFIG1_LBHLINK3KEEPLINES_Pos 16UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_BLITENGCFG_LBHLINK3BUFFERCONFIG1_LBHLINK3KEEPLINES_Msk 0x3FFF0000UL
/* VIDEOSS_SUBSS_GFX2D_BLITENG_BLITENGCFG.LBHLINK3BUFFERSTATUS0 */
#define VIDEOSS_SUBSS_GFX2D_BLITENG_BLITENGCFG_LBHLINK3BUFFERSTATUS0_LBHLINK3MAXFREELINES_Pos 0UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_BLITENGCFG_LBHLINK3BUFFERSTATUS0_LBHLINK3MAXFREELINES_Msk 0x7FFFUL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_BLITENGCFG_LBHLINK3BUFFERSTATUS0_LBHLINK3MAXFREELINESSTORE_Pos 16UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_BLITENGCFG_LBHLINK3BUFFERSTATUS0_LBHLINK3MAXFREELINESSTORE_Msk 0x7FFF0000UL
/* VIDEOSS_SUBSS_GFX2D_BLITENG_BLITENGCFG.LBHLINK3BUFFERSTATUS1 */
#define VIDEOSS_SUBSS_GFX2D_BLITENG_BLITENGCFG_LBHLINK3BUFFERSTATUS1_LBHLINK3AVAILABLELINES_Pos 0UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_BLITENGCFG_LBHLINK3BUFFERSTATUS1_LBHLINK3AVAILABLELINES_Msk 0x7FFFUL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_BLITENGCFG_LBHLINK3BUFFERSTATUS1_LBHLINK3SAMEFRAME_Pos 16UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_BLITENGCFG_LBHLINK3BUFFERSTATUS1_LBHLINK3SAMEFRAME_Msk 0x10000UL
/* VIDEOSS_SUBSS_GFX2D_BLITENG_BLITENGCFG.LBHLINK3BUFFERSTATUS3 */
#define VIDEOSS_SUBSS_GFX2D_BLITENG_BLITENGCFG_LBHLINK3BUFFERSTATUS3_LBHLINK3FETCHLINE_Pos 0UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_BLITENGCFG_LBHLINK3BUFFERSTATUS3_LBHLINK3FETCHLINE_Msk 0x3FFFUL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_BLITENGCFG_LBHLINK3BUFFERSTATUS3_LBHLINK3STORELINE_Pos 16UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_BLITENGCFG_LBHLINK3BUFFERSTATUS3_LBHLINK3STORELINE_Msk 0x3FFF0000UL
/* VIDEOSS_SUBSS_GFX2D_BLITENG_BLITENGCFG.LBHLINK3BUFFERSTATUS4 */
#define VIDEOSS_SUBSS_GFX2D_BLITENG_BLITENGCFG_LBHLINK3BUFFERSTATUS4_LBHLINK3FETCHSTOPLINE_Pos 0UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_BLITENGCFG_LBHLINK3BUFFERSTATUS4_LBHLINK3FETCHSTOPLINE_Msk 0x7FFFUL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_BLITENGCFG_LBHLINK3BUFFERSTATUS4_LBHLINK3STORESTOPLINE_Pos 16UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_BLITENGCFG_LBHLINK3BUFFERSTATUS4_LBHLINK3STORESTOPLINE_Msk 0x7FFF0000UL
/* VIDEOSS_SUBSS_GFX2D_BLITENG_BLITENGCFG.LBHLINK4BUFFERCONFIG0 */
#define VIDEOSS_SUBSS_GFX2D_BLITENG_BLITENGCFG_LBHLINK4BUFFERCONFIG0_LBHLINK4ENABLE_Pos 0UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_BLITENGCFG_LBHLINK4BUFFERCONFIG0_LBHLINK4ENABLE_Msk 0x1UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_BLITENGCFG_LBHLINK4BUFFERCONFIG0_LBHLINK4SIZEENABLE_Pos 4UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_BLITENGCFG_LBHLINK4BUFFERCONFIG0_LBHLINK4SIZEENABLE_Msk 0x10UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_BLITENGCFG_LBHLINK4BUFFERCONFIG0_LBHLINK4BUFLINES_Pos 8UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_BLITENGCFG_LBHLINK4BUFFERCONFIG0_LBHLINK4BUFLINES_Msk 0xF00UL
/* VIDEOSS_SUBSS_GFX2D_BLITENG_BLITENGCFG.LBHLINK4BUFFERCONFIG1 */
#define VIDEOSS_SUBSS_GFX2D_BLITENG_BLITENGCFG_LBHLINK4BUFFERCONFIG1_LBHLINK4FRAMELINES_Pos 0UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_BLITENGCFG_LBHLINK4BUFFERCONFIG1_LBHLINK4FRAMELINES_Msk 0x3FFFUL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_BLITENGCFG_LBHLINK4BUFFERCONFIG1_LBHLINK4KEEPLINES_Pos 16UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_BLITENGCFG_LBHLINK4BUFFERCONFIG1_LBHLINK4KEEPLINES_Msk 0x3FFF0000UL
/* VIDEOSS_SUBSS_GFX2D_BLITENG_BLITENGCFG.LBHLINK4BUFFERSTATUS0 */
#define VIDEOSS_SUBSS_GFX2D_BLITENG_BLITENGCFG_LBHLINK4BUFFERSTATUS0_LBHLINK4MAXFREELINES_Pos 0UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_BLITENGCFG_LBHLINK4BUFFERSTATUS0_LBHLINK4MAXFREELINES_Msk 0x7FFFUL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_BLITENGCFG_LBHLINK4BUFFERSTATUS0_LBHLINK4MAXFREELINESSTORE_Pos 16UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_BLITENGCFG_LBHLINK4BUFFERSTATUS0_LBHLINK4MAXFREELINESSTORE_Msk 0x7FFF0000UL
/* VIDEOSS_SUBSS_GFX2D_BLITENG_BLITENGCFG.LBHLINK4BUFFERSTATUS1 */
#define VIDEOSS_SUBSS_GFX2D_BLITENG_BLITENGCFG_LBHLINK4BUFFERSTATUS1_LBHLINK4AVAILABLELINES_Pos 0UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_BLITENGCFG_LBHLINK4BUFFERSTATUS1_LBHLINK4AVAILABLELINES_Msk 0x7FFFUL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_BLITENGCFG_LBHLINK4BUFFERSTATUS1_LBHLINK4SAMEFRAME_Pos 16UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_BLITENGCFG_LBHLINK4BUFFERSTATUS1_LBHLINK4SAMEFRAME_Msk 0x10000UL
/* VIDEOSS_SUBSS_GFX2D_BLITENG_BLITENGCFG.LBHLINK4BUFFERSTATUS3 */
#define VIDEOSS_SUBSS_GFX2D_BLITENG_BLITENGCFG_LBHLINK4BUFFERSTATUS3_LBHLINK4FETCHLINE_Pos 0UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_BLITENGCFG_LBHLINK4BUFFERSTATUS3_LBHLINK4FETCHLINE_Msk 0x3FFFUL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_BLITENGCFG_LBHLINK4BUFFERSTATUS3_LBHLINK4STORELINE_Pos 16UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_BLITENGCFG_LBHLINK4BUFFERSTATUS3_LBHLINK4STORELINE_Msk 0x3FFF0000UL
/* VIDEOSS_SUBSS_GFX2D_BLITENG_BLITENGCFG.LBHLINK4BUFFERSTATUS4 */
#define VIDEOSS_SUBSS_GFX2D_BLITENG_BLITENGCFG_LBHLINK4BUFFERSTATUS4_LBHLINK4FETCHSTOPLINE_Pos 0UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_BLITENGCFG_LBHLINK4BUFFERSTATUS4_LBHLINK4FETCHSTOPLINE_Msk 0x7FFFUL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_BLITENGCFG_LBHLINK4BUFFERSTATUS4_LBHLINK4STORESTOPLINE_Pos 16UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_BLITENGCFG_LBHLINK4BUFFERSTATUS4_LBHLINK4STORESTOPLINE_Msk 0x7FFF0000UL
/* VIDEOSS_SUBSS_GFX2D_BLITENG_BLITENGCFG.PALETTE */
#define VIDEOSS_SUBSS_GFX2D_BLITENG_BLITENGCFG_PALETTE_PALETTEENTRY_Pos 0UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_BLITENGCFG_PALETTE_PALETTEENTRY_Msk 0xFFFFFFUL


/* VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHSRC.STATICCONTROL */
#define VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHSRC_STATICCONTROL_SHDEN_Pos 0UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHSRC_STATICCONTROL_SHDEN_Msk 0x1UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHSRC_STATICCONTROL_BASEADDRESSAUTOUPDATE_Pos 16UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHSRC_STATICCONTROL_BASEADDRESSAUTOUPDATE_Msk 0xFF0000UL
/* VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHSRC.BURSTBUFFERMANAGEMENT */
#define VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHSRC_BURSTBUFFERMANAGEMENT_SETNUMBUFFERS_Pos 0UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHSRC_BURSTBUFFERMANAGEMENT_SETNUMBUFFERS_Msk 0xFFUL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHSRC_BURSTBUFFERMANAGEMENT_SETBURSTLENGTH_Pos 8UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHSRC_BURSTBUFFERMANAGEMENT_SETBURSTLENGTH_Msk 0x1F00UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHSRC_BURSTBUFFERMANAGEMENT_LINEMODE_Pos 31UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHSRC_BURSTBUFFERMANAGEMENT_LINEMODE_Msk 0x80000000UL
/* VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHSRC.BASEADDRESS0 */
#define VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHSRC_BASEADDRESS0_BASEADDRESS0_Pos 0UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHSRC_BASEADDRESS0_BASEADDRESS0_Msk 0xFFFFFFFFUL
/* VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHSRC.SOURCEBUFFERATTRIBUTES0 */
#define VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHSRC_SOURCEBUFFERATTRIBUTES0_STRIDE0_Pos 0UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHSRC_SOURCEBUFFERATTRIBUTES0_STRIDE0_Msk 0xFFFFUL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHSRC_SOURCEBUFFERATTRIBUTES0_BITSPERPIXEL0_Pos 16UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHSRC_SOURCEBUFFERATTRIBUTES0_BITSPERPIXEL0_Msk 0x3F0000UL
/* VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHSRC.SOURCEBUFFERDIMENSION0 */
#define VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHSRC_SOURCEBUFFERDIMENSION0_LINEWIDTH0_Pos 0UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHSRC_SOURCEBUFFERDIMENSION0_LINEWIDTH0_Msk 0x3FFFUL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHSRC_SOURCEBUFFERDIMENSION0_LINECOUNT0_Pos 16UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHSRC_SOURCEBUFFERDIMENSION0_LINECOUNT0_Msk 0x3FFF0000UL
/* VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHSRC.COLORCOMPONENTBITS0 */
#define VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHSRC_COLORCOMPONENTBITS0_COMPONENTBITSALPHA0_Pos 0UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHSRC_COLORCOMPONENTBITS0_COMPONENTBITSALPHA0_Msk 0xFUL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHSRC_COLORCOMPONENTBITS0_COMPONENTBITSBLUE0_Pos 8UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHSRC_COLORCOMPONENTBITS0_COMPONENTBITSBLUE0_Msk 0xF00UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHSRC_COLORCOMPONENTBITS0_COMPONENTBITSGREEN0_Pos 16UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHSRC_COLORCOMPONENTBITS0_COMPONENTBITSGREEN0_Msk 0xF0000UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHSRC_COLORCOMPONENTBITS0_COMPONENTBITSRED0_Pos 24UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHSRC_COLORCOMPONENTBITS0_COMPONENTBITSRED0_Msk 0xF000000UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHSRC_COLORCOMPONENTBITS0_ITUFORMAT0_Pos 31UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHSRC_COLORCOMPONENTBITS0_ITUFORMAT0_Msk 0x80000000UL
/* VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHSRC.COLORCOMPONENTSHIFT0 */
#define VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHSRC_COLORCOMPONENTSHIFT0_COMPONENTSHIFTALPHA0_Pos 0UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHSRC_COLORCOMPONENTSHIFT0_COMPONENTSHIFTALPHA0_Msk 0x1FUL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHSRC_COLORCOMPONENTSHIFT0_COMPONENTSHIFTBLUE0_Pos 8UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHSRC_COLORCOMPONENTSHIFT0_COMPONENTSHIFTBLUE0_Msk 0x1F00UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHSRC_COLORCOMPONENTSHIFT0_COMPONENTSHIFTGREEN0_Pos 16UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHSRC_COLORCOMPONENTSHIFT0_COMPONENTSHIFTGREEN0_Msk 0x1F0000UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHSRC_COLORCOMPONENTSHIFT0_COMPONENTSHIFTRED0_Pos 24UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHSRC_COLORCOMPONENTSHIFT0_COMPONENTSHIFTRED0_Msk 0x1F000000UL
/* VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHSRC.LAYEROFFSET0 */
#define VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHSRC_LAYEROFFSET0_LAYERXOFFSET0_Pos 0UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHSRC_LAYEROFFSET0_LAYERXOFFSET0_Msk 0x7FFFUL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHSRC_LAYEROFFSET0_LAYERYOFFSET0_Pos 16UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHSRC_LAYEROFFSET0_LAYERYOFFSET0_Msk 0x7FFF0000UL
/* VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHSRC.CLIPWINDOWOFFSET0 */
#define VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHSRC_CLIPWINDOWOFFSET0_CLIPWINDOWXOFFSET0_Pos 0UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHSRC_CLIPWINDOWOFFSET0_CLIPWINDOWXOFFSET0_Msk 0x7FFFUL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHSRC_CLIPWINDOWOFFSET0_CLIPWINDOWYOFFSET0_Pos 16UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHSRC_CLIPWINDOWOFFSET0_CLIPWINDOWYOFFSET0_Msk 0x7FFF0000UL
/* VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHSRC.CLIPWINDOWDIMENSIONS0 */
#define VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHSRC_CLIPWINDOWDIMENSIONS0_CLIPWINDOWWIDTH0_Pos 0UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHSRC_CLIPWINDOWDIMENSIONS0_CLIPWINDOWWIDTH0_Msk 0x3FFFUL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHSRC_CLIPWINDOWDIMENSIONS0_CLIPWINDOWHEIGHT0_Pos 16UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHSRC_CLIPWINDOWDIMENSIONS0_CLIPWINDOWHEIGHT0_Msk 0x3FFF0000UL
/* VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHSRC.CONSTANTCOLOR0 */
#define VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHSRC_CONSTANTCOLOR0_CONSTANTALPHA0_Pos 0UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHSRC_CONSTANTCOLOR0_CONSTANTALPHA0_Msk 0xFFUL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHSRC_CONSTANTCOLOR0_CONSTANTBLUE0_Pos 8UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHSRC_CONSTANTCOLOR0_CONSTANTBLUE0_Msk 0xFF00UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHSRC_CONSTANTCOLOR0_CONSTANTGREEN0_Pos 16UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHSRC_CONSTANTCOLOR0_CONSTANTGREEN0_Msk 0xFF0000UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHSRC_CONSTANTCOLOR0_CONSTANTRED0_Pos 24UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHSRC_CONSTANTCOLOR0_CONSTANTRED0_Msk 0xFF000000UL
/* VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHSRC.LAYERPROPERTY0 */
#define VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHSRC_LAYERPROPERTY0_PALETTEENABLE0_Pos 0UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHSRC_LAYERPROPERTY0_PALETTEENABLE0_Msk 0x1UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHSRC_LAYERPROPERTY0_TILEMODE0_Pos 1UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHSRC_LAYERPROPERTY0_TILEMODE0_Msk 0x6UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHSRC_LAYERPROPERTY0_ALPHASRCENABLE0_Pos 3UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHSRC_LAYERPROPERTY0_ALPHASRCENABLE0_Msk 0x8UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHSRC_LAYERPROPERTY0_ALPHACONSTENABLE0_Pos 4UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHSRC_LAYERPROPERTY0_ALPHACONSTENABLE0_Msk 0x10UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHSRC_LAYERPROPERTY0_ALPHAMASKENABLE0_Pos 5UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHSRC_LAYERPROPERTY0_ALPHAMASKENABLE0_Msk 0x20UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHSRC_LAYERPROPERTY0_ALPHATRANSENABLE0_Pos 6UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHSRC_LAYERPROPERTY0_ALPHATRANSENABLE0_Msk 0x40UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHSRC_LAYERPROPERTY0_RGBALPHASRCENABLE0_Pos 7UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHSRC_LAYERPROPERTY0_RGBALPHASRCENABLE0_Msk 0x80UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHSRC_LAYERPROPERTY0_RGBALPHACONSTENABLE0_Pos 8UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHSRC_LAYERPROPERTY0_RGBALPHACONSTENABLE0_Msk 0x100UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHSRC_LAYERPROPERTY0_RGBALPHAMASKENABLE0_Pos 9UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHSRC_LAYERPROPERTY0_RGBALPHAMASKENABLE0_Msk 0x200UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHSRC_LAYERPROPERTY0_RGBALPHATRANSENABLE0_Pos 10UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHSRC_LAYERPROPERTY0_RGBALPHATRANSENABLE0_Msk 0x400UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHSRC_LAYERPROPERTY0_PREMULCONSTRGB0_Pos 11UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHSRC_LAYERPROPERTY0_PREMULCONSTRGB0_Msk 0x800UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHSRC_LAYERPROPERTY0_YUVCONVERSIONMODE0_Pos 12UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHSRC_LAYERPROPERTY0_YUVCONVERSIONMODE0_Msk 0x3000UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHSRC_LAYERPROPERTY0_GAMMAREMOVEENABLE0_Pos 14UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHSRC_LAYERPROPERTY0_GAMMAREMOVEENABLE0_Msk 0x4000UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHSRC_LAYERPROPERTY0_PALETTEOFFSET0_Pos 16UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHSRC_LAYERPROPERTY0_PALETTEOFFSET0_Msk 0x7FF0000UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHSRC_LAYERPROPERTY0_PALETTEIDWIDTH0_Pos 27UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHSRC_LAYERPROPERTY0_PALETTEIDWIDTH0_Msk 0x38000000UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHSRC_LAYERPROPERTY0_CLIPWINDOWENABLE0_Pos 30UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHSRC_LAYERPROPERTY0_CLIPWINDOWENABLE0_Msk 0x40000000UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHSRC_LAYERPROPERTY0_SOURCEBUFFERENABLE0_Pos 31UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHSRC_LAYERPROPERTY0_SOURCEBUFFERENABLE0_Msk 0x80000000UL
/* VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHSRC.FRAMEDIMENSIONS */
#define VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHSRC_FRAMEDIMENSIONS_FRAMEWIDTH_Pos 0UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHSRC_FRAMEDIMENSIONS_FRAMEWIDTH_Msk 0x3FFFUL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHSRC_FRAMEDIMENSIONS_FRAMEHEIGHT_Pos 16UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHSRC_FRAMEDIMENSIONS_FRAMEHEIGHT_Msk 0x3FFF0000UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHSRC_FRAMEDIMENSIONS_EMPTYFRAME_Pos 31UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHSRC_FRAMEDIMENSIONS_EMPTYFRAME_Msk 0x80000000UL
/* VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHSRC.FRAMERESAMPLING */
#define VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHSRC_FRAMERESAMPLING_STARTX_Pos 0UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHSRC_FRAMERESAMPLING_STARTX_Msk 0x3FUL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHSRC_FRAMERESAMPLING_STARTY_Pos 6UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHSRC_FRAMERESAMPLING_STARTY_Msk 0xFC0UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHSRC_FRAMERESAMPLING_DELTAX_Pos 12UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHSRC_FRAMERESAMPLING_DELTAX_Msk 0x3F000UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHSRC_FRAMERESAMPLING_DELTAY_Pos 18UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHSRC_FRAMERESAMPLING_DELTAY_Msk 0xFC0000UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHSRC_FRAMERESAMPLING_SWAPDIRECTION_Pos 24UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHSRC_FRAMERESAMPLING_SWAPDIRECTION_Msk 0x1000000UL
/* VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHSRC.WARPCONTROL */
#define VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHSRC_WARPCONTROL_WARPBITSPERPIXEL_Pos 0UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHSRC_WARPCONTROL_WARPBITSPERPIXEL_Msk 0x3FUL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHSRC_WARPCONTROL_WARPCOORDINATEMODE_Pos 8UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHSRC_WARPCONTROL_WARPCOORDINATEMODE_Msk 0x300UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHSRC_WARPCONTROL_WARPSYMMETRICOFFSET_Pos 12UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHSRC_WARPCONTROL_WARPSYMMETRICOFFSET_Msk 0x1000UL
/* VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHSRC.PERSPSTARTX */
#define VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHSRC_PERSPSTARTX_PERSPSTARTX_Pos 0UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHSRC_PERSPSTARTX_PERSPSTARTX_Msk 0xFFFFFFFFUL
/* VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHSRC.PERSPSTARTY */
#define VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHSRC_PERSPSTARTY_PERSPSTARTY_Pos 0UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHSRC_PERSPSTARTY_PERSPSTARTY_Msk 0xFFFFFFFFUL
/* VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHSRC.PERSPDELTAXX */
#define VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHSRC_PERSPDELTAXX_PERSPDELTAXX_Pos 0UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHSRC_PERSPDELTAXX_PERSPDELTAXX_Msk 0xFFFFFFFFUL
/* VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHSRC.PERSPDELTAYY */
#define VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHSRC_PERSPDELTAYY_PERSPDELTAYY_Pos 0UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHSRC_PERSPDELTAYY_PERSPDELTAYY_Msk 0xFFFFFFFFUL
/* VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHSRC.PERSPDELTAXY */
#define VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHSRC_PERSPDELTAXY_PERSPDELTAXY_Pos 0UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHSRC_PERSPDELTAXY_PERSPDELTAXY_Msk 0xFFFFFFFFUL
/* VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHSRC.PERSPDELTAYX */
#define VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHSRC_PERSPDELTAYX_PERSPDELTAYX_Pos 0UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHSRC_PERSPDELTAYX_PERSPDELTAYX_Msk 0xFFFFFFFFUL
/* VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHSRC.PERSPSTARTW */
#define VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHSRC_PERSPSTARTW_PERSPSTARTW_Pos 0UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHSRC_PERSPSTARTW_PERSPSTARTW_Msk 0xFFFFFFFFUL
/* VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHSRC.PERSPDELTAXW */
#define VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHSRC_PERSPDELTAXW_PERSPDELTAXW_Pos 0UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHSRC_PERSPDELTAXW_PERSPDELTAXW_Msk 0xFFFFFFFFUL
/* VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHSRC.PERSPDELTAYW */
#define VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHSRC_PERSPDELTAYW_PERSPDELTAYW_Pos 0UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHSRC_PERSPDELTAYW_PERSPDELTAYW_Msk 0xFFFFFFFFUL
/* VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHSRC.ARBSTARTX */
#define VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHSRC_ARBSTARTX_ARBSTARTX_Pos 0UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHSRC_ARBSTARTX_ARBSTARTX_Msk 0x1FFFFFUL
/* VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHSRC.ARBSTARTY */
#define VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHSRC_ARBSTARTY_ARBSTARTY_Pos 0UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHSRC_ARBSTARTY_ARBSTARTY_Msk 0x1FFFFFUL
/* VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHSRC.ARBDELTA */
#define VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHSRC_ARBDELTA_ARBDELTAXX_Pos 0UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHSRC_ARBDELTA_ARBDELTAXX_Msk 0xFFUL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHSRC_ARBDELTA_ARBDELTAXY_Pos 8UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHSRC_ARBDELTA_ARBDELTAXY_Msk 0xFF00UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHSRC_ARBDELTA_ARBDELTAYX_Pos 16UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHSRC_ARBDELTA_ARBDELTAYX_Msk 0xFF0000UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHSRC_ARBDELTA_ARBDELTAYY_Pos 24UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHSRC_ARBDELTA_ARBDELTAYY_Msk 0xFF000000UL
/* VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHSRC.FIRPOSITIONS */
#define VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHSRC_FIRPOSITIONS_FIR0POSITION_Pos 0UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHSRC_FIRPOSITIONS_FIR0POSITION_Msk 0xFUL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHSRC_FIRPOSITIONS_FIR1POSITION_Pos 4UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHSRC_FIRPOSITIONS_FIR1POSITION_Msk 0xF0UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHSRC_FIRPOSITIONS_FIR2POSITION_Pos 8UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHSRC_FIRPOSITIONS_FIR2POSITION_Msk 0xF00UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHSRC_FIRPOSITIONS_FIR3POSITION_Pos 12UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHSRC_FIRPOSITIONS_FIR3POSITION_Msk 0xF000UL
/* VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHSRC.FIRCOEFFICIENTS */
#define VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHSRC_FIRCOEFFICIENTS_FIR0COEFFICIENT_Pos 0UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHSRC_FIRCOEFFICIENTS_FIR0COEFFICIENT_Msk 0xFFUL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHSRC_FIRCOEFFICIENTS_FIR1COEFFICIENT_Pos 8UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHSRC_FIRCOEFFICIENTS_FIR1COEFFICIENT_Msk 0xFF00UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHSRC_FIRCOEFFICIENTS_FIR2COEFFICIENT_Pos 16UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHSRC_FIRCOEFFICIENTS_FIR2COEFFICIENT_Msk 0xFF0000UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHSRC_FIRCOEFFICIENTS_FIR3COEFFICIENT_Pos 24UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHSRC_FIRCOEFFICIENTS_FIR3COEFFICIENT_Msk 0xFF000000UL
/* VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHSRC.DECODECONTROL */
#define VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHSRC_DECODECONTROL_COMPRESSIONMODE_Pos 0UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHSRC_DECODECONTROL_COMPRESSIONMODE_Msk 0x3UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHSRC_DECODECONTROL_RLADCOMPBITSRED_Pos 16UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHSRC_DECODECONTROL_RLADCOMPBITSRED_Msk 0xF0000UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHSRC_DECODECONTROL_RLADCOMPBITSGREEN_Pos 20UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHSRC_DECODECONTROL_RLADCOMPBITSGREEN_Msk 0xF00000UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHSRC_DECODECONTROL_RLADCOMPBITSBLUE_Pos 24UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHSRC_DECODECONTROL_RLADCOMPBITSBLUE_Msk 0xF000000UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHSRC_DECODECONTROL_RLADCOMPBITSALPHA_Pos 28UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHSRC_DECODECONTROL_RLADCOMPBITSALPHA_Msk 0xF0000000UL
/* VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHSRC.SOURCEBUFFERLENGTH */
#define VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHSRC_SOURCEBUFFERLENGTH_RLEWORDS_Pos 0UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHSRC_SOURCEBUFFERLENGTH_RLEWORDS_Msk 0x1FFFFFFFUL
/* VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHSRC.CONTROL */
#define VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHSRC_CONTROL_RASTERMODE_Pos 0UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHSRC_CONTROL_RASTERMODE_Msk 0x7UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHSRC_CONTROL_INPUTSELECT_Pos 3UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHSRC_CONTROL_INPUTSELECT_Msk 0x18UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHSRC_CONTROL_YUV422UPSAMPLINGMODE_Pos 5UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHSRC_CONTROL_YUV422UPSAMPLINGMODE_Msk 0x20UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHSRC_CONTROL_RAWPIXEL_Pos 7UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHSRC_CONTROL_RAWPIXEL_Msk 0x80UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHSRC_CONTROL_CLIPCOLOR_Pos 16UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHSRC_CONTROL_CLIPCOLOR_Msk 0x10000UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHSRC_CONTROL_FILTERMODE_Pos 20UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHSRC_CONTROL_FILTERMODE_Msk 0x700000UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHSRC_CONTROL_GEOMETRY_Pos 28UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHSRC_CONTROL_GEOMETRY_Msk 0x30000000UL
/* VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHSRC.CONTROLTRIGGER */
#define VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHSRC_CONTROLTRIGGER_SHDTOKGEN_Pos 0UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHSRC_CONTROLTRIGGER_SHDTOKGEN_Msk 0x1UL
/* VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHSRC.START */
#define VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHSRC_START_START_Pos 0UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHSRC_START_START_Msk 0x1UL
/* VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHSRC.FETCHTYPE */
#define VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHSRC_FETCHTYPE_FETCHTYPE_Pos 0UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHSRC_FETCHTYPE_FETCHTYPE_Msk 0xFUL
/* VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHSRC.DECODERSTATUS */
#define VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHSRC_DECODERSTATUS_BUFFERTOOSMALL_Pos 0UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHSRC_DECODERSTATUS_BUFFERTOOSMALL_Msk 0x1UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHSRC_DECODERSTATUS_BUFFERTOOLARGE_Pos 1UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHSRC_DECODERSTATUS_BUFFERTOOLARGE_Msk 0x2UL
/* VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHSRC.BURSTBUFFERPROPERTIES */
#define VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHSRC_BURSTBUFFERPROPERTIES_MANAGEDBURSTBUFFERS_Pos 0UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHSRC_BURSTBUFFERPROPERTIES_MANAGEDBURSTBUFFERS_Msk 0xFFUL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHSRC_BURSTBUFFERPROPERTIES_BURSTLENGTHFORMAXBUFFERS_Pos 8UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHSRC_BURSTBUFFERPROPERTIES_BURSTLENGTHFORMAXBUFFERS_Msk 0x1F00UL


/* VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHDST.STATICCONTROL */
#define VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHDST_STATICCONTROL_SHDEN_Pos 0UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHDST_STATICCONTROL_SHDEN_Msk 0x1UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHDST_STATICCONTROL_BASEADDRESSAUTOUPDATE_Pos 16UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHDST_STATICCONTROL_BASEADDRESSAUTOUPDATE_Msk 0xFF0000UL
/* VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHDST.BURSTBUFFERMANAGEMENT */
#define VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHDST_BURSTBUFFERMANAGEMENT_SETNUMBUFFERS_Pos 0UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHDST_BURSTBUFFERMANAGEMENT_SETNUMBUFFERS_Msk 0xFFUL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHDST_BURSTBUFFERMANAGEMENT_SETBURSTLENGTH_Pos 8UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHDST_BURSTBUFFERMANAGEMENT_SETBURSTLENGTH_Msk 0x1F00UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHDST_BURSTBUFFERMANAGEMENT_LINEMODE_Pos 31UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHDST_BURSTBUFFERMANAGEMENT_LINEMODE_Msk 0x80000000UL
/* VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHDST.BASEADDRESS0 */
#define VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHDST_BASEADDRESS0_BASEADDRESS0_Pos 0UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHDST_BASEADDRESS0_BASEADDRESS0_Msk 0xFFFFFFFFUL
/* VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHDST.SOURCEBUFFERATTRIBUTES0 */
#define VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHDST_SOURCEBUFFERATTRIBUTES0_STRIDE0_Pos 0UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHDST_SOURCEBUFFERATTRIBUTES0_STRIDE0_Msk 0xFFFFUL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHDST_SOURCEBUFFERATTRIBUTES0_BITSPERPIXEL0_Pos 16UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHDST_SOURCEBUFFERATTRIBUTES0_BITSPERPIXEL0_Msk 0x3F0000UL
/* VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHDST.SOURCEBUFFERDIMENSION0 */
#define VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHDST_SOURCEBUFFERDIMENSION0_LINEWIDTH0_Pos 0UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHDST_SOURCEBUFFERDIMENSION0_LINEWIDTH0_Msk 0x3FFFUL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHDST_SOURCEBUFFERDIMENSION0_LINECOUNT0_Pos 16UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHDST_SOURCEBUFFERDIMENSION0_LINECOUNT0_Msk 0x3FFF0000UL
/* VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHDST.COLORCOMPONENTBITS0 */
#define VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHDST_COLORCOMPONENTBITS0_COMPONENTBITSALPHA0_Pos 0UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHDST_COLORCOMPONENTBITS0_COMPONENTBITSALPHA0_Msk 0xFUL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHDST_COLORCOMPONENTBITS0_COMPONENTBITSBLUE0_Pos 8UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHDST_COLORCOMPONENTBITS0_COMPONENTBITSBLUE0_Msk 0xF00UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHDST_COLORCOMPONENTBITS0_COMPONENTBITSGREEN0_Pos 16UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHDST_COLORCOMPONENTBITS0_COMPONENTBITSGREEN0_Msk 0xF0000UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHDST_COLORCOMPONENTBITS0_COMPONENTBITSRED0_Pos 24UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHDST_COLORCOMPONENTBITS0_COMPONENTBITSRED0_Msk 0xF000000UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHDST_COLORCOMPONENTBITS0_ITUFORMAT0_Pos 31UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHDST_COLORCOMPONENTBITS0_ITUFORMAT0_Msk 0x80000000UL
/* VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHDST.COLORCOMPONENTSHIFT0 */
#define VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHDST_COLORCOMPONENTSHIFT0_COMPONENTSHIFTALPHA0_Pos 0UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHDST_COLORCOMPONENTSHIFT0_COMPONENTSHIFTALPHA0_Msk 0x1FUL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHDST_COLORCOMPONENTSHIFT0_COMPONENTSHIFTBLUE0_Pos 8UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHDST_COLORCOMPONENTSHIFT0_COMPONENTSHIFTBLUE0_Msk 0x1F00UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHDST_COLORCOMPONENTSHIFT0_COMPONENTSHIFTGREEN0_Pos 16UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHDST_COLORCOMPONENTSHIFT0_COMPONENTSHIFTGREEN0_Msk 0x1F0000UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHDST_COLORCOMPONENTSHIFT0_COMPONENTSHIFTRED0_Pos 24UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHDST_COLORCOMPONENTSHIFT0_COMPONENTSHIFTRED0_Msk 0x1F000000UL
/* VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHDST.LAYEROFFSET0 */
#define VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHDST_LAYEROFFSET0_LAYERXOFFSET0_Pos 0UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHDST_LAYEROFFSET0_LAYERXOFFSET0_Msk 0x7FFFUL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHDST_LAYEROFFSET0_LAYERYOFFSET0_Pos 16UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHDST_LAYEROFFSET0_LAYERYOFFSET0_Msk 0x7FFF0000UL
/* VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHDST.CLIPWINDOWOFFSET0 */
#define VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHDST_CLIPWINDOWOFFSET0_CLIPWINDOWXOFFSET0_Pos 0UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHDST_CLIPWINDOWOFFSET0_CLIPWINDOWXOFFSET0_Msk 0x7FFFUL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHDST_CLIPWINDOWOFFSET0_CLIPWINDOWYOFFSET0_Pos 16UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHDST_CLIPWINDOWOFFSET0_CLIPWINDOWYOFFSET0_Msk 0x7FFF0000UL
/* VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHDST.CLIPWINDOWDIMENSIONS0 */
#define VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHDST_CLIPWINDOWDIMENSIONS0_CLIPWINDOWWIDTH0_Pos 0UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHDST_CLIPWINDOWDIMENSIONS0_CLIPWINDOWWIDTH0_Msk 0x3FFFUL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHDST_CLIPWINDOWDIMENSIONS0_CLIPWINDOWHEIGHT0_Pos 16UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHDST_CLIPWINDOWDIMENSIONS0_CLIPWINDOWHEIGHT0_Msk 0x3FFF0000UL
/* VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHDST.CONSTANTCOLOR0 */
#define VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHDST_CONSTANTCOLOR0_CONSTANTALPHA0_Pos 0UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHDST_CONSTANTCOLOR0_CONSTANTALPHA0_Msk 0xFFUL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHDST_CONSTANTCOLOR0_CONSTANTBLUE0_Pos 8UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHDST_CONSTANTCOLOR0_CONSTANTBLUE0_Msk 0xFF00UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHDST_CONSTANTCOLOR0_CONSTANTGREEN0_Pos 16UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHDST_CONSTANTCOLOR0_CONSTANTGREEN0_Msk 0xFF0000UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHDST_CONSTANTCOLOR0_CONSTANTRED0_Pos 24UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHDST_CONSTANTCOLOR0_CONSTANTRED0_Msk 0xFF000000UL
/* VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHDST.LAYERPROPERTY0 */
#define VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHDST_LAYERPROPERTY0_PALETTEENABLE0_Pos 0UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHDST_LAYERPROPERTY0_PALETTEENABLE0_Msk 0x1UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHDST_LAYERPROPERTY0_TILEMODE0_Pos 1UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHDST_LAYERPROPERTY0_TILEMODE0_Msk 0x6UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHDST_LAYERPROPERTY0_ALPHASRCENABLE0_Pos 3UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHDST_LAYERPROPERTY0_ALPHASRCENABLE0_Msk 0x8UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHDST_LAYERPROPERTY0_ALPHACONSTENABLE0_Pos 4UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHDST_LAYERPROPERTY0_ALPHACONSTENABLE0_Msk 0x10UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHDST_LAYERPROPERTY0_ALPHAMASKENABLE0_Pos 5UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHDST_LAYERPROPERTY0_ALPHAMASKENABLE0_Msk 0x20UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHDST_LAYERPROPERTY0_ALPHATRANSENABLE0_Pos 6UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHDST_LAYERPROPERTY0_ALPHATRANSENABLE0_Msk 0x40UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHDST_LAYERPROPERTY0_RGBALPHASRCENABLE0_Pos 7UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHDST_LAYERPROPERTY0_RGBALPHASRCENABLE0_Msk 0x80UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHDST_LAYERPROPERTY0_RGBALPHACONSTENABLE0_Pos 8UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHDST_LAYERPROPERTY0_RGBALPHACONSTENABLE0_Msk 0x100UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHDST_LAYERPROPERTY0_RGBALPHAMASKENABLE0_Pos 9UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHDST_LAYERPROPERTY0_RGBALPHAMASKENABLE0_Msk 0x200UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHDST_LAYERPROPERTY0_RGBALPHATRANSENABLE0_Pos 10UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHDST_LAYERPROPERTY0_RGBALPHATRANSENABLE0_Msk 0x400UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHDST_LAYERPROPERTY0_PREMULCONSTRGB0_Pos 11UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHDST_LAYERPROPERTY0_PREMULCONSTRGB0_Msk 0x800UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHDST_LAYERPROPERTY0_YUVCONVERSIONMODE0_Pos 12UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHDST_LAYERPROPERTY0_YUVCONVERSIONMODE0_Msk 0x3000UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHDST_LAYERPROPERTY0_GAMMAREMOVEENABLE0_Pos 14UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHDST_LAYERPROPERTY0_GAMMAREMOVEENABLE0_Msk 0x4000UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHDST_LAYERPROPERTY0_PALETTEOFFSET0_Pos 16UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHDST_LAYERPROPERTY0_PALETTEOFFSET0_Msk 0x7FF0000UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHDST_LAYERPROPERTY0_PALETTEIDWIDTH0_Pos 27UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHDST_LAYERPROPERTY0_PALETTEIDWIDTH0_Msk 0x38000000UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHDST_LAYERPROPERTY0_CLIPWINDOWENABLE0_Pos 30UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHDST_LAYERPROPERTY0_CLIPWINDOWENABLE0_Msk 0x40000000UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHDST_LAYERPROPERTY0_SOURCEBUFFERENABLE0_Pos 31UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHDST_LAYERPROPERTY0_SOURCEBUFFERENABLE0_Msk 0x80000000UL
/* VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHDST.FRAMEDIMENSIONS */
#define VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHDST_FRAMEDIMENSIONS_FRAMEWIDTH_Pos 0UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHDST_FRAMEDIMENSIONS_FRAMEWIDTH_Msk 0x3FFFUL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHDST_FRAMEDIMENSIONS_FRAMEHEIGHT_Pos 16UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHDST_FRAMEDIMENSIONS_FRAMEHEIGHT_Msk 0x3FFF0000UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHDST_FRAMEDIMENSIONS_EMPTYFRAME_Pos 31UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHDST_FRAMEDIMENSIONS_EMPTYFRAME_Msk 0x80000000UL
/* VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHDST.FRAMERESAMPLING */
#define VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHDST_FRAMERESAMPLING_STARTX_Pos 0UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHDST_FRAMERESAMPLING_STARTX_Msk 0x3FUL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHDST_FRAMERESAMPLING_STARTY_Pos 6UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHDST_FRAMERESAMPLING_STARTY_Msk 0xFC0UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHDST_FRAMERESAMPLING_DELTAX_Pos 12UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHDST_FRAMERESAMPLING_DELTAX_Msk 0x3F000UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHDST_FRAMERESAMPLING_DELTAY_Pos 18UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHDST_FRAMERESAMPLING_DELTAY_Msk 0xFC0000UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHDST_FRAMERESAMPLING_SWAPDIRECTION_Pos 24UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHDST_FRAMERESAMPLING_SWAPDIRECTION_Msk 0x1000000UL
/* VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHDST.WARPCONTROL */
#define VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHDST_WARPCONTROL_WARPBITSPERPIXEL_Pos 0UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHDST_WARPCONTROL_WARPBITSPERPIXEL_Msk 0x3FUL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHDST_WARPCONTROL_WARPCOORDINATEMODE_Pos 8UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHDST_WARPCONTROL_WARPCOORDINATEMODE_Msk 0x300UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHDST_WARPCONTROL_WARPSYMMETRICOFFSET_Pos 12UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHDST_WARPCONTROL_WARPSYMMETRICOFFSET_Msk 0x1000UL
/* VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHDST.PERSPSTARTX */
#define VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHDST_PERSPSTARTX_PERSPSTARTX_Pos 0UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHDST_PERSPSTARTX_PERSPSTARTX_Msk 0xFFFFFFFFUL
/* VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHDST.PERSPSTARTY */
#define VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHDST_PERSPSTARTY_PERSPSTARTY_Pos 0UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHDST_PERSPSTARTY_PERSPSTARTY_Msk 0xFFFFFFFFUL
/* VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHDST.PERSPDELTAXX */
#define VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHDST_PERSPDELTAXX_PERSPDELTAXX_Pos 0UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHDST_PERSPDELTAXX_PERSPDELTAXX_Msk 0xFFFFFFFFUL
/* VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHDST.PERSPDELTAYY */
#define VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHDST_PERSPDELTAYY_PERSPDELTAYY_Pos 0UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHDST_PERSPDELTAYY_PERSPDELTAYY_Msk 0xFFFFFFFFUL
/* VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHDST.PERSPDELTAXY */
#define VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHDST_PERSPDELTAXY_PERSPDELTAXY_Pos 0UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHDST_PERSPDELTAXY_PERSPDELTAXY_Msk 0xFFFFFFFFUL
/* VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHDST.PERSPDELTAYX */
#define VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHDST_PERSPDELTAYX_PERSPDELTAYX_Pos 0UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHDST_PERSPDELTAYX_PERSPDELTAYX_Msk 0xFFFFFFFFUL
/* VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHDST.PERSPSTARTW */
#define VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHDST_PERSPSTARTW_PERSPSTARTW_Pos 0UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHDST_PERSPSTARTW_PERSPSTARTW_Msk 0xFFFFFFFFUL
/* VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHDST.PERSPDELTAXW */
#define VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHDST_PERSPDELTAXW_PERSPDELTAXW_Pos 0UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHDST_PERSPDELTAXW_PERSPDELTAXW_Msk 0xFFFFFFFFUL
/* VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHDST.PERSPDELTAYW */
#define VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHDST_PERSPDELTAYW_PERSPDELTAYW_Pos 0UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHDST_PERSPDELTAYW_PERSPDELTAYW_Msk 0xFFFFFFFFUL
/* VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHDST.ARBSTARTX */
#define VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHDST_ARBSTARTX_ARBSTARTX_Pos 0UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHDST_ARBSTARTX_ARBSTARTX_Msk 0x1FFFFFUL
/* VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHDST.ARBSTARTY */
#define VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHDST_ARBSTARTY_ARBSTARTY_Pos 0UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHDST_ARBSTARTY_ARBSTARTY_Msk 0x1FFFFFUL
/* VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHDST.ARBDELTA */
#define VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHDST_ARBDELTA_ARBDELTAXX_Pos 0UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHDST_ARBDELTA_ARBDELTAXX_Msk 0xFFUL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHDST_ARBDELTA_ARBDELTAXY_Pos 8UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHDST_ARBDELTA_ARBDELTAXY_Msk 0xFF00UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHDST_ARBDELTA_ARBDELTAYX_Pos 16UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHDST_ARBDELTA_ARBDELTAYX_Msk 0xFF0000UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHDST_ARBDELTA_ARBDELTAYY_Pos 24UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHDST_ARBDELTA_ARBDELTAYY_Msk 0xFF000000UL
/* VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHDST.FIRPOSITIONS */
#define VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHDST_FIRPOSITIONS_FIR0POSITION_Pos 0UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHDST_FIRPOSITIONS_FIR0POSITION_Msk 0xFUL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHDST_FIRPOSITIONS_FIR1POSITION_Pos 4UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHDST_FIRPOSITIONS_FIR1POSITION_Msk 0xF0UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHDST_FIRPOSITIONS_FIR2POSITION_Pos 8UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHDST_FIRPOSITIONS_FIR2POSITION_Msk 0xF00UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHDST_FIRPOSITIONS_FIR3POSITION_Pos 12UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHDST_FIRPOSITIONS_FIR3POSITION_Msk 0xF000UL
/* VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHDST.FIRCOEFFICIENTS */
#define VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHDST_FIRCOEFFICIENTS_FIR0COEFFICIENT_Pos 0UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHDST_FIRCOEFFICIENTS_FIR0COEFFICIENT_Msk 0xFFUL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHDST_FIRCOEFFICIENTS_FIR1COEFFICIENT_Pos 8UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHDST_FIRCOEFFICIENTS_FIR1COEFFICIENT_Msk 0xFF00UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHDST_FIRCOEFFICIENTS_FIR2COEFFICIENT_Pos 16UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHDST_FIRCOEFFICIENTS_FIR2COEFFICIENT_Msk 0xFF0000UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHDST_FIRCOEFFICIENTS_FIR3COEFFICIENT_Pos 24UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHDST_FIRCOEFFICIENTS_FIR3COEFFICIENT_Msk 0xFF000000UL
/* VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHDST.DECODECONTROL */
#define VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHDST_DECODECONTROL_COMPRESSIONMODE_Pos 0UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHDST_DECODECONTROL_COMPRESSIONMODE_Msk 0x3UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHDST_DECODECONTROL_RLADCOMPBITSRED_Pos 16UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHDST_DECODECONTROL_RLADCOMPBITSRED_Msk 0xF0000UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHDST_DECODECONTROL_RLADCOMPBITSGREEN_Pos 20UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHDST_DECODECONTROL_RLADCOMPBITSGREEN_Msk 0xF00000UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHDST_DECODECONTROL_RLADCOMPBITSBLUE_Pos 24UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHDST_DECODECONTROL_RLADCOMPBITSBLUE_Msk 0xF000000UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHDST_DECODECONTROL_RLADCOMPBITSALPHA_Pos 28UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHDST_DECODECONTROL_RLADCOMPBITSALPHA_Msk 0xF0000000UL
/* VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHDST.SOURCEBUFFERLENGTH */
#define VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHDST_SOURCEBUFFERLENGTH_RLEWORDS_Pos 0UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHDST_SOURCEBUFFERLENGTH_RLEWORDS_Msk 0x1FFFFFFFUL
/* VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHDST.CONTROL */
#define VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHDST_CONTROL_RASTERMODE_Pos 0UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHDST_CONTROL_RASTERMODE_Msk 0x7UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHDST_CONTROL_INPUTSELECT_Pos 3UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHDST_CONTROL_INPUTSELECT_Msk 0x18UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHDST_CONTROL_YUV422UPSAMPLINGMODE_Pos 5UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHDST_CONTROL_YUV422UPSAMPLINGMODE_Msk 0x20UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHDST_CONTROL_RAWPIXEL_Pos 7UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHDST_CONTROL_RAWPIXEL_Msk 0x80UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHDST_CONTROL_CLIPCOLOR_Pos 16UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHDST_CONTROL_CLIPCOLOR_Msk 0x10000UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHDST_CONTROL_FILTERMODE_Pos 20UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHDST_CONTROL_FILTERMODE_Msk 0x700000UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHDST_CONTROL_GEOMETRY_Pos 28UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHDST_CONTROL_GEOMETRY_Msk 0x30000000UL
/* VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHDST.CONTROLTRIGGER */
#define VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHDST_CONTROLTRIGGER_SHDTOKGEN_Pos 0UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHDST_CONTROLTRIGGER_SHDTOKGEN_Msk 0x1UL
/* VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHDST.START */
#define VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHDST_START_START_Pos 0UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHDST_START_START_Msk 0x1UL
/* VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHDST.FETCHTYPE */
#define VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHDST_FETCHTYPE_FETCHTYPE_Pos 0UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHDST_FETCHTYPE_FETCHTYPE_Msk 0xFUL
/* VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHDST.DECODERSTATUS */
#define VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHDST_DECODERSTATUS_BUFFERTOOSMALL_Pos 0UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHDST_DECODERSTATUS_BUFFERTOOSMALL_Msk 0x1UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHDST_DECODERSTATUS_BUFFERTOOLARGE_Pos 1UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHDST_DECODERSTATUS_BUFFERTOOLARGE_Msk 0x2UL
/* VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHDST.BURSTBUFFERPROPERTIES */
#define VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHDST_BURSTBUFFERPROPERTIES_MANAGEDBURSTBUFFERS_Pos 0UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHDST_BURSTBUFFERPROPERTIES_MANAGEDBURSTBUFFERS_Msk 0xFFUL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHDST_BURSTBUFFERPROPERTIES_BURSTLENGTHFORMAXBUFFERS_Pos 8UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHDST_BURSTBUFFERPROPERTIES_BURSTLENGTHFORMAXBUFFERS_Msk 0x1F00UL


/* VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHMASK.STATICCONTROL */
#define VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHMASK_STATICCONTROL_SHDEN_Pos 0UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHMASK_STATICCONTROL_SHDEN_Msk 0x1UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHMASK_STATICCONTROL_BASEADDRESSAUTOUPDATE_Pos 16UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHMASK_STATICCONTROL_BASEADDRESSAUTOUPDATE_Msk 0xFF0000UL
/* VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHMASK.BURSTBUFFERMANAGEMENT */
#define VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHMASK_BURSTBUFFERMANAGEMENT_SETNUMBUFFERS_Pos 0UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHMASK_BURSTBUFFERMANAGEMENT_SETNUMBUFFERS_Msk 0xFFUL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHMASK_BURSTBUFFERMANAGEMENT_SETBURSTLENGTH_Pos 8UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHMASK_BURSTBUFFERMANAGEMENT_SETBURSTLENGTH_Msk 0x1F00UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHMASK_BURSTBUFFERMANAGEMENT_LINEMODE_Pos 31UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHMASK_BURSTBUFFERMANAGEMENT_LINEMODE_Msk 0x80000000UL
/* VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHMASK.BASEADDRESS0 */
#define VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHMASK_BASEADDRESS0_BASEADDRESS0_Pos 0UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHMASK_BASEADDRESS0_BASEADDRESS0_Msk 0xFFFFFFFFUL
/* VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHMASK.SOURCEBUFFERATTRIBUTES0 */
#define VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHMASK_SOURCEBUFFERATTRIBUTES0_STRIDE0_Pos 0UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHMASK_SOURCEBUFFERATTRIBUTES0_STRIDE0_Msk 0xFFFFUL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHMASK_SOURCEBUFFERATTRIBUTES0_BITSPERPIXEL0_Pos 16UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHMASK_SOURCEBUFFERATTRIBUTES0_BITSPERPIXEL0_Msk 0x3F0000UL
/* VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHMASK.SOURCEBUFFERDIMENSION0 */
#define VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHMASK_SOURCEBUFFERDIMENSION0_LINEWIDTH0_Pos 0UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHMASK_SOURCEBUFFERDIMENSION0_LINEWIDTH0_Msk 0x3FFFUL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHMASK_SOURCEBUFFERDIMENSION0_LINECOUNT0_Pos 16UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHMASK_SOURCEBUFFERDIMENSION0_LINECOUNT0_Msk 0x3FFF0000UL
/* VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHMASK.COLORCOMPONENTBITS0 */
#define VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHMASK_COLORCOMPONENTBITS0_COMPONENTBITSALPHA0_Pos 0UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHMASK_COLORCOMPONENTBITS0_COMPONENTBITSALPHA0_Msk 0xFUL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHMASK_COLORCOMPONENTBITS0_COMPONENTBITSBLUE0_Pos 8UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHMASK_COLORCOMPONENTBITS0_COMPONENTBITSBLUE0_Msk 0xF00UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHMASK_COLORCOMPONENTBITS0_COMPONENTBITSGREEN0_Pos 16UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHMASK_COLORCOMPONENTBITS0_COMPONENTBITSGREEN0_Msk 0xF0000UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHMASK_COLORCOMPONENTBITS0_COMPONENTBITSRED0_Pos 24UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHMASK_COLORCOMPONENTBITS0_COMPONENTBITSRED0_Msk 0xF000000UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHMASK_COLORCOMPONENTBITS0_ITUFORMAT0_Pos 31UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHMASK_COLORCOMPONENTBITS0_ITUFORMAT0_Msk 0x80000000UL
/* VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHMASK.COLORCOMPONENTSHIFT0 */
#define VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHMASK_COLORCOMPONENTSHIFT0_COMPONENTSHIFTALPHA0_Pos 0UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHMASK_COLORCOMPONENTSHIFT0_COMPONENTSHIFTALPHA0_Msk 0x1FUL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHMASK_COLORCOMPONENTSHIFT0_COMPONENTSHIFTBLUE0_Pos 8UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHMASK_COLORCOMPONENTSHIFT0_COMPONENTSHIFTBLUE0_Msk 0x1F00UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHMASK_COLORCOMPONENTSHIFT0_COMPONENTSHIFTGREEN0_Pos 16UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHMASK_COLORCOMPONENTSHIFT0_COMPONENTSHIFTGREEN0_Msk 0x1F0000UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHMASK_COLORCOMPONENTSHIFT0_COMPONENTSHIFTRED0_Pos 24UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHMASK_COLORCOMPONENTSHIFT0_COMPONENTSHIFTRED0_Msk 0x1F000000UL
/* VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHMASK.LAYEROFFSET0 */
#define VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHMASK_LAYEROFFSET0_LAYERXOFFSET0_Pos 0UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHMASK_LAYEROFFSET0_LAYERXOFFSET0_Msk 0x7FFFUL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHMASK_LAYEROFFSET0_LAYERYOFFSET0_Pos 16UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHMASK_LAYEROFFSET0_LAYERYOFFSET0_Msk 0x7FFF0000UL
/* VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHMASK.CLIPWINDOWOFFSET0 */
#define VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHMASK_CLIPWINDOWOFFSET0_CLIPWINDOWXOFFSET0_Pos 0UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHMASK_CLIPWINDOWOFFSET0_CLIPWINDOWXOFFSET0_Msk 0x7FFFUL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHMASK_CLIPWINDOWOFFSET0_CLIPWINDOWYOFFSET0_Pos 16UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHMASK_CLIPWINDOWOFFSET0_CLIPWINDOWYOFFSET0_Msk 0x7FFF0000UL
/* VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHMASK.CLIPWINDOWDIMENSIONS0 */
#define VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHMASK_CLIPWINDOWDIMENSIONS0_CLIPWINDOWWIDTH0_Pos 0UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHMASK_CLIPWINDOWDIMENSIONS0_CLIPWINDOWWIDTH0_Msk 0x3FFFUL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHMASK_CLIPWINDOWDIMENSIONS0_CLIPWINDOWHEIGHT0_Pos 16UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHMASK_CLIPWINDOWDIMENSIONS0_CLIPWINDOWHEIGHT0_Msk 0x3FFF0000UL
/* VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHMASK.CONSTANTCOLOR0 */
#define VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHMASK_CONSTANTCOLOR0_CONSTANTALPHA0_Pos 0UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHMASK_CONSTANTCOLOR0_CONSTANTALPHA0_Msk 0xFFUL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHMASK_CONSTANTCOLOR0_CONSTANTBLUE0_Pos 8UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHMASK_CONSTANTCOLOR0_CONSTANTBLUE0_Msk 0xFF00UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHMASK_CONSTANTCOLOR0_CONSTANTGREEN0_Pos 16UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHMASK_CONSTANTCOLOR0_CONSTANTGREEN0_Msk 0xFF0000UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHMASK_CONSTANTCOLOR0_CONSTANTRED0_Pos 24UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHMASK_CONSTANTCOLOR0_CONSTANTRED0_Msk 0xFF000000UL
/* VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHMASK.LAYERPROPERTY0 */
#define VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHMASK_LAYERPROPERTY0_PALETTEENABLE0_Pos 0UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHMASK_LAYERPROPERTY0_PALETTEENABLE0_Msk 0x1UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHMASK_LAYERPROPERTY0_TILEMODE0_Pos 1UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHMASK_LAYERPROPERTY0_TILEMODE0_Msk 0x6UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHMASK_LAYERPROPERTY0_ALPHASRCENABLE0_Pos 3UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHMASK_LAYERPROPERTY0_ALPHASRCENABLE0_Msk 0x8UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHMASK_LAYERPROPERTY0_ALPHACONSTENABLE0_Pos 4UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHMASK_LAYERPROPERTY0_ALPHACONSTENABLE0_Msk 0x10UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHMASK_LAYERPROPERTY0_ALPHAMASKENABLE0_Pos 5UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHMASK_LAYERPROPERTY0_ALPHAMASKENABLE0_Msk 0x20UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHMASK_LAYERPROPERTY0_ALPHATRANSENABLE0_Pos 6UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHMASK_LAYERPROPERTY0_ALPHATRANSENABLE0_Msk 0x40UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHMASK_LAYERPROPERTY0_RGBALPHASRCENABLE0_Pos 7UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHMASK_LAYERPROPERTY0_RGBALPHASRCENABLE0_Msk 0x80UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHMASK_LAYERPROPERTY0_RGBALPHACONSTENABLE0_Pos 8UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHMASK_LAYERPROPERTY0_RGBALPHACONSTENABLE0_Msk 0x100UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHMASK_LAYERPROPERTY0_RGBALPHAMASKENABLE0_Pos 9UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHMASK_LAYERPROPERTY0_RGBALPHAMASKENABLE0_Msk 0x200UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHMASK_LAYERPROPERTY0_RGBALPHATRANSENABLE0_Pos 10UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHMASK_LAYERPROPERTY0_RGBALPHATRANSENABLE0_Msk 0x400UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHMASK_LAYERPROPERTY0_PREMULCONSTRGB0_Pos 11UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHMASK_LAYERPROPERTY0_PREMULCONSTRGB0_Msk 0x800UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHMASK_LAYERPROPERTY0_YUVCONVERSIONMODE0_Pos 12UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHMASK_LAYERPROPERTY0_YUVCONVERSIONMODE0_Msk 0x3000UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHMASK_LAYERPROPERTY0_GAMMAREMOVEENABLE0_Pos 14UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHMASK_LAYERPROPERTY0_GAMMAREMOVEENABLE0_Msk 0x4000UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHMASK_LAYERPROPERTY0_PALETTEOFFSET0_Pos 16UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHMASK_LAYERPROPERTY0_PALETTEOFFSET0_Msk 0x7FF0000UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHMASK_LAYERPROPERTY0_PALETTEIDWIDTH0_Pos 27UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHMASK_LAYERPROPERTY0_PALETTEIDWIDTH0_Msk 0x38000000UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHMASK_LAYERPROPERTY0_CLIPWINDOWENABLE0_Pos 30UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHMASK_LAYERPROPERTY0_CLIPWINDOWENABLE0_Msk 0x40000000UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHMASK_LAYERPROPERTY0_SOURCEBUFFERENABLE0_Pos 31UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHMASK_LAYERPROPERTY0_SOURCEBUFFERENABLE0_Msk 0x80000000UL
/* VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHMASK.FRAMEDIMENSIONS */
#define VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHMASK_FRAMEDIMENSIONS_FRAMEWIDTH_Pos 0UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHMASK_FRAMEDIMENSIONS_FRAMEWIDTH_Msk 0x3FFFUL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHMASK_FRAMEDIMENSIONS_FRAMEHEIGHT_Pos 16UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHMASK_FRAMEDIMENSIONS_FRAMEHEIGHT_Msk 0x3FFF0000UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHMASK_FRAMEDIMENSIONS_EMPTYFRAME_Pos 31UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHMASK_FRAMEDIMENSIONS_EMPTYFRAME_Msk 0x80000000UL
/* VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHMASK.FRAMERESAMPLING */
#define VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHMASK_FRAMERESAMPLING_STARTX_Pos 0UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHMASK_FRAMERESAMPLING_STARTX_Msk 0x3FUL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHMASK_FRAMERESAMPLING_STARTY_Pos 6UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHMASK_FRAMERESAMPLING_STARTY_Msk 0xFC0UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHMASK_FRAMERESAMPLING_DELTAX_Pos 12UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHMASK_FRAMERESAMPLING_DELTAX_Msk 0x3F000UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHMASK_FRAMERESAMPLING_DELTAY_Pos 18UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHMASK_FRAMERESAMPLING_DELTAY_Msk 0xFC0000UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHMASK_FRAMERESAMPLING_SWAPDIRECTION_Pos 24UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHMASK_FRAMERESAMPLING_SWAPDIRECTION_Msk 0x1000000UL
/* VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHMASK.WARPCONTROL */
#define VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHMASK_WARPCONTROL_WARPBITSPERPIXEL_Pos 0UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHMASK_WARPCONTROL_WARPBITSPERPIXEL_Msk 0x3FUL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHMASK_WARPCONTROL_WARPCOORDINATEMODE_Pos 8UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHMASK_WARPCONTROL_WARPCOORDINATEMODE_Msk 0x300UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHMASK_WARPCONTROL_WARPSYMMETRICOFFSET_Pos 12UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHMASK_WARPCONTROL_WARPSYMMETRICOFFSET_Msk 0x1000UL
/* VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHMASK.PERSPSTARTX */
#define VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHMASK_PERSPSTARTX_PERSPSTARTX_Pos 0UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHMASK_PERSPSTARTX_PERSPSTARTX_Msk 0xFFFFFFFFUL
/* VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHMASK.PERSPSTARTY */
#define VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHMASK_PERSPSTARTY_PERSPSTARTY_Pos 0UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHMASK_PERSPSTARTY_PERSPSTARTY_Msk 0xFFFFFFFFUL
/* VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHMASK.PERSPDELTAXX */
#define VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHMASK_PERSPDELTAXX_PERSPDELTAXX_Pos 0UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHMASK_PERSPDELTAXX_PERSPDELTAXX_Msk 0xFFFFFFFFUL
/* VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHMASK.PERSPDELTAYY */
#define VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHMASK_PERSPDELTAYY_PERSPDELTAYY_Pos 0UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHMASK_PERSPDELTAYY_PERSPDELTAYY_Msk 0xFFFFFFFFUL
/* VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHMASK.PERSPDELTAXY */
#define VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHMASK_PERSPDELTAXY_PERSPDELTAXY_Pos 0UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHMASK_PERSPDELTAXY_PERSPDELTAXY_Msk 0xFFFFFFFFUL
/* VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHMASK.PERSPDELTAYX */
#define VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHMASK_PERSPDELTAYX_PERSPDELTAYX_Pos 0UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHMASK_PERSPDELTAYX_PERSPDELTAYX_Msk 0xFFFFFFFFUL
/* VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHMASK.PERSPSTARTW */
#define VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHMASK_PERSPSTARTW_PERSPSTARTW_Pos 0UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHMASK_PERSPSTARTW_PERSPSTARTW_Msk 0xFFFFFFFFUL
/* VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHMASK.PERSPDELTAXW */
#define VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHMASK_PERSPDELTAXW_PERSPDELTAXW_Pos 0UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHMASK_PERSPDELTAXW_PERSPDELTAXW_Msk 0xFFFFFFFFUL
/* VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHMASK.PERSPDELTAYW */
#define VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHMASK_PERSPDELTAYW_PERSPDELTAYW_Pos 0UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHMASK_PERSPDELTAYW_PERSPDELTAYW_Msk 0xFFFFFFFFUL
/* VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHMASK.ARBSTARTX */
#define VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHMASK_ARBSTARTX_ARBSTARTX_Pos 0UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHMASK_ARBSTARTX_ARBSTARTX_Msk 0x1FFFFFUL
/* VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHMASK.ARBSTARTY */
#define VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHMASK_ARBSTARTY_ARBSTARTY_Pos 0UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHMASK_ARBSTARTY_ARBSTARTY_Msk 0x1FFFFFUL
/* VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHMASK.ARBDELTA */
#define VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHMASK_ARBDELTA_ARBDELTAXX_Pos 0UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHMASK_ARBDELTA_ARBDELTAXX_Msk 0xFFUL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHMASK_ARBDELTA_ARBDELTAXY_Pos 8UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHMASK_ARBDELTA_ARBDELTAXY_Msk 0xFF00UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHMASK_ARBDELTA_ARBDELTAYX_Pos 16UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHMASK_ARBDELTA_ARBDELTAYX_Msk 0xFF0000UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHMASK_ARBDELTA_ARBDELTAYY_Pos 24UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHMASK_ARBDELTA_ARBDELTAYY_Msk 0xFF000000UL
/* VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHMASK.FIRPOSITIONS */
#define VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHMASK_FIRPOSITIONS_FIR0POSITION_Pos 0UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHMASK_FIRPOSITIONS_FIR0POSITION_Msk 0xFUL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHMASK_FIRPOSITIONS_FIR1POSITION_Pos 4UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHMASK_FIRPOSITIONS_FIR1POSITION_Msk 0xF0UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHMASK_FIRPOSITIONS_FIR2POSITION_Pos 8UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHMASK_FIRPOSITIONS_FIR2POSITION_Msk 0xF00UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHMASK_FIRPOSITIONS_FIR3POSITION_Pos 12UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHMASK_FIRPOSITIONS_FIR3POSITION_Msk 0xF000UL
/* VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHMASK.FIRCOEFFICIENTS */
#define VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHMASK_FIRCOEFFICIENTS_FIR0COEFFICIENT_Pos 0UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHMASK_FIRCOEFFICIENTS_FIR0COEFFICIENT_Msk 0xFFUL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHMASK_FIRCOEFFICIENTS_FIR1COEFFICIENT_Pos 8UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHMASK_FIRCOEFFICIENTS_FIR1COEFFICIENT_Msk 0xFF00UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHMASK_FIRCOEFFICIENTS_FIR2COEFFICIENT_Pos 16UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHMASK_FIRCOEFFICIENTS_FIR2COEFFICIENT_Msk 0xFF0000UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHMASK_FIRCOEFFICIENTS_FIR3COEFFICIENT_Pos 24UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHMASK_FIRCOEFFICIENTS_FIR3COEFFICIENT_Msk 0xFF000000UL
/* VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHMASK.DECODECONTROL */
#define VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHMASK_DECODECONTROL_COMPRESSIONMODE_Pos 0UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHMASK_DECODECONTROL_COMPRESSIONMODE_Msk 0x3UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHMASK_DECODECONTROL_RLADCOMPBITSRED_Pos 16UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHMASK_DECODECONTROL_RLADCOMPBITSRED_Msk 0xF0000UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHMASK_DECODECONTROL_RLADCOMPBITSGREEN_Pos 20UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHMASK_DECODECONTROL_RLADCOMPBITSGREEN_Msk 0xF00000UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHMASK_DECODECONTROL_RLADCOMPBITSBLUE_Pos 24UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHMASK_DECODECONTROL_RLADCOMPBITSBLUE_Msk 0xF000000UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHMASK_DECODECONTROL_RLADCOMPBITSALPHA_Pos 28UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHMASK_DECODECONTROL_RLADCOMPBITSALPHA_Msk 0xF0000000UL
/* VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHMASK.SOURCEBUFFERLENGTH */
#define VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHMASK_SOURCEBUFFERLENGTH_RLEWORDS_Pos 0UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHMASK_SOURCEBUFFERLENGTH_RLEWORDS_Msk 0x1FFFFFFFUL
/* VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHMASK.CONTROL */
#define VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHMASK_CONTROL_RASTERMODE_Pos 0UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHMASK_CONTROL_RASTERMODE_Msk 0x7UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHMASK_CONTROL_INPUTSELECT_Pos 3UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHMASK_CONTROL_INPUTSELECT_Msk 0x18UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHMASK_CONTROL_YUV422UPSAMPLINGMODE_Pos 5UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHMASK_CONTROL_YUV422UPSAMPLINGMODE_Msk 0x20UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHMASK_CONTROL_RAWPIXEL_Pos 7UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHMASK_CONTROL_RAWPIXEL_Msk 0x80UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHMASK_CONTROL_CLIPCOLOR_Pos 16UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHMASK_CONTROL_CLIPCOLOR_Msk 0x10000UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHMASK_CONTROL_FILTERMODE_Pos 20UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHMASK_CONTROL_FILTERMODE_Msk 0x700000UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHMASK_CONTROL_GEOMETRY_Pos 28UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHMASK_CONTROL_GEOMETRY_Msk 0x30000000UL
/* VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHMASK.CONTROLTRIGGER */
#define VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHMASK_CONTROLTRIGGER_SHDTOKGEN_Pos 0UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHMASK_CONTROLTRIGGER_SHDTOKGEN_Msk 0x1UL
/* VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHMASK.START */
#define VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHMASK_START_START_Pos 0UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHMASK_START_START_Msk 0x1UL
/* VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHMASK.FETCHTYPE */
#define VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHMASK_FETCHTYPE_FETCHTYPE_Pos 0UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHMASK_FETCHTYPE_FETCHTYPE_Msk 0xFUL
/* VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHMASK.DECODERSTATUS */
#define VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHMASK_DECODERSTATUS_BUFFERTOOSMALL_Pos 0UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHMASK_DECODERSTATUS_BUFFERTOOSMALL_Msk 0x1UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHMASK_DECODERSTATUS_BUFFERTOOLARGE_Pos 1UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHMASK_DECODERSTATUS_BUFFERTOOLARGE_Msk 0x2UL
/* VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHMASK.BURSTBUFFERPROPERTIES */
#define VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHMASK_BURSTBUFFERPROPERTIES_MANAGEDBURSTBUFFERS_Pos 0UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHMASK_BURSTBUFFERPROPERTIES_MANAGEDBURSTBUFFERS_Msk 0xFFUL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHMASK_BURSTBUFFERPROPERTIES_BURSTLENGTHFORMAXBUFFERS_Pos 8UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_FETCHMASK_BURSTBUFFERPROPERTIES_BURSTLENGTHFORMAXBUFFERS_Msk 0x1F00UL


/* VIDEOSS_SUBSS_GFX2D_BLITENG_ROP.STATICCONTROL */
#define VIDEOSS_SUBSS_GFX2D_BLITENG_ROP_STATICCONTROL_SHDEN_Pos 0UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_ROP_STATICCONTROL_SHDEN_Msk 0x1UL
/* VIDEOSS_SUBSS_GFX2D_BLITENG_ROP.CONTROL */
#define VIDEOSS_SUBSS_GFX2D_BLITENG_ROP_CONTROL_MODE_Pos 0UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_ROP_CONTROL_MODE_Msk 0x1UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_ROP_CONTROL_ALPHAMODE_Pos 4UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_ROP_CONTROL_ALPHAMODE_Msk 0x10UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_ROP_CONTROL_BLUEMODE_Pos 5UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_ROP_CONTROL_BLUEMODE_Msk 0x20UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_ROP_CONTROL_GREENMODE_Pos 6UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_ROP_CONTROL_GREENMODE_Msk 0x40UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_ROP_CONTROL_REDMODE_Pos 7UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_ROP_CONTROL_REDMODE_Msk 0x80UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_ROP_CONTROL_PRIMDIV2_Pos 8UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_ROP_CONTROL_PRIMDIV2_Msk 0x100UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_ROP_CONTROL_SECDIV2_Pos 9UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_ROP_CONTROL_SECDIV2_Msk 0x200UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_ROP_CONTROL_TERTDIV2_Pos 10UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_ROP_CONTROL_TERTDIV2_Msk 0x400UL
/* VIDEOSS_SUBSS_GFX2D_BLITENG_ROP.RASTEROPERATIONINDICES */
#define VIDEOSS_SUBSS_GFX2D_BLITENG_ROP_RASTEROPERATIONINDICES_OPINDEXALPHA_Pos 0UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_ROP_RASTEROPERATIONINDICES_OPINDEXALPHA_Msk 0xFFUL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_ROP_RASTEROPERATIONINDICES_OPINDEXBLUE_Pos 8UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_ROP_RASTEROPERATIONINDICES_OPINDEXBLUE_Msk 0xFF00UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_ROP_RASTEROPERATIONINDICES_OPINDEXGREEN_Pos 16UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_ROP_RASTEROPERATIONINDICES_OPINDEXGREEN_Msk 0xFF0000UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_ROP_RASTEROPERATIONINDICES_OPINDEXRED_Pos 24UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_ROP_RASTEROPERATIONINDICES_OPINDEXRED_Msk 0xFF000000UL
/* VIDEOSS_SUBSS_GFX2D_BLITENG_ROP.PRIMCONTROLWORD */
#define VIDEOSS_SUBSS_GFX2D_BLITENG_ROP_PRIMCONTROLWORD_P_VAL_Pos 0UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_ROP_PRIMCONTROLWORD_P_VAL_Msk 0xFFFFFFFFUL
/* VIDEOSS_SUBSS_GFX2D_BLITENG_ROP.SECCONTROLWORD */
#define VIDEOSS_SUBSS_GFX2D_BLITENG_ROP_SECCONTROLWORD_S_VAL_Pos 0UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_ROP_SECCONTROLWORD_S_VAL_Msk 0xFFFFFFFFUL
/* VIDEOSS_SUBSS_GFX2D_BLITENG_ROP.TERTCONTROLWORD */
#define VIDEOSS_SUBSS_GFX2D_BLITENG_ROP_TERTCONTROLWORD_T_VAL_Pos 0UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_ROP_TERTCONTROLWORD_T_VAL_Msk 0xFFFFFFFFUL


/* VIDEOSS_SUBSS_GFX2D_BLITENG_CLUT.STATICCONTROL */
#define VIDEOSS_SUBSS_GFX2D_BLITENG_CLUT_STATICCONTROL_SHDEN_Pos 0UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_CLUT_STATICCONTROL_SHDEN_Msk 0x1UL
/* VIDEOSS_SUBSS_GFX2D_BLITENG_CLUT.UNSHADOWEDCONTROL */
#define VIDEOSS_SUBSS_GFX2D_BLITENG_CLUT_UNSHADOWEDCONTROL_B_EN_Pos 0UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_CLUT_UNSHADOWEDCONTROL_B_EN_Msk 0x1UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_CLUT_UNSHADOWEDCONTROL_G_EN_Pos 1UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_CLUT_UNSHADOWEDCONTROL_G_EN_Msk 0x2UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_CLUT_UNSHADOWEDCONTROL_R_EN_Pos 2UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_CLUT_UNSHADOWEDCONTROL_R_EN_Msk 0x4UL
/* VIDEOSS_SUBSS_GFX2D_BLITENG_CLUT.CONTROL */
#define VIDEOSS_SUBSS_GFX2D_BLITENG_CLUT_CONTROL_MODE_Pos 0UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_CLUT_CONTROL_MODE_Msk 0x3UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_CLUT_CONTROL_COL_8BIT_Pos 4UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_CLUT_CONTROL_COL_8BIT_Msk 0x10UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_CLUT_CONTROL_ALPHAMASK_Pos 5UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_CLUT_CONTROL_ALPHAMASK_Msk 0x20UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_CLUT_CONTROL_ALPHAINVERT_Pos 6UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_CLUT_CONTROL_ALPHAINVERT_Msk 0x40UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_CLUT_CONTROL_IDX_BITS_Pos 8UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_CLUT_CONTROL_IDX_BITS_Msk 0xF00UL
/* VIDEOSS_SUBSS_GFX2D_BLITENG_CLUT.STATUS */
#define VIDEOSS_SUBSS_GFX2D_BLITENG_CLUT_STATUS_WRITE_TIMEOUT_Pos 0UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_CLUT_STATUS_WRITE_TIMEOUT_Msk 0x1UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_CLUT_STATUS_READ_TIMEOUT_Pos 4UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_CLUT_STATUS_READ_TIMEOUT_Msk 0x10UL
/* VIDEOSS_SUBSS_GFX2D_BLITENG_CLUT.LASTCONTROLWORD */
#define VIDEOSS_SUBSS_GFX2D_BLITENG_CLUT_LASTCONTROLWORD_L_VAL_Pos 0UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_CLUT_LASTCONTROLWORD_L_VAL_Msk 0xFFFFFFFFUL
/* VIDEOSS_SUBSS_GFX2D_BLITENG_CLUT.LUT */
#define VIDEOSS_SUBSS_GFX2D_BLITENG_CLUT_LUT_BLUE_Pos 0UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_CLUT_LUT_BLUE_Msk 0x3FFUL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_CLUT_LUT_GREEN_Pos 10UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_CLUT_LUT_GREEN_Msk 0xFFC00UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_CLUT_LUT_RED_Pos 20UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_CLUT_LUT_RED_Msk 0x3FF00000UL


/* VIDEOSS_SUBSS_GFX2D_BLITENG_MATRIX.STATICCONTROL */
#define VIDEOSS_SUBSS_GFX2D_BLITENG_MATRIX_STATICCONTROL_SHDEN_Pos 0UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_MATRIX_STATICCONTROL_SHDEN_Msk 0x1UL
/* VIDEOSS_SUBSS_GFX2D_BLITENG_MATRIX.CONTROL */
#define VIDEOSS_SUBSS_GFX2D_BLITENG_MATRIX_CONTROL_MODE_Pos 0UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_MATRIX_CONTROL_MODE_Msk 0x3UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_MATRIX_CONTROL_ALPHAMASK_Pos 4UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_MATRIX_CONTROL_ALPHAMASK_Msk 0x10UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_MATRIX_CONTROL_ALPHAINVERT_Pos 5UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_MATRIX_CONTROL_ALPHAINVERT_Msk 0x20UL
/* VIDEOSS_SUBSS_GFX2D_BLITENG_MATRIX.RED0 */
#define VIDEOSS_SUBSS_GFX2D_BLITENG_MATRIX_RED0_A11_Pos 0UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_MATRIX_RED0_A11_Msk 0x1FFFUL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_MATRIX_RED0_A12_Pos 16UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_MATRIX_RED0_A12_Msk 0x1FFF0000UL
/* VIDEOSS_SUBSS_GFX2D_BLITENG_MATRIX.RED1 */
#define VIDEOSS_SUBSS_GFX2D_BLITENG_MATRIX_RED1_A13_Pos 0UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_MATRIX_RED1_A13_Msk 0x1FFFUL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_MATRIX_RED1_A14_Pos 16UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_MATRIX_RED1_A14_Msk 0x1FFF0000UL
/* VIDEOSS_SUBSS_GFX2D_BLITENG_MATRIX.GREEN0 */
#define VIDEOSS_SUBSS_GFX2D_BLITENG_MATRIX_GREEN0_A21_Pos 0UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_MATRIX_GREEN0_A21_Msk 0x1FFFUL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_MATRIX_GREEN0_A22_Pos 16UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_MATRIX_GREEN0_A22_Msk 0x1FFF0000UL
/* VIDEOSS_SUBSS_GFX2D_BLITENG_MATRIX.GREEN1 */
#define VIDEOSS_SUBSS_GFX2D_BLITENG_MATRIX_GREEN1_A23_Pos 0UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_MATRIX_GREEN1_A23_Msk 0x1FFFUL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_MATRIX_GREEN1_A24_Pos 16UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_MATRIX_GREEN1_A24_Msk 0x1FFF0000UL
/* VIDEOSS_SUBSS_GFX2D_BLITENG_MATRIX.BLUE0 */
#define VIDEOSS_SUBSS_GFX2D_BLITENG_MATRIX_BLUE0_A31_Pos 0UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_MATRIX_BLUE0_A31_Msk 0x1FFFUL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_MATRIX_BLUE0_A32_Pos 16UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_MATRIX_BLUE0_A32_Msk 0x1FFF0000UL
/* VIDEOSS_SUBSS_GFX2D_BLITENG_MATRIX.BLUE1 */
#define VIDEOSS_SUBSS_GFX2D_BLITENG_MATRIX_BLUE1_A33_Pos 0UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_MATRIX_BLUE1_A33_Msk 0x1FFFUL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_MATRIX_BLUE1_A34_Pos 16UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_MATRIX_BLUE1_A34_Msk 0x1FFF0000UL
/* VIDEOSS_SUBSS_GFX2D_BLITENG_MATRIX.ALPHA0 */
#define VIDEOSS_SUBSS_GFX2D_BLITENG_MATRIX_ALPHA0_A41_Pos 0UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_MATRIX_ALPHA0_A41_Msk 0x1FFFUL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_MATRIX_ALPHA0_A42_Pos 16UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_MATRIX_ALPHA0_A42_Msk 0x1FFF0000UL
/* VIDEOSS_SUBSS_GFX2D_BLITENG_MATRIX.ALPHA1 */
#define VIDEOSS_SUBSS_GFX2D_BLITENG_MATRIX_ALPHA1_A43_Pos 0UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_MATRIX_ALPHA1_A43_Msk 0x1FFFUL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_MATRIX_ALPHA1_A44_Pos 16UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_MATRIX_ALPHA1_A44_Msk 0x1FFF0000UL
/* VIDEOSS_SUBSS_GFX2D_BLITENG_MATRIX.OFFSETVECTOR0 */
#define VIDEOSS_SUBSS_GFX2D_BLITENG_MATRIX_OFFSETVECTOR0_C1_Pos 0UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_MATRIX_OFFSETVECTOR0_C1_Msk 0x1FFFUL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_MATRIX_OFFSETVECTOR0_C2_Pos 16UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_MATRIX_OFFSETVECTOR0_C2_Msk 0x1FFF0000UL
/* VIDEOSS_SUBSS_GFX2D_BLITENG_MATRIX.OFFSETVECTOR1 */
#define VIDEOSS_SUBSS_GFX2D_BLITENG_MATRIX_OFFSETVECTOR1_C3_Pos 0UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_MATRIX_OFFSETVECTOR1_C3_Msk 0x1FFFUL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_MATRIX_OFFSETVECTOR1_C4_Pos 16UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_MATRIX_OFFSETVECTOR1_C4_Msk 0x1FFF0000UL


/* VIDEOSS_SUBSS_GFX2D_BLITENG_GPSCALER.STATICCONTROL */
#define VIDEOSS_SUBSS_GFX2D_BLITENG_GPSCALER_STATICCONTROL_SHDEN_Pos 0UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_GPSCALER_STATICCONTROL_SHDEN_Msk 0x1UL
/* VIDEOSS_SUBSS_GFX2D_BLITENG_GPSCALER.CONTROL */
#define VIDEOSS_SUBSS_GFX2D_BLITENG_GPSCALER_CONTROL_MODE_Pos 0UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_GPSCALER_CONTROL_MODE_Msk 0xFUL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_GPSCALER_CONTROL_OPERATION_MODE_Pos 8UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_GPSCALER_CONTROL_OPERATION_MODE_Msk 0x100UL
/* VIDEOSS_SUBSS_GFX2D_BLITENG_GPSCALER.OUTPUTDIMENSION */
#define VIDEOSS_SUBSS_GFX2D_BLITENG_GPSCALER_OUTPUTDIMENSION_OUTPUT_WIDTH_Pos 0UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_GPSCALER_OUTPUTDIMENSION_OUTPUT_WIDTH_Msk 0x3FFFUL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_GPSCALER_OUTPUTDIMENSION_OUTPUT_HEIGHT_Pos 16UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_GPSCALER_OUTPUTDIMENSION_OUTPUT_HEIGHT_Msk 0x3FFF0000UL
/* VIDEOSS_SUBSS_GFX2D_BLITENG_GPSCALER.SCALERCONTROL */
#define VIDEOSS_SUBSS_GFX2D_BLITENG_GPSCALER_SCALERCONTROL_SCALE_MODE_H_Pos 0UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_GPSCALER_SCALERCONTROL_SCALE_MODE_H_Msk 0x1UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_GPSCALER_SCALERCONTROL_SCALE_MODE_V_Pos 4UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_GPSCALER_SCALERCONTROL_SCALE_MODE_V_Msk 0x10UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_GPSCALER_SCALERCONTROL_FILTER_MODE_H_Pos 8UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_GPSCALER_SCALERCONTROL_FILTER_MODE_H_Msk 0x100UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_GPSCALER_SCALERCONTROL_FILTER_MODE_V_Pos 12UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_GPSCALER_SCALERCONTROL_FILTER_MODE_V_Msk 0x1000UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_GPSCALER_SCALERCONTROL_FIELD_MODE_Pos 16UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_GPSCALER_SCALERCONTROL_FIELD_MODE_Msk 0x30000UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_GPSCALER_SCALERCONTROL_ALPHA_VALUE_Pos 20UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_GPSCALER_SCALERCONTROL_ALPHA_VALUE_Msk 0xFF00000UL
/* VIDEOSS_SUBSS_GFX2D_BLITENG_GPSCALER.SCALERSETUPH0 */
#define VIDEOSS_SUBSS_GFX2D_BLITENG_GPSCALER_SCALERSETUPH0_SCALE_FACTOR_H_Pos 0UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_GPSCALER_SCALERSETUPH0_SCALE_FACTOR_H_Msk 0xFFFFFUL
/* VIDEOSS_SUBSS_GFX2D_BLITENG_GPSCALER.SCALERSETUPH1 */
#define VIDEOSS_SUBSS_GFX2D_BLITENG_GPSCALER_SCALERSETUPH1_PHASE_OFFSET_H_Pos 0UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_GPSCALER_SCALERSETUPH1_PHASE_OFFSET_H_Msk 0x1FFFFFUL
/* VIDEOSS_SUBSS_GFX2D_BLITENG_GPSCALER.SCALERSETUPV0 */
#define VIDEOSS_SUBSS_GFX2D_BLITENG_GPSCALER_SCALERSETUPV0_SCALE_FACTOR_V_Pos 0UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_GPSCALER_SCALERSETUPV0_SCALE_FACTOR_V_Msk 0xFFFFFUL
/* VIDEOSS_SUBSS_GFX2D_BLITENG_GPSCALER.SCALERSETUPV1 */
#define VIDEOSS_SUBSS_GFX2D_BLITENG_GPSCALER_SCALERSETUPV1_PHASE_OFFSET_V_Pos 0UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_GPSCALER_SCALERSETUPV1_PHASE_OFFSET_V_Msk 0x1FFFFFUL
/* VIDEOSS_SUBSS_GFX2D_BLITENG_GPSCALER.SCALERSETUPV2 */
#define VIDEOSS_SUBSS_GFX2D_BLITENG_GPSCALER_SCALERSETUPV2_PHASE_OFFSET_V1_Pos 0UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_GPSCALER_SCALERSETUPV2_PHASE_OFFSET_V1_Msk 0x1FFFFFUL
/* VIDEOSS_SUBSS_GFX2D_BLITENG_GPSCALER.SCALERSETUPV3 */
#define VIDEOSS_SUBSS_GFX2D_BLITENG_GPSCALER_SCALERSETUPV3_PHASE_OFFSET_V2_Pos 0UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_GPSCALER_SCALERSETUPV3_PHASE_OFFSET_V2_Msk 0x1FFFFFUL
/* VIDEOSS_SUBSS_GFX2D_BLITENG_GPSCALER.SCALERSETUPV4 */
#define VIDEOSS_SUBSS_GFX2D_BLITENG_GPSCALER_SCALERSETUPV4_PHASE_OFFSET_V3_Pos 0UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_GPSCALER_SCALERSETUPV4_PHASE_OFFSET_V3_Msk 0x1FFFFFUL
/* VIDEOSS_SUBSS_GFX2D_BLITENG_GPSCALER.FILTERCONTROL */
#define VIDEOSS_SUBSS_GFX2D_BLITENG_GPSCALER_FILTERCONTROL_TAPS_H_Pos 0UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_GPSCALER_FILTERCONTROL_TAPS_H_Msk 0x7UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_GPSCALER_FILTERCONTROL_TAPS_V_Pos 4UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_GPSCALER_FILTERCONTROL_TAPS_V_Msk 0x70UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_GPSCALER_FILTERCONTROL_BYPASS_MODE_R_Pos 8UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_GPSCALER_FILTERCONTROL_BYPASS_MODE_R_Msk 0x100UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_GPSCALER_FILTERCONTROL_BYPASS_MODE_G_Pos 9UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_GPSCALER_FILTERCONTROL_BYPASS_MODE_G_Msk 0x200UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_GPSCALER_FILTERCONTROL_BYPASS_MODE_B_Pos 10UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_GPSCALER_FILTERCONTROL_BYPASS_MODE_B_Msk 0x400UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_GPSCALER_FILTERCONTROL_BYPASS_MODE_A_Pos 11UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_GPSCALER_FILTERCONTROL_BYPASS_MODE_A_Msk 0x800UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_GPSCALER_FILTERCONTROL_EXPONENT_FIR_Pos 12UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_GPSCALER_FILTERCONTROL_EXPONENT_FIR_Msk 0xF000UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_GPSCALER_FILTERCONTROL_TILE_MODE_Pos 16UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_GPSCALER_FILTERCONTROL_TILE_MODE_Msk 0x30000UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_GPSCALER_FILTERCONTROL_TILING_AT_BEGIN_H_Pos 20UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_GPSCALER_FILTERCONTROL_TILING_AT_BEGIN_H_Msk 0x100000UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_GPSCALER_FILTERCONTROL_TILING_AT_BEGIN_V_Pos 21UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_GPSCALER_FILTERCONTROL_TILING_AT_BEGIN_V_Msk 0x200000UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_GPSCALER_FILTERCONTROL_TILE_COLOR_ALPHA_Pos 24UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_GPSCALER_FILTERCONTROL_TILE_COLOR_ALPHA_Msk 0xFF000000UL
/* VIDEOSS_SUBSS_GFX2D_BLITENG_GPSCALER.TILECOLORRGB */
#define VIDEOSS_SUBSS_GFX2D_BLITENG_GPSCALER_TILECOLORRGB_TILE_COLOR_RED_Pos 0UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_GPSCALER_TILECOLORRGB_TILE_COLOR_RED_Msk 0x3FFUL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_GPSCALER_TILECOLORRGB_TILE_COLOR_GREEN_Pos 10UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_GPSCALER_TILECOLORRGB_TILE_COLOR_GREEN_Msk 0xFFC00UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_GPSCALER_TILECOLORRGB_TILE_COLOR_BLUE_Pos 20UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_GPSCALER_TILECOLORRGB_TILE_COLOR_BLUE_Msk 0x3FF00000UL
/* VIDEOSS_SUBSS_GFX2D_BLITENG_GPSCALER.COEFFICIENTSH0 */
#define VIDEOSS_SUBSS_GFX2D_BLITENG_GPSCALER_COEFFICIENTSH0_COEFF_H3_Pos 0UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_GPSCALER_COEFFICIENTSH0_COEFF_H3_Msk 0xFFUL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_GPSCALER_COEFFICIENTSH0_COEFF_H2_Pos 8UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_GPSCALER_COEFFICIENTSH0_COEFF_H2_Msk 0xFF00UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_GPSCALER_COEFFICIENTSH0_COEFF_H1_Pos 16UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_GPSCALER_COEFFICIENTSH0_COEFF_H1_Msk 0xFF0000UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_GPSCALER_COEFFICIENTSH0_COEFF_H0_Pos 24UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_GPSCALER_COEFFICIENTSH0_COEFF_H0_Msk 0xFF000000UL
/* VIDEOSS_SUBSS_GFX2D_BLITENG_GPSCALER.COEFFICIENTSH1 */
#define VIDEOSS_SUBSS_GFX2D_BLITENG_GPSCALER_COEFFICIENTSH1_COEFF_H7_Pos 0UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_GPSCALER_COEFFICIENTSH1_COEFF_H7_Msk 0xFFUL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_GPSCALER_COEFFICIENTSH1_COEFF_H6_Pos 8UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_GPSCALER_COEFFICIENTSH1_COEFF_H6_Msk 0xFF00UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_GPSCALER_COEFFICIENTSH1_COEFF_H5_Pos 16UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_GPSCALER_COEFFICIENTSH1_COEFF_H5_Msk 0xFF0000UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_GPSCALER_COEFFICIENTSH1_COEFF_H4_Pos 24UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_GPSCALER_COEFFICIENTSH1_COEFF_H4_Msk 0xFF000000UL
/* VIDEOSS_SUBSS_GFX2D_BLITENG_GPSCALER.COEFFICIENTSH2 */
#define VIDEOSS_SUBSS_GFX2D_BLITENG_GPSCALER_COEFFICIENTSH2_COEFF_H11_Pos 0UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_GPSCALER_COEFFICIENTSH2_COEFF_H11_Msk 0xFFUL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_GPSCALER_COEFFICIENTSH2_COEFF_H10_Pos 8UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_GPSCALER_COEFFICIENTSH2_COEFF_H10_Msk 0xFF00UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_GPSCALER_COEFFICIENTSH2_COEFF_H9_Pos 16UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_GPSCALER_COEFFICIENTSH2_COEFF_H9_Msk 0xFF0000UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_GPSCALER_COEFFICIENTSH2_COEFF_H8_Pos 24UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_GPSCALER_COEFFICIENTSH2_COEFF_H8_Msk 0xFF000000UL
/* VIDEOSS_SUBSS_GFX2D_BLITENG_GPSCALER.COEFFICIENTSH3 */
#define VIDEOSS_SUBSS_GFX2D_BLITENG_GPSCALER_COEFFICIENTSH3_COEFF_H14_Pos 8UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_GPSCALER_COEFFICIENTSH3_COEFF_H14_Msk 0xFF00UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_GPSCALER_COEFFICIENTSH3_COEFF_H13_Pos 16UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_GPSCALER_COEFFICIENTSH3_COEFF_H13_Msk 0xFF0000UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_GPSCALER_COEFFICIENTSH3_COEFF_H12_Pos 24UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_GPSCALER_COEFFICIENTSH3_COEFF_H12_Msk 0xFF000000UL
/* VIDEOSS_SUBSS_GFX2D_BLITENG_GPSCALER.COEFFICIENTSV0 */
#define VIDEOSS_SUBSS_GFX2D_BLITENG_GPSCALER_COEFFICIENTSV0_COEFF_V3_Pos 0UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_GPSCALER_COEFFICIENTSV0_COEFF_V3_Msk 0xFFUL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_GPSCALER_COEFFICIENTSV0_COEFF_V2_Pos 8UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_GPSCALER_COEFFICIENTSV0_COEFF_V2_Msk 0xFF00UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_GPSCALER_COEFFICIENTSV0_COEFF_V1_Pos 16UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_GPSCALER_COEFFICIENTSV0_COEFF_V1_Msk 0xFF0000UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_GPSCALER_COEFFICIENTSV0_COEFF_V0_Pos 24UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_GPSCALER_COEFFICIENTSV0_COEFF_V0_Msk 0xFF000000UL
/* VIDEOSS_SUBSS_GFX2D_BLITENG_GPSCALER.COEFFICIENTSV1 */
#define VIDEOSS_SUBSS_GFX2D_BLITENG_GPSCALER_COEFFICIENTSV1_COEFF_V7_Pos 0UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_GPSCALER_COEFFICIENTSV1_COEFF_V7_Msk 0xFFUL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_GPSCALER_COEFFICIENTSV1_COEFF_V6_Pos 8UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_GPSCALER_COEFFICIENTSV1_COEFF_V6_Msk 0xFF00UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_GPSCALER_COEFFICIENTSV1_COEFF_V5_Pos 16UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_GPSCALER_COEFFICIENTSV1_COEFF_V5_Msk 0xFF0000UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_GPSCALER_COEFFICIENTSV1_COEFF_V4_Pos 24UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_GPSCALER_COEFFICIENTSV1_COEFF_V4_Msk 0xFF000000UL
/* VIDEOSS_SUBSS_GFX2D_BLITENG_GPSCALER.COEFFICIENTSV2 */
#define VIDEOSS_SUBSS_GFX2D_BLITENG_GPSCALER_COEFFICIENTSV2_COEFF_V11_Pos 0UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_GPSCALER_COEFFICIENTSV2_COEFF_V11_Msk 0xFFUL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_GPSCALER_COEFFICIENTSV2_COEFF_V10_Pos 8UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_GPSCALER_COEFFICIENTSV2_COEFF_V10_Msk 0xFF00UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_GPSCALER_COEFFICIENTSV2_COEFF_V9_Pos 16UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_GPSCALER_COEFFICIENTSV2_COEFF_V9_Msk 0xFF0000UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_GPSCALER_COEFFICIENTSV2_COEFF_V8_Pos 24UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_GPSCALER_COEFFICIENTSV2_COEFF_V8_Msk 0xFF000000UL
/* VIDEOSS_SUBSS_GFX2D_BLITENG_GPSCALER.COEFFICIENTSV3 */
#define VIDEOSS_SUBSS_GFX2D_BLITENG_GPSCALER_COEFFICIENTSV3_COEFF_V14_Pos 8UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_GPSCALER_COEFFICIENTSV3_COEFF_V14_Msk 0xFF00UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_GPSCALER_COEFFICIENTSV3_COEFF_V13_Pos 16UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_GPSCALER_COEFFICIENTSV3_COEFF_V13_Msk 0xFF0000UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_GPSCALER_COEFFICIENTSV3_COEFF_V12_Pos 24UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_GPSCALER_COEFFICIENTSV3_COEFF_V12_Msk 0xFF000000UL


/* VIDEOSS_SUBSS_GFX2D_BLITENG_BLITBLEND.STATICCONTROL */
#define VIDEOSS_SUBSS_GFX2D_BLITENG_BLITBLEND_STATICCONTROL_SHDEN_Pos 0UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_BLITBLEND_STATICCONTROL_SHDEN_Msk 0x1UL
/* VIDEOSS_SUBSS_GFX2D_BLITENG_BLITBLEND.CONTROL */
#define VIDEOSS_SUBSS_GFX2D_BLITENG_BLITBLEND_CONTROL_MODE_Pos 0UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_BLITBLEND_CONTROL_MODE_Msk 0x1UL
/* VIDEOSS_SUBSS_GFX2D_BLITENG_BLITBLEND.NEUTRALBORDER */
#define VIDEOSS_SUBSS_GFX2D_BLITENG_BLITBLEND_NEUTRALBORDER_NEUTRALBORDERMODE_Pos 0UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_BLITBLEND_NEUTRALBORDER_NEUTRALBORDERMODE_Msk 0x1UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_BLITBLEND_NEUTRALBORDER_NEUTRALBORDERLEFT_Pos 8UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_BLITBLEND_NEUTRALBORDER_NEUTRALBORDERLEFT_Msk 0x700UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_BLITBLEND_NEUTRALBORDER_NEUTRALBORDERRIGHT_Pos 12UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_BLITBLEND_NEUTRALBORDER_NEUTRALBORDERRIGHT_Msk 0x7000UL
/* VIDEOSS_SUBSS_GFX2D_BLITENG_BLITBLEND.CONSTANTCOLOR */
#define VIDEOSS_SUBSS_GFX2D_BLITENG_BLITBLEND_CONSTANTCOLOR_CONSTANTALPHA_Pos 0UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_BLITBLEND_CONSTANTCOLOR_CONSTANTALPHA_Msk 0xFFUL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_BLITBLEND_CONSTANTCOLOR_CONSTANTBLUE_Pos 8UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_BLITBLEND_CONSTANTCOLOR_CONSTANTBLUE_Msk 0xFF00UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_BLITBLEND_CONSTANTCOLOR_CONSTANTGREEN_Pos 16UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_BLITBLEND_CONSTANTCOLOR_CONSTANTGREEN_Msk 0xFF0000UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_BLITBLEND_CONSTANTCOLOR_CONSTANTRED_Pos 24UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_BLITBLEND_CONSTANTCOLOR_CONSTANTRED_Msk 0xFF000000UL
/* VIDEOSS_SUBSS_GFX2D_BLITENG_BLITBLEND.COLORREDBLENDFUNCTION */
#define VIDEOSS_SUBSS_GFX2D_BLITENG_BLITBLEND_COLORREDBLENDFUNCTION_BLENDFUNCCOLORREDSRC_Pos 0UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_BLITBLEND_COLORREDBLENDFUNCTION_BLENDFUNCCOLORREDSRC_Msk 0xFFFFUL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_BLITBLEND_COLORREDBLENDFUNCTION_BLENDFUNCCOLORREDDST_Pos 16UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_BLITBLEND_COLORREDBLENDFUNCTION_BLENDFUNCCOLORREDDST_Msk 0xFFFF0000UL
/* VIDEOSS_SUBSS_GFX2D_BLITENG_BLITBLEND.COLORGREENBLENDFUNCTION */
#define VIDEOSS_SUBSS_GFX2D_BLITENG_BLITBLEND_COLORGREENBLENDFUNCTION_BLENDFUNCCOLORGREENSRC_Pos 0UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_BLITBLEND_COLORGREENBLENDFUNCTION_BLENDFUNCCOLORGREENSRC_Msk 0xFFFFUL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_BLITBLEND_COLORGREENBLENDFUNCTION_BLENDFUNCCOLORGREENDST_Pos 16UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_BLITBLEND_COLORGREENBLENDFUNCTION_BLENDFUNCCOLORGREENDST_Msk 0xFFFF0000UL
/* VIDEOSS_SUBSS_GFX2D_BLITENG_BLITBLEND.COLORBLUEBLENDFUNCTION */
#define VIDEOSS_SUBSS_GFX2D_BLITENG_BLITBLEND_COLORBLUEBLENDFUNCTION_BLENDFUNCCOLORBLUESRC_Pos 0UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_BLITBLEND_COLORBLUEBLENDFUNCTION_BLENDFUNCCOLORBLUESRC_Msk 0xFFFFUL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_BLITBLEND_COLORBLUEBLENDFUNCTION_BLENDFUNCCOLORBLUEDST_Pos 16UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_BLITBLEND_COLORBLUEBLENDFUNCTION_BLENDFUNCCOLORBLUEDST_Msk 0xFFFF0000UL
/* VIDEOSS_SUBSS_GFX2D_BLITENG_BLITBLEND.ALPHABLENDFUNCTION */
#define VIDEOSS_SUBSS_GFX2D_BLITENG_BLITBLEND_ALPHABLENDFUNCTION_BLENDFUNCALPHASRC_Pos 0UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_BLITBLEND_ALPHABLENDFUNCTION_BLENDFUNCALPHASRC_Msk 0xFFFFUL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_BLITBLEND_ALPHABLENDFUNCTION_BLENDFUNCALPHADST_Pos 16UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_BLITBLEND_ALPHABLENDFUNCTION_BLENDFUNCALPHADST_Msk 0xFFFF0000UL
/* VIDEOSS_SUBSS_GFX2D_BLITENG_BLITBLEND.BLENDMODE1 */
#define VIDEOSS_SUBSS_GFX2D_BLITENG_BLITBLEND_BLENDMODE1_BLENDMODECOLORRED_Pos 0UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_BLITBLEND_BLENDMODE1_BLENDMODECOLORRED_Msk 0xFFFFUL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_BLITBLEND_BLENDMODE1_BLENDMODECOLORGREEN_Pos 16UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_BLITBLEND_BLENDMODE1_BLENDMODECOLORGREEN_Msk 0xFFFF0000UL
/* VIDEOSS_SUBSS_GFX2D_BLITENG_BLITBLEND.BLENDMODE2 */
#define VIDEOSS_SUBSS_GFX2D_BLITENG_BLITBLEND_BLENDMODE2_BLENDMODECOLORBLUE_Pos 0UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_BLITBLEND_BLENDMODE2_BLENDMODECOLORBLUE_Msk 0xFFFFUL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_BLITBLEND_BLENDMODE2_BLENDMODEALPHA_Pos 16UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_BLITBLEND_BLENDMODE2_BLENDMODEALPHA_Msk 0xFFFF0000UL
/* VIDEOSS_SUBSS_GFX2D_BLITENG_BLITBLEND.DIRECTSETUP */
#define VIDEOSS_SUBSS_GFX2D_BLITENG_BLITBLEND_DIRECTSETUP_COLORDEBUG_Pos 0UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_BLITBLEND_DIRECTSETUP_COLORDEBUG_Msk 0x3FFUL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_BLITBLEND_DIRECTSETUP_ALPHADEBUG_Pos 16UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_BLITBLEND_DIRECTSETUP_ALPHADEBUG_Msk 0x3FF0000UL
/* VIDEOSS_SUBSS_GFX2D_BLITENG_BLITBLEND.PRIMCONTROLWORD */
#define VIDEOSS_SUBSS_GFX2D_BLITENG_BLITBLEND_PRIMCONTROLWORD_P_VAL_Pos 0UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_BLITBLEND_PRIMCONTROLWORD_P_VAL_Msk 0xFFFFFFFFUL
/* VIDEOSS_SUBSS_GFX2D_BLITENG_BLITBLEND.SECCONTROLWORD */
#define VIDEOSS_SUBSS_GFX2D_BLITENG_BLITBLEND_SECCONTROLWORD_S_VAL_Pos 0UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_BLITBLEND_SECCONTROLWORD_S_VAL_Msk 0xFFFFFFFFUL


/* VIDEOSS_SUBSS_GFX2D_BLITENG_STORE.STATICCONTROL */
#define VIDEOSS_SUBSS_GFX2D_BLITENG_STORE_STATICCONTROL_SHDEN_Pos 0UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_STORE_STATICCONTROL_SHDEN_Msk 0x1UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_STORE_STATICCONTROL_SINGLEFRAMEOPERATION_Pos 4UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_STORE_STATICCONTROL_SINGLEFRAMEOPERATION_Msk 0x10UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_STORE_STATICCONTROL_BASEADDRESSAUTOUPDATE_Pos 8UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_STORE_STATICCONTROL_BASEADDRESSAUTOUPDATE_Msk 0x100UL
/* VIDEOSS_SUBSS_GFX2D_BLITENG_STORE.BURSTBUFFERMANAGEMENT */
#define VIDEOSS_SUBSS_GFX2D_BLITENG_STORE_BURSTBUFFERMANAGEMENT_SETBURSTLENGTH_Pos 8UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_STORE_BURSTBUFFERMANAGEMENT_SETBURSTLENGTH_Msk 0x1F00UL
/* VIDEOSS_SUBSS_GFX2D_BLITENG_STORE.RINGBUFSTARTADDR */
#define VIDEOSS_SUBSS_GFX2D_BLITENG_STORE_RINGBUFSTARTADDR_RINGBUFSTARTADDR_Pos 0UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_STORE_RINGBUFSTARTADDR_RINGBUFSTARTADDR_Msk 0xFFFFFFFFUL
/* VIDEOSS_SUBSS_GFX2D_BLITENG_STORE.RINGBUFWRAPADDR */
#define VIDEOSS_SUBSS_GFX2D_BLITENG_STORE_RINGBUFWRAPADDR_RINGBUFWRAPADDR_Pos 0UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_STORE_RINGBUFWRAPADDR_RINGBUFWRAPADDR_Msk 0xFFFFFFFFUL
/* VIDEOSS_SUBSS_GFX2D_BLITENG_STORE.BASEADDRESS */
#define VIDEOSS_SUBSS_GFX2D_BLITENG_STORE_BASEADDRESS_BASEADDRESS_Pos 0UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_STORE_BASEADDRESS_BASEADDRESS_Msk 0xFFFFFFFFUL
/* VIDEOSS_SUBSS_GFX2D_BLITENG_STORE.DESTINATIONBUFFERATTRIBUTES */
#define VIDEOSS_SUBSS_GFX2D_BLITENG_STORE_DESTINATIONBUFFERATTRIBUTES_STRIDE_Pos 0UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_STORE_DESTINATIONBUFFERATTRIBUTES_STRIDE_Msk 0x1FFFFUL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_STORE_DESTINATIONBUFFERATTRIBUTES_BITSPERPIXEL_Pos 24UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_STORE_DESTINATIONBUFFERATTRIBUTES_BITSPERPIXEL_Msk 0x7F000000UL
/* VIDEOSS_SUBSS_GFX2D_BLITENG_STORE.DESTINATIONBUFFERDIMENSION */
#define VIDEOSS_SUBSS_GFX2D_BLITENG_STORE_DESTINATIONBUFFERDIMENSION_LINEWIDTH_Pos 0UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_STORE_DESTINATIONBUFFERDIMENSION_LINEWIDTH_Msk 0x3FFFUL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_STORE_DESTINATIONBUFFERDIMENSION_LINECOUNT_Pos 16UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_STORE_DESTINATIONBUFFERDIMENSION_LINECOUNT_Msk 0x3FFF0000UL
/* VIDEOSS_SUBSS_GFX2D_BLITENG_STORE.FRAMEOFFSET */
#define VIDEOSS_SUBSS_GFX2D_BLITENG_STORE_FRAMEOFFSET_FRAMEXOFFSET_Pos 0UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_STORE_FRAMEOFFSET_FRAMEXOFFSET_Msk 0x7FFFUL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_STORE_FRAMEOFFSET_FRAMEYOFFSET_Pos 16UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_STORE_FRAMEOFFSET_FRAMEYOFFSET_Msk 0x7FFF0000UL
/* VIDEOSS_SUBSS_GFX2D_BLITENG_STORE.COLORCOMPONENTBITS */
#define VIDEOSS_SUBSS_GFX2D_BLITENG_STORE_COLORCOMPONENTBITS_COMPONENTBITSALPHA_Pos 0UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_STORE_COLORCOMPONENTBITS_COMPONENTBITSALPHA_Msk 0xFUL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_STORE_COLORCOMPONENTBITS_COMPONENTBITSBLUE_Pos 8UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_STORE_COLORCOMPONENTBITS_COMPONENTBITSBLUE_Msk 0xF00UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_STORE_COLORCOMPONENTBITS_COMPONENTBITSGREEN_Pos 16UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_STORE_COLORCOMPONENTBITS_COMPONENTBITSGREEN_Msk 0xF0000UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_STORE_COLORCOMPONENTBITS_COMPONENTBITSRED_Pos 24UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_STORE_COLORCOMPONENTBITS_COMPONENTBITSRED_Msk 0xF000000UL
/* VIDEOSS_SUBSS_GFX2D_BLITENG_STORE.COLORCOMPONENTSHIFT */
#define VIDEOSS_SUBSS_GFX2D_BLITENG_STORE_COLORCOMPONENTSHIFT_COMPONENTSHIFTALPHA_Pos 0UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_STORE_COLORCOMPONENTSHIFT_COMPONENTSHIFTALPHA_Msk 0x1FUL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_STORE_COLORCOMPONENTSHIFT_COMPONENTSHIFTBLUE_Pos 8UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_STORE_COLORCOMPONENTSHIFT_COMPONENTSHIFTBLUE_Msk 0x1F00UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_STORE_COLORCOMPONENTSHIFT_COMPONENTSHIFTGREEN_Pos 16UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_STORE_COLORCOMPONENTSHIFT_COMPONENTSHIFTGREEN_Msk 0x1F0000UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_STORE_COLORCOMPONENTSHIFT_COMPONENTSHIFTRED_Pos 24UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_STORE_COLORCOMPONENTSHIFT_COMPONENTSHIFTRED_Msk 0x1F000000UL
/* VIDEOSS_SUBSS_GFX2D_BLITENG_STORE.CONTROL */
#define VIDEOSS_SUBSS_GFX2D_BLITENG_STORE_CONTROL_COLORDITHERENABLE_Pos 0UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_STORE_CONTROL_COLORDITHERENABLE_Msk 0x1UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_STORE_CONTROL_ALPHADITHERENABLE_Pos 1UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_STORE_CONTROL_ALPHADITHERENABLE_Msk 0x2UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_STORE_CONTROL_DITHEROFFSET_Pos 4UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_STORE_CONTROL_DITHEROFFSET_Msk 0xF0UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_STORE_CONTROL_GAMMAAPPLYENABLE_Pos 12UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_STORE_CONTROL_GAMMAAPPLYENABLE_Msk 0x1000UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_STORE_CONTROL_YUVCONVERSIONMODE_Pos 16UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_STORE_CONTROL_YUVCONVERSIONMODE_Msk 0x30000UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_STORE_CONTROL_RASTERMODE_Pos 18UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_STORE_CONTROL_RASTERMODE_Msk 0xC0000UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_STORE_CONTROL_YUV422DOWNSAMPLINGMODE_Pos 20UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_STORE_CONTROL_YUV422DOWNSAMPLINGMODE_Msk 0x300000UL
/* VIDEOSS_SUBSS_GFX2D_BLITENG_STORE.ENCODECONTROL */
#define VIDEOSS_SUBSS_GFX2D_BLITENG_STORE_ENCODECONTROL_COMPRESSIONMODE_Pos 0UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_STORE_ENCODECONTROL_COMPRESSIONMODE_Msk 0x1UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_STORE_ENCODECONTROL_RLADCOMPBITSRED_Pos 16UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_STORE_ENCODECONTROL_RLADCOMPBITSRED_Msk 0xF0000UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_STORE_ENCODECONTROL_RLADCOMPBITSGREEN_Pos 20UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_STORE_ENCODECONTROL_RLADCOMPBITSGREEN_Msk 0xF00000UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_STORE_ENCODECONTROL_RLADCOMPBITSBLUE_Pos 24UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_STORE_ENCODECONTROL_RLADCOMPBITSBLUE_Msk 0xF000000UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_STORE_ENCODECONTROL_RLADCOMPBITSALPHA_Pos 28UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_STORE_ENCODECONTROL_RLADCOMPBITSALPHA_Msk 0xF0000000UL
/* VIDEOSS_SUBSS_GFX2D_BLITENG_STORE.DESTINATIONBUFFERLENGTH */
#define VIDEOSS_SUBSS_GFX2D_BLITENG_STORE_DESTINATIONBUFFERLENGTH_RLEWORDSMAX_Pos 0UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_STORE_DESTINATIONBUFFERLENGTH_RLEWORDSMAX_Msk 0x1FFFFFFFUL
/* VIDEOSS_SUBSS_GFX2D_BLITENG_STORE.START */
#define VIDEOSS_SUBSS_GFX2D_BLITENG_STORE_START_START_Pos 0UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_STORE_START_START_Msk 0x1UL
/* VIDEOSS_SUBSS_GFX2D_BLITENG_STORE.ENCODERSTATUS */
#define VIDEOSS_SUBSS_GFX2D_BLITENG_STORE_ENCODERSTATUS_RLEWORDS_Pos 0UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_STORE_ENCODERSTATUS_RLEWORDS_Msk 0x1FFFFFFFUL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_STORE_ENCODERSTATUS_BUFFERTOOSMALL_Pos 31UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_STORE_ENCODERSTATUS_BUFFERTOOSMALL_Msk 0x80000000UL
/* VIDEOSS_SUBSS_GFX2D_BLITENG_STORE.WRITEADDRESS */
#define VIDEOSS_SUBSS_GFX2D_BLITENG_STORE_WRITEADDRESS_WRITEADDRESS_Pos 0UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_STORE_WRITEADDRESS_WRITEADDRESS_Msk 0xFFFFFFFFUL
/* VIDEOSS_SUBSS_GFX2D_BLITENG_STORE.FRAMEPROPERTIES */
#define VIDEOSS_SUBSS_GFX2D_BLITENG_STORE_FRAMEPROPERTIES_FIELDID_Pos 0UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_STORE_FRAMEPROPERTIES_FIELDID_Msk 0x1UL
/* VIDEOSS_SUBSS_GFX2D_BLITENG_STORE.BURSTBUFFERPROPERTIES */
#define VIDEOSS_SUBSS_GFX2D_BLITENG_STORE_BURSTBUFFERPROPERTIES_MAXBURSTLENGTH_Pos 8UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_STORE_BURSTBUFFERPROPERTIES_MAXBURSTLENGTH_Msk 0x1F00UL
/* VIDEOSS_SUBSS_GFX2D_BLITENG_STORE.LASTCONTROLWORD */
#define VIDEOSS_SUBSS_GFX2D_BLITENG_STORE_LASTCONTROLWORD_L_VAL_Pos 0UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_STORE_LASTCONTROLWORD_L_VAL_Msk 0xFFFFFFFFUL
/* VIDEOSS_SUBSS_GFX2D_BLITENG_STORE.PERFCOUNTER */
#define VIDEOSS_SUBSS_GFX2D_BLITENG_STORE_PERFCOUNTER_PERFRESULT_Pos 0UL
#define VIDEOSS_SUBSS_GFX2D_BLITENG_STORE_PERFCOUNTER_PERFRESULT_Msk 0xFFFFFFFFUL


/* VIDEOSS_SUBSS_GFX2D_DRAWENG.STATICCONTROL */
#define VIDEOSS_SUBSS_GFX2D_DRAWENG_STATICCONTROL_SWRESET_Pos 4UL
#define VIDEOSS_SUBSS_GFX2D_DRAWENG_STATICCONTROL_SWRESET_Msk 0x10UL
#define VIDEOSS_SUBSS_GFX2D_DRAWENG_STATICCONTROL_CLOCKDISABLE_Pos 5UL
#define VIDEOSS_SUBSS_GFX2D_DRAWENG_STATICCONTROL_CLOCKDISABLE_Msk 0x20UL
/* VIDEOSS_SUBSS_GFX2D_DRAWENG.STATICBURSTBUFFERMANAGEMENT */
#define VIDEOSS_SUBSS_GFX2D_DRAWENG_STATICBURSTBUFFERMANAGEMENT_SETFETCHBURSTLENGTH_Pos 0UL
#define VIDEOSS_SUBSS_GFX2D_DRAWENG_STATICBURSTBUFFERMANAGEMENT_SETFETCHBURSTLENGTH_Msk 0x1FUL
#define VIDEOSS_SUBSS_GFX2D_DRAWENG_STATICBURSTBUFFERMANAGEMENT_SETSTOREBURSTLENGTH_Pos 16UL
#define VIDEOSS_SUBSS_GFX2D_DRAWENG_STATICBURSTBUFFERMANAGEMENT_SETSTOREBURSTLENGTH_Msk 0x1F0000UL
/* VIDEOSS_SUBSS_GFX2D_DRAWENG.STATICCMDBUFFERADDRESS */
#define VIDEOSS_SUBSS_GFX2D_DRAWENG_STATICCMDBUFFERADDRESS_CMDBUFFERADDRESS_Pos 0UL
#define VIDEOSS_SUBSS_GFX2D_DRAWENG_STATICCMDBUFFERADDRESS_CMDBUFFERADDRESS_Msk 0xFFFFFFFFUL
/* VIDEOSS_SUBSS_GFX2D_DRAWENG.STATICCMDBUFFERSIZE */
#define VIDEOSS_SUBSS_GFX2D_DRAWENG_STATICCMDBUFFERSIZE_CMDBUFFERSIZE_Pos 0UL
#define VIDEOSS_SUBSS_GFX2D_DRAWENG_STATICCMDBUFFERSIZE_CMDBUFFERSIZE_Msk 0x3FFFFFFFUL
/* VIDEOSS_SUBSS_GFX2D_DRAWENG.CMDBUFFERWRITEPTR */
#define VIDEOSS_SUBSS_GFX2D_DRAWENG_CMDBUFFERWRITEPTR_CMDBUFFERWRITEPTR_Pos 0UL
#define VIDEOSS_SUBSS_GFX2D_DRAWENG_CMDBUFFERWRITEPTR_CMDBUFFERWRITEPTR_Msk 0x3FFFFFFFUL
/* VIDEOSS_SUBSS_GFX2D_DRAWENG.TRANSFORMATIONMATRIXA11 */
#define VIDEOSS_SUBSS_GFX2D_DRAWENG_TRANSFORMATIONMATRIXA11_A11_Pos 0UL
#define VIDEOSS_SUBSS_GFX2D_DRAWENG_TRANSFORMATIONMATRIXA11_A11_Msk 0xFFFFFFFFUL
/* VIDEOSS_SUBSS_GFX2D_DRAWENG.TRANSFORMATIONMATRIXA21 */
#define VIDEOSS_SUBSS_GFX2D_DRAWENG_TRANSFORMATIONMATRIXA21_A21_Pos 0UL
#define VIDEOSS_SUBSS_GFX2D_DRAWENG_TRANSFORMATIONMATRIXA21_A21_Msk 0xFFFFFFFFUL
/* VIDEOSS_SUBSS_GFX2D_DRAWENG.TRANSFORMATIONMATRIXA12 */
#define VIDEOSS_SUBSS_GFX2D_DRAWENG_TRANSFORMATIONMATRIXA12_A12_Pos 0UL
#define VIDEOSS_SUBSS_GFX2D_DRAWENG_TRANSFORMATIONMATRIXA12_A12_Msk 0xFFFFFFFFUL
/* VIDEOSS_SUBSS_GFX2D_DRAWENG.TRANSFORMATIONMATRIXA22 */
#define VIDEOSS_SUBSS_GFX2D_DRAWENG_TRANSFORMATIONMATRIXA22_A22_Pos 0UL
#define VIDEOSS_SUBSS_GFX2D_DRAWENG_TRANSFORMATIONMATRIXA22_A22_Msk 0xFFFFFFFFUL
/* VIDEOSS_SUBSS_GFX2D_DRAWENG.TRANSLATIONVECTORX */
#define VIDEOSS_SUBSS_GFX2D_DRAWENG_TRANSLATIONVECTORX_TRANSLATIONX_Pos 0UL
#define VIDEOSS_SUBSS_GFX2D_DRAWENG_TRANSLATIONVECTORX_TRANSLATIONX_Msk 0x3FFFFFUL
/* VIDEOSS_SUBSS_GFX2D_DRAWENG.TRANSLATIONVECTORY */
#define VIDEOSS_SUBSS_GFX2D_DRAWENG_TRANSLATIONVECTORY_TRANSLATIONY_Pos 0UL
#define VIDEOSS_SUBSS_GFX2D_DRAWENG_TRANSLATIONVECTORY_TRANSLATIONY_Msk 0x3FFFFFUL
/* VIDEOSS_SUBSS_GFX2D_DRAWENG.PROCESSINGCONTROL */
#define VIDEOSS_SUBSS_GFX2D_DRAWENG_PROCESSINGCONTROL_SUBPIXELGRID_Pos 0UL
#define VIDEOSS_SUBSS_GFX2D_DRAWENG_PROCESSINGCONTROL_SUBPIXELGRID_Msk 0xFUL
#define VIDEOSS_SUBSS_GFX2D_DRAWENG_PROCESSINGCONTROL_FILLRULE_Pos 4UL
#define VIDEOSS_SUBSS_GFX2D_DRAWENG_PROCESSINGCONTROL_FILLRULE_Msk 0x10UL
#define VIDEOSS_SUBSS_GFX2D_DRAWENG_PROCESSINGCONTROL_TARGETBITSPERPIXEL_Pos 16UL
#define VIDEOSS_SUBSS_GFX2D_DRAWENG_PROCESSINGCONTROL_TARGETBITSPERPIXEL_Msk 0x3F0000UL
/* VIDEOSS_SUBSS_GFX2D_DRAWENG.STORECONTROL */
#define VIDEOSS_SUBSS_GFX2D_DRAWENG_STORECONTROL_STOREBITSPERPIXEL_Pos 0UL
#define VIDEOSS_SUBSS_GFX2D_DRAWENG_STORECONTROL_STOREBITSPERPIXEL_Msk 0xFUL
#define VIDEOSS_SUBSS_GFX2D_DRAWENG_STORECONTROL_STORESTRIDE_Pos 8UL
#define VIDEOSS_SUBSS_GFX2D_DRAWENG_STORECONTROL_STORESTRIDE_Msk 0x1FFFF00UL
/* VIDEOSS_SUBSS_GFX2D_DRAWENG.DESTINATIONBUFFERDIMENSIONS */
#define VIDEOSS_SUBSS_GFX2D_DRAWENG_DESTINATIONBUFFERDIMENSIONS_DSTBUFFERWIDTH_Pos 0UL
#define VIDEOSS_SUBSS_GFX2D_DRAWENG_DESTINATIONBUFFERDIMENSIONS_DSTBUFFERWIDTH_Msk 0x3FFFUL
#define VIDEOSS_SUBSS_GFX2D_DRAWENG_DESTINATIONBUFFERDIMENSIONS_DSTBUFFERHEIGHT_Pos 16UL
#define VIDEOSS_SUBSS_GFX2D_DRAWENG_DESTINATIONBUFFERDIMENSIONS_DSTBUFFERHEIGHT_Msk 0x3FFF0000UL
/* VIDEOSS_SUBSS_GFX2D_DRAWENG.DESTINATIONBUFFER */
#define VIDEOSS_SUBSS_GFX2D_DRAWENG_DESTINATIONBUFFER_DSTBASEADDRESS_Pos 0UL
#define VIDEOSS_SUBSS_GFX2D_DRAWENG_DESTINATIONBUFFER_DSTBASEADDRESS_Msk 0xFFFFFFFFUL
/* VIDEOSS_SUBSS_GFX2D_DRAWENG.START */
#define VIDEOSS_SUBSS_GFX2D_DRAWENG_START_START_Pos 0UL
#define VIDEOSS_SUBSS_GFX2D_DRAWENG_START_START_Msk 0x1UL
/* VIDEOSS_SUBSS_GFX2D_DRAWENG.READACK */
#define VIDEOSS_SUBSS_GFX2D_DRAWENG_READACK_READACK_Pos 0UL
#define VIDEOSS_SUBSS_GFX2D_DRAWENG_READACK_READACK_Msk 0x1UL
#define VIDEOSS_SUBSS_GFX2D_DRAWENG_READACK_READACK_ERROR_Pos 1UL
#define VIDEOSS_SUBSS_GFX2D_DRAWENG_READACK_READACK_ERROR_Msk 0x2UL
/* VIDEOSS_SUBSS_GFX2D_DRAWENG.CMDBUFFERREADPTR */
#define VIDEOSS_SUBSS_GFX2D_DRAWENG_CMDBUFFERREADPTR_CMDBUFFERREADPTR_Pos 0UL
#define VIDEOSS_SUBSS_GFX2D_DRAWENG_CMDBUFFERREADPTR_CMDBUFFERREADPTR_Msk 0x3FFFFFFFUL
/* VIDEOSS_SUBSS_GFX2D_DRAWENG.ACTIVEDIMENSIONS */
#define VIDEOSS_SUBSS_GFX2D_DRAWENG_ACTIVEDIMENSIONS_ACTIVEWIDTH_Pos 0UL
#define VIDEOSS_SUBSS_GFX2D_DRAWENG_ACTIVEDIMENSIONS_ACTIVEWIDTH_Msk 0x3FFFUL
#define VIDEOSS_SUBSS_GFX2D_DRAWENG_ACTIVEDIMENSIONS_ACTIVEHEIGHT_Pos 16UL
#define VIDEOSS_SUBSS_GFX2D_DRAWENG_ACTIVEDIMENSIONS_ACTIVEHEIGHT_Msk 0x3FFF0000UL
/* VIDEOSS_SUBSS_GFX2D_DRAWENG.LAYEROFFSET */
#define VIDEOSS_SUBSS_GFX2D_DRAWENG_LAYEROFFSET_XOFFSET_Pos 0UL
#define VIDEOSS_SUBSS_GFX2D_DRAWENG_LAYEROFFSET_XOFFSET_Msk 0xFFFFUL
#define VIDEOSS_SUBSS_GFX2D_DRAWENG_LAYEROFFSET_YOFFSET_Pos 16UL
#define VIDEOSS_SUBSS_GFX2D_DRAWENG_LAYEROFFSET_YOFFSET_Msk 0xFFFF0000UL
/* VIDEOSS_SUBSS_GFX2D_DRAWENG.ERROR */
#define VIDEOSS_SUBSS_GFX2D_DRAWENG_ERROR_FETCHERROR_Pos 0UL
#define VIDEOSS_SUBSS_GFX2D_DRAWENG_ERROR_FETCHERROR_Msk 0x1UL
#define VIDEOSS_SUBSS_GFX2D_DRAWENG_ERROR_STOREERROR_Pos 1UL
#define VIDEOSS_SUBSS_GFX2D_DRAWENG_ERROR_STOREERROR_Msk 0x2UL
#define VIDEOSS_SUBSS_GFX2D_DRAWENG_ERROR_INSTRERROR_Pos 2UL
#define VIDEOSS_SUBSS_GFX2D_DRAWENG_ERROR_INSTRERROR_Msk 0x4UL
#define VIDEOSS_SUBSS_GFX2D_DRAWENG_ERROR_OVERFLOWERROR_Pos 3UL
#define VIDEOSS_SUBSS_GFX2D_DRAWENG_ERROR_OVERFLOWERROR_Msk 0x8UL
/* VIDEOSS_SUBSS_GFX2D_DRAWENG.BURSTBUFFERPROPERTIES */
#define VIDEOSS_SUBSS_GFX2D_DRAWENG_BURSTBUFFERPROPERTIES_MAXFETCHBURSTLENGTH_Pos 0UL
#define VIDEOSS_SUBSS_GFX2D_DRAWENG_BURSTBUFFERPROPERTIES_MAXFETCHBURSTLENGTH_Msk 0x1FUL
#define VIDEOSS_SUBSS_GFX2D_DRAWENG_BURSTBUFFERPROPERTIES_MAXSTOREBURSTLENGTH_Pos 16UL
#define VIDEOSS_SUBSS_GFX2D_DRAWENG_BURSTBUFFERPROPERTIES_MAXSTOREBURSTLENGTH_Msk 0x1F0000UL
/* VIDEOSS_SUBSS_GFX2D_DRAWENG.STATUS */
#define VIDEOSS_SUBSS_GFX2D_DRAWENG_STATUS_STATUSBUSY_Pos 0UL
#define VIDEOSS_SUBSS_GFX2D_DRAWENG_STATUS_STATUSBUSY_Msk 0x1UL
#define VIDEOSS_SUBSS_GFX2D_DRAWENG_STATUS_WAITACK_Pos 1UL
#define VIDEOSS_SUBSS_GFX2D_DRAWENG_STATUS_WAITACK_Msk 0x2UL
#define VIDEOSS_SUBSS_GFX2D_DRAWENG_STATUS_STATUSDIRTY_Pos 2UL
#define VIDEOSS_SUBSS_GFX2D_DRAWENG_STATUS_STATUSDIRTY_Msk 0x4UL
#define VIDEOSS_SUBSS_GFX2D_DRAWENG_STATUS_STARTPENDING_Pos 3UL
#define VIDEOSS_SUBSS_GFX2D_DRAWENG_STATUS_STARTPENDING_Msk 0x8UL
/* VIDEOSS_SUBSS_GFX2D_DRAWENG.PERFCOUNTERFRONT */
#define VIDEOSS_SUBSS_GFX2D_DRAWENG_PERFCOUNTERFRONT_PERFRESULTFRONT_Pos 0UL
#define VIDEOSS_SUBSS_GFX2D_DRAWENG_PERFCOUNTERFRONT_PERFRESULTFRONT_Msk 0xFFFFFFFFUL
/* VIDEOSS_SUBSS_GFX2D_DRAWENG.PERFCOUNTERBACK */
#define VIDEOSS_SUBSS_GFX2D_DRAWENG_PERFCOUNTERBACK_PERFRESULTBACK_Pos 0UL
#define VIDEOSS_SUBSS_GFX2D_DRAWENG_PERFCOUNTERBACK_PERFRESULTBACK_Msk 0xFFFFFFFFUL


/* VIDEOSS_VIDEOIO_SUBIO_VIDEOIOCFG.INTR_VIDEOIO0 */
#define VIDEOSS_VIDEOIO_SUBIO_VIDEOIOCFG_INTR_VIDEOIO0_INTR_VIDEOIO0_Pos 0UL
#define VIDEOSS_VIDEOIO_SUBIO_VIDEOIOCFG_INTR_VIDEOIO0_INTR_VIDEOIO0_Msk 0xFFFFFFUL
/* VIDEOSS_VIDEOIO_SUBIO_VIDEOIOCFG.INTR_VIDEOIO1 */
#define VIDEOSS_VIDEOIO_SUBIO_VIDEOIOCFG_INTR_VIDEOIO1_INTR_VIDEOIO1_Pos 0UL
#define VIDEOSS_VIDEOIO_SUBIO_VIDEOIOCFG_INTR_VIDEOIO1_INTR_VIDEOIO1_Msk 0xFFFFFFFUL
/* VIDEOSS_VIDEOIO_SUBIO_VIDEOIOCFG.INTR_VIDEOIO0_SET */
#define VIDEOSS_VIDEOIO_SUBIO_VIDEOIOCFG_INTR_VIDEOIO0_SET_INTR_VIDEOIO0_SET_Pos 0UL
#define VIDEOSS_VIDEOIO_SUBIO_VIDEOIOCFG_INTR_VIDEOIO0_SET_INTR_VIDEOIO0_SET_Msk 0xFFFFFFUL
/* VIDEOSS_VIDEOIO_SUBIO_VIDEOIOCFG.INTR_VIDEOIO1_SET */
#define VIDEOSS_VIDEOIO_SUBIO_VIDEOIOCFG_INTR_VIDEOIO1_SET_INTR_VIDEOIO1_SET_Pos 0UL
#define VIDEOSS_VIDEOIO_SUBIO_VIDEOIOCFG_INTR_VIDEOIO1_SET_INTR_VIDEOIO1_SET_Msk 0xFFFFFFFUL
/* VIDEOSS_VIDEOIO_SUBIO_VIDEOIOCFG.INTR_VIDEOIO0_MASK */
#define VIDEOSS_VIDEOIO_SUBIO_VIDEOIOCFG_INTR_VIDEOIO0_MASK_INTR_VIDEOIO0_MASK_Pos 0UL
#define VIDEOSS_VIDEOIO_SUBIO_VIDEOIOCFG_INTR_VIDEOIO0_MASK_INTR_VIDEOIO0_MASK_Msk 0xFFFFFFUL
/* VIDEOSS_VIDEOIO_SUBIO_VIDEOIOCFG.INTR_VIDEOIO1_MASK */
#define VIDEOSS_VIDEOIO_SUBIO_VIDEOIOCFG_INTR_VIDEOIO1_MASK_INTR_VIDEOIO1_MASK_Pos 0UL
#define VIDEOSS_VIDEOIO_SUBIO_VIDEOIOCFG_INTR_VIDEOIO1_MASK_INTR_VIDEOIO1_MASK_Msk 0xFFFFFFFUL
/* VIDEOSS_VIDEOIO_SUBIO_VIDEOIOCFG.INTR_VIDEOIO0_MASKED */
#define VIDEOSS_VIDEOIO_SUBIO_VIDEOIOCFG_INTR_VIDEOIO0_MASKED_INTR_VIDEOIO0_MASKED_Pos 0UL
#define VIDEOSS_VIDEOIO_SUBIO_VIDEOIOCFG_INTR_VIDEOIO0_MASKED_INTR_VIDEOIO0_MASKED_Msk 0xFFFFFFUL
/* VIDEOSS_VIDEOIO_SUBIO_VIDEOIOCFG.INTR_VIDEOIO1_MASKED */
#define VIDEOSS_VIDEOIO_SUBIO_VIDEOIOCFG_INTR_VIDEOIO1_MASKED_INTR_VIDEOIO1_MASKED_Pos 0UL
#define VIDEOSS_VIDEOIO_SUBIO_VIDEOIOCFG_INTR_VIDEOIO1_MASKED_INTR_VIDEOIO1_MASKED_Msk 0xFFFFFFFUL
/* VIDEOSS_VIDEOIO_SUBIO_VIDEOIOCFG.INTR_VIDEOIO0_SAFETY */
#define VIDEOSS_VIDEOIO_SUBIO_VIDEOIOCFG_INTR_VIDEOIO0_SAFETY_INTR_VIDEOIO0_SAFETY_Pos 0UL
#define VIDEOSS_VIDEOIO_SUBIO_VIDEOIOCFG_INTR_VIDEOIO0_SAFETY_INTR_VIDEOIO0_SAFETY_Msk 0xFFFFFFUL
/* VIDEOSS_VIDEOIO_SUBIO_VIDEOIOCFG.INTR_VIDEOIO1_SAFETY */
#define VIDEOSS_VIDEOIO_SUBIO_VIDEOIOCFG_INTR_VIDEOIO1_SAFETY_INTR_VIDEOIO1_SAFETY_Pos 0UL
#define VIDEOSS_VIDEOIO_SUBIO_VIDEOIOCFG_INTR_VIDEOIO1_SAFETY_INTR_VIDEOIO1_SAFETY_Msk 0xFFFFFFFUL
/* VIDEOSS_VIDEOIO_SUBIO_VIDEOIOCFG.INTR_VIDEOIO0_SAFETY_SET */
#define VIDEOSS_VIDEOIO_SUBIO_VIDEOIOCFG_INTR_VIDEOIO0_SAFETY_SET_INTR_VIDEOIO0_SAFETY_SET_Pos 0UL
#define VIDEOSS_VIDEOIO_SUBIO_VIDEOIOCFG_INTR_VIDEOIO0_SAFETY_SET_INTR_VIDEOIO0_SAFETY_SET_Msk 0xFFFFFFUL
/* VIDEOSS_VIDEOIO_SUBIO_VIDEOIOCFG.INTR_VIDEOIO1_SAFETY_SET */
#define VIDEOSS_VIDEOIO_SUBIO_VIDEOIOCFG_INTR_VIDEOIO1_SAFETY_SET_INTR_VIDEOIO1_SAFETY_SET_Pos 0UL
#define VIDEOSS_VIDEOIO_SUBIO_VIDEOIOCFG_INTR_VIDEOIO1_SAFETY_SET_INTR_VIDEOIO1_SAFETY_SET_Msk 0xFFFFFFFUL
/* VIDEOSS_VIDEOIO_SUBIO_VIDEOIOCFG.INTR_VIDEOIO0_SAFETY_MASK */
#define VIDEOSS_VIDEOIO_SUBIO_VIDEOIOCFG_INTR_VIDEOIO0_SAFETY_MASK_INTR_VIDEOIO0_SAFETY_MASK_Pos 0UL
#define VIDEOSS_VIDEOIO_SUBIO_VIDEOIOCFG_INTR_VIDEOIO0_SAFETY_MASK_INTR_VIDEOIO0_SAFETY_MASK_Msk 0xFFFFFFUL
/* VIDEOSS_VIDEOIO_SUBIO_VIDEOIOCFG.INTR_VIDEOIO1_SAFETY_MASK */
#define VIDEOSS_VIDEOIO_SUBIO_VIDEOIOCFG_INTR_VIDEOIO1_SAFETY_MASK_INTR_VIDEOIO1_SAFETY_MASK_Pos 0UL
#define VIDEOSS_VIDEOIO_SUBIO_VIDEOIOCFG_INTR_VIDEOIO1_SAFETY_MASK_INTR_VIDEOIO1_SAFETY_MASK_Msk 0xFFFFFFFUL
/* VIDEOSS_VIDEOIO_SUBIO_VIDEOIOCFG.INTR_VIDEOIO0_SAFETY_MASKED */
#define VIDEOSS_VIDEOIO_SUBIO_VIDEOIOCFG_INTR_VIDEOIO0_SAFETY_MASKED_INTR_VIDEOIO0_SAFETY_MASKED_Pos 0UL
#define VIDEOSS_VIDEOIO_SUBIO_VIDEOIOCFG_INTR_VIDEOIO0_SAFETY_MASKED_INTR_VIDEOIO0_SAFETY_MASKED_Msk 0xFFFFFFUL
/* VIDEOSS_VIDEOIO_SUBIO_VIDEOIOCFG.INTR_VIDEOIO1_SAFETY_MASKED */
#define VIDEOSS_VIDEOIO_SUBIO_VIDEOIOCFG_INTR_VIDEOIO1_SAFETY_MASKED_INTR_VIDEOIO1_SAFETY_MASKED_Pos 0UL
#define VIDEOSS_VIDEOIO_SUBIO_VIDEOIOCFG_INTR_VIDEOIO1_SAFETY_MASKED_INTR_VIDEOIO1_SAFETY_MASKED_Msk 0xFFFFFFFUL


/* VIDEOSS_VIDEOIO_SUBIO_FRAMEDUMP.CONTROL */
#define VIDEOSS_VIDEOIO_SUBIO_FRAMEDUMP_CONTROL_INPUTSELECT_Pos 0UL
#define VIDEOSS_VIDEOIO_SUBIO_FRAMEDUMP_CONTROL_INPUTSELECT_Msk 0x1UL
#define VIDEOSS_VIDEOIO_SUBIO_FRAMEDUMP_CONTROL_SETFIELD_Pos 24UL
#define VIDEOSS_VIDEOIO_SUBIO_FRAMEDUMP_CONTROL_SETFIELD_Msk 0x1000000UL
#define VIDEOSS_VIDEOIO_SUBIO_FRAMEDUMP_CONTROL_TOGGLEFIELD_Pos 25UL
#define VIDEOSS_VIDEOIO_SUBIO_FRAMEDUMP_CONTROL_TOGGLEFIELD_Msk 0x2000000UL
/* VIDEOSS_VIDEOIO_SUBIO_FRAMEDUMP.FRAMESIZE */
#define VIDEOSS_VIDEOIO_SUBIO_FRAMEDUMP_FRAMESIZE_FRAMEWIDTH_Pos 0UL
#define VIDEOSS_VIDEOIO_SUBIO_FRAMEDUMP_FRAMESIZE_FRAMEWIDTH_Msk 0x3FFFUL
#define VIDEOSS_VIDEOIO_SUBIO_FRAMEDUMP_FRAMESIZE_FRAMEHEIGHT_Pos 16UL
#define VIDEOSS_VIDEOIO_SUBIO_FRAMEDUMP_FRAMESIZE_FRAMEHEIGHT_Msk 0x3FFF0000UL
/* VIDEOSS_VIDEOIO_SUBIO_FRAMEDUMP.INPUTSETUP */
#define VIDEOSS_VIDEOIO_SUBIO_FRAMEDUMP_INPUTSETUP_INPUTCAPTUREXOFFSET_Pos 0UL
#define VIDEOSS_VIDEOIO_SUBIO_FRAMEDUMP_INPUTSETUP_INPUTCAPTUREXOFFSET_Msk 0x3FFFUL
#define VIDEOSS_VIDEOIO_SUBIO_FRAMEDUMP_INPUTSETUP_INPUTCAPTUREYOFFSET_Pos 16UL
#define VIDEOSS_VIDEOIO_SUBIO_FRAMEDUMP_INPUTSETUP_INPUTCAPTUREYOFFSET_Msk 0x3FFF0000UL
/* VIDEOSS_VIDEOIO_SUBIO_FRAMEDUMP.ENABLE */
#define VIDEOSS_VIDEOIO_SUBIO_FRAMEDUMP_ENABLE_DUMPEN_Pos 0UL
#define VIDEOSS_VIDEOIO_SUBIO_FRAMEDUMP_ENABLE_DUMPEN_Msk 0x1UL
/* VIDEOSS_VIDEOIO_SUBIO_FRAMEDUMP.TRIGGER */
#define VIDEOSS_VIDEOIO_SUBIO_FRAMEDUMP_TRIGGER_DUMPREQ_Pos 0UL
#define VIDEOSS_VIDEOIO_SUBIO_FRAMEDUMP_TRIGGER_DUMPREQ_Msk 0x1UL
/* VIDEOSS_VIDEOIO_SUBIO_FRAMEDUMP.STATUS */
#define VIDEOSS_VIDEOIO_SUBIO_FRAMEDUMP_STATUS_DUMPIDLE_Pos 0UL
#define VIDEOSS_VIDEOIO_SUBIO_FRAMEDUMP_STATUS_DUMPIDLE_Msk 0x1UL


/* VIDEOSS_VIDEOIO_SUBIO_CAPENG0_FRAMECAP.CAPTUREMODE */
#define VIDEOSS_VIDEOIO_SUBIO_CAPENG0_FRAMECAP_CAPTUREMODE_CAPTUREMODE_Pos 0UL
#define VIDEOSS_VIDEOIO_SUBIO_CAPENG0_FRAMECAP_CAPTUREMODE_CAPTUREMODE_Msk 0x3UL
/* VIDEOSS_VIDEOIO_SUBIO_CAPENG0_FRAMECAP.CTR */
#define VIDEOSS_VIDEOIO_SUBIO_CAPENG0_FRAMECAP_CTR_CEN_Pos 0UL
#define VIDEOSS_VIDEOIO_SUBIO_CAPENG0_FRAMECAP_CTR_CEN_Msk 0x1UL
/* VIDEOSS_VIDEOIO_SUBIO_CAPENG0_FRAMECAP.SPR */
#define VIDEOSS_VIDEOIO_SUBIO_CAPENG0_FRAMECAP_SPR_POLEN_Pos 0UL
#define VIDEOSS_VIDEOIO_SUBIO_CAPENG0_FRAMECAP_SPR_POLEN_Msk 0x1UL
#define VIDEOSS_VIDEOIO_SUBIO_CAPENG0_FRAMECAP_SPR_POLHS_Pos 1UL
#define VIDEOSS_VIDEOIO_SUBIO_CAPENG0_FRAMECAP_SPR_POLHS_Msk 0x2UL
#define VIDEOSS_VIDEOIO_SUBIO_CAPENG0_FRAMECAP_SPR_POLVS_Pos 2UL
#define VIDEOSS_VIDEOIO_SUBIO_CAPENG0_FRAMECAP_SPR_POLVS_Msk 0x4UL
/* VIDEOSS_VIDEOIO_SUBIO_CAPENG0_FRAMECAP.MDR */
#define VIDEOSS_VIDEOIO_SUBIO_CAPENG0_FRAMECAP_MDR_MDR_EN_Pos 0UL
#define VIDEOSS_VIDEOIO_SUBIO_CAPENG0_FRAMECAP_MDR_MDR_EN_Msk 0x1UL
#define VIDEOSS_VIDEOIO_SUBIO_CAPENG0_FRAMECAP_MDR_FRAMET_OFFSET_Pos 1UL
#define VIDEOSS_VIDEOIO_SUBIO_CAPENG0_FRAMECAP_MDR_FRAMET_OFFSET_Msk 0xFFFFFFFEUL
/* VIDEOSS_VIDEOIO_SUBIO_CAPENG0_FRAMECAP.FDR */
#define VIDEOSS_VIDEOIO_SUBIO_CAPENG0_FRAMECAP_FDR_WIDTH_Pos 0UL
#define VIDEOSS_VIDEOIO_SUBIO_CAPENG0_FRAMECAP_FDR_WIDTH_Msk 0x3FFFUL
#define VIDEOSS_VIDEOIO_SUBIO_CAPENG0_FRAMECAP_FDR_HEIGHT_Pos 16UL
#define VIDEOSS_VIDEOIO_SUBIO_CAPENG0_FRAMECAP_FDR_HEIGHT_Msk 0x3FFF0000UL
/* VIDEOSS_VIDEOIO_SUBIO_CAPENG0_FRAMECAP.FDR1 */
#define VIDEOSS_VIDEOIO_SUBIO_CAPENG0_FRAMECAP_FDR1_HEIGHT1_Pos 16UL
#define VIDEOSS_VIDEOIO_SUBIO_CAPENG0_FRAMECAP_FDR1_HEIGHT1_Msk 0x3FFF0000UL
/* VIDEOSS_VIDEOIO_SUBIO_CAPENG0_FRAMECAP.KDR */
#define VIDEOSS_VIDEOIO_SUBIO_CAPENG0_FRAMECAP_KDR_KICKDEL_Pos 0UL
#define VIDEOSS_VIDEOIO_SUBIO_CAPENG0_FRAMECAP_KDR_KICKDEL_Msk 0xFFFFFFFUL
/* VIDEOSS_VIDEOIO_SUBIO_CAPENG0_FRAMECAP.SCR */
#define VIDEOSS_VIDEOIO_SUBIO_CAPENG0_FRAMECAP_SCR_FUS_Pos 0UL
#define VIDEOSS_VIDEOIO_SUBIO_CAPENG0_FRAMECAP_SCR_FUS_Msk 0xFUL
/* VIDEOSS_VIDEOIO_SUBIO_CAPENG0_FRAMECAP.CSVR */
#define VIDEOSS_VIDEOIO_SUBIO_CAPENG0_FRAMECAP_CSVR_CSVENABLE_Pos 0UL
#define VIDEOSS_VIDEOIO_SUBIO_CAPENG0_FRAMECAP_CSVR_CSVENABLE_Msk 0x1UL
#define VIDEOSS_VIDEOIO_SUBIO_CAPENG0_FRAMECAP_CSVR_CSVTIMEOUT_Pos 1UL
#define VIDEOSS_VIDEOIO_SUBIO_CAPENG0_FRAMECAP_CSVR_CSVTIMEOUT_Msk 0x7FEUL
/* VIDEOSS_VIDEOIO_SUBIO_CAPENG0_FRAMECAP.STSCLR */
#define VIDEOSS_VIDEOIO_SUBIO_CAPENG0_FRAMECAP_STSCLR_STATUSCLEAR_Pos 0UL
#define VIDEOSS_VIDEOIO_SUBIO_CAPENG0_FRAMECAP_STSCLR_STATUSCLEAR_Msk 0x1UL
/* VIDEOSS_VIDEOIO_SUBIO_CAPENG0_FRAMECAP.STS */
#define VIDEOSS_VIDEOIO_SUBIO_CAPENG0_FRAMECAP_STS_FIFOFULL_Pos 0UL
#define VIDEOSS_VIDEOIO_SUBIO_CAPENG0_FRAMECAP_STS_FIFOFULL_Msk 0x1UL
#define VIDEOSS_VIDEOIO_SUBIO_CAPENG0_FRAMECAP_STS_VSLATE_Pos 1UL
#define VIDEOSS_VIDEOIO_SUBIO_CAPENG0_FRAMECAP_STS_VSLATE_Msk 0x2UL
#define VIDEOSS_VIDEOIO_SUBIO_CAPENG0_FRAMECAP_STS_VSEARLY_Pos 2UL
#define VIDEOSS_VIDEOIO_SUBIO_CAPENG0_FRAMECAP_STS_VSEARLY_Msk 0x4UL
#define VIDEOSS_VIDEOIO_SUBIO_CAPENG0_FRAMECAP_STS_CSV_LOST_Pos 3UL
#define VIDEOSS_VIDEOIO_SUBIO_CAPENG0_FRAMECAP_STS_CSV_LOST_Msk 0x8UL
#define VIDEOSS_VIDEOIO_SUBIO_CAPENG0_FRAMECAP_STS_MDR_SIZECHANGE_Pos 4UL
#define VIDEOSS_VIDEOIO_SUBIO_CAPENG0_FRAMECAP_STS_MDR_SIZECHANGE_Msk 0x10UL
#define VIDEOSS_VIDEOIO_SUBIO_CAPENG0_FRAMECAP_STS_MDRCMRDONE_Pos 5UL
#define VIDEOSS_VIDEOIO_SUBIO_CAPENG0_FRAMECAP_STS_MDRCMRDONE_Msk 0x20UL
#define VIDEOSS_VIDEOIO_SUBIO_CAPENG0_FRAMECAP_STS_SYNCSTAT_Pos 8UL
#define VIDEOSS_VIDEOIO_SUBIO_CAPENG0_FRAMECAP_STS_SYNCSTAT_Msk 0x100UL
/* VIDEOSS_VIDEOIO_SUBIO_CAPENG0_FRAMECAP.MDSTS0 */
#define VIDEOSS_VIDEOIO_SUBIO_CAPENG0_FRAMECAP_MDSTS0_ACTIVEWIDTH_Pos 0UL
#define VIDEOSS_VIDEOIO_SUBIO_CAPENG0_FRAMECAP_MDSTS0_ACTIVEWIDTH_Msk 0x7FFFUL
#define VIDEOSS_VIDEOIO_SUBIO_CAPENG0_FRAMECAP_MDSTS0_ACTIVEHEIGHT_Pos 16UL
#define VIDEOSS_VIDEOIO_SUBIO_CAPENG0_FRAMECAP_MDSTS0_ACTIVEHEIGHT_Msk 0x7FFF0000UL
/* VIDEOSS_VIDEOIO_SUBIO_CAPENG0_FRAMECAP.MDSTS1 */
#define VIDEOSS_VIDEOIO_SUBIO_CAPENG0_FRAMECAP_MDSTS1_POSITIONX_Pos 0UL
#define VIDEOSS_VIDEOIO_SUBIO_CAPENG0_FRAMECAP_MDSTS1_POSITIONX_Msk 0x7FFFUL
#define VIDEOSS_VIDEOIO_SUBIO_CAPENG0_FRAMECAP_MDSTS1_POSITIONY_Pos 16UL
#define VIDEOSS_VIDEOIO_SUBIO_CAPENG0_FRAMECAP_MDSTS1_POSITIONY_Msk 0x7FFF0000UL
/* VIDEOSS_VIDEOIO_SUBIO_CAPENG0_FRAMECAP.FRCNT */
#define VIDEOSS_VIDEOIO_SUBIO_CAPENG0_FRAMECAP_FRCNT_FRCOUNT_Pos 0UL
#define VIDEOSS_VIDEOIO_SUBIO_CAPENG0_FRAMECAP_FRCNT_FRCOUNT_Msk 0xFFFFFFFFUL
/* VIDEOSS_VIDEOIO_SUBIO_CAPENG0_FRAMECAP.FRLINECOUNT */
#define VIDEOSS_VIDEOIO_SUBIO_CAPENG0_FRAMECAP_FRLINECOUNT_FRLINECOUNT_Pos 0UL
#define VIDEOSS_VIDEOIO_SUBIO_CAPENG0_FRAMECAP_FRLINECOUNT_FRLINECOUNT_Msk 0x3FFFUL
#define VIDEOSS_VIDEOIO_SUBIO_CAPENG0_FRAMECAP_FRLINECOUNT_TOTWIDTHT_MSBS_Pos 16UL
#define VIDEOSS_VIDEOIO_SUBIO_CAPENG0_FRAMECAP_FRLINECOUNT_TOTWIDTHT_MSBS_Msk 0x1F0000UL
#define VIDEOSS_VIDEOIO_SUBIO_CAPENG0_FRAMECAP_FRLINECOUNT_ACTWIDTHT_MSBS_Pos 24UL
#define VIDEOSS_VIDEOIO_SUBIO_CAPENG0_FRAMECAP_FRLINECOUNT_ACTWIDTHT_MSBS_Msk 0x3F000000UL
/* VIDEOSS_VIDEOIO_SUBIO_CAPENG0_FRAMECAP.CMSTS1 */
#define VIDEOSS_VIDEOIO_SUBIO_CAPENG0_FRAMECAP_CMSTS1_TOTAL_TIME_Pos 0UL
#define VIDEOSS_VIDEOIO_SUBIO_CAPENG0_FRAMECAP_CMSTS1_TOTAL_TIME_Msk 0x3FFFFFFFUL
/* VIDEOSS_VIDEOIO_SUBIO_CAPENG0_FRAMECAP.CMSTS2 */
#define VIDEOSS_VIDEOIO_SUBIO_CAPENG0_FRAMECAP_CMSTS2_TOTWIDTHT_Pos 0UL
#define VIDEOSS_VIDEOIO_SUBIO_CAPENG0_FRAMECAP_CMSTS2_TOTWIDTHT_Msk 0x7FFFUL
#define VIDEOSS_VIDEOIO_SUBIO_CAPENG0_FRAMECAP_CMSTS2_ACTWIDTHT_Pos 15UL
#define VIDEOSS_VIDEOIO_SUBIO_CAPENG0_FRAMECAP_CMSTS2_ACTWIDTHT_Msk 0x1FFF8000UL
/* VIDEOSS_VIDEOIO_SUBIO_CAPENG0_FRAMECAP.ITUSTS */
#define VIDEOSS_VIDEOIO_SUBIO_CAPENG0_FRAMECAP_ITUSTS_ITUPROTECTIONONEBITERROR_Pos 0UL
#define VIDEOSS_VIDEOIO_SUBIO_CAPENG0_FRAMECAP_ITUSTS_ITUPROTECTIONONEBITERROR_Msk 0x1UL
#define VIDEOSS_VIDEOIO_SUBIO_CAPENG0_FRAMECAP_ITUSTS_ITUPROTECTIONTWOBITERROR_Pos 1UL
#define VIDEOSS_VIDEOIO_SUBIO_CAPENG0_FRAMECAP_ITUSTS_ITUPROTECTIONTWOBITERROR_Msk 0x2UL


/* VIDEOSS_VIDEOIO_SUBIO_COMPENG_COMPENGCFG.PALETTE */
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_COMPENGCFG_PALETTE_PALETTEENTRY_Pos 0UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_COMPENGCFG_PALETTE_PALETTEENTRY_Msk 0xFFFFFFUL
/* VIDEOSS_VIDEOIO_SUBIO_COMPENG_COMPENGCFG.EXTDST0_SAFETYMASK */
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_COMPENGCFG_EXTDST0_SAFETYMASK_EXTDST0_SAFETYMASK_Pos 0UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_COMPENGCFG_EXTDST0_SAFETYMASK_EXTDST0_SAFETYMASK_Msk 0x1FFFFFUL
/* VIDEOSS_VIDEOIO_SUBIO_COMPENG_COMPENGCFG.EXTDST4_SAFETYMASK */
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_COMPENGCFG_EXTDST4_SAFETYMASK_EXTDST4_SAFETYMASK_Pos 0UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_COMPENGCFG_EXTDST4_SAFETYMASK_EXTDST4_SAFETYMASK_Msk 0x1FFFFFUL
/* VIDEOSS_VIDEOIO_SUBIO_COMPENG_COMPENGCFG.EXTDST1_SAFETYMASK */
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_COMPENGCFG_EXTDST1_SAFETYMASK_EXTDST1_SAFETYMASK_Pos 0UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_COMPENGCFG_EXTDST1_SAFETYMASK_EXTDST1_SAFETYMASK_Msk 0x1FFFFFUL
/* VIDEOSS_VIDEOIO_SUBIO_COMPENG_COMPENGCFG.EXTDST5_SAFETYMASK */
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_COMPENGCFG_EXTDST5_SAFETYMASK_EXTDST5_SAFETYMASK_Pos 0UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_COMPENGCFG_EXTDST5_SAFETYMASK_EXTDST5_SAFETYMASK_Msk 0x1FFFFFUL
/* VIDEOSS_VIDEOIO_SUBIO_COMPENG_COMPENGCFG.STORE4_SAFETYMASK */
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_COMPENGCFG_STORE4_SAFETYMASK_STORE4_SAFETYMASK_Pos 0UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_COMPENGCFG_STORE4_SAFETYMASK_STORE4_SAFETYMASK_Msk 0x1FFFFFUL
/* VIDEOSS_VIDEOIO_SUBIO_COMPENG_COMPENGCFG.CONSTFRAME0_STATUS */
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_COMPENGCFG_CONSTFRAME0_STATUS_CONSTFRAME0_SEL_Pos 16UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_COMPENGCFG_CONSTFRAME0_STATUS_CONSTFRAME0_SEL_Msk 0x70000UL
/* VIDEOSS_VIDEOIO_SUBIO_COMPENG_COMPENGCFG.EXTDST0_STATIC */
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_COMPENGCFG_EXTDST0_STATIC_EXTDST0_SHDEN_Pos 0UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_COMPENGCFG_EXTDST0_STATIC_EXTDST0_SHDEN_Msk 0x1UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_COMPENGCFG_EXTDST0_STATIC_EXTDST0_POWERDOWN_Pos 4UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_COMPENGCFG_EXTDST0_STATIC_EXTDST0_POWERDOWN_Msk 0x10UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_COMPENGCFG_EXTDST0_STATIC_EXTDST0_SYNC_MODE_Pos 8UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_COMPENGCFG_EXTDST0_STATIC_EXTDST0_SYNC_MODE_Msk 0x100UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_COMPENGCFG_EXTDST0_STATIC_EXTDST0_SW_RESET_Pos 11UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_COMPENGCFG_EXTDST0_STATIC_EXTDST0_SW_RESET_Msk 0x800UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_COMPENGCFG_EXTDST0_STATIC_EXTDST0_DIV_Pos 16UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_COMPENGCFG_EXTDST0_STATIC_EXTDST0_DIV_Msk 0xFF0000UL
/* VIDEOSS_VIDEOIO_SUBIO_COMPENG_COMPENGCFG.EXTDST0_DYNAMIC */
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_COMPENGCFG_EXTDST0_DYNAMIC_EXTDST0_SRC_SEL_Pos 0UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_COMPENGCFG_EXTDST0_DYNAMIC_EXTDST0_SRC_SEL_Msk 0x1FUL
/* VIDEOSS_VIDEOIO_SUBIO_COMPENG_COMPENGCFG.EXTDST0_REQUEST */
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_COMPENGCFG_EXTDST0_REQUEST_EXTDST0_SEL_SHDLDREQ_Pos 0UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_COMPENGCFG_EXTDST0_REQUEST_EXTDST0_SEL_SHDLDREQ_Msk 0x1UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_COMPENGCFG_EXTDST0_REQUEST_EXTDST0_SHDLDREQ_Pos 1UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_COMPENGCFG_EXTDST0_REQUEST_EXTDST0_SHDLDREQ_Msk 0x3FFEUL
/* VIDEOSS_VIDEOIO_SUBIO_COMPENG_COMPENGCFG.EXTDST0_TRIGGER */
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_COMPENGCFG_EXTDST0_TRIGGER_EXTDST0_SYNC_TRIGGER_Pos 0UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_COMPENGCFG_EXTDST0_TRIGGER_EXTDST0_SYNC_TRIGGER_Msk 0x1UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_COMPENGCFG_EXTDST0_TRIGGER_EXTDST0_TRIGGER_SEQUENCE_COMPLETE_Pos 4UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_COMPENGCFG_EXTDST0_TRIGGER_EXTDST0_TRIGGER_SEQUENCE_COMPLETE_Msk 0x10UL
/* VIDEOSS_VIDEOIO_SUBIO_COMPENG_COMPENGCFG.EXTDST0_STATUS */
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_COMPENGCFG_EXTDST0_STATUS_EXTDST0_PIPELINE_STATUS_Pos 0UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_COMPENGCFG_EXTDST0_STATUS_EXTDST0_PIPELINE_STATUS_Msk 0x3UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_COMPENGCFG_EXTDST0_STATUS_EXTDST0_SYNC_BUSY_Pos 8UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_COMPENGCFG_EXTDST0_STATUS_EXTDST0_SYNC_BUSY_Msk 0x100UL
/* VIDEOSS_VIDEOIO_SUBIO_COMPENG_COMPENGCFG.CONSTFRAME4_STATUS */
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_COMPENGCFG_CONSTFRAME4_STATUS_CONSTFRAME4_SEL_Pos 16UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_COMPENGCFG_CONSTFRAME4_STATUS_CONSTFRAME4_SEL_Msk 0x70000UL
/* VIDEOSS_VIDEOIO_SUBIO_COMPENG_COMPENGCFG.EXTDST4_STATIC */
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_COMPENGCFG_EXTDST4_STATIC_EXTDST4_SHDEN_Pos 0UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_COMPENGCFG_EXTDST4_STATIC_EXTDST4_SHDEN_Msk 0x1UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_COMPENGCFG_EXTDST4_STATIC_EXTDST4_POWERDOWN_Pos 4UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_COMPENGCFG_EXTDST4_STATIC_EXTDST4_POWERDOWN_Msk 0x10UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_COMPENGCFG_EXTDST4_STATIC_EXTDST4_SYNC_MODE_Pos 8UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_COMPENGCFG_EXTDST4_STATIC_EXTDST4_SYNC_MODE_Msk 0x100UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_COMPENGCFG_EXTDST4_STATIC_EXTDST4_SW_RESET_Pos 11UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_COMPENGCFG_EXTDST4_STATIC_EXTDST4_SW_RESET_Msk 0x800UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_COMPENGCFG_EXTDST4_STATIC_EXTDST4_DIV_Pos 16UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_COMPENGCFG_EXTDST4_STATIC_EXTDST4_DIV_Msk 0xFF0000UL
/* VIDEOSS_VIDEOIO_SUBIO_COMPENG_COMPENGCFG.EXTDST4_DYNAMIC */
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_COMPENGCFG_EXTDST4_DYNAMIC_EXTDST4_SRC_SEL_Pos 0UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_COMPENGCFG_EXTDST4_DYNAMIC_EXTDST4_SRC_SEL_Msk 0x1FUL
/* VIDEOSS_VIDEOIO_SUBIO_COMPENG_COMPENGCFG.EXTDST4_REQUEST */
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_COMPENGCFG_EXTDST4_REQUEST_EXTDST4_SEL_SHDLDREQ_Pos 0UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_COMPENGCFG_EXTDST4_REQUEST_EXTDST4_SEL_SHDLDREQ_Msk 0x1UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_COMPENGCFG_EXTDST4_REQUEST_EXTDST4_SHDLDREQ_Pos 1UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_COMPENGCFG_EXTDST4_REQUEST_EXTDST4_SHDLDREQ_Msk 0x3FFEUL
/* VIDEOSS_VIDEOIO_SUBIO_COMPENG_COMPENGCFG.EXTDST4_TRIGGER */
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_COMPENGCFG_EXTDST4_TRIGGER_EXTDST4_SYNC_TRIGGER_Pos 0UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_COMPENGCFG_EXTDST4_TRIGGER_EXTDST4_SYNC_TRIGGER_Msk 0x1UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_COMPENGCFG_EXTDST4_TRIGGER_EXTDST4_TRIGGER_SEQUENCE_COMPLETE_Pos 4UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_COMPENGCFG_EXTDST4_TRIGGER_EXTDST4_TRIGGER_SEQUENCE_COMPLETE_Msk 0x10UL
/* VIDEOSS_VIDEOIO_SUBIO_COMPENG_COMPENGCFG.EXTDST4_STATUS */
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_COMPENGCFG_EXTDST4_STATUS_EXTDST4_PIPELINE_STATUS_Pos 0UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_COMPENGCFG_EXTDST4_STATUS_EXTDST4_PIPELINE_STATUS_Msk 0x3UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_COMPENGCFG_EXTDST4_STATUS_EXTDST4_SYNC_BUSY_Pos 8UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_COMPENGCFG_EXTDST4_STATUS_EXTDST4_SYNC_BUSY_Msk 0x100UL
/* VIDEOSS_VIDEOIO_SUBIO_COMPENG_COMPENGCFG.CONSTFRAME1_STATUS */
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_COMPENGCFG_CONSTFRAME1_STATUS_CONSTFRAME1_SEL_Pos 16UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_COMPENGCFG_CONSTFRAME1_STATUS_CONSTFRAME1_SEL_Msk 0x70000UL
/* VIDEOSS_VIDEOIO_SUBIO_COMPENG_COMPENGCFG.EXTDST1_STATIC */
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_COMPENGCFG_EXTDST1_STATIC_EXTDST1_SHDEN_Pos 0UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_COMPENGCFG_EXTDST1_STATIC_EXTDST1_SHDEN_Msk 0x1UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_COMPENGCFG_EXTDST1_STATIC_EXTDST1_POWERDOWN_Pos 4UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_COMPENGCFG_EXTDST1_STATIC_EXTDST1_POWERDOWN_Msk 0x10UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_COMPENGCFG_EXTDST1_STATIC_EXTDST1_SYNC_MODE_Pos 8UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_COMPENGCFG_EXTDST1_STATIC_EXTDST1_SYNC_MODE_Msk 0x100UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_COMPENGCFG_EXTDST1_STATIC_EXTDST1_SW_RESET_Pos 11UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_COMPENGCFG_EXTDST1_STATIC_EXTDST1_SW_RESET_Msk 0x800UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_COMPENGCFG_EXTDST1_STATIC_EXTDST1_DIV_Pos 16UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_COMPENGCFG_EXTDST1_STATIC_EXTDST1_DIV_Msk 0xFF0000UL
/* VIDEOSS_VIDEOIO_SUBIO_COMPENG_COMPENGCFG.EXTDST1_DYNAMIC */
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_COMPENGCFG_EXTDST1_DYNAMIC_EXTDST1_SRC_SEL_Pos 0UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_COMPENGCFG_EXTDST1_DYNAMIC_EXTDST1_SRC_SEL_Msk 0x1FUL
/* VIDEOSS_VIDEOIO_SUBIO_COMPENG_COMPENGCFG.EXTDST1_REQUEST */
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_COMPENGCFG_EXTDST1_REQUEST_EXTDST1_SEL_SHDLDREQ_Pos 0UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_COMPENGCFG_EXTDST1_REQUEST_EXTDST1_SEL_SHDLDREQ_Msk 0x1UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_COMPENGCFG_EXTDST1_REQUEST_EXTDST1_SHDLDREQ_Pos 1UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_COMPENGCFG_EXTDST1_REQUEST_EXTDST1_SHDLDREQ_Msk 0x3FFEUL
/* VIDEOSS_VIDEOIO_SUBIO_COMPENG_COMPENGCFG.EXTDST1_TRIGGER */
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_COMPENGCFG_EXTDST1_TRIGGER_EXTDST1_SYNC_TRIGGER_Pos 0UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_COMPENGCFG_EXTDST1_TRIGGER_EXTDST1_SYNC_TRIGGER_Msk 0x1UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_COMPENGCFG_EXTDST1_TRIGGER_EXTDST1_TRIGGER_SEQUENCE_COMPLETE_Pos 4UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_COMPENGCFG_EXTDST1_TRIGGER_EXTDST1_TRIGGER_SEQUENCE_COMPLETE_Msk 0x10UL
/* VIDEOSS_VIDEOIO_SUBIO_COMPENG_COMPENGCFG.EXTDST1_STATUS */
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_COMPENGCFG_EXTDST1_STATUS_EXTDST1_PIPELINE_STATUS_Pos 0UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_COMPENGCFG_EXTDST1_STATUS_EXTDST1_PIPELINE_STATUS_Msk 0x3UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_COMPENGCFG_EXTDST1_STATUS_EXTDST1_SYNC_BUSY_Pos 8UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_COMPENGCFG_EXTDST1_STATUS_EXTDST1_SYNC_BUSY_Msk 0x100UL
/* VIDEOSS_VIDEOIO_SUBIO_COMPENG_COMPENGCFG.CONSTFRAME5_STATUS */
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_COMPENGCFG_CONSTFRAME5_STATUS_CONSTFRAME5_SEL_Pos 16UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_COMPENGCFG_CONSTFRAME5_STATUS_CONSTFRAME5_SEL_Msk 0x70000UL
/* VIDEOSS_VIDEOIO_SUBIO_COMPENG_COMPENGCFG.EXTDST5_STATIC */
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_COMPENGCFG_EXTDST5_STATIC_EXTDST5_SHDEN_Pos 0UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_COMPENGCFG_EXTDST5_STATIC_EXTDST5_SHDEN_Msk 0x1UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_COMPENGCFG_EXTDST5_STATIC_EXTDST5_POWERDOWN_Pos 4UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_COMPENGCFG_EXTDST5_STATIC_EXTDST5_POWERDOWN_Msk 0x10UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_COMPENGCFG_EXTDST5_STATIC_EXTDST5_SYNC_MODE_Pos 8UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_COMPENGCFG_EXTDST5_STATIC_EXTDST5_SYNC_MODE_Msk 0x100UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_COMPENGCFG_EXTDST5_STATIC_EXTDST5_SW_RESET_Pos 11UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_COMPENGCFG_EXTDST5_STATIC_EXTDST5_SW_RESET_Msk 0x800UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_COMPENGCFG_EXTDST5_STATIC_EXTDST5_DIV_Pos 16UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_COMPENGCFG_EXTDST5_STATIC_EXTDST5_DIV_Msk 0xFF0000UL
/* VIDEOSS_VIDEOIO_SUBIO_COMPENG_COMPENGCFG.EXTDST5_DYNAMIC */
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_COMPENGCFG_EXTDST5_DYNAMIC_EXTDST5_SRC_SEL_Pos 0UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_COMPENGCFG_EXTDST5_DYNAMIC_EXTDST5_SRC_SEL_Msk 0x1FUL
/* VIDEOSS_VIDEOIO_SUBIO_COMPENG_COMPENGCFG.EXTDST5_REQUEST */
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_COMPENGCFG_EXTDST5_REQUEST_EXTDST5_SEL_SHDLDREQ_Pos 0UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_COMPENGCFG_EXTDST5_REQUEST_EXTDST5_SEL_SHDLDREQ_Msk 0x1UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_COMPENGCFG_EXTDST5_REQUEST_EXTDST5_SHDLDREQ_Pos 1UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_COMPENGCFG_EXTDST5_REQUEST_EXTDST5_SHDLDREQ_Msk 0x3FFEUL
/* VIDEOSS_VIDEOIO_SUBIO_COMPENG_COMPENGCFG.EXTDST5_TRIGGER */
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_COMPENGCFG_EXTDST5_TRIGGER_EXTDST5_SYNC_TRIGGER_Pos 0UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_COMPENGCFG_EXTDST5_TRIGGER_EXTDST5_SYNC_TRIGGER_Msk 0x1UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_COMPENGCFG_EXTDST5_TRIGGER_EXTDST5_TRIGGER_SEQUENCE_COMPLETE_Pos 4UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_COMPENGCFG_EXTDST5_TRIGGER_EXTDST5_TRIGGER_SEQUENCE_COMPLETE_Msk 0x10UL
/* VIDEOSS_VIDEOIO_SUBIO_COMPENG_COMPENGCFG.EXTDST5_STATUS */
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_COMPENGCFG_EXTDST5_STATUS_EXTDST5_PIPELINE_STATUS_Pos 0UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_COMPENGCFG_EXTDST5_STATUS_EXTDST5_PIPELINE_STATUS_Msk 0x3UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_COMPENGCFG_EXTDST5_STATUS_EXTDST5_SYNC_BUSY_Pos 8UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_COMPENGCFG_EXTDST5_STATUS_EXTDST5_SYNC_BUSY_Msk 0x100UL
/* VIDEOSS_VIDEOIO_SUBIO_COMPENG_COMPENGCFG.EXTSRC4_STATUS */
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_COMPENGCFG_EXTSRC4_STATUS_EXTSRC4_SEL_Pos 16UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_COMPENGCFG_EXTSRC4_STATUS_EXTSRC4_SEL_Msk 0x70000UL
/* VIDEOSS_VIDEOIO_SUBIO_COMPENG_COMPENGCFG.STORE4_STATIC */
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_COMPENGCFG_STORE4_STATIC_STORE4_SHDEN_Pos 0UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_COMPENGCFG_STORE4_STATIC_STORE4_SHDEN_Msk 0x1UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_COMPENGCFG_STORE4_STATIC_STORE4_POWERDOWN_Pos 4UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_COMPENGCFG_STORE4_STATIC_STORE4_POWERDOWN_Msk 0x10UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_COMPENGCFG_STORE4_STATIC_STORE4_SYNC_MODE_Pos 8UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_COMPENGCFG_STORE4_STATIC_STORE4_SYNC_MODE_Msk 0x100UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_COMPENGCFG_STORE4_STATIC_STORE4_SW_RESET_Pos 11UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_COMPENGCFG_STORE4_STATIC_STORE4_SW_RESET_Msk 0x800UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_COMPENGCFG_STORE4_STATIC_STORE4_DIV_Pos 16UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_COMPENGCFG_STORE4_STATIC_STORE4_DIV_Msk 0xFF0000UL
/* VIDEOSS_VIDEOIO_SUBIO_COMPENG_COMPENGCFG.STORE4_DYNAMIC */
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_COMPENGCFG_STORE4_DYNAMIC_STORE4_SRC_SEL_Pos 0UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_COMPENGCFG_STORE4_DYNAMIC_STORE4_SRC_SEL_Msk 0x1FUL
/* VIDEOSS_VIDEOIO_SUBIO_COMPENG_COMPENGCFG.STORE4_REQUEST */
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_COMPENGCFG_STORE4_REQUEST_STORE4_SEL_SHDLDREQ_Pos 0UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_COMPENGCFG_STORE4_REQUEST_STORE4_SEL_SHDLDREQ_Msk 0x1UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_COMPENGCFG_STORE4_REQUEST_STORE4_SHDLDREQ_Pos 1UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_COMPENGCFG_STORE4_REQUEST_STORE4_SHDLDREQ_Msk 0x3FFEUL
/* VIDEOSS_VIDEOIO_SUBIO_COMPENG_COMPENGCFG.STORE4_TRIGGER */
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_COMPENGCFG_STORE4_TRIGGER_STORE4_SYNC_TRIGGER_Pos 0UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_COMPENGCFG_STORE4_TRIGGER_STORE4_SYNC_TRIGGER_Msk 0x1UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_COMPENGCFG_STORE4_TRIGGER_STORE4_TRIGGER_SEQUENCE_COMPLETE_Pos 4UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_COMPENGCFG_STORE4_TRIGGER_STORE4_TRIGGER_SEQUENCE_COMPLETE_Msk 0x10UL
/* VIDEOSS_VIDEOIO_SUBIO_COMPENG_COMPENGCFG.STORE4_STATUS */
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_COMPENGCFG_STORE4_STATUS_STORE4_PIPELINE_STATUS_Pos 0UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_COMPENGCFG_STORE4_STATUS_STORE4_PIPELINE_STATUS_Msk 0x3UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_COMPENGCFG_STORE4_STATUS_STORE4_SYNC_BUSY_Pos 8UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_COMPENGCFG_STORE4_STATUS_STORE4_SYNC_BUSY_Msk 0x100UL
/* VIDEOSS_VIDEOIO_SUBIO_COMPENG_COMPENGCFG.FETCHLAYER0_STATUS */
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_COMPENGCFG_FETCHLAYER0_STATUS_FETCHLAYER0_SEL_Pos 16UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_COMPENGCFG_FETCHLAYER0_STATUS_FETCHLAYER0_SEL_Msk 0x70000UL
/* VIDEOSS_VIDEOIO_SUBIO_COMPENG_COMPENGCFG.FETCHDECODE4_DYNAMIC */
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_COMPENGCFG_FETCHDECODE4_DYNAMIC_FETCHDECODE4_SRC_SEL_Pos 0UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_COMPENGCFG_FETCHDECODE4_DYNAMIC_FETCHDECODE4_SRC_SEL_Msk 0x1FUL
/* VIDEOSS_VIDEOIO_SUBIO_COMPENG_COMPENGCFG.FETCHDECODE4_STATUS */
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_COMPENGCFG_FETCHDECODE4_STATUS_FETCHDECODE4_SEL_Pos 16UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_COMPENGCFG_FETCHDECODE4_STATUS_FETCHDECODE4_SEL_Msk 0x70000UL
/* VIDEOSS_VIDEOIO_SUBIO_COMPENG_COMPENGCFG.FETCHECO4_STATUS */
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_COMPENGCFG_FETCHECO4_STATUS_FETCHECO4_SEL_Pos 16UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_COMPENGCFG_FETCHECO4_STATUS_FETCHECO4_SEL_Msk 0x70000UL
/* VIDEOSS_VIDEOIO_SUBIO_COMPENG_COMPENGCFG.FETCHWARP1_DYNAMIC */
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_COMPENGCFG_FETCHWARP1_DYNAMIC_FETCHWARP1_SRC_SEL_Pos 0UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_COMPENGCFG_FETCHWARP1_DYNAMIC_FETCHWARP1_SRC_SEL_Msk 0x1FUL
/* VIDEOSS_VIDEOIO_SUBIO_COMPENG_COMPENGCFG.FETCHWARP1_STATUS */
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_COMPENGCFG_FETCHWARP1_STATUS_FETCHWARP1_SEL_Pos 16UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_COMPENGCFG_FETCHWARP1_STATUS_FETCHWARP1_SEL_Msk 0x70000UL
/* VIDEOSS_VIDEOIO_SUBIO_COMPENG_COMPENGCFG.FETCHECO1_STATUS */
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_COMPENGCFG_FETCHECO1_STATUS_FETCHECO1_SEL_Pos 16UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_COMPENGCFG_FETCHECO1_STATUS_FETCHECO1_SEL_Msk 0x70000UL
/* VIDEOSS_VIDEOIO_SUBIO_COMPENG_COMPENGCFG.FETCHLAYER1_STATUS */
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_COMPENGCFG_FETCHLAYER1_STATUS_FETCHLAYER1_SEL_Pos 16UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_COMPENGCFG_FETCHLAYER1_STATUS_FETCHLAYER1_SEL_Msk 0x70000UL
/* VIDEOSS_VIDEOIO_SUBIO_COMPENG_COMPENGCFG.FETCHDECODE0_DYNAMIC */
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_COMPENGCFG_FETCHDECODE0_DYNAMIC_FETCHDECODE0_SRC_SEL_Pos 0UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_COMPENGCFG_FETCHDECODE0_DYNAMIC_FETCHDECODE0_SRC_SEL_Msk 0x1FUL
/* VIDEOSS_VIDEOIO_SUBIO_COMPENG_COMPENGCFG.FETCHDECODE0_STATUS */
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_COMPENGCFG_FETCHDECODE0_STATUS_FETCHDECODE0_SEL_Pos 16UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_COMPENGCFG_FETCHDECODE0_STATUS_FETCHDECODE0_SEL_Msk 0x70000UL
/* VIDEOSS_VIDEOIO_SUBIO_COMPENG_COMPENGCFG.GAMMACOR4_DYNAMIC */
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_COMPENGCFG_GAMMACOR4_DYNAMIC_GAMMACOR4_SRC_SEL_Pos 0UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_COMPENGCFG_GAMMACOR4_DYNAMIC_GAMMACOR4_SRC_SEL_Msk 0x1FUL
/* VIDEOSS_VIDEOIO_SUBIO_COMPENG_COMPENGCFG.GAMMACOR4_STATUS */
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_COMPENGCFG_GAMMACOR4_STATUS_GAMMACOR4_SEL_Pos 16UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_COMPENGCFG_GAMMACOR4_STATUS_GAMMACOR4_SEL_Msk 0x70000UL
/* VIDEOSS_VIDEOIO_SUBIO_COMPENG_COMPENGCFG.MATRIX4_DYNAMIC */
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_COMPENGCFG_MATRIX4_DYNAMIC_MATRIX4_SRC_SEL_Pos 0UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_COMPENGCFG_MATRIX4_DYNAMIC_MATRIX4_SRC_SEL_Msk 0x1FUL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_COMPENGCFG_MATRIX4_DYNAMIC_MATRIX4_CLKEN_Pos 24UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_COMPENGCFG_MATRIX4_DYNAMIC_MATRIX4_CLKEN_Msk 0x3000000UL
/* VIDEOSS_VIDEOIO_SUBIO_COMPENG_COMPENGCFG.MATRIX4_STATUS */
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_COMPENGCFG_MATRIX4_STATUS_MATRIX4_SEL_Pos 16UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_COMPENGCFG_MATRIX4_STATUS_MATRIX4_SEL_Msk 0x70000UL
/* VIDEOSS_VIDEOIO_SUBIO_COMPENG_COMPENGCFG.GPSCALER4_DYNAMIC */
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_COMPENGCFG_GPSCALER4_DYNAMIC_GPSCALER4_SRC_SEL_Pos 0UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_COMPENGCFG_GPSCALER4_DYNAMIC_GPSCALER4_SRC_SEL_Msk 0x1FUL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_COMPENGCFG_GPSCALER4_DYNAMIC_GPSCALER4_CLKEN_Pos 24UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_COMPENGCFG_GPSCALER4_DYNAMIC_GPSCALER4_CLKEN_Msk 0x3000000UL
/* VIDEOSS_VIDEOIO_SUBIO_COMPENG_COMPENGCFG.GPSCALER4_STATUS */
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_COMPENGCFG_GPSCALER4_STATUS_GPSCALER4_SEL_Pos 16UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_COMPENGCFG_GPSCALER4_STATUS_GPSCALER4_SEL_Msk 0x70000UL
/* VIDEOSS_VIDEOIO_SUBIO_COMPENG_COMPENGCFG.HISTOGRAM4_DYNAMIC */
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_COMPENGCFG_HISTOGRAM4_DYNAMIC_HISTOGRAM4_SRC_SEL_Pos 0UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_COMPENGCFG_HISTOGRAM4_DYNAMIC_HISTOGRAM4_SRC_SEL_Msk 0x1FUL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_COMPENGCFG_HISTOGRAM4_DYNAMIC_HISTOGRAM4_CLKEN_Pos 24UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_COMPENGCFG_HISTOGRAM4_DYNAMIC_HISTOGRAM4_CLKEN_Msk 0x3000000UL
/* VIDEOSS_VIDEOIO_SUBIO_COMPENG_COMPENGCFG.HISTOGRAM4_STATUS */
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_COMPENGCFG_HISTOGRAM4_STATUS_HISTOGRAM4_SEL_Pos 16UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_COMPENGCFG_HISTOGRAM4_STATUS_HISTOGRAM4_SEL_Msk 0x70000UL
/* VIDEOSS_VIDEOIO_SUBIO_COMPENG_COMPENGCFG.LAYERBLEND1_DYNAMIC */
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_COMPENGCFG_LAYERBLEND1_DYNAMIC_LAYERBLEND1_PRIM_SEL_Pos 0UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_COMPENGCFG_LAYERBLEND1_DYNAMIC_LAYERBLEND1_PRIM_SEL_Msk 0x1FUL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_COMPENGCFG_LAYERBLEND1_DYNAMIC_LAYERBLEND1_SEC_SEL_Pos 8UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_COMPENGCFG_LAYERBLEND1_DYNAMIC_LAYERBLEND1_SEC_SEL_Msk 0x1F00UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_COMPENGCFG_LAYERBLEND1_DYNAMIC_LAYERBLEND1_CLKEN_Pos 24UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_COMPENGCFG_LAYERBLEND1_DYNAMIC_LAYERBLEND1_CLKEN_Msk 0x3000000UL
/* VIDEOSS_VIDEOIO_SUBIO_COMPENG_COMPENGCFG.LAYERBLEND1_STATUS */
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_COMPENGCFG_LAYERBLEND1_STATUS_LAYERBLEND1_SEL_Pos 16UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_COMPENGCFG_LAYERBLEND1_STATUS_LAYERBLEND1_SEL_Msk 0x70000UL
/* VIDEOSS_VIDEOIO_SUBIO_COMPENG_COMPENGCFG.LAYERBLEND2_DYNAMIC */
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_COMPENGCFG_LAYERBLEND2_DYNAMIC_LAYERBLEND2_PRIM_SEL_Pos 0UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_COMPENGCFG_LAYERBLEND2_DYNAMIC_LAYERBLEND2_PRIM_SEL_Msk 0x1FUL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_COMPENGCFG_LAYERBLEND2_DYNAMIC_LAYERBLEND2_SEC_SEL_Pos 8UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_COMPENGCFG_LAYERBLEND2_DYNAMIC_LAYERBLEND2_SEC_SEL_Msk 0x1F00UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_COMPENGCFG_LAYERBLEND2_DYNAMIC_LAYERBLEND2_CLKEN_Pos 24UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_COMPENGCFG_LAYERBLEND2_DYNAMIC_LAYERBLEND2_CLKEN_Msk 0x3000000UL
/* VIDEOSS_VIDEOIO_SUBIO_COMPENG_COMPENGCFG.LAYERBLEND2_STATUS */
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_COMPENGCFG_LAYERBLEND2_STATUS_LAYERBLEND2_SEL_Pos 16UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_COMPENGCFG_LAYERBLEND2_STATUS_LAYERBLEND2_SEL_Msk 0x70000UL
/* VIDEOSS_VIDEOIO_SUBIO_COMPENG_COMPENGCFG.LAYERBLEND3_DYNAMIC */
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_COMPENGCFG_LAYERBLEND3_DYNAMIC_LAYERBLEND3_PRIM_SEL_Pos 0UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_COMPENGCFG_LAYERBLEND3_DYNAMIC_LAYERBLEND3_PRIM_SEL_Msk 0x1FUL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_COMPENGCFG_LAYERBLEND3_DYNAMIC_LAYERBLEND3_SEC_SEL_Pos 8UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_COMPENGCFG_LAYERBLEND3_DYNAMIC_LAYERBLEND3_SEC_SEL_Msk 0x1F00UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_COMPENGCFG_LAYERBLEND3_DYNAMIC_LAYERBLEND3_CLKEN_Pos 24UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_COMPENGCFG_LAYERBLEND3_DYNAMIC_LAYERBLEND3_CLKEN_Msk 0x3000000UL
/* VIDEOSS_VIDEOIO_SUBIO_COMPENG_COMPENGCFG.LAYERBLEND3_STATUS */
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_COMPENGCFG_LAYERBLEND3_STATUS_LAYERBLEND3_SEL_Pos 16UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_COMPENGCFG_LAYERBLEND3_STATUS_LAYERBLEND3_SEL_Msk 0x70000UL
/* VIDEOSS_VIDEOIO_SUBIO_COMPENG_COMPENGCFG.LAYERBLEND4_DYNAMIC */
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_COMPENGCFG_LAYERBLEND4_DYNAMIC_LAYERBLEND4_PRIM_SEL_Pos 0UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_COMPENGCFG_LAYERBLEND4_DYNAMIC_LAYERBLEND4_PRIM_SEL_Msk 0x1FUL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_COMPENGCFG_LAYERBLEND4_DYNAMIC_LAYERBLEND4_SEC_SEL_Pos 8UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_COMPENGCFG_LAYERBLEND4_DYNAMIC_LAYERBLEND4_SEC_SEL_Msk 0x1F00UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_COMPENGCFG_LAYERBLEND4_DYNAMIC_LAYERBLEND4_CLKEN_Pos 24UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_COMPENGCFG_LAYERBLEND4_DYNAMIC_LAYERBLEND4_CLKEN_Msk 0x3000000UL
/* VIDEOSS_VIDEOIO_SUBIO_COMPENG_COMPENGCFG.LAYERBLEND4_STATUS */
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_COMPENGCFG_LAYERBLEND4_STATUS_LAYERBLEND4_SEL_Pos 16UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_COMPENGCFG_LAYERBLEND4_STATUS_LAYERBLEND4_SEL_Msk 0x70000UL
/* VIDEOSS_VIDEOIO_SUBIO_COMPENG_COMPENGCFG.LAYERBLEND5_DYNAMIC */
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_COMPENGCFG_LAYERBLEND5_DYNAMIC_LAYERBLEND5_PRIM_SEL_Pos 0UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_COMPENGCFG_LAYERBLEND5_DYNAMIC_LAYERBLEND5_PRIM_SEL_Msk 0x1FUL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_COMPENGCFG_LAYERBLEND5_DYNAMIC_LAYERBLEND5_SEC_SEL_Pos 8UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_COMPENGCFG_LAYERBLEND5_DYNAMIC_LAYERBLEND5_SEC_SEL_Msk 0x1F00UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_COMPENGCFG_LAYERBLEND5_DYNAMIC_LAYERBLEND5_CLKEN_Pos 24UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_COMPENGCFG_LAYERBLEND5_DYNAMIC_LAYERBLEND5_CLKEN_Msk 0x3000000UL
/* VIDEOSS_VIDEOIO_SUBIO_COMPENG_COMPENGCFG.LAYERBLEND5_STATUS */
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_COMPENGCFG_LAYERBLEND5_STATUS_LAYERBLEND5_SEL_Pos 16UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_COMPENGCFG_LAYERBLEND5_STATUS_LAYERBLEND5_SEL_Msk 0x70000UL
/* VIDEOSS_VIDEOIO_SUBIO_COMPENG_COMPENGCFG.EXTSRC8_STATUS */
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_COMPENGCFG_EXTSRC8_STATUS_EXTSRC8_SEL_Pos 16UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_COMPENGCFG_EXTSRC8_STATUS_EXTSRC8_SEL_Msk 0x70000UL


/* VIDEOSS_VIDEOIO_SUBIO_COMPENG_CONSTFRAME0.STATICCONTROL */
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_CONSTFRAME0_STATICCONTROL_SHDEN_Pos 0UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_CONSTFRAME0_STATICCONTROL_SHDEN_Msk 0x1UL
/* VIDEOSS_VIDEOIO_SUBIO_COMPENG_CONSTFRAME0.FRAMEDIMENSIONS */
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_CONSTFRAME0_FRAMEDIMENSIONS_FRAMEWIDTH_Pos 0UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_CONSTFRAME0_FRAMEDIMENSIONS_FRAMEWIDTH_Msk 0x3FFFUL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_CONSTFRAME0_FRAMEDIMENSIONS_FRAMEHEIGHT_Pos 16UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_CONSTFRAME0_FRAMEDIMENSIONS_FRAMEHEIGHT_Msk 0x3FFF0000UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_CONSTFRAME0_FRAMEDIMENSIONS_EMPTYFRAME_Pos 31UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_CONSTFRAME0_FRAMEDIMENSIONS_EMPTYFRAME_Msk 0x80000000UL
/* VIDEOSS_VIDEOIO_SUBIO_COMPENG_CONSTFRAME0.CONSTANTCOLOR */
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_CONSTFRAME0_CONSTANTCOLOR_CONSTANTALPHA_Pos 0UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_CONSTFRAME0_CONSTANTCOLOR_CONSTANTALPHA_Msk 0xFFUL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_CONSTFRAME0_CONSTANTCOLOR_CONSTANTBLUE_Pos 8UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_CONSTFRAME0_CONSTANTCOLOR_CONSTANTBLUE_Msk 0xFF00UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_CONSTFRAME0_CONSTANTCOLOR_CONSTANTGREEN_Pos 16UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_CONSTFRAME0_CONSTANTCOLOR_CONSTANTGREEN_Msk 0xFF0000UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_CONSTFRAME0_CONSTANTCOLOR_CONSTANTRED_Pos 24UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_CONSTFRAME0_CONSTANTCOLOR_CONSTANTRED_Msk 0xFF000000UL
/* VIDEOSS_VIDEOIO_SUBIO_COMPENG_CONSTFRAME0.CONTROLTRIGGER */
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_CONSTFRAME0_CONTROLTRIGGER_SHDTOKGEN_Pos 0UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_CONSTFRAME0_CONTROLTRIGGER_SHDTOKGEN_Msk 0x1UL
/* VIDEOSS_VIDEOIO_SUBIO_COMPENG_CONSTFRAME0.START */
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_CONSTFRAME0_START_START_Pos 0UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_CONSTFRAME0_START_START_Msk 0x1UL


/* VIDEOSS_VIDEOIO_SUBIO_COMPENG_EXTDST0.STATICCONTROL */
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_EXTDST0_STATICCONTROL_SHDEN_Pos 0UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_EXTDST0_STATICCONTROL_SHDEN_Msk 0x1UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_EXTDST0_STATICCONTROL_KICK_MODE_Pos 8UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_EXTDST0_STATICCONTROL_KICK_MODE_Msk 0x100UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_EXTDST0_STATICCONTROL_PERFCOUNTMODE_Pos 12UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_EXTDST0_STATICCONTROL_PERFCOUNTMODE_Msk 0x1000UL
/* VIDEOSS_VIDEOIO_SUBIO_COMPENG_EXTDST0.CONTROL */
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_EXTDST0_CONTROL_GAMMAAPPLYENABLE_Pos 0UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_EXTDST0_CONTROL_GAMMAAPPLYENABLE_Msk 0x1UL
/* VIDEOSS_VIDEOIO_SUBIO_COMPENG_EXTDST0.SOFTWAREKICK */
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_EXTDST0_SOFTWAREKICK_KICK_Pos 0UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_EXTDST0_SOFTWAREKICK_KICK_Msk 0x1UL
/* VIDEOSS_VIDEOIO_SUBIO_COMPENG_EXTDST0.STATUS */
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_EXTDST0_STATUS_CNT_ERR_STS_Pos 0UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_EXTDST0_STATUS_CNT_ERR_STS_Msk 0x1UL
/* VIDEOSS_VIDEOIO_SUBIO_COMPENG_EXTDST0.CONTROLWORD */
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_EXTDST0_CONTROLWORD_CW_VAL_Pos 0UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_EXTDST0_CONTROLWORD_CW_VAL_Msk 0xFFFFFFFFUL
/* VIDEOSS_VIDEOIO_SUBIO_COMPENG_EXTDST0.CURPIXELCNT */
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_EXTDST0_CURPIXELCNT_C_XVAL_Pos 0UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_EXTDST0_CURPIXELCNT_C_XVAL_Msk 0xFFFFUL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_EXTDST0_CURPIXELCNT_C_YVAL_Pos 16UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_EXTDST0_CURPIXELCNT_C_YVAL_Msk 0xFFFF0000UL
/* VIDEOSS_VIDEOIO_SUBIO_COMPENG_EXTDST0.LASTPIXELCNT */
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_EXTDST0_LASTPIXELCNT_L_XVAL_Pos 0UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_EXTDST0_LASTPIXELCNT_L_XVAL_Msk 0xFFFFUL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_EXTDST0_LASTPIXELCNT_L_YVAL_Pos 16UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_EXTDST0_LASTPIXELCNT_L_YVAL_Msk 0xFFFF0000UL
/* VIDEOSS_VIDEOIO_SUBIO_COMPENG_EXTDST0.PERFCOUNTER */
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_EXTDST0_PERFCOUNTER_PERFRESULT_Pos 0UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_EXTDST0_PERFCOUNTER_PERFRESULT_Msk 0xFFFFFFFFUL


/* VIDEOSS_VIDEOIO_SUBIO_COMPENG_CONSTFRAME4.STATICCONTROL */
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_CONSTFRAME4_STATICCONTROL_SHDEN_Pos 0UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_CONSTFRAME4_STATICCONTROL_SHDEN_Msk 0x1UL
/* VIDEOSS_VIDEOIO_SUBIO_COMPENG_CONSTFRAME4.FRAMEDIMENSIONS */
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_CONSTFRAME4_FRAMEDIMENSIONS_FRAMEWIDTH_Pos 0UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_CONSTFRAME4_FRAMEDIMENSIONS_FRAMEWIDTH_Msk 0x3FFFUL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_CONSTFRAME4_FRAMEDIMENSIONS_FRAMEHEIGHT_Pos 16UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_CONSTFRAME4_FRAMEDIMENSIONS_FRAMEHEIGHT_Msk 0x3FFF0000UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_CONSTFRAME4_FRAMEDIMENSIONS_EMPTYFRAME_Pos 31UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_CONSTFRAME4_FRAMEDIMENSIONS_EMPTYFRAME_Msk 0x80000000UL
/* VIDEOSS_VIDEOIO_SUBIO_COMPENG_CONSTFRAME4.CONSTANTCOLOR */
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_CONSTFRAME4_CONSTANTCOLOR_CONSTANTALPHA_Pos 0UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_CONSTFRAME4_CONSTANTCOLOR_CONSTANTALPHA_Msk 0xFFUL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_CONSTFRAME4_CONSTANTCOLOR_CONSTANTBLUE_Pos 8UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_CONSTFRAME4_CONSTANTCOLOR_CONSTANTBLUE_Msk 0xFF00UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_CONSTFRAME4_CONSTANTCOLOR_CONSTANTGREEN_Pos 16UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_CONSTFRAME4_CONSTANTCOLOR_CONSTANTGREEN_Msk 0xFF0000UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_CONSTFRAME4_CONSTANTCOLOR_CONSTANTRED_Pos 24UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_CONSTFRAME4_CONSTANTCOLOR_CONSTANTRED_Msk 0xFF000000UL
/* VIDEOSS_VIDEOIO_SUBIO_COMPENG_CONSTFRAME4.CONTROLTRIGGER */
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_CONSTFRAME4_CONTROLTRIGGER_SHDTOKGEN_Pos 0UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_CONSTFRAME4_CONTROLTRIGGER_SHDTOKGEN_Msk 0x1UL
/* VIDEOSS_VIDEOIO_SUBIO_COMPENG_CONSTFRAME4.START */
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_CONSTFRAME4_START_START_Pos 0UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_CONSTFRAME4_START_START_Msk 0x1UL


/* VIDEOSS_VIDEOIO_SUBIO_COMPENG_EXTDST4.STATICCONTROL */
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_EXTDST4_STATICCONTROL_SHDEN_Pos 0UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_EXTDST4_STATICCONTROL_SHDEN_Msk 0x1UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_EXTDST4_STATICCONTROL_KICK_MODE_Pos 8UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_EXTDST4_STATICCONTROL_KICK_MODE_Msk 0x100UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_EXTDST4_STATICCONTROL_PERFCOUNTMODE_Pos 12UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_EXTDST4_STATICCONTROL_PERFCOUNTMODE_Msk 0x1000UL
/* VIDEOSS_VIDEOIO_SUBIO_COMPENG_EXTDST4.CONTROL */
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_EXTDST4_CONTROL_GAMMAAPPLYENABLE_Pos 0UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_EXTDST4_CONTROL_GAMMAAPPLYENABLE_Msk 0x1UL
/* VIDEOSS_VIDEOIO_SUBIO_COMPENG_EXTDST4.SOFTWAREKICK */
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_EXTDST4_SOFTWAREKICK_KICK_Pos 0UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_EXTDST4_SOFTWAREKICK_KICK_Msk 0x1UL
/* VIDEOSS_VIDEOIO_SUBIO_COMPENG_EXTDST4.STATUS */
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_EXTDST4_STATUS_CNT_ERR_STS_Pos 0UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_EXTDST4_STATUS_CNT_ERR_STS_Msk 0x1UL
/* VIDEOSS_VIDEOIO_SUBIO_COMPENG_EXTDST4.CONTROLWORD */
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_EXTDST4_CONTROLWORD_CW_VAL_Pos 0UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_EXTDST4_CONTROLWORD_CW_VAL_Msk 0xFFFFFFFFUL
/* VIDEOSS_VIDEOIO_SUBIO_COMPENG_EXTDST4.CURPIXELCNT */
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_EXTDST4_CURPIXELCNT_C_XVAL_Pos 0UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_EXTDST4_CURPIXELCNT_C_XVAL_Msk 0xFFFFUL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_EXTDST4_CURPIXELCNT_C_YVAL_Pos 16UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_EXTDST4_CURPIXELCNT_C_YVAL_Msk 0xFFFF0000UL
/* VIDEOSS_VIDEOIO_SUBIO_COMPENG_EXTDST4.LASTPIXELCNT */
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_EXTDST4_LASTPIXELCNT_L_XVAL_Pos 0UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_EXTDST4_LASTPIXELCNT_L_XVAL_Msk 0xFFFFUL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_EXTDST4_LASTPIXELCNT_L_YVAL_Pos 16UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_EXTDST4_LASTPIXELCNT_L_YVAL_Msk 0xFFFF0000UL
/* VIDEOSS_VIDEOIO_SUBIO_COMPENG_EXTDST4.PERFCOUNTER */
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_EXTDST4_PERFCOUNTER_PERFRESULT_Pos 0UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_EXTDST4_PERFCOUNTER_PERFRESULT_Msk 0xFFFFFFFFUL


/* VIDEOSS_VIDEOIO_SUBIO_COMPENG_CONSTFRAME1.STATICCONTROL */
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_CONSTFRAME1_STATICCONTROL_SHDEN_Pos 0UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_CONSTFRAME1_STATICCONTROL_SHDEN_Msk 0x1UL
/* VIDEOSS_VIDEOIO_SUBIO_COMPENG_CONSTFRAME1.FRAMEDIMENSIONS */
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_CONSTFRAME1_FRAMEDIMENSIONS_FRAMEWIDTH_Pos 0UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_CONSTFRAME1_FRAMEDIMENSIONS_FRAMEWIDTH_Msk 0x3FFFUL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_CONSTFRAME1_FRAMEDIMENSIONS_FRAMEHEIGHT_Pos 16UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_CONSTFRAME1_FRAMEDIMENSIONS_FRAMEHEIGHT_Msk 0x3FFF0000UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_CONSTFRAME1_FRAMEDIMENSIONS_EMPTYFRAME_Pos 31UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_CONSTFRAME1_FRAMEDIMENSIONS_EMPTYFRAME_Msk 0x80000000UL
/* VIDEOSS_VIDEOIO_SUBIO_COMPENG_CONSTFRAME1.CONSTANTCOLOR */
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_CONSTFRAME1_CONSTANTCOLOR_CONSTANTALPHA_Pos 0UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_CONSTFRAME1_CONSTANTCOLOR_CONSTANTALPHA_Msk 0xFFUL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_CONSTFRAME1_CONSTANTCOLOR_CONSTANTBLUE_Pos 8UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_CONSTFRAME1_CONSTANTCOLOR_CONSTANTBLUE_Msk 0xFF00UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_CONSTFRAME1_CONSTANTCOLOR_CONSTANTGREEN_Pos 16UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_CONSTFRAME1_CONSTANTCOLOR_CONSTANTGREEN_Msk 0xFF0000UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_CONSTFRAME1_CONSTANTCOLOR_CONSTANTRED_Pos 24UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_CONSTFRAME1_CONSTANTCOLOR_CONSTANTRED_Msk 0xFF000000UL
/* VIDEOSS_VIDEOIO_SUBIO_COMPENG_CONSTFRAME1.CONTROLTRIGGER */
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_CONSTFRAME1_CONTROLTRIGGER_SHDTOKGEN_Pos 0UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_CONSTFRAME1_CONTROLTRIGGER_SHDTOKGEN_Msk 0x1UL
/* VIDEOSS_VIDEOIO_SUBIO_COMPENG_CONSTFRAME1.START */
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_CONSTFRAME1_START_START_Pos 0UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_CONSTFRAME1_START_START_Msk 0x1UL


/* VIDEOSS_VIDEOIO_SUBIO_COMPENG_EXTDST1.STATICCONTROL */
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_EXTDST1_STATICCONTROL_SHDEN_Pos 0UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_EXTDST1_STATICCONTROL_SHDEN_Msk 0x1UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_EXTDST1_STATICCONTROL_KICK_MODE_Pos 8UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_EXTDST1_STATICCONTROL_KICK_MODE_Msk 0x100UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_EXTDST1_STATICCONTROL_PERFCOUNTMODE_Pos 12UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_EXTDST1_STATICCONTROL_PERFCOUNTMODE_Msk 0x1000UL
/* VIDEOSS_VIDEOIO_SUBIO_COMPENG_EXTDST1.CONTROL */
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_EXTDST1_CONTROL_GAMMAAPPLYENABLE_Pos 0UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_EXTDST1_CONTROL_GAMMAAPPLYENABLE_Msk 0x1UL
/* VIDEOSS_VIDEOIO_SUBIO_COMPENG_EXTDST1.SOFTWAREKICK */
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_EXTDST1_SOFTWAREKICK_KICK_Pos 0UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_EXTDST1_SOFTWAREKICK_KICK_Msk 0x1UL
/* VIDEOSS_VIDEOIO_SUBIO_COMPENG_EXTDST1.STATUS */
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_EXTDST1_STATUS_CNT_ERR_STS_Pos 0UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_EXTDST1_STATUS_CNT_ERR_STS_Msk 0x1UL
/* VIDEOSS_VIDEOIO_SUBIO_COMPENG_EXTDST1.CONTROLWORD */
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_EXTDST1_CONTROLWORD_CW_VAL_Pos 0UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_EXTDST1_CONTROLWORD_CW_VAL_Msk 0xFFFFFFFFUL
/* VIDEOSS_VIDEOIO_SUBIO_COMPENG_EXTDST1.CURPIXELCNT */
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_EXTDST1_CURPIXELCNT_C_XVAL_Pos 0UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_EXTDST1_CURPIXELCNT_C_XVAL_Msk 0xFFFFUL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_EXTDST1_CURPIXELCNT_C_YVAL_Pos 16UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_EXTDST1_CURPIXELCNT_C_YVAL_Msk 0xFFFF0000UL
/* VIDEOSS_VIDEOIO_SUBIO_COMPENG_EXTDST1.LASTPIXELCNT */
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_EXTDST1_LASTPIXELCNT_L_XVAL_Pos 0UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_EXTDST1_LASTPIXELCNT_L_XVAL_Msk 0xFFFFUL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_EXTDST1_LASTPIXELCNT_L_YVAL_Pos 16UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_EXTDST1_LASTPIXELCNT_L_YVAL_Msk 0xFFFF0000UL
/* VIDEOSS_VIDEOIO_SUBIO_COMPENG_EXTDST1.PERFCOUNTER */
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_EXTDST1_PERFCOUNTER_PERFRESULT_Pos 0UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_EXTDST1_PERFCOUNTER_PERFRESULT_Msk 0xFFFFFFFFUL


/* VIDEOSS_VIDEOIO_SUBIO_COMPENG_CONSTFRAME5.STATICCONTROL */
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_CONSTFRAME5_STATICCONTROL_SHDEN_Pos 0UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_CONSTFRAME5_STATICCONTROL_SHDEN_Msk 0x1UL
/* VIDEOSS_VIDEOIO_SUBIO_COMPENG_CONSTFRAME5.FRAMEDIMENSIONS */
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_CONSTFRAME5_FRAMEDIMENSIONS_FRAMEWIDTH_Pos 0UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_CONSTFRAME5_FRAMEDIMENSIONS_FRAMEWIDTH_Msk 0x3FFFUL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_CONSTFRAME5_FRAMEDIMENSIONS_FRAMEHEIGHT_Pos 16UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_CONSTFRAME5_FRAMEDIMENSIONS_FRAMEHEIGHT_Msk 0x3FFF0000UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_CONSTFRAME5_FRAMEDIMENSIONS_EMPTYFRAME_Pos 31UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_CONSTFRAME5_FRAMEDIMENSIONS_EMPTYFRAME_Msk 0x80000000UL
/* VIDEOSS_VIDEOIO_SUBIO_COMPENG_CONSTFRAME5.CONSTANTCOLOR */
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_CONSTFRAME5_CONSTANTCOLOR_CONSTANTALPHA_Pos 0UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_CONSTFRAME5_CONSTANTCOLOR_CONSTANTALPHA_Msk 0xFFUL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_CONSTFRAME5_CONSTANTCOLOR_CONSTANTBLUE_Pos 8UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_CONSTFRAME5_CONSTANTCOLOR_CONSTANTBLUE_Msk 0xFF00UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_CONSTFRAME5_CONSTANTCOLOR_CONSTANTGREEN_Pos 16UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_CONSTFRAME5_CONSTANTCOLOR_CONSTANTGREEN_Msk 0xFF0000UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_CONSTFRAME5_CONSTANTCOLOR_CONSTANTRED_Pos 24UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_CONSTFRAME5_CONSTANTCOLOR_CONSTANTRED_Msk 0xFF000000UL
/* VIDEOSS_VIDEOIO_SUBIO_COMPENG_CONSTFRAME5.CONTROLTRIGGER */
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_CONSTFRAME5_CONTROLTRIGGER_SHDTOKGEN_Pos 0UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_CONSTFRAME5_CONTROLTRIGGER_SHDTOKGEN_Msk 0x1UL
/* VIDEOSS_VIDEOIO_SUBIO_COMPENG_CONSTFRAME5.START */
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_CONSTFRAME5_START_START_Pos 0UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_CONSTFRAME5_START_START_Msk 0x1UL


/* VIDEOSS_VIDEOIO_SUBIO_COMPENG_EXTDST5.STATICCONTROL */
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_EXTDST5_STATICCONTROL_SHDEN_Pos 0UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_EXTDST5_STATICCONTROL_SHDEN_Msk 0x1UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_EXTDST5_STATICCONTROL_KICK_MODE_Pos 8UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_EXTDST5_STATICCONTROL_KICK_MODE_Msk 0x100UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_EXTDST5_STATICCONTROL_PERFCOUNTMODE_Pos 12UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_EXTDST5_STATICCONTROL_PERFCOUNTMODE_Msk 0x1000UL
/* VIDEOSS_VIDEOIO_SUBIO_COMPENG_EXTDST5.CONTROL */
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_EXTDST5_CONTROL_GAMMAAPPLYENABLE_Pos 0UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_EXTDST5_CONTROL_GAMMAAPPLYENABLE_Msk 0x1UL
/* VIDEOSS_VIDEOIO_SUBIO_COMPENG_EXTDST5.SOFTWAREKICK */
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_EXTDST5_SOFTWAREKICK_KICK_Pos 0UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_EXTDST5_SOFTWAREKICK_KICK_Msk 0x1UL
/* VIDEOSS_VIDEOIO_SUBIO_COMPENG_EXTDST5.STATUS */
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_EXTDST5_STATUS_CNT_ERR_STS_Pos 0UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_EXTDST5_STATUS_CNT_ERR_STS_Msk 0x1UL
/* VIDEOSS_VIDEOIO_SUBIO_COMPENG_EXTDST5.CONTROLWORD */
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_EXTDST5_CONTROLWORD_CW_VAL_Pos 0UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_EXTDST5_CONTROLWORD_CW_VAL_Msk 0xFFFFFFFFUL
/* VIDEOSS_VIDEOIO_SUBIO_COMPENG_EXTDST5.CURPIXELCNT */
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_EXTDST5_CURPIXELCNT_C_XVAL_Pos 0UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_EXTDST5_CURPIXELCNT_C_XVAL_Msk 0xFFFFUL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_EXTDST5_CURPIXELCNT_C_YVAL_Pos 16UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_EXTDST5_CURPIXELCNT_C_YVAL_Msk 0xFFFF0000UL
/* VIDEOSS_VIDEOIO_SUBIO_COMPENG_EXTDST5.LASTPIXELCNT */
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_EXTDST5_LASTPIXELCNT_L_XVAL_Pos 0UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_EXTDST5_LASTPIXELCNT_L_XVAL_Msk 0xFFFFUL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_EXTDST5_LASTPIXELCNT_L_YVAL_Pos 16UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_EXTDST5_LASTPIXELCNT_L_YVAL_Msk 0xFFFF0000UL
/* VIDEOSS_VIDEOIO_SUBIO_COMPENG_EXTDST5.PERFCOUNTER */
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_EXTDST5_PERFCOUNTER_PERFRESULT_Pos 0UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_EXTDST5_PERFCOUNTER_PERFRESULT_Msk 0xFFFFFFFFUL


/* VIDEOSS_VIDEOIO_SUBIO_COMPENG_EXTSRC4.STATICCONTROL */
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_EXTSRC4_STATICCONTROL_SHDEN_Pos 0UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_EXTSRC4_STATICCONTROL_SHDEN_Msk 0x1UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_EXTSRC4_STATICCONTROL_STARTSEL_Pos 8UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_EXTSRC4_STATICCONTROL_STARTSEL_Msk 0x100UL
/* VIDEOSS_VIDEOIO_SUBIO_COMPENG_EXTSRC4.CLIPWINDOWOFFSET */
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_EXTSRC4_CLIPWINDOWOFFSET_CLIPWINDOWXOFFSET_Pos 0UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_EXTSRC4_CLIPWINDOWOFFSET_CLIPWINDOWXOFFSET_Msk 0x3FFFUL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_EXTSRC4_CLIPWINDOWOFFSET_CLIPWINDOWYOFFSET_Pos 16UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_EXTSRC4_CLIPWINDOWOFFSET_CLIPWINDOWYOFFSET_Msk 0x3FFF0000UL
/* VIDEOSS_VIDEOIO_SUBIO_COMPENG_EXTSRC4.CLIPWINDOWDIMENSION */
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_EXTSRC4_CLIPWINDOWDIMENSION_CLIPWINDOWWIDTH_Pos 0UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_EXTSRC4_CLIPWINDOWDIMENSION_CLIPWINDOWWIDTH_Msk 0x3FFFUL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_EXTSRC4_CLIPWINDOWDIMENSION_CLIPWINDOWHEIGHT_Pos 16UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_EXTSRC4_CLIPWINDOWDIMENSION_CLIPWINDOWHEIGHT_Msk 0x3FFF0000UL
/* VIDEOSS_VIDEOIO_SUBIO_COMPENG_EXTSRC4.COLORCOMPONENTBITS */
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_EXTSRC4_COLORCOMPONENTBITS_COMPONENTBITSALPHA_Pos 0UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_EXTSRC4_COLORCOMPONENTBITS_COMPONENTBITSALPHA_Msk 0xFUL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_EXTSRC4_COLORCOMPONENTBITS_COMPONENTBITSBLUE_Pos 8UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_EXTSRC4_COLORCOMPONENTBITS_COMPONENTBITSBLUE_Msk 0xF00UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_EXTSRC4_COLORCOMPONENTBITS_COMPONENTBITSGREEN_Pos 16UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_EXTSRC4_COLORCOMPONENTBITS_COMPONENTBITSGREEN_Msk 0xF0000UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_EXTSRC4_COLORCOMPONENTBITS_COMPONENTBITSRED_Pos 24UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_EXTSRC4_COLORCOMPONENTBITS_COMPONENTBITSRED_Msk 0xF000000UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_EXTSRC4_COLORCOMPONENTBITS_ITUFORMAT_Pos 31UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_EXTSRC4_COLORCOMPONENTBITS_ITUFORMAT_Msk 0x80000000UL
/* VIDEOSS_VIDEOIO_SUBIO_COMPENG_EXTSRC4.COLORCOMPONENTSHIFT */
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_EXTSRC4_COLORCOMPONENTSHIFT_COMPONENTSHIFTALPHA_Pos 0UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_EXTSRC4_COLORCOMPONENTSHIFT_COMPONENTSHIFTALPHA_Msk 0x3FUL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_EXTSRC4_COLORCOMPONENTSHIFT_COMPONENTSHIFTBLUE_Pos 8UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_EXTSRC4_COLORCOMPONENTSHIFT_COMPONENTSHIFTBLUE_Msk 0x3F00UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_EXTSRC4_COLORCOMPONENTSHIFT_COMPONENTSHIFTGREEN_Pos 16UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_EXTSRC4_COLORCOMPONENTSHIFT_COMPONENTSHIFTGREEN_Msk 0x3F0000UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_EXTSRC4_COLORCOMPONENTSHIFT_COMPONENTSHIFTRED_Pos 24UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_EXTSRC4_COLORCOMPONENTSHIFT_COMPONENTSHIFTRED_Msk 0x3F000000UL
/* VIDEOSS_VIDEOIO_SUBIO_COMPENG_EXTSRC4.CONSTANTCOLOR */
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_EXTSRC4_CONSTANTCOLOR_CONSTANTALPHA_Pos 0UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_EXTSRC4_CONSTANTCOLOR_CONSTANTALPHA_Msk 0xFFUL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_EXTSRC4_CONSTANTCOLOR_CONSTANTBLUE_Pos 8UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_EXTSRC4_CONSTANTCOLOR_CONSTANTBLUE_Msk 0xFF00UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_EXTSRC4_CONSTANTCOLOR_CONSTANTGREEN_Pos 16UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_EXTSRC4_CONSTANTCOLOR_CONSTANTGREEN_Msk 0xFF0000UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_EXTSRC4_CONSTANTCOLOR_CONSTANTRED_Pos 24UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_EXTSRC4_CONSTANTCOLOR_CONSTANTRED_Msk 0xFF000000UL
/* VIDEOSS_VIDEOIO_SUBIO_COMPENG_EXTSRC4.CONTROL */
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_EXTSRC4_CONTROL_CLIPWINDOWENABLE_Pos 0UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_EXTSRC4_CONTROL_CLIPWINDOWENABLE_Msk 0x1UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_EXTSRC4_CONTROL_RASTERMODE_Pos 4UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_EXTSRC4_CONTROL_RASTERMODE_Msk 0x10UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_EXTSRC4_CONTROL_YUV422UPSAMPLINGMODE_Pos 5UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_EXTSRC4_CONTROL_YUV422UPSAMPLINGMODE_Msk 0x20UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_EXTSRC4_CONTROL_YUVCONVERSIONMODE_Pos 6UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_EXTSRC4_CONTROL_YUVCONVERSIONMODE_Msk 0xC0UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_EXTSRC4_CONTROL_RGBALPHASRCENABLE_Pos 8UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_EXTSRC4_CONTROL_RGBALPHASRCENABLE_Msk 0x100UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_EXTSRC4_CONTROL_RGBALPHACONSTENABLE_Pos 9UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_EXTSRC4_CONTROL_RGBALPHACONSTENABLE_Msk 0x200UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_EXTSRC4_CONTROL_RGBALPHATRANSENABLE_Pos 10UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_EXTSRC4_CONTROL_RGBALPHATRANSENABLE_Msk 0x400UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_EXTSRC4_CONTROL_PREMULCONSTRGB_Pos 11UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_EXTSRC4_CONTROL_PREMULCONSTRGB_Msk 0x800UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_EXTSRC4_CONTROL_ALPHASRCENABLE_Pos 12UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_EXTSRC4_CONTROL_ALPHASRCENABLE_Msk 0x1000UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_EXTSRC4_CONTROL_ALPHACONSTENABLE_Pos 13UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_EXTSRC4_CONTROL_ALPHACONSTENABLE_Msk 0x2000UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_EXTSRC4_CONTROL_ALPHATRANSENABLE_Pos 14UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_EXTSRC4_CONTROL_ALPHATRANSENABLE_Msk 0x4000UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_EXTSRC4_CONTROL_GAMMAREMOVEENABLE_Pos 16UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_EXTSRC4_CONTROL_GAMMAREMOVEENABLE_Msk 0x10000UL
/* VIDEOSS_VIDEOIO_SUBIO_COMPENG_EXTSRC4.CONTROLTRIGGER */
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_EXTSRC4_CONTROLTRIGGER_SHDTOKGEN_Pos 0UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_EXTSRC4_CONTROLTRIGGER_SHDTOKGEN_Msk 0x1UL
/* VIDEOSS_VIDEOIO_SUBIO_COMPENG_EXTSRC4.START */
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_EXTSRC4_START_START_Pos 0UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_EXTSRC4_START_START_Msk 0x1UL


/* VIDEOSS_VIDEOIO_SUBIO_COMPENG_STORE4.STATICCONTROL */
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_STORE4_STATICCONTROL_SHDEN_Pos 0UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_STORE4_STATICCONTROL_SHDEN_Msk 0x1UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_STORE4_STATICCONTROL_SINGLEFRAMEOPERATION_Pos 4UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_STORE4_STATICCONTROL_SINGLEFRAMEOPERATION_Msk 0x10UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_STORE4_STATICCONTROL_BASEADDRESSAUTOUPDATE_Pos 8UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_STORE4_STATICCONTROL_BASEADDRESSAUTOUPDATE_Msk 0x100UL
/* VIDEOSS_VIDEOIO_SUBIO_COMPENG_STORE4.BURSTBUFFERMANAGEMENT */
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_STORE4_BURSTBUFFERMANAGEMENT_SETBURSTLENGTH_Pos 8UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_STORE4_BURSTBUFFERMANAGEMENT_SETBURSTLENGTH_Msk 0x1F00UL
/* VIDEOSS_VIDEOIO_SUBIO_COMPENG_STORE4.RINGBUFSTARTADDR */
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_STORE4_RINGBUFSTARTADDR_RINGBUFSTARTADDR_Pos 0UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_STORE4_RINGBUFSTARTADDR_RINGBUFSTARTADDR_Msk 0xFFFFFFFFUL
/* VIDEOSS_VIDEOIO_SUBIO_COMPENG_STORE4.RINGBUFWRAPADDR */
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_STORE4_RINGBUFWRAPADDR_RINGBUFWRAPADDR_Pos 0UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_STORE4_RINGBUFWRAPADDR_RINGBUFWRAPADDR_Msk 0xFFFFFFFFUL
/* VIDEOSS_VIDEOIO_SUBIO_COMPENG_STORE4.BASEADDRESS */
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_STORE4_BASEADDRESS_BASEADDRESS_Pos 0UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_STORE4_BASEADDRESS_BASEADDRESS_Msk 0xFFFFFFFFUL
/* VIDEOSS_VIDEOIO_SUBIO_COMPENG_STORE4.DESTINATIONBUFFERATTRIBUTES */
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_STORE4_DESTINATIONBUFFERATTRIBUTES_STRIDE_Pos 0UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_STORE4_DESTINATIONBUFFERATTRIBUTES_STRIDE_Msk 0x1FFFFUL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_STORE4_DESTINATIONBUFFERATTRIBUTES_BITSPERPIXEL_Pos 24UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_STORE4_DESTINATIONBUFFERATTRIBUTES_BITSPERPIXEL_Msk 0x7F000000UL
/* VIDEOSS_VIDEOIO_SUBIO_COMPENG_STORE4.DESTINATIONBUFFERDIMENSION */
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_STORE4_DESTINATIONBUFFERDIMENSION_LINEWIDTH_Pos 0UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_STORE4_DESTINATIONBUFFERDIMENSION_LINEWIDTH_Msk 0x3FFFUL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_STORE4_DESTINATIONBUFFERDIMENSION_LINECOUNT_Pos 16UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_STORE4_DESTINATIONBUFFERDIMENSION_LINECOUNT_Msk 0x3FFF0000UL
/* VIDEOSS_VIDEOIO_SUBIO_COMPENG_STORE4.FRAMEOFFSET */
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_STORE4_FRAMEOFFSET_FRAMEXOFFSET_Pos 0UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_STORE4_FRAMEOFFSET_FRAMEXOFFSET_Msk 0x7FFFUL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_STORE4_FRAMEOFFSET_FRAMEYOFFSET_Pos 16UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_STORE4_FRAMEOFFSET_FRAMEYOFFSET_Msk 0x7FFF0000UL
/* VIDEOSS_VIDEOIO_SUBIO_COMPENG_STORE4.COLORCOMPONENTBITS */
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_STORE4_COLORCOMPONENTBITS_COMPONENTBITSALPHA_Pos 0UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_STORE4_COLORCOMPONENTBITS_COMPONENTBITSALPHA_Msk 0xFUL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_STORE4_COLORCOMPONENTBITS_COMPONENTBITSBLUE_Pos 8UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_STORE4_COLORCOMPONENTBITS_COMPONENTBITSBLUE_Msk 0xF00UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_STORE4_COLORCOMPONENTBITS_COMPONENTBITSGREEN_Pos 16UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_STORE4_COLORCOMPONENTBITS_COMPONENTBITSGREEN_Msk 0xF0000UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_STORE4_COLORCOMPONENTBITS_COMPONENTBITSRED_Pos 24UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_STORE4_COLORCOMPONENTBITS_COMPONENTBITSRED_Msk 0xF000000UL
/* VIDEOSS_VIDEOIO_SUBIO_COMPENG_STORE4.COLORCOMPONENTSHIFT */
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_STORE4_COLORCOMPONENTSHIFT_COMPONENTSHIFTALPHA_Pos 0UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_STORE4_COLORCOMPONENTSHIFT_COMPONENTSHIFTALPHA_Msk 0x1FUL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_STORE4_COLORCOMPONENTSHIFT_COMPONENTSHIFTBLUE_Pos 8UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_STORE4_COLORCOMPONENTSHIFT_COMPONENTSHIFTBLUE_Msk 0x1F00UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_STORE4_COLORCOMPONENTSHIFT_COMPONENTSHIFTGREEN_Pos 16UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_STORE4_COLORCOMPONENTSHIFT_COMPONENTSHIFTGREEN_Msk 0x1F0000UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_STORE4_COLORCOMPONENTSHIFT_COMPONENTSHIFTRED_Pos 24UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_STORE4_COLORCOMPONENTSHIFT_COMPONENTSHIFTRED_Msk 0x1F000000UL
/* VIDEOSS_VIDEOIO_SUBIO_COMPENG_STORE4.CONTROL */
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_STORE4_CONTROL_COLORDITHERENABLE_Pos 0UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_STORE4_CONTROL_COLORDITHERENABLE_Msk 0x1UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_STORE4_CONTROL_ALPHADITHERENABLE_Pos 1UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_STORE4_CONTROL_ALPHADITHERENABLE_Msk 0x2UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_STORE4_CONTROL_DITHEROFFSET_Pos 4UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_STORE4_CONTROL_DITHEROFFSET_Msk 0xF0UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_STORE4_CONTROL_GAMMAAPPLYENABLE_Pos 12UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_STORE4_CONTROL_GAMMAAPPLYENABLE_Msk 0x1000UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_STORE4_CONTROL_YUVCONVERSIONMODE_Pos 16UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_STORE4_CONTROL_YUVCONVERSIONMODE_Msk 0x30000UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_STORE4_CONTROL_RASTERMODE_Pos 18UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_STORE4_CONTROL_RASTERMODE_Msk 0xC0000UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_STORE4_CONTROL_YUV422DOWNSAMPLINGMODE_Pos 20UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_STORE4_CONTROL_YUV422DOWNSAMPLINGMODE_Msk 0x300000UL
/* VIDEOSS_VIDEOIO_SUBIO_COMPENG_STORE4.ENCODECONTROL */
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_STORE4_ENCODECONTROL_COMPRESSIONMODE_Pos 0UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_STORE4_ENCODECONTROL_COMPRESSIONMODE_Msk 0x1UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_STORE4_ENCODECONTROL_RLADCOMPBITSRED_Pos 16UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_STORE4_ENCODECONTROL_RLADCOMPBITSRED_Msk 0xF0000UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_STORE4_ENCODECONTROL_RLADCOMPBITSGREEN_Pos 20UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_STORE4_ENCODECONTROL_RLADCOMPBITSGREEN_Msk 0xF00000UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_STORE4_ENCODECONTROL_RLADCOMPBITSBLUE_Pos 24UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_STORE4_ENCODECONTROL_RLADCOMPBITSBLUE_Msk 0xF000000UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_STORE4_ENCODECONTROL_RLADCOMPBITSALPHA_Pos 28UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_STORE4_ENCODECONTROL_RLADCOMPBITSALPHA_Msk 0xF0000000UL
/* VIDEOSS_VIDEOIO_SUBIO_COMPENG_STORE4.DESTINATIONBUFFERLENGTH */
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_STORE4_DESTINATIONBUFFERLENGTH_RLEWORDSMAX_Pos 0UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_STORE4_DESTINATIONBUFFERLENGTH_RLEWORDSMAX_Msk 0x1FFFFFFFUL
/* VIDEOSS_VIDEOIO_SUBIO_COMPENG_STORE4.START */
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_STORE4_START_START_Pos 0UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_STORE4_START_START_Msk 0x1UL
/* VIDEOSS_VIDEOIO_SUBIO_COMPENG_STORE4.ENCODERSTATUS */
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_STORE4_ENCODERSTATUS_RLEWORDS_Pos 0UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_STORE4_ENCODERSTATUS_RLEWORDS_Msk 0x1FFFFFFFUL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_STORE4_ENCODERSTATUS_BUFFERTOOSMALL_Pos 31UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_STORE4_ENCODERSTATUS_BUFFERTOOSMALL_Msk 0x80000000UL
/* VIDEOSS_VIDEOIO_SUBIO_COMPENG_STORE4.WRITEADDRESS */
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_STORE4_WRITEADDRESS_WRITEADDRESS_Pos 0UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_STORE4_WRITEADDRESS_WRITEADDRESS_Msk 0xFFFFFFFFUL
/* VIDEOSS_VIDEOIO_SUBIO_COMPENG_STORE4.FRAMEPROPERTIES */
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_STORE4_FRAMEPROPERTIES_FIELDID_Pos 0UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_STORE4_FRAMEPROPERTIES_FIELDID_Msk 0x1UL
/* VIDEOSS_VIDEOIO_SUBIO_COMPENG_STORE4.BURSTBUFFERPROPERTIES */
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_STORE4_BURSTBUFFERPROPERTIES_MAXBURSTLENGTH_Pos 8UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_STORE4_BURSTBUFFERPROPERTIES_MAXBURSTLENGTH_Msk 0x1F00UL
/* VIDEOSS_VIDEOIO_SUBIO_COMPENG_STORE4.LASTCONTROLWORD */
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_STORE4_LASTCONTROLWORD_L_VAL_Pos 0UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_STORE4_LASTCONTROLWORD_L_VAL_Msk 0xFFFFFFFFUL
/* VIDEOSS_VIDEOIO_SUBIO_COMPENG_STORE4.PERFCOUNTER */
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_STORE4_PERFCOUNTER_PERFRESULT_Pos 0UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_STORE4_PERFCOUNTER_PERFRESULT_Msk 0xFFFFFFFFUL


/* VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0.STATICCONTROL */
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_STATICCONTROL_SHDEN_Pos 0UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_STATICCONTROL_SHDEN_Msk 0x1UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_STATICCONTROL_LBHSHDEN_Pos 1UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_STATICCONTROL_LBHSHDEN_Msk 0x2UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_STATICCONTROL_BASEADDRESSAUTOUPDATE_Pos 16UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_STATICCONTROL_BASEADDRESSAUTOUPDATE_Msk 0xFF0000UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_STATICCONTROL_SHDLDREQSTICKY_Pos 24UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_STATICCONTROL_SHDLDREQSTICKY_Msk 0xFF000000UL
/* VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0.BURSTBUFFERMANAGEMENT */
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_BURSTBUFFERMANAGEMENT_SETNUMBUFFERS_Pos 0UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_BURSTBUFFERMANAGEMENT_SETNUMBUFFERS_Msk 0xFFUL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_BURSTBUFFERMANAGEMENT_SETBURSTLENGTH_Pos 8UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_BURSTBUFFERMANAGEMENT_SETBURSTLENGTH_Msk 0x1F00UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_BURSTBUFFERMANAGEMENT_LINEMODE_Pos 31UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_BURSTBUFFERMANAGEMENT_LINEMODE_Msk 0x80000000UL
/* VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0.BASEADDRESS0 */
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_BASEADDRESS0_BASEADDRESS0_Pos 0UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_BASEADDRESS0_BASEADDRESS0_Msk 0xFFFFFFFFUL
/* VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0.SOURCEBUFFERATTRIBUTES0 */
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_SOURCEBUFFERATTRIBUTES0_STRIDE0_Pos 0UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_SOURCEBUFFERATTRIBUTES0_STRIDE0_Msk 0xFFFFUL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_SOURCEBUFFERATTRIBUTES0_BITSPERPIXEL0_Pos 16UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_SOURCEBUFFERATTRIBUTES0_BITSPERPIXEL0_Msk 0x3F0000UL
/* VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0.SOURCEBUFFERDIMENSION0 */
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_SOURCEBUFFERDIMENSION0_LINEWIDTH0_Pos 0UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_SOURCEBUFFERDIMENSION0_LINEWIDTH0_Msk 0x3FFFUL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_SOURCEBUFFERDIMENSION0_LINECOUNT0_Pos 16UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_SOURCEBUFFERDIMENSION0_LINECOUNT0_Msk 0x3FFF0000UL
/* VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0.COLORCOMPONENTBITS0 */
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_COLORCOMPONENTBITS0_COMPONENTBITSALPHA0_Pos 0UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_COLORCOMPONENTBITS0_COMPONENTBITSALPHA0_Msk 0xFUL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_COLORCOMPONENTBITS0_COMPONENTBITSBLUE0_Pos 8UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_COLORCOMPONENTBITS0_COMPONENTBITSBLUE0_Msk 0xF00UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_COLORCOMPONENTBITS0_COMPONENTBITSGREEN0_Pos 16UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_COLORCOMPONENTBITS0_COMPONENTBITSGREEN0_Msk 0xF0000UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_COLORCOMPONENTBITS0_COMPONENTBITSRED0_Pos 24UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_COLORCOMPONENTBITS0_COMPONENTBITSRED0_Msk 0xF000000UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_COLORCOMPONENTBITS0_ITUFORMAT0_Pos 31UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_COLORCOMPONENTBITS0_ITUFORMAT0_Msk 0x80000000UL
/* VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0.COLORCOMPONENTSHIFT0 */
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_COLORCOMPONENTSHIFT0_COMPONENTSHIFTALPHA0_Pos 0UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_COLORCOMPONENTSHIFT0_COMPONENTSHIFTALPHA0_Msk 0x1FUL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_COLORCOMPONENTSHIFT0_COMPONENTSHIFTBLUE0_Pos 8UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_COLORCOMPONENTSHIFT0_COMPONENTSHIFTBLUE0_Msk 0x1F00UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_COLORCOMPONENTSHIFT0_COMPONENTSHIFTGREEN0_Pos 16UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_COLORCOMPONENTSHIFT0_COMPONENTSHIFTGREEN0_Msk 0x1F0000UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_COLORCOMPONENTSHIFT0_COMPONENTSHIFTRED0_Pos 24UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_COLORCOMPONENTSHIFT0_COMPONENTSHIFTRED0_Msk 0x1F000000UL
/* VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0.LAYEROFFSET0 */
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_LAYEROFFSET0_LAYERXOFFSET0_Pos 0UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_LAYEROFFSET0_LAYERXOFFSET0_Msk 0x7FFFUL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_LAYEROFFSET0_LAYERYOFFSET0_Pos 16UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_LAYEROFFSET0_LAYERYOFFSET0_Msk 0x7FFF0000UL
/* VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0.CLIPWINDOWOFFSET0 */
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_CLIPWINDOWOFFSET0_CLIPWINDOWXOFFSET0_Pos 0UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_CLIPWINDOWOFFSET0_CLIPWINDOWXOFFSET0_Msk 0x7FFFUL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_CLIPWINDOWOFFSET0_CLIPWINDOWYOFFSET0_Pos 16UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_CLIPWINDOWOFFSET0_CLIPWINDOWYOFFSET0_Msk 0x7FFF0000UL
/* VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0.CLIPWINDOWDIMENSIONS0 */
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_CLIPWINDOWDIMENSIONS0_CLIPWINDOWWIDTH0_Pos 0UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_CLIPWINDOWDIMENSIONS0_CLIPWINDOWWIDTH0_Msk 0x3FFFUL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_CLIPWINDOWDIMENSIONS0_CLIPWINDOWHEIGHT0_Pos 16UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_CLIPWINDOWDIMENSIONS0_CLIPWINDOWHEIGHT0_Msk 0x3FFF0000UL
/* VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0.CONSTANTCOLOR0 */
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_CONSTANTCOLOR0_CONSTANTALPHA0_Pos 0UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_CONSTANTCOLOR0_CONSTANTALPHA0_Msk 0xFFUL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_CONSTANTCOLOR0_CONSTANTBLUE0_Pos 8UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_CONSTANTCOLOR0_CONSTANTBLUE0_Msk 0xFF00UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_CONSTANTCOLOR0_CONSTANTGREEN0_Pos 16UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_CONSTANTCOLOR0_CONSTANTGREEN0_Msk 0xFF0000UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_CONSTANTCOLOR0_CONSTANTRED0_Pos 24UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_CONSTANTCOLOR0_CONSTANTRED0_Msk 0xFF000000UL
/* VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0.LAYERPROPERTY0 */
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_LAYERPROPERTY0_PALETTEENABLE0_Pos 0UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_LAYERPROPERTY0_PALETTEENABLE0_Msk 0x1UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_LAYERPROPERTY0_TILEMODE0_Pos 1UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_LAYERPROPERTY0_TILEMODE0_Msk 0x6UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_LAYERPROPERTY0_ALPHASRCENABLE0_Pos 3UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_LAYERPROPERTY0_ALPHASRCENABLE0_Msk 0x8UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_LAYERPROPERTY0_ALPHACONSTENABLE0_Pos 4UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_LAYERPROPERTY0_ALPHACONSTENABLE0_Msk 0x10UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_LAYERPROPERTY0_ALPHATRANSENABLE0_Pos 6UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_LAYERPROPERTY0_ALPHATRANSENABLE0_Msk 0x40UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_LAYERPROPERTY0_RGBALPHASRCENABLE0_Pos 7UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_LAYERPROPERTY0_RGBALPHASRCENABLE0_Msk 0x80UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_LAYERPROPERTY0_RGBALPHACONSTENABLE0_Pos 8UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_LAYERPROPERTY0_RGBALPHACONSTENABLE0_Msk 0x100UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_LAYERPROPERTY0_RGBALPHATRANSENABLE0_Pos 10UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_LAYERPROPERTY0_RGBALPHATRANSENABLE0_Msk 0x400UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_LAYERPROPERTY0_PREMULCONSTRGB0_Pos 11UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_LAYERPROPERTY0_PREMULCONSTRGB0_Msk 0x800UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_LAYERPROPERTY0_YUVCONVERSIONMODE0_Pos 12UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_LAYERPROPERTY0_YUVCONVERSIONMODE0_Msk 0x3000UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_LAYERPROPERTY0_GAMMAREMOVEENABLE0_Pos 14UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_LAYERPROPERTY0_GAMMAREMOVEENABLE0_Msk 0x4000UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_LAYERPROPERTY0_PALETTEOFFSET0_Pos 16UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_LAYERPROPERTY0_PALETTEOFFSET0_Msk 0x7FF0000UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_LAYERPROPERTY0_PALETTEIDWIDTH0_Pos 27UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_LAYERPROPERTY0_PALETTEIDWIDTH0_Msk 0x38000000UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_LAYERPROPERTY0_CLIPWINDOWENABLE0_Pos 30UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_LAYERPROPERTY0_CLIPWINDOWENABLE0_Msk 0x40000000UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_LAYERPROPERTY0_SOURCEBUFFERENABLE0_Pos 31UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_LAYERPROPERTY0_SOURCEBUFFERENABLE0_Msk 0x80000000UL
/* VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0.BASEADDRESS1 */
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_BASEADDRESS1_BASEADDRESS1_Pos 0UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_BASEADDRESS1_BASEADDRESS1_Msk 0xFFFFFFFFUL
/* VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0.SOURCEBUFFERATTRIBUTES1 */
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_SOURCEBUFFERATTRIBUTES1_STRIDE1_Pos 0UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_SOURCEBUFFERATTRIBUTES1_STRIDE1_Msk 0xFFFFUL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_SOURCEBUFFERATTRIBUTES1_BITSPERPIXEL1_Pos 16UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_SOURCEBUFFERATTRIBUTES1_BITSPERPIXEL1_Msk 0x3F0000UL
/* VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0.SOURCEBUFFERDIMENSION1 */
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_SOURCEBUFFERDIMENSION1_LINEWIDTH1_Pos 0UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_SOURCEBUFFERDIMENSION1_LINEWIDTH1_Msk 0x3FFFUL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_SOURCEBUFFERDIMENSION1_LINECOUNT1_Pos 16UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_SOURCEBUFFERDIMENSION1_LINECOUNT1_Msk 0x3FFF0000UL
/* VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0.COLORCOMPONENTBITS1 */
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_COLORCOMPONENTBITS1_COMPONENTBITSALPHA1_Pos 0UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_COLORCOMPONENTBITS1_COMPONENTBITSALPHA1_Msk 0xFUL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_COLORCOMPONENTBITS1_COMPONENTBITSBLUE1_Pos 8UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_COLORCOMPONENTBITS1_COMPONENTBITSBLUE1_Msk 0xF00UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_COLORCOMPONENTBITS1_COMPONENTBITSGREEN1_Pos 16UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_COLORCOMPONENTBITS1_COMPONENTBITSGREEN1_Msk 0xF0000UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_COLORCOMPONENTBITS1_COMPONENTBITSRED1_Pos 24UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_COLORCOMPONENTBITS1_COMPONENTBITSRED1_Msk 0xF000000UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_COLORCOMPONENTBITS1_ITUFORMAT1_Pos 31UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_COLORCOMPONENTBITS1_ITUFORMAT1_Msk 0x80000000UL
/* VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0.COLORCOMPONENTSHIFT1 */
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_COLORCOMPONENTSHIFT1_COMPONENTSHIFTALPHA1_Pos 0UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_COLORCOMPONENTSHIFT1_COMPONENTSHIFTALPHA1_Msk 0x1FUL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_COLORCOMPONENTSHIFT1_COMPONENTSHIFTBLUE1_Pos 8UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_COLORCOMPONENTSHIFT1_COMPONENTSHIFTBLUE1_Msk 0x1F00UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_COLORCOMPONENTSHIFT1_COMPONENTSHIFTGREEN1_Pos 16UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_COLORCOMPONENTSHIFT1_COMPONENTSHIFTGREEN1_Msk 0x1F0000UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_COLORCOMPONENTSHIFT1_COMPONENTSHIFTRED1_Pos 24UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_COLORCOMPONENTSHIFT1_COMPONENTSHIFTRED1_Msk 0x1F000000UL
/* VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0.LAYEROFFSET1 */
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_LAYEROFFSET1_LAYERXOFFSET1_Pos 0UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_LAYEROFFSET1_LAYERXOFFSET1_Msk 0x7FFFUL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_LAYEROFFSET1_LAYERYOFFSET1_Pos 16UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_LAYEROFFSET1_LAYERYOFFSET1_Msk 0x7FFF0000UL
/* VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0.CLIPWINDOWOFFSET1 */
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_CLIPWINDOWOFFSET1_CLIPWINDOWXOFFSET1_Pos 0UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_CLIPWINDOWOFFSET1_CLIPWINDOWXOFFSET1_Msk 0x7FFFUL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_CLIPWINDOWOFFSET1_CLIPWINDOWYOFFSET1_Pos 16UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_CLIPWINDOWOFFSET1_CLIPWINDOWYOFFSET1_Msk 0x7FFF0000UL
/* VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0.CLIPWINDOWDIMENSIONS1 */
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_CLIPWINDOWDIMENSIONS1_CLIPWINDOWWIDTH1_Pos 0UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_CLIPWINDOWDIMENSIONS1_CLIPWINDOWWIDTH1_Msk 0x3FFFUL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_CLIPWINDOWDIMENSIONS1_CLIPWINDOWHEIGHT1_Pos 16UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_CLIPWINDOWDIMENSIONS1_CLIPWINDOWHEIGHT1_Msk 0x3FFF0000UL
/* VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0.CONSTANTCOLOR1 */
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_CONSTANTCOLOR1_CONSTANTALPHA1_Pos 0UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_CONSTANTCOLOR1_CONSTANTALPHA1_Msk 0xFFUL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_CONSTANTCOLOR1_CONSTANTBLUE1_Pos 8UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_CONSTANTCOLOR1_CONSTANTBLUE1_Msk 0xFF00UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_CONSTANTCOLOR1_CONSTANTGREEN1_Pos 16UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_CONSTANTCOLOR1_CONSTANTGREEN1_Msk 0xFF0000UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_CONSTANTCOLOR1_CONSTANTRED1_Pos 24UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_CONSTANTCOLOR1_CONSTANTRED1_Msk 0xFF000000UL
/* VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0.LAYERPROPERTY1 */
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_LAYERPROPERTY1_PALETTEENABLE1_Pos 0UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_LAYERPROPERTY1_PALETTEENABLE1_Msk 0x1UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_LAYERPROPERTY1_TILEMODE1_Pos 1UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_LAYERPROPERTY1_TILEMODE1_Msk 0x6UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_LAYERPROPERTY1_ALPHASRCENABLE1_Pos 3UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_LAYERPROPERTY1_ALPHASRCENABLE1_Msk 0x8UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_LAYERPROPERTY1_ALPHACONSTENABLE1_Pos 4UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_LAYERPROPERTY1_ALPHACONSTENABLE1_Msk 0x10UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_LAYERPROPERTY1_ALPHATRANSENABLE1_Pos 6UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_LAYERPROPERTY1_ALPHATRANSENABLE1_Msk 0x40UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_LAYERPROPERTY1_RGBALPHASRCENABLE1_Pos 7UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_LAYERPROPERTY1_RGBALPHASRCENABLE1_Msk 0x80UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_LAYERPROPERTY1_RGBALPHACONSTENABLE1_Pos 8UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_LAYERPROPERTY1_RGBALPHACONSTENABLE1_Msk 0x100UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_LAYERPROPERTY1_RGBALPHATRANSENABLE1_Pos 10UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_LAYERPROPERTY1_RGBALPHATRANSENABLE1_Msk 0x400UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_LAYERPROPERTY1_PREMULCONSTRGB1_Pos 11UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_LAYERPROPERTY1_PREMULCONSTRGB1_Msk 0x800UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_LAYERPROPERTY1_YUVCONVERSIONMODE1_Pos 12UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_LAYERPROPERTY1_YUVCONVERSIONMODE1_Msk 0x3000UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_LAYERPROPERTY1_GAMMAREMOVEENABLE1_Pos 14UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_LAYERPROPERTY1_GAMMAREMOVEENABLE1_Msk 0x4000UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_LAYERPROPERTY1_PALETTEOFFSET1_Pos 16UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_LAYERPROPERTY1_PALETTEOFFSET1_Msk 0x7FF0000UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_LAYERPROPERTY1_PALETTEIDWIDTH1_Pos 27UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_LAYERPROPERTY1_PALETTEIDWIDTH1_Msk 0x38000000UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_LAYERPROPERTY1_CLIPWINDOWENABLE1_Pos 30UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_LAYERPROPERTY1_CLIPWINDOWENABLE1_Msk 0x40000000UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_LAYERPROPERTY1_SOURCEBUFFERENABLE1_Pos 31UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_LAYERPROPERTY1_SOURCEBUFFERENABLE1_Msk 0x80000000UL
/* VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0.BASEADDRESS2 */
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_BASEADDRESS2_BASEADDRESS2_Pos 0UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_BASEADDRESS2_BASEADDRESS2_Msk 0xFFFFFFFFUL
/* VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0.SOURCEBUFFERATTRIBUTES2 */
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_SOURCEBUFFERATTRIBUTES2_STRIDE2_Pos 0UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_SOURCEBUFFERATTRIBUTES2_STRIDE2_Msk 0xFFFFUL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_SOURCEBUFFERATTRIBUTES2_BITSPERPIXEL2_Pos 16UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_SOURCEBUFFERATTRIBUTES2_BITSPERPIXEL2_Msk 0x3F0000UL
/* VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0.SOURCEBUFFERDIMENSION2 */
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_SOURCEBUFFERDIMENSION2_LINEWIDTH2_Pos 0UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_SOURCEBUFFERDIMENSION2_LINEWIDTH2_Msk 0x3FFFUL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_SOURCEBUFFERDIMENSION2_LINECOUNT2_Pos 16UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_SOURCEBUFFERDIMENSION2_LINECOUNT2_Msk 0x3FFF0000UL
/* VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0.COLORCOMPONENTBITS2 */
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_COLORCOMPONENTBITS2_COMPONENTBITSALPHA2_Pos 0UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_COLORCOMPONENTBITS2_COMPONENTBITSALPHA2_Msk 0xFUL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_COLORCOMPONENTBITS2_COMPONENTBITSBLUE2_Pos 8UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_COLORCOMPONENTBITS2_COMPONENTBITSBLUE2_Msk 0xF00UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_COLORCOMPONENTBITS2_COMPONENTBITSGREEN2_Pos 16UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_COLORCOMPONENTBITS2_COMPONENTBITSGREEN2_Msk 0xF0000UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_COLORCOMPONENTBITS2_COMPONENTBITSRED2_Pos 24UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_COLORCOMPONENTBITS2_COMPONENTBITSRED2_Msk 0xF000000UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_COLORCOMPONENTBITS2_ITUFORMAT2_Pos 31UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_COLORCOMPONENTBITS2_ITUFORMAT2_Msk 0x80000000UL
/* VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0.COLORCOMPONENTSHIFT2 */
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_COLORCOMPONENTSHIFT2_COMPONENTSHIFTALPHA2_Pos 0UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_COLORCOMPONENTSHIFT2_COMPONENTSHIFTALPHA2_Msk 0x1FUL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_COLORCOMPONENTSHIFT2_COMPONENTSHIFTBLUE2_Pos 8UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_COLORCOMPONENTSHIFT2_COMPONENTSHIFTBLUE2_Msk 0x1F00UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_COLORCOMPONENTSHIFT2_COMPONENTSHIFTGREEN2_Pos 16UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_COLORCOMPONENTSHIFT2_COMPONENTSHIFTGREEN2_Msk 0x1F0000UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_COLORCOMPONENTSHIFT2_COMPONENTSHIFTRED2_Pos 24UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_COLORCOMPONENTSHIFT2_COMPONENTSHIFTRED2_Msk 0x1F000000UL
/* VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0.LAYEROFFSET2 */
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_LAYEROFFSET2_LAYERXOFFSET2_Pos 0UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_LAYEROFFSET2_LAYERXOFFSET2_Msk 0x7FFFUL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_LAYEROFFSET2_LAYERYOFFSET2_Pos 16UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_LAYEROFFSET2_LAYERYOFFSET2_Msk 0x7FFF0000UL
/* VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0.CLIPWINDOWOFFSET2 */
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_CLIPWINDOWOFFSET2_CLIPWINDOWXOFFSET2_Pos 0UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_CLIPWINDOWOFFSET2_CLIPWINDOWXOFFSET2_Msk 0x7FFFUL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_CLIPWINDOWOFFSET2_CLIPWINDOWYOFFSET2_Pos 16UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_CLIPWINDOWOFFSET2_CLIPWINDOWYOFFSET2_Msk 0x7FFF0000UL
/* VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0.CLIPWINDOWDIMENSIONS2 */
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_CLIPWINDOWDIMENSIONS2_CLIPWINDOWWIDTH2_Pos 0UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_CLIPWINDOWDIMENSIONS2_CLIPWINDOWWIDTH2_Msk 0x3FFFUL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_CLIPWINDOWDIMENSIONS2_CLIPWINDOWHEIGHT2_Pos 16UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_CLIPWINDOWDIMENSIONS2_CLIPWINDOWHEIGHT2_Msk 0x3FFF0000UL
/* VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0.CONSTANTCOLOR2 */
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_CONSTANTCOLOR2_CONSTANTALPHA2_Pos 0UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_CONSTANTCOLOR2_CONSTANTALPHA2_Msk 0xFFUL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_CONSTANTCOLOR2_CONSTANTBLUE2_Pos 8UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_CONSTANTCOLOR2_CONSTANTBLUE2_Msk 0xFF00UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_CONSTANTCOLOR2_CONSTANTGREEN2_Pos 16UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_CONSTANTCOLOR2_CONSTANTGREEN2_Msk 0xFF0000UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_CONSTANTCOLOR2_CONSTANTRED2_Pos 24UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_CONSTANTCOLOR2_CONSTANTRED2_Msk 0xFF000000UL
/* VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0.LAYERPROPERTY2 */
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_LAYERPROPERTY2_PALETTEENABLE2_Pos 0UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_LAYERPROPERTY2_PALETTEENABLE2_Msk 0x1UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_LAYERPROPERTY2_TILEMODE2_Pos 1UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_LAYERPROPERTY2_TILEMODE2_Msk 0x6UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_LAYERPROPERTY2_ALPHASRCENABLE2_Pos 3UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_LAYERPROPERTY2_ALPHASRCENABLE2_Msk 0x8UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_LAYERPROPERTY2_ALPHACONSTENABLE2_Pos 4UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_LAYERPROPERTY2_ALPHACONSTENABLE2_Msk 0x10UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_LAYERPROPERTY2_ALPHATRANSENABLE2_Pos 6UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_LAYERPROPERTY2_ALPHATRANSENABLE2_Msk 0x40UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_LAYERPROPERTY2_RGBALPHASRCENABLE2_Pos 7UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_LAYERPROPERTY2_RGBALPHASRCENABLE2_Msk 0x80UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_LAYERPROPERTY2_RGBALPHACONSTENABLE2_Pos 8UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_LAYERPROPERTY2_RGBALPHACONSTENABLE2_Msk 0x100UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_LAYERPROPERTY2_RGBALPHATRANSENABLE2_Pos 10UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_LAYERPROPERTY2_RGBALPHATRANSENABLE2_Msk 0x400UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_LAYERPROPERTY2_PREMULCONSTRGB2_Pos 11UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_LAYERPROPERTY2_PREMULCONSTRGB2_Msk 0x800UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_LAYERPROPERTY2_YUVCONVERSIONMODE2_Pos 12UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_LAYERPROPERTY2_YUVCONVERSIONMODE2_Msk 0x3000UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_LAYERPROPERTY2_GAMMAREMOVEENABLE2_Pos 14UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_LAYERPROPERTY2_GAMMAREMOVEENABLE2_Msk 0x4000UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_LAYERPROPERTY2_PALETTEOFFSET2_Pos 16UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_LAYERPROPERTY2_PALETTEOFFSET2_Msk 0x7FF0000UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_LAYERPROPERTY2_PALETTEIDWIDTH2_Pos 27UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_LAYERPROPERTY2_PALETTEIDWIDTH2_Msk 0x38000000UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_LAYERPROPERTY2_CLIPWINDOWENABLE2_Pos 30UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_LAYERPROPERTY2_CLIPWINDOWENABLE2_Msk 0x40000000UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_LAYERPROPERTY2_SOURCEBUFFERENABLE2_Pos 31UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_LAYERPROPERTY2_SOURCEBUFFERENABLE2_Msk 0x80000000UL
/* VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0.BASEADDRESS3 */
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_BASEADDRESS3_BASEADDRESS3_Pos 0UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_BASEADDRESS3_BASEADDRESS3_Msk 0xFFFFFFFFUL
/* VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0.SOURCEBUFFERATTRIBUTES3 */
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_SOURCEBUFFERATTRIBUTES3_STRIDE3_Pos 0UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_SOURCEBUFFERATTRIBUTES3_STRIDE3_Msk 0xFFFFUL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_SOURCEBUFFERATTRIBUTES3_BITSPERPIXEL3_Pos 16UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_SOURCEBUFFERATTRIBUTES3_BITSPERPIXEL3_Msk 0x3F0000UL
/* VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0.SOURCEBUFFERDIMENSION3 */
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_SOURCEBUFFERDIMENSION3_LINEWIDTH3_Pos 0UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_SOURCEBUFFERDIMENSION3_LINEWIDTH3_Msk 0x3FFFUL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_SOURCEBUFFERDIMENSION3_LINECOUNT3_Pos 16UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_SOURCEBUFFERDIMENSION3_LINECOUNT3_Msk 0x3FFF0000UL
/* VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0.COLORCOMPONENTBITS3 */
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_COLORCOMPONENTBITS3_COMPONENTBITSALPHA3_Pos 0UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_COLORCOMPONENTBITS3_COMPONENTBITSALPHA3_Msk 0xFUL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_COLORCOMPONENTBITS3_COMPONENTBITSBLUE3_Pos 8UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_COLORCOMPONENTBITS3_COMPONENTBITSBLUE3_Msk 0xF00UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_COLORCOMPONENTBITS3_COMPONENTBITSGREEN3_Pos 16UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_COLORCOMPONENTBITS3_COMPONENTBITSGREEN3_Msk 0xF0000UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_COLORCOMPONENTBITS3_COMPONENTBITSRED3_Pos 24UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_COLORCOMPONENTBITS3_COMPONENTBITSRED3_Msk 0xF000000UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_COLORCOMPONENTBITS3_ITUFORMAT3_Pos 31UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_COLORCOMPONENTBITS3_ITUFORMAT3_Msk 0x80000000UL
/* VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0.COLORCOMPONENTSHIFT3 */
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_COLORCOMPONENTSHIFT3_COMPONENTSHIFTALPHA3_Pos 0UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_COLORCOMPONENTSHIFT3_COMPONENTSHIFTALPHA3_Msk 0x1FUL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_COLORCOMPONENTSHIFT3_COMPONENTSHIFTBLUE3_Pos 8UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_COLORCOMPONENTSHIFT3_COMPONENTSHIFTBLUE3_Msk 0x1F00UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_COLORCOMPONENTSHIFT3_COMPONENTSHIFTGREEN3_Pos 16UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_COLORCOMPONENTSHIFT3_COMPONENTSHIFTGREEN3_Msk 0x1F0000UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_COLORCOMPONENTSHIFT3_COMPONENTSHIFTRED3_Pos 24UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_COLORCOMPONENTSHIFT3_COMPONENTSHIFTRED3_Msk 0x1F000000UL
/* VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0.LAYEROFFSET3 */
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_LAYEROFFSET3_LAYERXOFFSET3_Pos 0UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_LAYEROFFSET3_LAYERXOFFSET3_Msk 0x7FFFUL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_LAYEROFFSET3_LAYERYOFFSET3_Pos 16UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_LAYEROFFSET3_LAYERYOFFSET3_Msk 0x7FFF0000UL
/* VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0.CLIPWINDOWOFFSET3 */
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_CLIPWINDOWOFFSET3_CLIPWINDOWXOFFSET3_Pos 0UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_CLIPWINDOWOFFSET3_CLIPWINDOWXOFFSET3_Msk 0x7FFFUL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_CLIPWINDOWOFFSET3_CLIPWINDOWYOFFSET3_Pos 16UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_CLIPWINDOWOFFSET3_CLIPWINDOWYOFFSET3_Msk 0x7FFF0000UL
/* VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0.CLIPWINDOWDIMENSIONS3 */
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_CLIPWINDOWDIMENSIONS3_CLIPWINDOWWIDTH3_Pos 0UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_CLIPWINDOWDIMENSIONS3_CLIPWINDOWWIDTH3_Msk 0x3FFFUL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_CLIPWINDOWDIMENSIONS3_CLIPWINDOWHEIGHT3_Pos 16UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_CLIPWINDOWDIMENSIONS3_CLIPWINDOWHEIGHT3_Msk 0x3FFF0000UL
/* VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0.CONSTANTCOLOR3 */
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_CONSTANTCOLOR3_CONSTANTALPHA3_Pos 0UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_CONSTANTCOLOR3_CONSTANTALPHA3_Msk 0xFFUL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_CONSTANTCOLOR3_CONSTANTBLUE3_Pos 8UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_CONSTANTCOLOR3_CONSTANTBLUE3_Msk 0xFF00UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_CONSTANTCOLOR3_CONSTANTGREEN3_Pos 16UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_CONSTANTCOLOR3_CONSTANTGREEN3_Msk 0xFF0000UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_CONSTANTCOLOR3_CONSTANTRED3_Pos 24UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_CONSTANTCOLOR3_CONSTANTRED3_Msk 0xFF000000UL
/* VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0.LAYERPROPERTY3 */
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_LAYERPROPERTY3_PALETTEENABLE3_Pos 0UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_LAYERPROPERTY3_PALETTEENABLE3_Msk 0x1UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_LAYERPROPERTY3_TILEMODE3_Pos 1UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_LAYERPROPERTY3_TILEMODE3_Msk 0x6UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_LAYERPROPERTY3_ALPHASRCENABLE3_Pos 3UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_LAYERPROPERTY3_ALPHASRCENABLE3_Msk 0x8UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_LAYERPROPERTY3_ALPHACONSTENABLE3_Pos 4UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_LAYERPROPERTY3_ALPHACONSTENABLE3_Msk 0x10UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_LAYERPROPERTY3_ALPHATRANSENABLE3_Pos 6UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_LAYERPROPERTY3_ALPHATRANSENABLE3_Msk 0x40UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_LAYERPROPERTY3_RGBALPHASRCENABLE3_Pos 7UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_LAYERPROPERTY3_RGBALPHASRCENABLE3_Msk 0x80UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_LAYERPROPERTY3_RGBALPHACONSTENABLE3_Pos 8UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_LAYERPROPERTY3_RGBALPHACONSTENABLE3_Msk 0x100UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_LAYERPROPERTY3_RGBALPHATRANSENABLE3_Pos 10UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_LAYERPROPERTY3_RGBALPHATRANSENABLE3_Msk 0x400UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_LAYERPROPERTY3_PREMULCONSTRGB3_Pos 11UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_LAYERPROPERTY3_PREMULCONSTRGB3_Msk 0x800UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_LAYERPROPERTY3_YUVCONVERSIONMODE3_Pos 12UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_LAYERPROPERTY3_YUVCONVERSIONMODE3_Msk 0x3000UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_LAYERPROPERTY3_GAMMAREMOVEENABLE3_Pos 14UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_LAYERPROPERTY3_GAMMAREMOVEENABLE3_Msk 0x4000UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_LAYERPROPERTY3_PALETTEOFFSET3_Pos 16UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_LAYERPROPERTY3_PALETTEOFFSET3_Msk 0x7FF0000UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_LAYERPROPERTY3_PALETTEIDWIDTH3_Pos 27UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_LAYERPROPERTY3_PALETTEIDWIDTH3_Msk 0x38000000UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_LAYERPROPERTY3_CLIPWINDOWENABLE3_Pos 30UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_LAYERPROPERTY3_CLIPWINDOWENABLE3_Msk 0x40000000UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_LAYERPROPERTY3_SOURCEBUFFERENABLE3_Pos 31UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_LAYERPROPERTY3_SOURCEBUFFERENABLE3_Msk 0x80000000UL
/* VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0.BASEADDRESS4 */
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_BASEADDRESS4_BASEADDRESS4_Pos 0UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_BASEADDRESS4_BASEADDRESS4_Msk 0xFFFFFFFFUL
/* VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0.SOURCEBUFFERATTRIBUTES4 */
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_SOURCEBUFFERATTRIBUTES4_STRIDE4_Pos 0UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_SOURCEBUFFERATTRIBUTES4_STRIDE4_Msk 0xFFFFUL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_SOURCEBUFFERATTRIBUTES4_BITSPERPIXEL4_Pos 16UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_SOURCEBUFFERATTRIBUTES4_BITSPERPIXEL4_Msk 0x3F0000UL
/* VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0.SOURCEBUFFERDIMENSION4 */
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_SOURCEBUFFERDIMENSION4_LINEWIDTH4_Pos 0UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_SOURCEBUFFERDIMENSION4_LINEWIDTH4_Msk 0x3FFFUL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_SOURCEBUFFERDIMENSION4_LINECOUNT4_Pos 16UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_SOURCEBUFFERDIMENSION4_LINECOUNT4_Msk 0x3FFF0000UL
/* VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0.COLORCOMPONENTBITS4 */
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_COLORCOMPONENTBITS4_COMPONENTBITSALPHA4_Pos 0UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_COLORCOMPONENTBITS4_COMPONENTBITSALPHA4_Msk 0xFUL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_COLORCOMPONENTBITS4_COMPONENTBITSBLUE4_Pos 8UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_COLORCOMPONENTBITS4_COMPONENTBITSBLUE4_Msk 0xF00UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_COLORCOMPONENTBITS4_COMPONENTBITSGREEN4_Pos 16UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_COLORCOMPONENTBITS4_COMPONENTBITSGREEN4_Msk 0xF0000UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_COLORCOMPONENTBITS4_COMPONENTBITSRED4_Pos 24UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_COLORCOMPONENTBITS4_COMPONENTBITSRED4_Msk 0xF000000UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_COLORCOMPONENTBITS4_ITUFORMAT4_Pos 31UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_COLORCOMPONENTBITS4_ITUFORMAT4_Msk 0x80000000UL
/* VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0.COLORCOMPONENTSHIFT4 */
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_COLORCOMPONENTSHIFT4_COMPONENTSHIFTALPHA4_Pos 0UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_COLORCOMPONENTSHIFT4_COMPONENTSHIFTALPHA4_Msk 0x1FUL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_COLORCOMPONENTSHIFT4_COMPONENTSHIFTBLUE4_Pos 8UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_COLORCOMPONENTSHIFT4_COMPONENTSHIFTBLUE4_Msk 0x1F00UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_COLORCOMPONENTSHIFT4_COMPONENTSHIFTGREEN4_Pos 16UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_COLORCOMPONENTSHIFT4_COMPONENTSHIFTGREEN4_Msk 0x1F0000UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_COLORCOMPONENTSHIFT4_COMPONENTSHIFTRED4_Pos 24UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_COLORCOMPONENTSHIFT4_COMPONENTSHIFTRED4_Msk 0x1F000000UL
/* VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0.LAYEROFFSET4 */
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_LAYEROFFSET4_LAYERXOFFSET4_Pos 0UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_LAYEROFFSET4_LAYERXOFFSET4_Msk 0x7FFFUL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_LAYEROFFSET4_LAYERYOFFSET4_Pos 16UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_LAYEROFFSET4_LAYERYOFFSET4_Msk 0x7FFF0000UL
/* VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0.CLIPWINDOWOFFSET4 */
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_CLIPWINDOWOFFSET4_CLIPWINDOWXOFFSET4_Pos 0UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_CLIPWINDOWOFFSET4_CLIPWINDOWXOFFSET4_Msk 0x7FFFUL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_CLIPWINDOWOFFSET4_CLIPWINDOWYOFFSET4_Pos 16UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_CLIPWINDOWOFFSET4_CLIPWINDOWYOFFSET4_Msk 0x7FFF0000UL
/* VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0.CLIPWINDOWDIMENSIONS4 */
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_CLIPWINDOWDIMENSIONS4_CLIPWINDOWWIDTH4_Pos 0UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_CLIPWINDOWDIMENSIONS4_CLIPWINDOWWIDTH4_Msk 0x3FFFUL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_CLIPWINDOWDIMENSIONS4_CLIPWINDOWHEIGHT4_Pos 16UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_CLIPWINDOWDIMENSIONS4_CLIPWINDOWHEIGHT4_Msk 0x3FFF0000UL
/* VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0.CONSTANTCOLOR4 */
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_CONSTANTCOLOR4_CONSTANTALPHA4_Pos 0UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_CONSTANTCOLOR4_CONSTANTALPHA4_Msk 0xFFUL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_CONSTANTCOLOR4_CONSTANTBLUE4_Pos 8UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_CONSTANTCOLOR4_CONSTANTBLUE4_Msk 0xFF00UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_CONSTANTCOLOR4_CONSTANTGREEN4_Pos 16UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_CONSTANTCOLOR4_CONSTANTGREEN4_Msk 0xFF0000UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_CONSTANTCOLOR4_CONSTANTRED4_Pos 24UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_CONSTANTCOLOR4_CONSTANTRED4_Msk 0xFF000000UL
/* VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0.LAYERPROPERTY4 */
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_LAYERPROPERTY4_PALETTEENABLE4_Pos 0UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_LAYERPROPERTY4_PALETTEENABLE4_Msk 0x1UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_LAYERPROPERTY4_TILEMODE4_Pos 1UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_LAYERPROPERTY4_TILEMODE4_Msk 0x6UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_LAYERPROPERTY4_ALPHASRCENABLE4_Pos 3UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_LAYERPROPERTY4_ALPHASRCENABLE4_Msk 0x8UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_LAYERPROPERTY4_ALPHACONSTENABLE4_Pos 4UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_LAYERPROPERTY4_ALPHACONSTENABLE4_Msk 0x10UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_LAYERPROPERTY4_ALPHATRANSENABLE4_Pos 6UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_LAYERPROPERTY4_ALPHATRANSENABLE4_Msk 0x40UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_LAYERPROPERTY4_RGBALPHASRCENABLE4_Pos 7UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_LAYERPROPERTY4_RGBALPHASRCENABLE4_Msk 0x80UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_LAYERPROPERTY4_RGBALPHACONSTENABLE4_Pos 8UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_LAYERPROPERTY4_RGBALPHACONSTENABLE4_Msk 0x100UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_LAYERPROPERTY4_RGBALPHATRANSENABLE4_Pos 10UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_LAYERPROPERTY4_RGBALPHATRANSENABLE4_Msk 0x400UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_LAYERPROPERTY4_PREMULCONSTRGB4_Pos 11UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_LAYERPROPERTY4_PREMULCONSTRGB4_Msk 0x800UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_LAYERPROPERTY4_YUVCONVERSIONMODE4_Pos 12UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_LAYERPROPERTY4_YUVCONVERSIONMODE4_Msk 0x3000UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_LAYERPROPERTY4_GAMMAREMOVEENABLE4_Pos 14UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_LAYERPROPERTY4_GAMMAREMOVEENABLE4_Msk 0x4000UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_LAYERPROPERTY4_PALETTEOFFSET4_Pos 16UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_LAYERPROPERTY4_PALETTEOFFSET4_Msk 0x7FF0000UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_LAYERPROPERTY4_PALETTEIDWIDTH4_Pos 27UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_LAYERPROPERTY4_PALETTEIDWIDTH4_Msk 0x38000000UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_LAYERPROPERTY4_CLIPWINDOWENABLE4_Pos 30UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_LAYERPROPERTY4_CLIPWINDOWENABLE4_Msk 0x40000000UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_LAYERPROPERTY4_SOURCEBUFFERENABLE4_Pos 31UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_LAYERPROPERTY4_SOURCEBUFFERENABLE4_Msk 0x80000000UL
/* VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0.BASEADDRESS5 */
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_BASEADDRESS5_BASEADDRESS5_Pos 0UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_BASEADDRESS5_BASEADDRESS5_Msk 0xFFFFFFFFUL
/* VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0.SOURCEBUFFERATTRIBUTES5 */
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_SOURCEBUFFERATTRIBUTES5_STRIDE5_Pos 0UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_SOURCEBUFFERATTRIBUTES5_STRIDE5_Msk 0xFFFFUL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_SOURCEBUFFERATTRIBUTES5_BITSPERPIXEL5_Pos 16UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_SOURCEBUFFERATTRIBUTES5_BITSPERPIXEL5_Msk 0x3F0000UL
/* VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0.SOURCEBUFFERDIMENSION5 */
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_SOURCEBUFFERDIMENSION5_LINEWIDTH5_Pos 0UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_SOURCEBUFFERDIMENSION5_LINEWIDTH5_Msk 0x3FFFUL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_SOURCEBUFFERDIMENSION5_LINECOUNT5_Pos 16UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_SOURCEBUFFERDIMENSION5_LINECOUNT5_Msk 0x3FFF0000UL
/* VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0.COLORCOMPONENTBITS5 */
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_COLORCOMPONENTBITS5_COMPONENTBITSALPHA5_Pos 0UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_COLORCOMPONENTBITS5_COMPONENTBITSALPHA5_Msk 0xFUL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_COLORCOMPONENTBITS5_COMPONENTBITSBLUE5_Pos 8UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_COLORCOMPONENTBITS5_COMPONENTBITSBLUE5_Msk 0xF00UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_COLORCOMPONENTBITS5_COMPONENTBITSGREEN5_Pos 16UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_COLORCOMPONENTBITS5_COMPONENTBITSGREEN5_Msk 0xF0000UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_COLORCOMPONENTBITS5_COMPONENTBITSRED5_Pos 24UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_COLORCOMPONENTBITS5_COMPONENTBITSRED5_Msk 0xF000000UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_COLORCOMPONENTBITS5_ITUFORMAT5_Pos 31UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_COLORCOMPONENTBITS5_ITUFORMAT5_Msk 0x80000000UL
/* VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0.COLORCOMPONENTSHIFT5 */
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_COLORCOMPONENTSHIFT5_COMPONENTSHIFTALPHA5_Pos 0UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_COLORCOMPONENTSHIFT5_COMPONENTSHIFTALPHA5_Msk 0x1FUL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_COLORCOMPONENTSHIFT5_COMPONENTSHIFTBLUE5_Pos 8UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_COLORCOMPONENTSHIFT5_COMPONENTSHIFTBLUE5_Msk 0x1F00UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_COLORCOMPONENTSHIFT5_COMPONENTSHIFTGREEN5_Pos 16UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_COLORCOMPONENTSHIFT5_COMPONENTSHIFTGREEN5_Msk 0x1F0000UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_COLORCOMPONENTSHIFT5_COMPONENTSHIFTRED5_Pos 24UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_COLORCOMPONENTSHIFT5_COMPONENTSHIFTRED5_Msk 0x1F000000UL
/* VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0.LAYEROFFSET5 */
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_LAYEROFFSET5_LAYERXOFFSET5_Pos 0UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_LAYEROFFSET5_LAYERXOFFSET5_Msk 0x7FFFUL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_LAYEROFFSET5_LAYERYOFFSET5_Pos 16UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_LAYEROFFSET5_LAYERYOFFSET5_Msk 0x7FFF0000UL
/* VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0.CLIPWINDOWOFFSET5 */
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_CLIPWINDOWOFFSET5_CLIPWINDOWXOFFSET5_Pos 0UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_CLIPWINDOWOFFSET5_CLIPWINDOWXOFFSET5_Msk 0x7FFFUL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_CLIPWINDOWOFFSET5_CLIPWINDOWYOFFSET5_Pos 16UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_CLIPWINDOWOFFSET5_CLIPWINDOWYOFFSET5_Msk 0x7FFF0000UL
/* VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0.CLIPWINDOWDIMENSIONS5 */
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_CLIPWINDOWDIMENSIONS5_CLIPWINDOWWIDTH5_Pos 0UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_CLIPWINDOWDIMENSIONS5_CLIPWINDOWWIDTH5_Msk 0x3FFFUL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_CLIPWINDOWDIMENSIONS5_CLIPWINDOWHEIGHT5_Pos 16UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_CLIPWINDOWDIMENSIONS5_CLIPWINDOWHEIGHT5_Msk 0x3FFF0000UL
/* VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0.CONSTANTCOLOR5 */
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_CONSTANTCOLOR5_CONSTANTALPHA5_Pos 0UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_CONSTANTCOLOR5_CONSTANTALPHA5_Msk 0xFFUL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_CONSTANTCOLOR5_CONSTANTBLUE5_Pos 8UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_CONSTANTCOLOR5_CONSTANTBLUE5_Msk 0xFF00UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_CONSTANTCOLOR5_CONSTANTGREEN5_Pos 16UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_CONSTANTCOLOR5_CONSTANTGREEN5_Msk 0xFF0000UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_CONSTANTCOLOR5_CONSTANTRED5_Pos 24UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_CONSTANTCOLOR5_CONSTANTRED5_Msk 0xFF000000UL
/* VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0.LAYERPROPERTY5 */
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_LAYERPROPERTY5_PALETTEENABLE5_Pos 0UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_LAYERPROPERTY5_PALETTEENABLE5_Msk 0x1UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_LAYERPROPERTY5_TILEMODE5_Pos 1UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_LAYERPROPERTY5_TILEMODE5_Msk 0x6UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_LAYERPROPERTY5_ALPHASRCENABLE5_Pos 3UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_LAYERPROPERTY5_ALPHASRCENABLE5_Msk 0x8UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_LAYERPROPERTY5_ALPHACONSTENABLE5_Pos 4UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_LAYERPROPERTY5_ALPHACONSTENABLE5_Msk 0x10UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_LAYERPROPERTY5_ALPHATRANSENABLE5_Pos 6UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_LAYERPROPERTY5_ALPHATRANSENABLE5_Msk 0x40UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_LAYERPROPERTY5_RGBALPHASRCENABLE5_Pos 7UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_LAYERPROPERTY5_RGBALPHASRCENABLE5_Msk 0x80UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_LAYERPROPERTY5_RGBALPHACONSTENABLE5_Pos 8UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_LAYERPROPERTY5_RGBALPHACONSTENABLE5_Msk 0x100UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_LAYERPROPERTY5_RGBALPHATRANSENABLE5_Pos 10UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_LAYERPROPERTY5_RGBALPHATRANSENABLE5_Msk 0x400UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_LAYERPROPERTY5_PREMULCONSTRGB5_Pos 11UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_LAYERPROPERTY5_PREMULCONSTRGB5_Msk 0x800UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_LAYERPROPERTY5_YUVCONVERSIONMODE5_Pos 12UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_LAYERPROPERTY5_YUVCONVERSIONMODE5_Msk 0x3000UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_LAYERPROPERTY5_GAMMAREMOVEENABLE5_Pos 14UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_LAYERPROPERTY5_GAMMAREMOVEENABLE5_Msk 0x4000UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_LAYERPROPERTY5_PALETTEOFFSET5_Pos 16UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_LAYERPROPERTY5_PALETTEOFFSET5_Msk 0x7FF0000UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_LAYERPROPERTY5_PALETTEIDWIDTH5_Pos 27UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_LAYERPROPERTY5_PALETTEIDWIDTH5_Msk 0x38000000UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_LAYERPROPERTY5_CLIPWINDOWENABLE5_Pos 30UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_LAYERPROPERTY5_CLIPWINDOWENABLE5_Msk 0x40000000UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_LAYERPROPERTY5_SOURCEBUFFERENABLE5_Pos 31UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_LAYERPROPERTY5_SOURCEBUFFERENABLE5_Msk 0x80000000UL
/* VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0.BASEADDRESS6 */
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_BASEADDRESS6_BASEADDRESS6_Pos 0UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_BASEADDRESS6_BASEADDRESS6_Msk 0xFFFFFFFFUL
/* VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0.SOURCEBUFFERATTRIBUTES6 */
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_SOURCEBUFFERATTRIBUTES6_STRIDE6_Pos 0UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_SOURCEBUFFERATTRIBUTES6_STRIDE6_Msk 0xFFFFUL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_SOURCEBUFFERATTRIBUTES6_BITSPERPIXEL6_Pos 16UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_SOURCEBUFFERATTRIBUTES6_BITSPERPIXEL6_Msk 0x3F0000UL
/* VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0.SOURCEBUFFERDIMENSION6 */
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_SOURCEBUFFERDIMENSION6_LINEWIDTH6_Pos 0UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_SOURCEBUFFERDIMENSION6_LINEWIDTH6_Msk 0x3FFFUL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_SOURCEBUFFERDIMENSION6_LINECOUNT6_Pos 16UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_SOURCEBUFFERDIMENSION6_LINECOUNT6_Msk 0x3FFF0000UL
/* VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0.COLORCOMPONENTBITS6 */
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_COLORCOMPONENTBITS6_COMPONENTBITSALPHA6_Pos 0UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_COLORCOMPONENTBITS6_COMPONENTBITSALPHA6_Msk 0xFUL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_COLORCOMPONENTBITS6_COMPONENTBITSBLUE6_Pos 8UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_COLORCOMPONENTBITS6_COMPONENTBITSBLUE6_Msk 0xF00UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_COLORCOMPONENTBITS6_COMPONENTBITSGREEN6_Pos 16UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_COLORCOMPONENTBITS6_COMPONENTBITSGREEN6_Msk 0xF0000UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_COLORCOMPONENTBITS6_COMPONENTBITSRED6_Pos 24UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_COLORCOMPONENTBITS6_COMPONENTBITSRED6_Msk 0xF000000UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_COLORCOMPONENTBITS6_ITUFORMAT6_Pos 31UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_COLORCOMPONENTBITS6_ITUFORMAT6_Msk 0x80000000UL
/* VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0.COLORCOMPONENTSHIFT6 */
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_COLORCOMPONENTSHIFT6_COMPONENTSHIFTALPHA6_Pos 0UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_COLORCOMPONENTSHIFT6_COMPONENTSHIFTALPHA6_Msk 0x1FUL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_COLORCOMPONENTSHIFT6_COMPONENTSHIFTBLUE6_Pos 8UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_COLORCOMPONENTSHIFT6_COMPONENTSHIFTBLUE6_Msk 0x1F00UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_COLORCOMPONENTSHIFT6_COMPONENTSHIFTGREEN6_Pos 16UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_COLORCOMPONENTSHIFT6_COMPONENTSHIFTGREEN6_Msk 0x1F0000UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_COLORCOMPONENTSHIFT6_COMPONENTSHIFTRED6_Pos 24UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_COLORCOMPONENTSHIFT6_COMPONENTSHIFTRED6_Msk 0x1F000000UL
/* VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0.LAYEROFFSET6 */
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_LAYEROFFSET6_LAYERXOFFSET6_Pos 0UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_LAYEROFFSET6_LAYERXOFFSET6_Msk 0x7FFFUL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_LAYEROFFSET6_LAYERYOFFSET6_Pos 16UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_LAYEROFFSET6_LAYERYOFFSET6_Msk 0x7FFF0000UL
/* VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0.CLIPWINDOWOFFSET6 */
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_CLIPWINDOWOFFSET6_CLIPWINDOWXOFFSET6_Pos 0UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_CLIPWINDOWOFFSET6_CLIPWINDOWXOFFSET6_Msk 0x7FFFUL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_CLIPWINDOWOFFSET6_CLIPWINDOWYOFFSET6_Pos 16UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_CLIPWINDOWOFFSET6_CLIPWINDOWYOFFSET6_Msk 0x7FFF0000UL
/* VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0.CLIPWINDOWDIMENSIONS6 */
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_CLIPWINDOWDIMENSIONS6_CLIPWINDOWWIDTH6_Pos 0UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_CLIPWINDOWDIMENSIONS6_CLIPWINDOWWIDTH6_Msk 0x3FFFUL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_CLIPWINDOWDIMENSIONS6_CLIPWINDOWHEIGHT6_Pos 16UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_CLIPWINDOWDIMENSIONS6_CLIPWINDOWHEIGHT6_Msk 0x3FFF0000UL
/* VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0.CONSTANTCOLOR6 */
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_CONSTANTCOLOR6_CONSTANTALPHA6_Pos 0UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_CONSTANTCOLOR6_CONSTANTALPHA6_Msk 0xFFUL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_CONSTANTCOLOR6_CONSTANTBLUE6_Pos 8UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_CONSTANTCOLOR6_CONSTANTBLUE6_Msk 0xFF00UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_CONSTANTCOLOR6_CONSTANTGREEN6_Pos 16UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_CONSTANTCOLOR6_CONSTANTGREEN6_Msk 0xFF0000UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_CONSTANTCOLOR6_CONSTANTRED6_Pos 24UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_CONSTANTCOLOR6_CONSTANTRED6_Msk 0xFF000000UL
/* VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0.LAYERPROPERTY6 */
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_LAYERPROPERTY6_PALETTEENABLE6_Pos 0UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_LAYERPROPERTY6_PALETTEENABLE6_Msk 0x1UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_LAYERPROPERTY6_TILEMODE6_Pos 1UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_LAYERPROPERTY6_TILEMODE6_Msk 0x6UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_LAYERPROPERTY6_ALPHASRCENABLE6_Pos 3UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_LAYERPROPERTY6_ALPHASRCENABLE6_Msk 0x8UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_LAYERPROPERTY6_ALPHACONSTENABLE6_Pos 4UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_LAYERPROPERTY6_ALPHACONSTENABLE6_Msk 0x10UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_LAYERPROPERTY6_ALPHATRANSENABLE6_Pos 6UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_LAYERPROPERTY6_ALPHATRANSENABLE6_Msk 0x40UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_LAYERPROPERTY6_RGBALPHASRCENABLE6_Pos 7UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_LAYERPROPERTY6_RGBALPHASRCENABLE6_Msk 0x80UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_LAYERPROPERTY6_RGBALPHACONSTENABLE6_Pos 8UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_LAYERPROPERTY6_RGBALPHACONSTENABLE6_Msk 0x100UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_LAYERPROPERTY6_RGBALPHATRANSENABLE6_Pos 10UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_LAYERPROPERTY6_RGBALPHATRANSENABLE6_Msk 0x400UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_LAYERPROPERTY6_PREMULCONSTRGB6_Pos 11UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_LAYERPROPERTY6_PREMULCONSTRGB6_Msk 0x800UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_LAYERPROPERTY6_YUVCONVERSIONMODE6_Pos 12UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_LAYERPROPERTY6_YUVCONVERSIONMODE6_Msk 0x3000UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_LAYERPROPERTY6_GAMMAREMOVEENABLE6_Pos 14UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_LAYERPROPERTY6_GAMMAREMOVEENABLE6_Msk 0x4000UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_LAYERPROPERTY6_PALETTEOFFSET6_Pos 16UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_LAYERPROPERTY6_PALETTEOFFSET6_Msk 0x7FF0000UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_LAYERPROPERTY6_PALETTEIDWIDTH6_Pos 27UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_LAYERPROPERTY6_PALETTEIDWIDTH6_Msk 0x38000000UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_LAYERPROPERTY6_CLIPWINDOWENABLE6_Pos 30UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_LAYERPROPERTY6_CLIPWINDOWENABLE6_Msk 0x40000000UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_LAYERPROPERTY6_SOURCEBUFFERENABLE6_Pos 31UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_LAYERPROPERTY6_SOURCEBUFFERENABLE6_Msk 0x80000000UL
/* VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0.BASEADDRESS7 */
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_BASEADDRESS7_BASEADDRESS7_Pos 0UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_BASEADDRESS7_BASEADDRESS7_Msk 0xFFFFFFFFUL
/* VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0.SOURCEBUFFERATTRIBUTES7 */
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_SOURCEBUFFERATTRIBUTES7_STRIDE7_Pos 0UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_SOURCEBUFFERATTRIBUTES7_STRIDE7_Msk 0xFFFFUL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_SOURCEBUFFERATTRIBUTES7_BITSPERPIXEL7_Pos 16UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_SOURCEBUFFERATTRIBUTES7_BITSPERPIXEL7_Msk 0x3F0000UL
/* VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0.SOURCEBUFFERDIMENSION7 */
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_SOURCEBUFFERDIMENSION7_LINEWIDTH7_Pos 0UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_SOURCEBUFFERDIMENSION7_LINEWIDTH7_Msk 0x3FFFUL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_SOURCEBUFFERDIMENSION7_LINECOUNT7_Pos 16UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_SOURCEBUFFERDIMENSION7_LINECOUNT7_Msk 0x3FFF0000UL
/* VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0.COLORCOMPONENTBITS7 */
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_COLORCOMPONENTBITS7_COMPONENTBITSALPHA7_Pos 0UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_COLORCOMPONENTBITS7_COMPONENTBITSALPHA7_Msk 0xFUL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_COLORCOMPONENTBITS7_COMPONENTBITSBLUE7_Pos 8UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_COLORCOMPONENTBITS7_COMPONENTBITSBLUE7_Msk 0xF00UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_COLORCOMPONENTBITS7_COMPONENTBITSGREEN7_Pos 16UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_COLORCOMPONENTBITS7_COMPONENTBITSGREEN7_Msk 0xF0000UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_COLORCOMPONENTBITS7_COMPONENTBITSRED7_Pos 24UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_COLORCOMPONENTBITS7_COMPONENTBITSRED7_Msk 0xF000000UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_COLORCOMPONENTBITS7_ITUFORMAT7_Pos 31UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_COLORCOMPONENTBITS7_ITUFORMAT7_Msk 0x80000000UL
/* VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0.COLORCOMPONENTSHIFT7 */
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_COLORCOMPONENTSHIFT7_COMPONENTSHIFTALPHA7_Pos 0UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_COLORCOMPONENTSHIFT7_COMPONENTSHIFTALPHA7_Msk 0x1FUL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_COLORCOMPONENTSHIFT7_COMPONENTSHIFTBLUE7_Pos 8UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_COLORCOMPONENTSHIFT7_COMPONENTSHIFTBLUE7_Msk 0x1F00UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_COLORCOMPONENTSHIFT7_COMPONENTSHIFTGREEN7_Pos 16UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_COLORCOMPONENTSHIFT7_COMPONENTSHIFTGREEN7_Msk 0x1F0000UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_COLORCOMPONENTSHIFT7_COMPONENTSHIFTRED7_Pos 24UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_COLORCOMPONENTSHIFT7_COMPONENTSHIFTRED7_Msk 0x1F000000UL
/* VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0.LAYEROFFSET7 */
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_LAYEROFFSET7_LAYERXOFFSET7_Pos 0UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_LAYEROFFSET7_LAYERXOFFSET7_Msk 0x7FFFUL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_LAYEROFFSET7_LAYERYOFFSET7_Pos 16UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_LAYEROFFSET7_LAYERYOFFSET7_Msk 0x7FFF0000UL
/* VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0.CLIPWINDOWOFFSET7 */
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_CLIPWINDOWOFFSET7_CLIPWINDOWXOFFSET7_Pos 0UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_CLIPWINDOWOFFSET7_CLIPWINDOWXOFFSET7_Msk 0x7FFFUL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_CLIPWINDOWOFFSET7_CLIPWINDOWYOFFSET7_Pos 16UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_CLIPWINDOWOFFSET7_CLIPWINDOWYOFFSET7_Msk 0x7FFF0000UL
/* VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0.CLIPWINDOWDIMENSIONS7 */
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_CLIPWINDOWDIMENSIONS7_CLIPWINDOWWIDTH7_Pos 0UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_CLIPWINDOWDIMENSIONS7_CLIPWINDOWWIDTH7_Msk 0x3FFFUL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_CLIPWINDOWDIMENSIONS7_CLIPWINDOWHEIGHT7_Pos 16UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_CLIPWINDOWDIMENSIONS7_CLIPWINDOWHEIGHT7_Msk 0x3FFF0000UL
/* VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0.CONSTANTCOLOR7 */
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_CONSTANTCOLOR7_CONSTANTALPHA7_Pos 0UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_CONSTANTCOLOR7_CONSTANTALPHA7_Msk 0xFFUL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_CONSTANTCOLOR7_CONSTANTBLUE7_Pos 8UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_CONSTANTCOLOR7_CONSTANTBLUE7_Msk 0xFF00UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_CONSTANTCOLOR7_CONSTANTGREEN7_Pos 16UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_CONSTANTCOLOR7_CONSTANTGREEN7_Msk 0xFF0000UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_CONSTANTCOLOR7_CONSTANTRED7_Pos 24UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_CONSTANTCOLOR7_CONSTANTRED7_Msk 0xFF000000UL
/* VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0.LAYERPROPERTY7 */
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_LAYERPROPERTY7_PALETTEENABLE7_Pos 0UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_LAYERPROPERTY7_PALETTEENABLE7_Msk 0x1UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_LAYERPROPERTY7_TILEMODE7_Pos 1UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_LAYERPROPERTY7_TILEMODE7_Msk 0x6UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_LAYERPROPERTY7_ALPHASRCENABLE7_Pos 3UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_LAYERPROPERTY7_ALPHASRCENABLE7_Msk 0x8UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_LAYERPROPERTY7_ALPHACONSTENABLE7_Pos 4UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_LAYERPROPERTY7_ALPHACONSTENABLE7_Msk 0x10UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_LAYERPROPERTY7_ALPHATRANSENABLE7_Pos 6UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_LAYERPROPERTY7_ALPHATRANSENABLE7_Msk 0x40UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_LAYERPROPERTY7_RGBALPHASRCENABLE7_Pos 7UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_LAYERPROPERTY7_RGBALPHASRCENABLE7_Msk 0x80UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_LAYERPROPERTY7_RGBALPHACONSTENABLE7_Pos 8UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_LAYERPROPERTY7_RGBALPHACONSTENABLE7_Msk 0x100UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_LAYERPROPERTY7_RGBALPHATRANSENABLE7_Pos 10UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_LAYERPROPERTY7_RGBALPHATRANSENABLE7_Msk 0x400UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_LAYERPROPERTY7_PREMULCONSTRGB7_Pos 11UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_LAYERPROPERTY7_PREMULCONSTRGB7_Msk 0x800UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_LAYERPROPERTY7_YUVCONVERSIONMODE7_Pos 12UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_LAYERPROPERTY7_YUVCONVERSIONMODE7_Msk 0x3000UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_LAYERPROPERTY7_GAMMAREMOVEENABLE7_Pos 14UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_LAYERPROPERTY7_GAMMAREMOVEENABLE7_Msk 0x4000UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_LAYERPROPERTY7_PALETTEOFFSET7_Pos 16UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_LAYERPROPERTY7_PALETTEOFFSET7_Msk 0x7FF0000UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_LAYERPROPERTY7_PALETTEIDWIDTH7_Pos 27UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_LAYERPROPERTY7_PALETTEIDWIDTH7_Msk 0x38000000UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_LAYERPROPERTY7_CLIPWINDOWENABLE7_Pos 30UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_LAYERPROPERTY7_CLIPWINDOWENABLE7_Msk 0x40000000UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_LAYERPROPERTY7_SOURCEBUFFERENABLE7_Pos 31UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_LAYERPROPERTY7_SOURCEBUFFERENABLE7_Msk 0x80000000UL
/* VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0.FRAMEDIMENSIONS */
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_FRAMEDIMENSIONS_FRAMEWIDTH_Pos 0UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_FRAMEDIMENSIONS_FRAMEWIDTH_Msk 0x3FFFUL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_FRAMEDIMENSIONS_FRAMEHEIGHT_Pos 16UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_FRAMEDIMENSIONS_FRAMEHEIGHT_Msk 0x3FFF0000UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_FRAMEDIMENSIONS_EMPTYFRAME_Pos 31UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_FRAMEDIMENSIONS_EMPTYFRAME_Msk 0x80000000UL
/* VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0.FRAMERESAMPLING */
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_FRAMERESAMPLING_STARTX_Pos 0UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_FRAMERESAMPLING_STARTX_Msk 0x3FUL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_FRAMERESAMPLING_STARTY_Pos 6UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_FRAMERESAMPLING_STARTY_Msk 0xFC0UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_FRAMERESAMPLING_DELTAX_Pos 12UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_FRAMERESAMPLING_DELTAX_Msk 0x3F000UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_FRAMERESAMPLING_DELTAY_Pos 18UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_FRAMERESAMPLING_DELTAY_Msk 0xFC0000UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_FRAMERESAMPLING_SWAPDIRECTION_Pos 24UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_FRAMERESAMPLING_SWAPDIRECTION_Msk 0x1000000UL
/* VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0.CONTROL */
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_CONTROL_RAWPIXEL_Pos 7UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_CONTROL_RAWPIXEL_Msk 0x80UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_CONTROL_CLIPCOLOR_Pos 16UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_CONTROL_CLIPCOLOR_Msk 0x10000UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_CONTROL_CLIPLAYER_Pos 17UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_CONTROL_CLIPLAYER_Msk 0xE0000UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_CONTROL_LINEBUFLAYER_Pos 24UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_CONTROL_LINEBUFLAYER_Msk 0x7000000UL
/* VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0.TRIGGERENABLE */
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_TRIGGERENABLE_SHDLDREQ_Pos 0UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_TRIGGERENABLE_SHDLDREQ_Msk 0xFFUL
/* VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0.CONTROLTRIGGER */
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_CONTROLTRIGGER_SHDTOKGEN_Pos 0UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_CONTROLTRIGGER_SHDTOKGEN_Msk 0x1UL
/* VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0.START */
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_START_START_Pos 0UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_START_START_Msk 0x1UL
/* VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0.FETCHTYPE */
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_FETCHTYPE_FETCHTYPE_Pos 0UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_FETCHTYPE_FETCHTYPE_Msk 0xFUL
/* VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0.BURSTBUFFERPROPERTIES */
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_BURSTBUFFERPROPERTIES_MANAGEDBURSTBUFFERS_Pos 0UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_BURSTBUFFERPROPERTIES_MANAGEDBURSTBUFFERS_Msk 0xFFUL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_BURSTBUFFERPROPERTIES_BURSTLENGTHFORMAXBUFFERS_Pos 8UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_BURSTBUFFERPROPERTIES_BURSTLENGTHFORMAXBUFFERS_Msk 0x1F00UL
/* VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0.STATUS */
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_STATUS_WRITETIMEOUT_Pos 0UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_STATUS_WRITETIMEOUT_Msk 0x1UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_STATUS_READTIMEOUT_Pos 4UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER0_STATUS_READTIMEOUT_Msk 0x10UL


/* VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHDECODE4.STATICCONTROL */
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHDECODE4_STATICCONTROL_SHDEN_Pos 0UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHDECODE4_STATICCONTROL_SHDEN_Msk 0x1UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHDECODE4_STATICCONTROL_LBHSHDEN_Pos 1UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHDECODE4_STATICCONTROL_LBHSHDEN_Msk 0x2UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHDECODE4_STATICCONTROL_BASEADDRESSAUTOUPDATE_Pos 16UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHDECODE4_STATICCONTROL_BASEADDRESSAUTOUPDATE_Msk 0xFF0000UL
/* VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHDECODE4.BURSTBUFFERMANAGEMENT */
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHDECODE4_BURSTBUFFERMANAGEMENT_SETNUMBUFFERS_Pos 0UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHDECODE4_BURSTBUFFERMANAGEMENT_SETNUMBUFFERS_Msk 0xFFUL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHDECODE4_BURSTBUFFERMANAGEMENT_SETBURSTLENGTH_Pos 8UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHDECODE4_BURSTBUFFERMANAGEMENT_SETBURSTLENGTH_Msk 0x1F00UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHDECODE4_BURSTBUFFERMANAGEMENT_LINEMODE_Pos 31UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHDECODE4_BURSTBUFFERMANAGEMENT_LINEMODE_Msk 0x80000000UL
/* VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHDECODE4.RINGBUFSTARTADDR0 */
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHDECODE4_RINGBUFSTARTADDR0_RINGBUFSTARTADDR0_Pos 0UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHDECODE4_RINGBUFSTARTADDR0_RINGBUFSTARTADDR0_Msk 0xFFFFFFFFUL
/* VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHDECODE4.RINGBUFWRAPADDR0 */
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHDECODE4_RINGBUFWRAPADDR0_RINGBUFWRAPADDR0_Pos 0UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHDECODE4_RINGBUFWRAPADDR0_RINGBUFWRAPADDR0_Msk 0xFFFFFFFFUL
/* VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHDECODE4.FRAMEPROPERTIES0 */
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHDECODE4_FRAMEPROPERTIES0_FIELDID0_Pos 0UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHDECODE4_FRAMEPROPERTIES0_FIELDID0_Msk 0x1UL
/* VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHDECODE4.BASEADDRESS0 */
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHDECODE4_BASEADDRESS0_BASEADDRESS0_Pos 0UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHDECODE4_BASEADDRESS0_BASEADDRESS0_Msk 0xFFFFFFFFUL
/* VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHDECODE4.SOURCEBUFFERATTRIBUTES0 */
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHDECODE4_SOURCEBUFFERATTRIBUTES0_STRIDE0_Pos 0UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHDECODE4_SOURCEBUFFERATTRIBUTES0_STRIDE0_Msk 0xFFFFUL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHDECODE4_SOURCEBUFFERATTRIBUTES0_BITSPERPIXEL0_Pos 16UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHDECODE4_SOURCEBUFFERATTRIBUTES0_BITSPERPIXEL0_Msk 0x3F0000UL
/* VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHDECODE4.SOURCEBUFFERDIMENSION0 */
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHDECODE4_SOURCEBUFFERDIMENSION0_LINEWIDTH0_Pos 0UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHDECODE4_SOURCEBUFFERDIMENSION0_LINEWIDTH0_Msk 0x3FFFUL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHDECODE4_SOURCEBUFFERDIMENSION0_LINECOUNT0_Pos 16UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHDECODE4_SOURCEBUFFERDIMENSION0_LINECOUNT0_Msk 0x3FFF0000UL
/* VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHDECODE4.COLORCOMPONENTBITS0 */
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHDECODE4_COLORCOMPONENTBITS0_COMPONENTBITSALPHA0_Pos 0UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHDECODE4_COLORCOMPONENTBITS0_COMPONENTBITSALPHA0_Msk 0xFUL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHDECODE4_COLORCOMPONENTBITS0_COMPONENTBITSBLUE0_Pos 8UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHDECODE4_COLORCOMPONENTBITS0_COMPONENTBITSBLUE0_Msk 0xF00UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHDECODE4_COLORCOMPONENTBITS0_COMPONENTBITSGREEN0_Pos 16UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHDECODE4_COLORCOMPONENTBITS0_COMPONENTBITSGREEN0_Msk 0xF0000UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHDECODE4_COLORCOMPONENTBITS0_COMPONENTBITSRED0_Pos 24UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHDECODE4_COLORCOMPONENTBITS0_COMPONENTBITSRED0_Msk 0xF000000UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHDECODE4_COLORCOMPONENTBITS0_ITUFORMAT0_Pos 31UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHDECODE4_COLORCOMPONENTBITS0_ITUFORMAT0_Msk 0x80000000UL
/* VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHDECODE4.COLORCOMPONENTSHIFT0 */
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHDECODE4_COLORCOMPONENTSHIFT0_COMPONENTSHIFTALPHA0_Pos 0UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHDECODE4_COLORCOMPONENTSHIFT0_COMPONENTSHIFTALPHA0_Msk 0x1FUL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHDECODE4_COLORCOMPONENTSHIFT0_COMPONENTSHIFTBLUE0_Pos 8UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHDECODE4_COLORCOMPONENTSHIFT0_COMPONENTSHIFTBLUE0_Msk 0x1F00UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHDECODE4_COLORCOMPONENTSHIFT0_COMPONENTSHIFTGREEN0_Pos 16UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHDECODE4_COLORCOMPONENTSHIFT0_COMPONENTSHIFTGREEN0_Msk 0x1F0000UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHDECODE4_COLORCOMPONENTSHIFT0_COMPONENTSHIFTRED0_Pos 24UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHDECODE4_COLORCOMPONENTSHIFT0_COMPONENTSHIFTRED0_Msk 0x1F000000UL
/* VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHDECODE4.LAYEROFFSET0 */
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHDECODE4_LAYEROFFSET0_LAYERXOFFSET0_Pos 0UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHDECODE4_LAYEROFFSET0_LAYERXOFFSET0_Msk 0x7FFFUL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHDECODE4_LAYEROFFSET0_LAYERYOFFSET0_Pos 16UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHDECODE4_LAYEROFFSET0_LAYERYOFFSET0_Msk 0x7FFF0000UL
/* VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHDECODE4.CLIPWINDOWOFFSET0 */
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHDECODE4_CLIPWINDOWOFFSET0_CLIPWINDOWXOFFSET0_Pos 0UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHDECODE4_CLIPWINDOWOFFSET0_CLIPWINDOWXOFFSET0_Msk 0x7FFFUL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHDECODE4_CLIPWINDOWOFFSET0_CLIPWINDOWYOFFSET0_Pos 16UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHDECODE4_CLIPWINDOWOFFSET0_CLIPWINDOWYOFFSET0_Msk 0x7FFF0000UL
/* VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHDECODE4.CLIPWINDOWDIMENSIONS0 */
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHDECODE4_CLIPWINDOWDIMENSIONS0_CLIPWINDOWWIDTH0_Pos 0UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHDECODE4_CLIPWINDOWDIMENSIONS0_CLIPWINDOWWIDTH0_Msk 0x3FFFUL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHDECODE4_CLIPWINDOWDIMENSIONS0_CLIPWINDOWHEIGHT0_Pos 16UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHDECODE4_CLIPWINDOWDIMENSIONS0_CLIPWINDOWHEIGHT0_Msk 0x3FFF0000UL
/* VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHDECODE4.CONSTANTCOLOR0 */
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHDECODE4_CONSTANTCOLOR0_CONSTANTALPHA0_Pos 0UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHDECODE4_CONSTANTCOLOR0_CONSTANTALPHA0_Msk 0xFFUL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHDECODE4_CONSTANTCOLOR0_CONSTANTBLUE0_Pos 8UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHDECODE4_CONSTANTCOLOR0_CONSTANTBLUE0_Msk 0xFF00UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHDECODE4_CONSTANTCOLOR0_CONSTANTGREEN0_Pos 16UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHDECODE4_CONSTANTCOLOR0_CONSTANTGREEN0_Msk 0xFF0000UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHDECODE4_CONSTANTCOLOR0_CONSTANTRED0_Pos 24UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHDECODE4_CONSTANTCOLOR0_CONSTANTRED0_Msk 0xFF000000UL
/* VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHDECODE4.LAYERPROPERTY0 */
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHDECODE4_LAYERPROPERTY0_PALETTEENABLE0_Pos 0UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHDECODE4_LAYERPROPERTY0_PALETTEENABLE0_Msk 0x1UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHDECODE4_LAYERPROPERTY0_TILEMODE0_Pos 1UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHDECODE4_LAYERPROPERTY0_TILEMODE0_Msk 0x6UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHDECODE4_LAYERPROPERTY0_ALPHASRCENABLE0_Pos 3UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHDECODE4_LAYERPROPERTY0_ALPHASRCENABLE0_Msk 0x8UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHDECODE4_LAYERPROPERTY0_ALPHACONSTENABLE0_Pos 4UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHDECODE4_LAYERPROPERTY0_ALPHACONSTENABLE0_Msk 0x10UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHDECODE4_LAYERPROPERTY0_ALPHAMASKENABLE0_Pos 5UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHDECODE4_LAYERPROPERTY0_ALPHAMASKENABLE0_Msk 0x20UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHDECODE4_LAYERPROPERTY0_ALPHATRANSENABLE0_Pos 6UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHDECODE4_LAYERPROPERTY0_ALPHATRANSENABLE0_Msk 0x40UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHDECODE4_LAYERPROPERTY0_RGBALPHASRCENABLE0_Pos 7UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHDECODE4_LAYERPROPERTY0_RGBALPHASRCENABLE0_Msk 0x80UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHDECODE4_LAYERPROPERTY0_RGBALPHACONSTENABLE0_Pos 8UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHDECODE4_LAYERPROPERTY0_RGBALPHACONSTENABLE0_Msk 0x100UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHDECODE4_LAYERPROPERTY0_RGBALPHAMASKENABLE0_Pos 9UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHDECODE4_LAYERPROPERTY0_RGBALPHAMASKENABLE0_Msk 0x200UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHDECODE4_LAYERPROPERTY0_RGBALPHATRANSENABLE0_Pos 10UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHDECODE4_LAYERPROPERTY0_RGBALPHATRANSENABLE0_Msk 0x400UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHDECODE4_LAYERPROPERTY0_PREMULCONSTRGB0_Pos 11UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHDECODE4_LAYERPROPERTY0_PREMULCONSTRGB0_Msk 0x800UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHDECODE4_LAYERPROPERTY0_YUVCONVERSIONMODE0_Pos 12UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHDECODE4_LAYERPROPERTY0_YUVCONVERSIONMODE0_Msk 0x3000UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHDECODE4_LAYERPROPERTY0_GAMMAREMOVEENABLE0_Pos 14UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHDECODE4_LAYERPROPERTY0_GAMMAREMOVEENABLE0_Msk 0x4000UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHDECODE4_LAYERPROPERTY0_PALETTEOFFSET0_Pos 16UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHDECODE4_LAYERPROPERTY0_PALETTEOFFSET0_Msk 0x7FF0000UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHDECODE4_LAYERPROPERTY0_PALETTEIDWIDTH0_Pos 27UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHDECODE4_LAYERPROPERTY0_PALETTEIDWIDTH0_Msk 0x38000000UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHDECODE4_LAYERPROPERTY0_CLIPWINDOWENABLE0_Pos 30UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHDECODE4_LAYERPROPERTY0_CLIPWINDOWENABLE0_Msk 0x40000000UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHDECODE4_LAYERPROPERTY0_SOURCEBUFFERENABLE0_Pos 31UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHDECODE4_LAYERPROPERTY0_SOURCEBUFFERENABLE0_Msk 0x80000000UL
/* VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHDECODE4.FRAMEDIMENSIONS */
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHDECODE4_FRAMEDIMENSIONS_FRAMEWIDTH_Pos 0UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHDECODE4_FRAMEDIMENSIONS_FRAMEWIDTH_Msk 0x3FFFUL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHDECODE4_FRAMEDIMENSIONS_FRAMEHEIGHT_Pos 16UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHDECODE4_FRAMEDIMENSIONS_FRAMEHEIGHT_Msk 0x3FFF0000UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHDECODE4_FRAMEDIMENSIONS_EMPTYFRAME_Pos 31UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHDECODE4_FRAMEDIMENSIONS_EMPTYFRAME_Msk 0x80000000UL
/* VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHDECODE4.FRAMERESAMPLING */
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHDECODE4_FRAMERESAMPLING_STARTX_Pos 0UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHDECODE4_FRAMERESAMPLING_STARTX_Msk 0x3FUL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHDECODE4_FRAMERESAMPLING_STARTY_Pos 6UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHDECODE4_FRAMERESAMPLING_STARTY_Msk 0xFC0UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHDECODE4_FRAMERESAMPLING_DELTAX_Pos 12UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHDECODE4_FRAMERESAMPLING_DELTAX_Msk 0x3F000UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHDECODE4_FRAMERESAMPLING_DELTAY_Pos 18UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHDECODE4_FRAMERESAMPLING_DELTAY_Msk 0xFC0000UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHDECODE4_FRAMERESAMPLING_SWAPDIRECTION_Pos 24UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHDECODE4_FRAMERESAMPLING_SWAPDIRECTION_Msk 0x1000000UL
/* VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHDECODE4.DECODECONTROL */
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHDECODE4_DECODECONTROL_COMPRESSIONMODE_Pos 0UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHDECODE4_DECODECONTROL_COMPRESSIONMODE_Msk 0x3UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHDECODE4_DECODECONTROL_RLADCOMPBITSRED_Pos 16UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHDECODE4_DECODECONTROL_RLADCOMPBITSRED_Msk 0xF0000UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHDECODE4_DECODECONTROL_RLADCOMPBITSGREEN_Pos 20UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHDECODE4_DECODECONTROL_RLADCOMPBITSGREEN_Msk 0xF00000UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHDECODE4_DECODECONTROL_RLADCOMPBITSBLUE_Pos 24UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHDECODE4_DECODECONTROL_RLADCOMPBITSBLUE_Msk 0xF000000UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHDECODE4_DECODECONTROL_RLADCOMPBITSALPHA_Pos 28UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHDECODE4_DECODECONTROL_RLADCOMPBITSALPHA_Msk 0xF0000000UL
/* VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHDECODE4.SOURCEBUFFERLENGTH */
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHDECODE4_SOURCEBUFFERLENGTH_RLEWORDS_Pos 0UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHDECODE4_SOURCEBUFFERLENGTH_RLEWORDS_Msk 0x1FFFFFFFUL
/* VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHDECODE4.CONTROL */
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHDECODE4_CONTROL_RASTERMODE_Pos 0UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHDECODE4_CONTROL_RASTERMODE_Msk 0x7UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHDECODE4_CONTROL_INPUTSELECT_Pos 3UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHDECODE4_CONTROL_INPUTSELECT_Msk 0x18UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHDECODE4_CONTROL_YUV422UPSAMPLINGMODE_Pos 5UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHDECODE4_CONTROL_YUV422UPSAMPLINGMODE_Msk 0x20UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHDECODE4_CONTROL_RAWPIXEL_Pos 7UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHDECODE4_CONTROL_RAWPIXEL_Msk 0x80UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHDECODE4_CONTROL_CLIPCOLOR_Pos 16UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHDECODE4_CONTROL_CLIPCOLOR_Msk 0x10000UL
/* VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHDECODE4.CONTROLTRIGGER */
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHDECODE4_CONTROLTRIGGER_SHDTOKGEN_Pos 0UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHDECODE4_CONTROLTRIGGER_SHDTOKGEN_Msk 0x1UL
/* VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHDECODE4.START */
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHDECODE4_START_START_Pos 0UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHDECODE4_START_START_Msk 0x1UL
/* VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHDECODE4.FETCHTYPE */
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHDECODE4_FETCHTYPE_FETCHTYPE_Pos 0UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHDECODE4_FETCHTYPE_FETCHTYPE_Msk 0xFUL
/* VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHDECODE4.DECODERSTATUS */
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHDECODE4_DECODERSTATUS_BUFFERTOOSMALL_Pos 0UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHDECODE4_DECODERSTATUS_BUFFERTOOSMALL_Msk 0x1UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHDECODE4_DECODERSTATUS_BUFFERTOOLARGE_Pos 1UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHDECODE4_DECODERSTATUS_BUFFERTOOLARGE_Msk 0x2UL
/* VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHDECODE4.READADDRESS0 */
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHDECODE4_READADDRESS0_READADDRESS0_Pos 0UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHDECODE4_READADDRESS0_READADDRESS0_Msk 0xFFFFFFFFUL
/* VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHDECODE4.BURSTBUFFERPROPERTIES */
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHDECODE4_BURSTBUFFERPROPERTIES_MANAGEDBURSTBUFFERS_Pos 0UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHDECODE4_BURSTBUFFERPROPERTIES_MANAGEDBURSTBUFFERS_Msk 0xFFUL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHDECODE4_BURSTBUFFERPROPERTIES_BURSTLENGTHFORMAXBUFFERS_Pos 8UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHDECODE4_BURSTBUFFERPROPERTIES_BURSTLENGTHFORMAXBUFFERS_Msk 0x1F00UL
/* VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHDECODE4.STATUS */
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHDECODE4_STATUS_WRITETIMEOUT_Pos 0UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHDECODE4_STATUS_WRITETIMEOUT_Msk 0x1UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHDECODE4_STATUS_READTIMEOUT_Pos 4UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHDECODE4_STATUS_READTIMEOUT_Msk 0x10UL


/* VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHECO4.STATICCONTROL */
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHECO4_STATICCONTROL_SHDEN_Pos 0UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHECO4_STATICCONTROL_SHDEN_Msk 0x1UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHECO4_STATICCONTROL_BASEADDRESSAUTOUPDATE_Pos 16UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHECO4_STATICCONTROL_BASEADDRESSAUTOUPDATE_Msk 0xFF0000UL
/* VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHECO4.BURSTBUFFERMANAGEMENT */
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHECO4_BURSTBUFFERMANAGEMENT_SETNUMBUFFERS_Pos 0UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHECO4_BURSTBUFFERMANAGEMENT_SETNUMBUFFERS_Msk 0xFFUL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHECO4_BURSTBUFFERMANAGEMENT_SETBURSTLENGTH_Pos 8UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHECO4_BURSTBUFFERMANAGEMENT_SETBURSTLENGTH_Msk 0x1F00UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHECO4_BURSTBUFFERMANAGEMENT_LINEMODE_Pos 31UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHECO4_BURSTBUFFERMANAGEMENT_LINEMODE_Msk 0x80000000UL
/* VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHECO4.BASEADDRESS0 */
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHECO4_BASEADDRESS0_BASEADDRESS0_Pos 0UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHECO4_BASEADDRESS0_BASEADDRESS0_Msk 0xFFFFFFFFUL
/* VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHECO4.SOURCEBUFFERATTRIBUTES0 */
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHECO4_SOURCEBUFFERATTRIBUTES0_STRIDE0_Pos 0UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHECO4_SOURCEBUFFERATTRIBUTES0_STRIDE0_Msk 0xFFFFUL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHECO4_SOURCEBUFFERATTRIBUTES0_BITSPERPIXEL0_Pos 16UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHECO4_SOURCEBUFFERATTRIBUTES0_BITSPERPIXEL0_Msk 0x3F0000UL
/* VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHECO4.SOURCEBUFFERDIMENSION0 */
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHECO4_SOURCEBUFFERDIMENSION0_LINEWIDTH0_Pos 0UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHECO4_SOURCEBUFFERDIMENSION0_LINEWIDTH0_Msk 0x3FFFUL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHECO4_SOURCEBUFFERDIMENSION0_LINECOUNT0_Pos 16UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHECO4_SOURCEBUFFERDIMENSION0_LINECOUNT0_Msk 0x3FFF0000UL
/* VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHECO4.COLORCOMPONENTBITS0 */
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHECO4_COLORCOMPONENTBITS0_COMPONENTBITSALPHA0_Pos 0UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHECO4_COLORCOMPONENTBITS0_COMPONENTBITSALPHA0_Msk 0xFUL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHECO4_COLORCOMPONENTBITS0_COMPONENTBITSBLUE0_Pos 8UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHECO4_COLORCOMPONENTBITS0_COMPONENTBITSBLUE0_Msk 0xF00UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHECO4_COLORCOMPONENTBITS0_COMPONENTBITSGREEN0_Pos 16UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHECO4_COLORCOMPONENTBITS0_COMPONENTBITSGREEN0_Msk 0xF0000UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHECO4_COLORCOMPONENTBITS0_COMPONENTBITSRED0_Pos 24UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHECO4_COLORCOMPONENTBITS0_COMPONENTBITSRED0_Msk 0xF000000UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHECO4_COLORCOMPONENTBITS0_ITUFORMAT0_Pos 31UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHECO4_COLORCOMPONENTBITS0_ITUFORMAT0_Msk 0x80000000UL
/* VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHECO4.COLORCOMPONENTSHIFT0 */
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHECO4_COLORCOMPONENTSHIFT0_COMPONENTSHIFTALPHA0_Pos 0UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHECO4_COLORCOMPONENTSHIFT0_COMPONENTSHIFTALPHA0_Msk 0x1FUL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHECO4_COLORCOMPONENTSHIFT0_COMPONENTSHIFTBLUE0_Pos 8UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHECO4_COLORCOMPONENTSHIFT0_COMPONENTSHIFTBLUE0_Msk 0x1F00UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHECO4_COLORCOMPONENTSHIFT0_COMPONENTSHIFTGREEN0_Pos 16UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHECO4_COLORCOMPONENTSHIFT0_COMPONENTSHIFTGREEN0_Msk 0x1F0000UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHECO4_COLORCOMPONENTSHIFT0_COMPONENTSHIFTRED0_Pos 24UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHECO4_COLORCOMPONENTSHIFT0_COMPONENTSHIFTRED0_Msk 0x1F000000UL
/* VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHECO4.LAYEROFFSET0 */
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHECO4_LAYEROFFSET0_LAYERXOFFSET0_Pos 0UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHECO4_LAYEROFFSET0_LAYERXOFFSET0_Msk 0x7FFFUL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHECO4_LAYEROFFSET0_LAYERYOFFSET0_Pos 16UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHECO4_LAYEROFFSET0_LAYERYOFFSET0_Msk 0x7FFF0000UL
/* VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHECO4.CLIPWINDOWOFFSET0 */
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHECO4_CLIPWINDOWOFFSET0_CLIPWINDOWXOFFSET0_Pos 0UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHECO4_CLIPWINDOWOFFSET0_CLIPWINDOWXOFFSET0_Msk 0x7FFFUL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHECO4_CLIPWINDOWOFFSET0_CLIPWINDOWYOFFSET0_Pos 16UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHECO4_CLIPWINDOWOFFSET0_CLIPWINDOWYOFFSET0_Msk 0x7FFF0000UL
/* VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHECO4.CLIPWINDOWDIMENSIONS0 */
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHECO4_CLIPWINDOWDIMENSIONS0_CLIPWINDOWWIDTH0_Pos 0UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHECO4_CLIPWINDOWDIMENSIONS0_CLIPWINDOWWIDTH0_Msk 0x3FFFUL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHECO4_CLIPWINDOWDIMENSIONS0_CLIPWINDOWHEIGHT0_Pos 16UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHECO4_CLIPWINDOWDIMENSIONS0_CLIPWINDOWHEIGHT0_Msk 0x3FFF0000UL
/* VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHECO4.CONSTANTCOLOR0 */
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHECO4_CONSTANTCOLOR0_CONSTANTALPHA0_Pos 0UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHECO4_CONSTANTCOLOR0_CONSTANTALPHA0_Msk 0xFFUL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHECO4_CONSTANTCOLOR0_CONSTANTBLUE0_Pos 8UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHECO4_CONSTANTCOLOR0_CONSTANTBLUE0_Msk 0xFF00UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHECO4_CONSTANTCOLOR0_CONSTANTGREEN0_Pos 16UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHECO4_CONSTANTCOLOR0_CONSTANTGREEN0_Msk 0xFF0000UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHECO4_CONSTANTCOLOR0_CONSTANTRED0_Pos 24UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHECO4_CONSTANTCOLOR0_CONSTANTRED0_Msk 0xFF000000UL
/* VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHECO4.LAYERPROPERTY0 */
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHECO4_LAYERPROPERTY0_TILEMODE0_Pos 1UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHECO4_LAYERPROPERTY0_TILEMODE0_Msk 0x6UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHECO4_LAYERPROPERTY0_CLIPWINDOWENABLE0_Pos 30UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHECO4_LAYERPROPERTY0_CLIPWINDOWENABLE0_Msk 0x40000000UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHECO4_LAYERPROPERTY0_SOURCEBUFFERENABLE0_Pos 31UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHECO4_LAYERPROPERTY0_SOURCEBUFFERENABLE0_Msk 0x80000000UL
/* VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHECO4.FRAMEDIMENSIONS */
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHECO4_FRAMEDIMENSIONS_FRAMEWIDTH_Pos 0UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHECO4_FRAMEDIMENSIONS_FRAMEWIDTH_Msk 0x3FFFUL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHECO4_FRAMEDIMENSIONS_FRAMEHEIGHT_Pos 16UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHECO4_FRAMEDIMENSIONS_FRAMEHEIGHT_Msk 0x3FFF0000UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHECO4_FRAMEDIMENSIONS_EMPTYFRAME_Pos 31UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHECO4_FRAMEDIMENSIONS_EMPTYFRAME_Msk 0x80000000UL
/* VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHECO4.FRAMERESAMPLING */
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHECO4_FRAMERESAMPLING_STARTX_Pos 0UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHECO4_FRAMERESAMPLING_STARTX_Msk 0x3FUL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHECO4_FRAMERESAMPLING_STARTY_Pos 6UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHECO4_FRAMERESAMPLING_STARTY_Msk 0xFC0UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHECO4_FRAMERESAMPLING_DELTAX_Pos 12UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHECO4_FRAMERESAMPLING_DELTAX_Msk 0x3F000UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHECO4_FRAMERESAMPLING_DELTAY_Pos 18UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHECO4_FRAMERESAMPLING_DELTAY_Msk 0xFC0000UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHECO4_FRAMERESAMPLING_SWAPDIRECTION_Pos 24UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHECO4_FRAMERESAMPLING_SWAPDIRECTION_Msk 0x1000000UL
/* VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHECO4.CONTROL */
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHECO4_CONTROL_RAWPIXEL_Pos 7UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHECO4_CONTROL_RAWPIXEL_Msk 0x80UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHECO4_CONTROL_CLIPCOLOR_Pos 16UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHECO4_CONTROL_CLIPCOLOR_Msk 0x10000UL
/* VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHECO4.CONTROLTRIGGER */
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHECO4_CONTROLTRIGGER_SHDTOKGEN_Pos 0UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHECO4_CONTROLTRIGGER_SHDTOKGEN_Msk 0x1UL
/* VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHECO4.START */
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHECO4_START_START_Pos 0UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHECO4_START_START_Msk 0x1UL
/* VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHECO4.FETCHTYPE */
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHECO4_FETCHTYPE_FETCHTYPE_Pos 0UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHECO4_FETCHTYPE_FETCHTYPE_Msk 0xFUL
/* VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHECO4.BURSTBUFFERPROPERTIES */
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHECO4_BURSTBUFFERPROPERTIES_MANAGEDBURSTBUFFERS_Pos 0UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHECO4_BURSTBUFFERPROPERTIES_MANAGEDBURSTBUFFERS_Msk 0xFFUL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHECO4_BURSTBUFFERPROPERTIES_BURSTLENGTHFORMAXBUFFERS_Pos 8UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHECO4_BURSTBUFFERPROPERTIES_BURSTLENGTHFORMAXBUFFERS_Msk 0x1F00UL


/* VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1.STATICCONTROL */
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_STATICCONTROL_SHDEN_Pos 0UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_STATICCONTROL_SHDEN_Msk 0x1UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_STATICCONTROL_LBHSHDEN_Pos 1UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_STATICCONTROL_LBHSHDEN_Msk 0x2UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_STATICCONTROL_BASEADDRESSAUTOUPDATE_Pos 16UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_STATICCONTROL_BASEADDRESSAUTOUPDATE_Msk 0xFF0000UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_STATICCONTROL_SHDLDREQSTICKY_Pos 24UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_STATICCONTROL_SHDLDREQSTICKY_Msk 0xFF000000UL
/* VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1.BURSTBUFFERMANAGEMENT */
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_BURSTBUFFERMANAGEMENT_SETNUMBUFFERS_Pos 0UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_BURSTBUFFERMANAGEMENT_SETNUMBUFFERS_Msk 0xFFUL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_BURSTBUFFERMANAGEMENT_SETBURSTLENGTH_Pos 8UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_BURSTBUFFERMANAGEMENT_SETBURSTLENGTH_Msk 0x1F00UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_BURSTBUFFERMANAGEMENT_LINEMODE_Pos 31UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_BURSTBUFFERMANAGEMENT_LINEMODE_Msk 0x80000000UL
/* VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1.BASEADDRESS0 */
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_BASEADDRESS0_BASEADDRESS0_Pos 0UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_BASEADDRESS0_BASEADDRESS0_Msk 0xFFFFFFFFUL
/* VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1.SOURCEBUFFERATTRIBUTES0 */
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_SOURCEBUFFERATTRIBUTES0_STRIDE0_Pos 0UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_SOURCEBUFFERATTRIBUTES0_STRIDE0_Msk 0xFFFFUL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_SOURCEBUFFERATTRIBUTES0_BITSPERPIXEL0_Pos 16UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_SOURCEBUFFERATTRIBUTES0_BITSPERPIXEL0_Msk 0x3F0000UL
/* VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1.SOURCEBUFFERDIMENSION0 */
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_SOURCEBUFFERDIMENSION0_LINEWIDTH0_Pos 0UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_SOURCEBUFFERDIMENSION0_LINEWIDTH0_Msk 0x3FFFUL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_SOURCEBUFFERDIMENSION0_LINECOUNT0_Pos 16UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_SOURCEBUFFERDIMENSION0_LINECOUNT0_Msk 0x3FFF0000UL
/* VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1.COLORCOMPONENTBITS0 */
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_COLORCOMPONENTBITS0_COMPONENTBITSALPHA0_Pos 0UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_COLORCOMPONENTBITS0_COMPONENTBITSALPHA0_Msk 0xFUL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_COLORCOMPONENTBITS0_COMPONENTBITSBLUE0_Pos 8UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_COLORCOMPONENTBITS0_COMPONENTBITSBLUE0_Msk 0xF00UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_COLORCOMPONENTBITS0_COMPONENTBITSGREEN0_Pos 16UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_COLORCOMPONENTBITS0_COMPONENTBITSGREEN0_Msk 0xF0000UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_COLORCOMPONENTBITS0_COMPONENTBITSRED0_Pos 24UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_COLORCOMPONENTBITS0_COMPONENTBITSRED0_Msk 0xF000000UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_COLORCOMPONENTBITS0_ITUFORMAT0_Pos 31UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_COLORCOMPONENTBITS0_ITUFORMAT0_Msk 0x80000000UL
/* VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1.COLORCOMPONENTSHIFT0 */
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_COLORCOMPONENTSHIFT0_COMPONENTSHIFTALPHA0_Pos 0UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_COLORCOMPONENTSHIFT0_COMPONENTSHIFTALPHA0_Msk 0x1FUL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_COLORCOMPONENTSHIFT0_COMPONENTSHIFTBLUE0_Pos 8UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_COLORCOMPONENTSHIFT0_COMPONENTSHIFTBLUE0_Msk 0x1F00UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_COLORCOMPONENTSHIFT0_COMPONENTSHIFTGREEN0_Pos 16UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_COLORCOMPONENTSHIFT0_COMPONENTSHIFTGREEN0_Msk 0x1F0000UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_COLORCOMPONENTSHIFT0_COMPONENTSHIFTRED0_Pos 24UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_COLORCOMPONENTSHIFT0_COMPONENTSHIFTRED0_Msk 0x1F000000UL
/* VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1.LAYEROFFSET0 */
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_LAYEROFFSET0_LAYERXOFFSET0_Pos 0UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_LAYEROFFSET0_LAYERXOFFSET0_Msk 0x7FFFUL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_LAYEROFFSET0_LAYERYOFFSET0_Pos 16UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_LAYEROFFSET0_LAYERYOFFSET0_Msk 0x7FFF0000UL
/* VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1.CLIPWINDOWOFFSET0 */
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_CLIPWINDOWOFFSET0_CLIPWINDOWXOFFSET0_Pos 0UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_CLIPWINDOWOFFSET0_CLIPWINDOWXOFFSET0_Msk 0x7FFFUL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_CLIPWINDOWOFFSET0_CLIPWINDOWYOFFSET0_Pos 16UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_CLIPWINDOWOFFSET0_CLIPWINDOWYOFFSET0_Msk 0x7FFF0000UL
/* VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1.CLIPWINDOWDIMENSIONS0 */
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_CLIPWINDOWDIMENSIONS0_CLIPWINDOWWIDTH0_Pos 0UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_CLIPWINDOWDIMENSIONS0_CLIPWINDOWWIDTH0_Msk 0x3FFFUL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_CLIPWINDOWDIMENSIONS0_CLIPWINDOWHEIGHT0_Pos 16UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_CLIPWINDOWDIMENSIONS0_CLIPWINDOWHEIGHT0_Msk 0x3FFF0000UL
/* VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1.CONSTANTCOLOR0 */
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_CONSTANTCOLOR0_CONSTANTALPHA0_Pos 0UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_CONSTANTCOLOR0_CONSTANTALPHA0_Msk 0xFFUL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_CONSTANTCOLOR0_CONSTANTBLUE0_Pos 8UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_CONSTANTCOLOR0_CONSTANTBLUE0_Msk 0xFF00UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_CONSTANTCOLOR0_CONSTANTGREEN0_Pos 16UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_CONSTANTCOLOR0_CONSTANTGREEN0_Msk 0xFF0000UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_CONSTANTCOLOR0_CONSTANTRED0_Pos 24UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_CONSTANTCOLOR0_CONSTANTRED0_Msk 0xFF000000UL
/* VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1.LAYERPROPERTY0 */
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_LAYERPROPERTY0_TILEMODE0_Pos 1UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_LAYERPROPERTY0_TILEMODE0_Msk 0x6UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_LAYERPROPERTY0_ALPHASRCENABLE0_Pos 3UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_LAYERPROPERTY0_ALPHASRCENABLE0_Msk 0x8UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_LAYERPROPERTY0_ALPHACONSTENABLE0_Pos 4UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_LAYERPROPERTY0_ALPHACONSTENABLE0_Msk 0x10UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_LAYERPROPERTY0_ALPHAMASKENABLE0_Pos 5UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_LAYERPROPERTY0_ALPHAMASKENABLE0_Msk 0x20UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_LAYERPROPERTY0_ALPHATRANSENABLE0_Pos 6UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_LAYERPROPERTY0_ALPHATRANSENABLE0_Msk 0x40UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_LAYERPROPERTY0_RGBALPHASRCENABLE0_Pos 7UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_LAYERPROPERTY0_RGBALPHASRCENABLE0_Msk 0x80UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_LAYERPROPERTY0_RGBALPHACONSTENABLE0_Pos 8UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_LAYERPROPERTY0_RGBALPHACONSTENABLE0_Msk 0x100UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_LAYERPROPERTY0_RGBALPHAMASKENABLE0_Pos 9UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_LAYERPROPERTY0_RGBALPHAMASKENABLE0_Msk 0x200UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_LAYERPROPERTY0_RGBALPHATRANSENABLE0_Pos 10UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_LAYERPROPERTY0_RGBALPHATRANSENABLE0_Msk 0x400UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_LAYERPROPERTY0_PREMULCONSTRGB0_Pos 11UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_LAYERPROPERTY0_PREMULCONSTRGB0_Msk 0x800UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_LAYERPROPERTY0_YUVCONVERSIONMODE0_Pos 12UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_LAYERPROPERTY0_YUVCONVERSIONMODE0_Msk 0x3000UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_LAYERPROPERTY0_GAMMAREMOVEENABLE0_Pos 14UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_LAYERPROPERTY0_GAMMAREMOVEENABLE0_Msk 0x4000UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_LAYERPROPERTY0_CLIPWINDOWENABLE0_Pos 30UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_LAYERPROPERTY0_CLIPWINDOWENABLE0_Msk 0x40000000UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_LAYERPROPERTY0_SOURCEBUFFERENABLE0_Pos 31UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_LAYERPROPERTY0_SOURCEBUFFERENABLE0_Msk 0x80000000UL
/* VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1.BASEADDRESS1 */
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_BASEADDRESS1_BASEADDRESS1_Pos 0UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_BASEADDRESS1_BASEADDRESS1_Msk 0xFFFFFFFFUL
/* VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1.SOURCEBUFFERATTRIBUTES1 */
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_SOURCEBUFFERATTRIBUTES1_STRIDE1_Pos 0UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_SOURCEBUFFERATTRIBUTES1_STRIDE1_Msk 0xFFFFUL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_SOURCEBUFFERATTRIBUTES1_BITSPERPIXEL1_Pos 16UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_SOURCEBUFFERATTRIBUTES1_BITSPERPIXEL1_Msk 0x3F0000UL
/* VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1.SOURCEBUFFERDIMENSION1 */
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_SOURCEBUFFERDIMENSION1_LINEWIDTH1_Pos 0UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_SOURCEBUFFERDIMENSION1_LINEWIDTH1_Msk 0x3FFFUL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_SOURCEBUFFERDIMENSION1_LINECOUNT1_Pos 16UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_SOURCEBUFFERDIMENSION1_LINECOUNT1_Msk 0x3FFF0000UL
/* VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1.COLORCOMPONENTBITS1 */
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_COLORCOMPONENTBITS1_COMPONENTBITSALPHA1_Pos 0UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_COLORCOMPONENTBITS1_COMPONENTBITSALPHA1_Msk 0xFUL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_COLORCOMPONENTBITS1_COMPONENTBITSBLUE1_Pos 8UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_COLORCOMPONENTBITS1_COMPONENTBITSBLUE1_Msk 0xF00UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_COLORCOMPONENTBITS1_COMPONENTBITSGREEN1_Pos 16UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_COLORCOMPONENTBITS1_COMPONENTBITSGREEN1_Msk 0xF0000UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_COLORCOMPONENTBITS1_COMPONENTBITSRED1_Pos 24UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_COLORCOMPONENTBITS1_COMPONENTBITSRED1_Msk 0xF000000UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_COLORCOMPONENTBITS1_ITUFORMAT1_Pos 31UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_COLORCOMPONENTBITS1_ITUFORMAT1_Msk 0x80000000UL
/* VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1.COLORCOMPONENTSHIFT1 */
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_COLORCOMPONENTSHIFT1_COMPONENTSHIFTALPHA1_Pos 0UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_COLORCOMPONENTSHIFT1_COMPONENTSHIFTALPHA1_Msk 0x1FUL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_COLORCOMPONENTSHIFT1_COMPONENTSHIFTBLUE1_Pos 8UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_COLORCOMPONENTSHIFT1_COMPONENTSHIFTBLUE1_Msk 0x1F00UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_COLORCOMPONENTSHIFT1_COMPONENTSHIFTGREEN1_Pos 16UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_COLORCOMPONENTSHIFT1_COMPONENTSHIFTGREEN1_Msk 0x1F0000UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_COLORCOMPONENTSHIFT1_COMPONENTSHIFTRED1_Pos 24UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_COLORCOMPONENTSHIFT1_COMPONENTSHIFTRED1_Msk 0x1F000000UL
/* VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1.LAYEROFFSET1 */
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_LAYEROFFSET1_LAYERXOFFSET1_Pos 0UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_LAYEROFFSET1_LAYERXOFFSET1_Msk 0x7FFFUL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_LAYEROFFSET1_LAYERYOFFSET1_Pos 16UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_LAYEROFFSET1_LAYERYOFFSET1_Msk 0x7FFF0000UL
/* VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1.CLIPWINDOWOFFSET1 */
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_CLIPWINDOWOFFSET1_CLIPWINDOWXOFFSET1_Pos 0UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_CLIPWINDOWOFFSET1_CLIPWINDOWXOFFSET1_Msk 0x7FFFUL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_CLIPWINDOWOFFSET1_CLIPWINDOWYOFFSET1_Pos 16UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_CLIPWINDOWOFFSET1_CLIPWINDOWYOFFSET1_Msk 0x7FFF0000UL
/* VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1.CLIPWINDOWDIMENSIONS1 */
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_CLIPWINDOWDIMENSIONS1_CLIPWINDOWWIDTH1_Pos 0UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_CLIPWINDOWDIMENSIONS1_CLIPWINDOWWIDTH1_Msk 0x3FFFUL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_CLIPWINDOWDIMENSIONS1_CLIPWINDOWHEIGHT1_Pos 16UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_CLIPWINDOWDIMENSIONS1_CLIPWINDOWHEIGHT1_Msk 0x3FFF0000UL
/* VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1.CONSTANTCOLOR1 */
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_CONSTANTCOLOR1_CONSTANTALPHA1_Pos 0UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_CONSTANTCOLOR1_CONSTANTALPHA1_Msk 0xFFUL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_CONSTANTCOLOR1_CONSTANTBLUE1_Pos 8UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_CONSTANTCOLOR1_CONSTANTBLUE1_Msk 0xFF00UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_CONSTANTCOLOR1_CONSTANTGREEN1_Pos 16UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_CONSTANTCOLOR1_CONSTANTGREEN1_Msk 0xFF0000UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_CONSTANTCOLOR1_CONSTANTRED1_Pos 24UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_CONSTANTCOLOR1_CONSTANTRED1_Msk 0xFF000000UL
/* VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1.LAYERPROPERTY1 */
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_LAYERPROPERTY1_TILEMODE1_Pos 1UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_LAYERPROPERTY1_TILEMODE1_Msk 0x6UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_LAYERPROPERTY1_ALPHASRCENABLE1_Pos 3UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_LAYERPROPERTY1_ALPHASRCENABLE1_Msk 0x8UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_LAYERPROPERTY1_ALPHACONSTENABLE1_Pos 4UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_LAYERPROPERTY1_ALPHACONSTENABLE1_Msk 0x10UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_LAYERPROPERTY1_ALPHAMASKENABLE1_Pos 5UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_LAYERPROPERTY1_ALPHAMASKENABLE1_Msk 0x20UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_LAYERPROPERTY1_ALPHATRANSENABLE1_Pos 6UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_LAYERPROPERTY1_ALPHATRANSENABLE1_Msk 0x40UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_LAYERPROPERTY1_RGBALPHASRCENABLE1_Pos 7UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_LAYERPROPERTY1_RGBALPHASRCENABLE1_Msk 0x80UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_LAYERPROPERTY1_RGBALPHACONSTENABLE1_Pos 8UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_LAYERPROPERTY1_RGBALPHACONSTENABLE1_Msk 0x100UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_LAYERPROPERTY1_RGBALPHAMASKENABLE1_Pos 9UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_LAYERPROPERTY1_RGBALPHAMASKENABLE1_Msk 0x200UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_LAYERPROPERTY1_RGBALPHATRANSENABLE1_Pos 10UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_LAYERPROPERTY1_RGBALPHATRANSENABLE1_Msk 0x400UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_LAYERPROPERTY1_PREMULCONSTRGB1_Pos 11UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_LAYERPROPERTY1_PREMULCONSTRGB1_Msk 0x800UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_LAYERPROPERTY1_YUVCONVERSIONMODE1_Pos 12UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_LAYERPROPERTY1_YUVCONVERSIONMODE1_Msk 0x3000UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_LAYERPROPERTY1_GAMMAREMOVEENABLE1_Pos 14UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_LAYERPROPERTY1_GAMMAREMOVEENABLE1_Msk 0x4000UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_LAYERPROPERTY1_CLIPWINDOWENABLE1_Pos 30UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_LAYERPROPERTY1_CLIPWINDOWENABLE1_Msk 0x40000000UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_LAYERPROPERTY1_SOURCEBUFFERENABLE1_Pos 31UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_LAYERPROPERTY1_SOURCEBUFFERENABLE1_Msk 0x80000000UL
/* VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1.BASEADDRESS2 */
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_BASEADDRESS2_BASEADDRESS2_Pos 0UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_BASEADDRESS2_BASEADDRESS2_Msk 0xFFFFFFFFUL
/* VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1.SOURCEBUFFERATTRIBUTES2 */
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_SOURCEBUFFERATTRIBUTES2_STRIDE2_Pos 0UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_SOURCEBUFFERATTRIBUTES2_STRIDE2_Msk 0xFFFFUL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_SOURCEBUFFERATTRIBUTES2_BITSPERPIXEL2_Pos 16UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_SOURCEBUFFERATTRIBUTES2_BITSPERPIXEL2_Msk 0x3F0000UL
/* VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1.SOURCEBUFFERDIMENSION2 */
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_SOURCEBUFFERDIMENSION2_LINEWIDTH2_Pos 0UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_SOURCEBUFFERDIMENSION2_LINEWIDTH2_Msk 0x3FFFUL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_SOURCEBUFFERDIMENSION2_LINECOUNT2_Pos 16UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_SOURCEBUFFERDIMENSION2_LINECOUNT2_Msk 0x3FFF0000UL
/* VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1.COLORCOMPONENTBITS2 */
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_COLORCOMPONENTBITS2_COMPONENTBITSALPHA2_Pos 0UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_COLORCOMPONENTBITS2_COMPONENTBITSALPHA2_Msk 0xFUL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_COLORCOMPONENTBITS2_COMPONENTBITSBLUE2_Pos 8UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_COLORCOMPONENTBITS2_COMPONENTBITSBLUE2_Msk 0xF00UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_COLORCOMPONENTBITS2_COMPONENTBITSGREEN2_Pos 16UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_COLORCOMPONENTBITS2_COMPONENTBITSGREEN2_Msk 0xF0000UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_COLORCOMPONENTBITS2_COMPONENTBITSRED2_Pos 24UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_COLORCOMPONENTBITS2_COMPONENTBITSRED2_Msk 0xF000000UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_COLORCOMPONENTBITS2_ITUFORMAT2_Pos 31UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_COLORCOMPONENTBITS2_ITUFORMAT2_Msk 0x80000000UL
/* VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1.COLORCOMPONENTSHIFT2 */
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_COLORCOMPONENTSHIFT2_COMPONENTSHIFTALPHA2_Pos 0UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_COLORCOMPONENTSHIFT2_COMPONENTSHIFTALPHA2_Msk 0x1FUL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_COLORCOMPONENTSHIFT2_COMPONENTSHIFTBLUE2_Pos 8UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_COLORCOMPONENTSHIFT2_COMPONENTSHIFTBLUE2_Msk 0x1F00UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_COLORCOMPONENTSHIFT2_COMPONENTSHIFTGREEN2_Pos 16UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_COLORCOMPONENTSHIFT2_COMPONENTSHIFTGREEN2_Msk 0x1F0000UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_COLORCOMPONENTSHIFT2_COMPONENTSHIFTRED2_Pos 24UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_COLORCOMPONENTSHIFT2_COMPONENTSHIFTRED2_Msk 0x1F000000UL
/* VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1.LAYEROFFSET2 */
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_LAYEROFFSET2_LAYERXOFFSET2_Pos 0UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_LAYEROFFSET2_LAYERXOFFSET2_Msk 0x7FFFUL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_LAYEROFFSET2_LAYERYOFFSET2_Pos 16UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_LAYEROFFSET2_LAYERYOFFSET2_Msk 0x7FFF0000UL
/* VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1.CLIPWINDOWOFFSET2 */
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_CLIPWINDOWOFFSET2_CLIPWINDOWXOFFSET2_Pos 0UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_CLIPWINDOWOFFSET2_CLIPWINDOWXOFFSET2_Msk 0x7FFFUL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_CLIPWINDOWOFFSET2_CLIPWINDOWYOFFSET2_Pos 16UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_CLIPWINDOWOFFSET2_CLIPWINDOWYOFFSET2_Msk 0x7FFF0000UL
/* VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1.CLIPWINDOWDIMENSIONS2 */
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_CLIPWINDOWDIMENSIONS2_CLIPWINDOWWIDTH2_Pos 0UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_CLIPWINDOWDIMENSIONS2_CLIPWINDOWWIDTH2_Msk 0x3FFFUL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_CLIPWINDOWDIMENSIONS2_CLIPWINDOWHEIGHT2_Pos 16UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_CLIPWINDOWDIMENSIONS2_CLIPWINDOWHEIGHT2_Msk 0x3FFF0000UL
/* VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1.CONSTANTCOLOR2 */
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_CONSTANTCOLOR2_CONSTANTALPHA2_Pos 0UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_CONSTANTCOLOR2_CONSTANTALPHA2_Msk 0xFFUL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_CONSTANTCOLOR2_CONSTANTBLUE2_Pos 8UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_CONSTANTCOLOR2_CONSTANTBLUE2_Msk 0xFF00UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_CONSTANTCOLOR2_CONSTANTGREEN2_Pos 16UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_CONSTANTCOLOR2_CONSTANTGREEN2_Msk 0xFF0000UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_CONSTANTCOLOR2_CONSTANTRED2_Pos 24UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_CONSTANTCOLOR2_CONSTANTRED2_Msk 0xFF000000UL
/* VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1.LAYERPROPERTY2 */
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_LAYERPROPERTY2_TILEMODE2_Pos 1UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_LAYERPROPERTY2_TILEMODE2_Msk 0x6UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_LAYERPROPERTY2_ALPHASRCENABLE2_Pos 3UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_LAYERPROPERTY2_ALPHASRCENABLE2_Msk 0x8UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_LAYERPROPERTY2_ALPHACONSTENABLE2_Pos 4UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_LAYERPROPERTY2_ALPHACONSTENABLE2_Msk 0x10UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_LAYERPROPERTY2_ALPHAMASKENABLE2_Pos 5UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_LAYERPROPERTY2_ALPHAMASKENABLE2_Msk 0x20UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_LAYERPROPERTY2_ALPHATRANSENABLE2_Pos 6UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_LAYERPROPERTY2_ALPHATRANSENABLE2_Msk 0x40UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_LAYERPROPERTY2_RGBALPHASRCENABLE2_Pos 7UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_LAYERPROPERTY2_RGBALPHASRCENABLE2_Msk 0x80UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_LAYERPROPERTY2_RGBALPHACONSTENABLE2_Pos 8UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_LAYERPROPERTY2_RGBALPHACONSTENABLE2_Msk 0x100UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_LAYERPROPERTY2_RGBALPHAMASKENABLE2_Pos 9UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_LAYERPROPERTY2_RGBALPHAMASKENABLE2_Msk 0x200UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_LAYERPROPERTY2_RGBALPHATRANSENABLE2_Pos 10UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_LAYERPROPERTY2_RGBALPHATRANSENABLE2_Msk 0x400UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_LAYERPROPERTY2_PREMULCONSTRGB2_Pos 11UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_LAYERPROPERTY2_PREMULCONSTRGB2_Msk 0x800UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_LAYERPROPERTY2_YUVCONVERSIONMODE2_Pos 12UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_LAYERPROPERTY2_YUVCONVERSIONMODE2_Msk 0x3000UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_LAYERPROPERTY2_GAMMAREMOVEENABLE2_Pos 14UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_LAYERPROPERTY2_GAMMAREMOVEENABLE2_Msk 0x4000UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_LAYERPROPERTY2_CLIPWINDOWENABLE2_Pos 30UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_LAYERPROPERTY2_CLIPWINDOWENABLE2_Msk 0x40000000UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_LAYERPROPERTY2_SOURCEBUFFERENABLE2_Pos 31UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_LAYERPROPERTY2_SOURCEBUFFERENABLE2_Msk 0x80000000UL
/* VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1.BASEADDRESS3 */
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_BASEADDRESS3_BASEADDRESS3_Pos 0UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_BASEADDRESS3_BASEADDRESS3_Msk 0xFFFFFFFFUL
/* VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1.SOURCEBUFFERATTRIBUTES3 */
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_SOURCEBUFFERATTRIBUTES3_STRIDE3_Pos 0UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_SOURCEBUFFERATTRIBUTES3_STRIDE3_Msk 0xFFFFUL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_SOURCEBUFFERATTRIBUTES3_BITSPERPIXEL3_Pos 16UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_SOURCEBUFFERATTRIBUTES3_BITSPERPIXEL3_Msk 0x3F0000UL
/* VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1.SOURCEBUFFERDIMENSION3 */
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_SOURCEBUFFERDIMENSION3_LINEWIDTH3_Pos 0UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_SOURCEBUFFERDIMENSION3_LINEWIDTH3_Msk 0x3FFFUL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_SOURCEBUFFERDIMENSION3_LINECOUNT3_Pos 16UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_SOURCEBUFFERDIMENSION3_LINECOUNT3_Msk 0x3FFF0000UL
/* VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1.COLORCOMPONENTBITS3 */
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_COLORCOMPONENTBITS3_COMPONENTBITSALPHA3_Pos 0UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_COLORCOMPONENTBITS3_COMPONENTBITSALPHA3_Msk 0xFUL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_COLORCOMPONENTBITS3_COMPONENTBITSBLUE3_Pos 8UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_COLORCOMPONENTBITS3_COMPONENTBITSBLUE3_Msk 0xF00UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_COLORCOMPONENTBITS3_COMPONENTBITSGREEN3_Pos 16UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_COLORCOMPONENTBITS3_COMPONENTBITSGREEN3_Msk 0xF0000UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_COLORCOMPONENTBITS3_COMPONENTBITSRED3_Pos 24UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_COLORCOMPONENTBITS3_COMPONENTBITSRED3_Msk 0xF000000UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_COLORCOMPONENTBITS3_ITUFORMAT3_Pos 31UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_COLORCOMPONENTBITS3_ITUFORMAT3_Msk 0x80000000UL
/* VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1.COLORCOMPONENTSHIFT3 */
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_COLORCOMPONENTSHIFT3_COMPONENTSHIFTALPHA3_Pos 0UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_COLORCOMPONENTSHIFT3_COMPONENTSHIFTALPHA3_Msk 0x1FUL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_COLORCOMPONENTSHIFT3_COMPONENTSHIFTBLUE3_Pos 8UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_COLORCOMPONENTSHIFT3_COMPONENTSHIFTBLUE3_Msk 0x1F00UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_COLORCOMPONENTSHIFT3_COMPONENTSHIFTGREEN3_Pos 16UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_COLORCOMPONENTSHIFT3_COMPONENTSHIFTGREEN3_Msk 0x1F0000UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_COLORCOMPONENTSHIFT3_COMPONENTSHIFTRED3_Pos 24UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_COLORCOMPONENTSHIFT3_COMPONENTSHIFTRED3_Msk 0x1F000000UL
/* VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1.LAYEROFFSET3 */
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_LAYEROFFSET3_LAYERXOFFSET3_Pos 0UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_LAYEROFFSET3_LAYERXOFFSET3_Msk 0x7FFFUL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_LAYEROFFSET3_LAYERYOFFSET3_Pos 16UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_LAYEROFFSET3_LAYERYOFFSET3_Msk 0x7FFF0000UL
/* VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1.CLIPWINDOWOFFSET3 */
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_CLIPWINDOWOFFSET3_CLIPWINDOWXOFFSET3_Pos 0UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_CLIPWINDOWOFFSET3_CLIPWINDOWXOFFSET3_Msk 0x7FFFUL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_CLIPWINDOWOFFSET3_CLIPWINDOWYOFFSET3_Pos 16UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_CLIPWINDOWOFFSET3_CLIPWINDOWYOFFSET3_Msk 0x7FFF0000UL
/* VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1.CLIPWINDOWDIMENSIONS3 */
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_CLIPWINDOWDIMENSIONS3_CLIPWINDOWWIDTH3_Pos 0UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_CLIPWINDOWDIMENSIONS3_CLIPWINDOWWIDTH3_Msk 0x3FFFUL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_CLIPWINDOWDIMENSIONS3_CLIPWINDOWHEIGHT3_Pos 16UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_CLIPWINDOWDIMENSIONS3_CLIPWINDOWHEIGHT3_Msk 0x3FFF0000UL
/* VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1.CONSTANTCOLOR3 */
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_CONSTANTCOLOR3_CONSTANTALPHA3_Pos 0UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_CONSTANTCOLOR3_CONSTANTALPHA3_Msk 0xFFUL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_CONSTANTCOLOR3_CONSTANTBLUE3_Pos 8UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_CONSTANTCOLOR3_CONSTANTBLUE3_Msk 0xFF00UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_CONSTANTCOLOR3_CONSTANTGREEN3_Pos 16UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_CONSTANTCOLOR3_CONSTANTGREEN3_Msk 0xFF0000UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_CONSTANTCOLOR3_CONSTANTRED3_Pos 24UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_CONSTANTCOLOR3_CONSTANTRED3_Msk 0xFF000000UL
/* VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1.LAYERPROPERTY3 */
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_LAYERPROPERTY3_TILEMODE3_Pos 1UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_LAYERPROPERTY3_TILEMODE3_Msk 0x6UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_LAYERPROPERTY3_ALPHASRCENABLE3_Pos 3UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_LAYERPROPERTY3_ALPHASRCENABLE3_Msk 0x8UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_LAYERPROPERTY3_ALPHACONSTENABLE3_Pos 4UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_LAYERPROPERTY3_ALPHACONSTENABLE3_Msk 0x10UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_LAYERPROPERTY3_ALPHAMASKENABLE3_Pos 5UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_LAYERPROPERTY3_ALPHAMASKENABLE3_Msk 0x20UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_LAYERPROPERTY3_ALPHATRANSENABLE3_Pos 6UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_LAYERPROPERTY3_ALPHATRANSENABLE3_Msk 0x40UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_LAYERPROPERTY3_RGBALPHASRCENABLE3_Pos 7UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_LAYERPROPERTY3_RGBALPHASRCENABLE3_Msk 0x80UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_LAYERPROPERTY3_RGBALPHACONSTENABLE3_Pos 8UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_LAYERPROPERTY3_RGBALPHACONSTENABLE3_Msk 0x100UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_LAYERPROPERTY3_RGBALPHAMASKENABLE3_Pos 9UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_LAYERPROPERTY3_RGBALPHAMASKENABLE3_Msk 0x200UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_LAYERPROPERTY3_RGBALPHATRANSENABLE3_Pos 10UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_LAYERPROPERTY3_RGBALPHATRANSENABLE3_Msk 0x400UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_LAYERPROPERTY3_PREMULCONSTRGB3_Pos 11UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_LAYERPROPERTY3_PREMULCONSTRGB3_Msk 0x800UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_LAYERPROPERTY3_YUVCONVERSIONMODE3_Pos 12UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_LAYERPROPERTY3_YUVCONVERSIONMODE3_Msk 0x3000UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_LAYERPROPERTY3_GAMMAREMOVEENABLE3_Pos 14UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_LAYERPROPERTY3_GAMMAREMOVEENABLE3_Msk 0x4000UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_LAYERPROPERTY3_CLIPWINDOWENABLE3_Pos 30UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_LAYERPROPERTY3_CLIPWINDOWENABLE3_Msk 0x40000000UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_LAYERPROPERTY3_SOURCEBUFFERENABLE3_Pos 31UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_LAYERPROPERTY3_SOURCEBUFFERENABLE3_Msk 0x80000000UL
/* VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1.BASEADDRESS4 */
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_BASEADDRESS4_BASEADDRESS4_Pos 0UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_BASEADDRESS4_BASEADDRESS4_Msk 0xFFFFFFFFUL
/* VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1.SOURCEBUFFERATTRIBUTES4 */
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_SOURCEBUFFERATTRIBUTES4_STRIDE4_Pos 0UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_SOURCEBUFFERATTRIBUTES4_STRIDE4_Msk 0xFFFFUL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_SOURCEBUFFERATTRIBUTES4_BITSPERPIXEL4_Pos 16UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_SOURCEBUFFERATTRIBUTES4_BITSPERPIXEL4_Msk 0x3F0000UL
/* VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1.SOURCEBUFFERDIMENSION4 */
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_SOURCEBUFFERDIMENSION4_LINEWIDTH4_Pos 0UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_SOURCEBUFFERDIMENSION4_LINEWIDTH4_Msk 0x3FFFUL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_SOURCEBUFFERDIMENSION4_LINECOUNT4_Pos 16UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_SOURCEBUFFERDIMENSION4_LINECOUNT4_Msk 0x3FFF0000UL
/* VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1.COLORCOMPONENTBITS4 */
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_COLORCOMPONENTBITS4_COMPONENTBITSALPHA4_Pos 0UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_COLORCOMPONENTBITS4_COMPONENTBITSALPHA4_Msk 0xFUL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_COLORCOMPONENTBITS4_COMPONENTBITSBLUE4_Pos 8UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_COLORCOMPONENTBITS4_COMPONENTBITSBLUE4_Msk 0xF00UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_COLORCOMPONENTBITS4_COMPONENTBITSGREEN4_Pos 16UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_COLORCOMPONENTBITS4_COMPONENTBITSGREEN4_Msk 0xF0000UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_COLORCOMPONENTBITS4_COMPONENTBITSRED4_Pos 24UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_COLORCOMPONENTBITS4_COMPONENTBITSRED4_Msk 0xF000000UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_COLORCOMPONENTBITS4_ITUFORMAT4_Pos 31UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_COLORCOMPONENTBITS4_ITUFORMAT4_Msk 0x80000000UL
/* VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1.COLORCOMPONENTSHIFT4 */
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_COLORCOMPONENTSHIFT4_COMPONENTSHIFTALPHA4_Pos 0UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_COLORCOMPONENTSHIFT4_COMPONENTSHIFTALPHA4_Msk 0x1FUL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_COLORCOMPONENTSHIFT4_COMPONENTSHIFTBLUE4_Pos 8UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_COLORCOMPONENTSHIFT4_COMPONENTSHIFTBLUE4_Msk 0x1F00UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_COLORCOMPONENTSHIFT4_COMPONENTSHIFTGREEN4_Pos 16UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_COLORCOMPONENTSHIFT4_COMPONENTSHIFTGREEN4_Msk 0x1F0000UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_COLORCOMPONENTSHIFT4_COMPONENTSHIFTRED4_Pos 24UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_COLORCOMPONENTSHIFT4_COMPONENTSHIFTRED4_Msk 0x1F000000UL
/* VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1.LAYEROFFSET4 */
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_LAYEROFFSET4_LAYERXOFFSET4_Pos 0UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_LAYEROFFSET4_LAYERXOFFSET4_Msk 0x7FFFUL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_LAYEROFFSET4_LAYERYOFFSET4_Pos 16UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_LAYEROFFSET4_LAYERYOFFSET4_Msk 0x7FFF0000UL
/* VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1.CLIPWINDOWOFFSET4 */
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_CLIPWINDOWOFFSET4_CLIPWINDOWXOFFSET4_Pos 0UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_CLIPWINDOWOFFSET4_CLIPWINDOWXOFFSET4_Msk 0x7FFFUL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_CLIPWINDOWOFFSET4_CLIPWINDOWYOFFSET4_Pos 16UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_CLIPWINDOWOFFSET4_CLIPWINDOWYOFFSET4_Msk 0x7FFF0000UL
/* VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1.CLIPWINDOWDIMENSIONS4 */
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_CLIPWINDOWDIMENSIONS4_CLIPWINDOWWIDTH4_Pos 0UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_CLIPWINDOWDIMENSIONS4_CLIPWINDOWWIDTH4_Msk 0x3FFFUL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_CLIPWINDOWDIMENSIONS4_CLIPWINDOWHEIGHT4_Pos 16UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_CLIPWINDOWDIMENSIONS4_CLIPWINDOWHEIGHT4_Msk 0x3FFF0000UL
/* VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1.CONSTANTCOLOR4 */
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_CONSTANTCOLOR4_CONSTANTALPHA4_Pos 0UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_CONSTANTCOLOR4_CONSTANTALPHA4_Msk 0xFFUL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_CONSTANTCOLOR4_CONSTANTBLUE4_Pos 8UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_CONSTANTCOLOR4_CONSTANTBLUE4_Msk 0xFF00UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_CONSTANTCOLOR4_CONSTANTGREEN4_Pos 16UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_CONSTANTCOLOR4_CONSTANTGREEN4_Msk 0xFF0000UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_CONSTANTCOLOR4_CONSTANTRED4_Pos 24UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_CONSTANTCOLOR4_CONSTANTRED4_Msk 0xFF000000UL
/* VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1.LAYERPROPERTY4 */
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_LAYERPROPERTY4_TILEMODE4_Pos 1UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_LAYERPROPERTY4_TILEMODE4_Msk 0x6UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_LAYERPROPERTY4_ALPHASRCENABLE4_Pos 3UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_LAYERPROPERTY4_ALPHASRCENABLE4_Msk 0x8UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_LAYERPROPERTY4_ALPHACONSTENABLE4_Pos 4UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_LAYERPROPERTY4_ALPHACONSTENABLE4_Msk 0x10UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_LAYERPROPERTY4_ALPHAMASKENABLE4_Pos 5UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_LAYERPROPERTY4_ALPHAMASKENABLE4_Msk 0x20UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_LAYERPROPERTY4_ALPHATRANSENABLE4_Pos 6UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_LAYERPROPERTY4_ALPHATRANSENABLE4_Msk 0x40UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_LAYERPROPERTY4_RGBALPHASRCENABLE4_Pos 7UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_LAYERPROPERTY4_RGBALPHASRCENABLE4_Msk 0x80UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_LAYERPROPERTY4_RGBALPHACONSTENABLE4_Pos 8UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_LAYERPROPERTY4_RGBALPHACONSTENABLE4_Msk 0x100UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_LAYERPROPERTY4_RGBALPHAMASKENABLE4_Pos 9UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_LAYERPROPERTY4_RGBALPHAMASKENABLE4_Msk 0x200UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_LAYERPROPERTY4_RGBALPHATRANSENABLE4_Pos 10UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_LAYERPROPERTY4_RGBALPHATRANSENABLE4_Msk 0x400UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_LAYERPROPERTY4_PREMULCONSTRGB4_Pos 11UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_LAYERPROPERTY4_PREMULCONSTRGB4_Msk 0x800UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_LAYERPROPERTY4_YUVCONVERSIONMODE4_Pos 12UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_LAYERPROPERTY4_YUVCONVERSIONMODE4_Msk 0x3000UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_LAYERPROPERTY4_GAMMAREMOVEENABLE4_Pos 14UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_LAYERPROPERTY4_GAMMAREMOVEENABLE4_Msk 0x4000UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_LAYERPROPERTY4_CLIPWINDOWENABLE4_Pos 30UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_LAYERPROPERTY4_CLIPWINDOWENABLE4_Msk 0x40000000UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_LAYERPROPERTY4_SOURCEBUFFERENABLE4_Pos 31UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_LAYERPROPERTY4_SOURCEBUFFERENABLE4_Msk 0x80000000UL
/* VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1.BASEADDRESS5 */
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_BASEADDRESS5_BASEADDRESS5_Pos 0UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_BASEADDRESS5_BASEADDRESS5_Msk 0xFFFFFFFFUL
/* VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1.SOURCEBUFFERATTRIBUTES5 */
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_SOURCEBUFFERATTRIBUTES5_STRIDE5_Pos 0UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_SOURCEBUFFERATTRIBUTES5_STRIDE5_Msk 0xFFFFUL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_SOURCEBUFFERATTRIBUTES5_BITSPERPIXEL5_Pos 16UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_SOURCEBUFFERATTRIBUTES5_BITSPERPIXEL5_Msk 0x3F0000UL
/* VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1.SOURCEBUFFERDIMENSION5 */
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_SOURCEBUFFERDIMENSION5_LINEWIDTH5_Pos 0UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_SOURCEBUFFERDIMENSION5_LINEWIDTH5_Msk 0x3FFFUL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_SOURCEBUFFERDIMENSION5_LINECOUNT5_Pos 16UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_SOURCEBUFFERDIMENSION5_LINECOUNT5_Msk 0x3FFF0000UL
/* VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1.COLORCOMPONENTBITS5 */
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_COLORCOMPONENTBITS5_COMPONENTBITSALPHA5_Pos 0UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_COLORCOMPONENTBITS5_COMPONENTBITSALPHA5_Msk 0xFUL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_COLORCOMPONENTBITS5_COMPONENTBITSBLUE5_Pos 8UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_COLORCOMPONENTBITS5_COMPONENTBITSBLUE5_Msk 0xF00UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_COLORCOMPONENTBITS5_COMPONENTBITSGREEN5_Pos 16UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_COLORCOMPONENTBITS5_COMPONENTBITSGREEN5_Msk 0xF0000UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_COLORCOMPONENTBITS5_COMPONENTBITSRED5_Pos 24UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_COLORCOMPONENTBITS5_COMPONENTBITSRED5_Msk 0xF000000UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_COLORCOMPONENTBITS5_ITUFORMAT5_Pos 31UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_COLORCOMPONENTBITS5_ITUFORMAT5_Msk 0x80000000UL
/* VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1.COLORCOMPONENTSHIFT5 */
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_COLORCOMPONENTSHIFT5_COMPONENTSHIFTALPHA5_Pos 0UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_COLORCOMPONENTSHIFT5_COMPONENTSHIFTALPHA5_Msk 0x1FUL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_COLORCOMPONENTSHIFT5_COMPONENTSHIFTBLUE5_Pos 8UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_COLORCOMPONENTSHIFT5_COMPONENTSHIFTBLUE5_Msk 0x1F00UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_COLORCOMPONENTSHIFT5_COMPONENTSHIFTGREEN5_Pos 16UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_COLORCOMPONENTSHIFT5_COMPONENTSHIFTGREEN5_Msk 0x1F0000UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_COLORCOMPONENTSHIFT5_COMPONENTSHIFTRED5_Pos 24UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_COLORCOMPONENTSHIFT5_COMPONENTSHIFTRED5_Msk 0x1F000000UL
/* VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1.LAYEROFFSET5 */
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_LAYEROFFSET5_LAYERXOFFSET5_Pos 0UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_LAYEROFFSET5_LAYERXOFFSET5_Msk 0x7FFFUL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_LAYEROFFSET5_LAYERYOFFSET5_Pos 16UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_LAYEROFFSET5_LAYERYOFFSET5_Msk 0x7FFF0000UL
/* VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1.CLIPWINDOWOFFSET5 */
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_CLIPWINDOWOFFSET5_CLIPWINDOWXOFFSET5_Pos 0UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_CLIPWINDOWOFFSET5_CLIPWINDOWXOFFSET5_Msk 0x7FFFUL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_CLIPWINDOWOFFSET5_CLIPWINDOWYOFFSET5_Pos 16UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_CLIPWINDOWOFFSET5_CLIPWINDOWYOFFSET5_Msk 0x7FFF0000UL
/* VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1.CLIPWINDOWDIMENSIONS5 */
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_CLIPWINDOWDIMENSIONS5_CLIPWINDOWWIDTH5_Pos 0UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_CLIPWINDOWDIMENSIONS5_CLIPWINDOWWIDTH5_Msk 0x3FFFUL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_CLIPWINDOWDIMENSIONS5_CLIPWINDOWHEIGHT5_Pos 16UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_CLIPWINDOWDIMENSIONS5_CLIPWINDOWHEIGHT5_Msk 0x3FFF0000UL
/* VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1.CONSTANTCOLOR5 */
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_CONSTANTCOLOR5_CONSTANTALPHA5_Pos 0UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_CONSTANTCOLOR5_CONSTANTALPHA5_Msk 0xFFUL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_CONSTANTCOLOR5_CONSTANTBLUE5_Pos 8UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_CONSTANTCOLOR5_CONSTANTBLUE5_Msk 0xFF00UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_CONSTANTCOLOR5_CONSTANTGREEN5_Pos 16UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_CONSTANTCOLOR5_CONSTANTGREEN5_Msk 0xFF0000UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_CONSTANTCOLOR5_CONSTANTRED5_Pos 24UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_CONSTANTCOLOR5_CONSTANTRED5_Msk 0xFF000000UL
/* VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1.LAYERPROPERTY5 */
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_LAYERPROPERTY5_TILEMODE5_Pos 1UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_LAYERPROPERTY5_TILEMODE5_Msk 0x6UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_LAYERPROPERTY5_ALPHASRCENABLE5_Pos 3UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_LAYERPROPERTY5_ALPHASRCENABLE5_Msk 0x8UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_LAYERPROPERTY5_ALPHACONSTENABLE5_Pos 4UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_LAYERPROPERTY5_ALPHACONSTENABLE5_Msk 0x10UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_LAYERPROPERTY5_ALPHAMASKENABLE5_Pos 5UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_LAYERPROPERTY5_ALPHAMASKENABLE5_Msk 0x20UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_LAYERPROPERTY5_ALPHATRANSENABLE5_Pos 6UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_LAYERPROPERTY5_ALPHATRANSENABLE5_Msk 0x40UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_LAYERPROPERTY5_RGBALPHASRCENABLE5_Pos 7UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_LAYERPROPERTY5_RGBALPHASRCENABLE5_Msk 0x80UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_LAYERPROPERTY5_RGBALPHACONSTENABLE5_Pos 8UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_LAYERPROPERTY5_RGBALPHACONSTENABLE5_Msk 0x100UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_LAYERPROPERTY5_RGBALPHAMASKENABLE5_Pos 9UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_LAYERPROPERTY5_RGBALPHAMASKENABLE5_Msk 0x200UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_LAYERPROPERTY5_RGBALPHATRANSENABLE5_Pos 10UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_LAYERPROPERTY5_RGBALPHATRANSENABLE5_Msk 0x400UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_LAYERPROPERTY5_PREMULCONSTRGB5_Pos 11UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_LAYERPROPERTY5_PREMULCONSTRGB5_Msk 0x800UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_LAYERPROPERTY5_YUVCONVERSIONMODE5_Pos 12UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_LAYERPROPERTY5_YUVCONVERSIONMODE5_Msk 0x3000UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_LAYERPROPERTY5_GAMMAREMOVEENABLE5_Pos 14UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_LAYERPROPERTY5_GAMMAREMOVEENABLE5_Msk 0x4000UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_LAYERPROPERTY5_CLIPWINDOWENABLE5_Pos 30UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_LAYERPROPERTY5_CLIPWINDOWENABLE5_Msk 0x40000000UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_LAYERPROPERTY5_SOURCEBUFFERENABLE5_Pos 31UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_LAYERPROPERTY5_SOURCEBUFFERENABLE5_Msk 0x80000000UL
/* VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1.BASEADDRESS6 */
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_BASEADDRESS6_BASEADDRESS6_Pos 0UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_BASEADDRESS6_BASEADDRESS6_Msk 0xFFFFFFFFUL
/* VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1.SOURCEBUFFERATTRIBUTES6 */
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_SOURCEBUFFERATTRIBUTES6_STRIDE6_Pos 0UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_SOURCEBUFFERATTRIBUTES6_STRIDE6_Msk 0xFFFFUL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_SOURCEBUFFERATTRIBUTES6_BITSPERPIXEL6_Pos 16UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_SOURCEBUFFERATTRIBUTES6_BITSPERPIXEL6_Msk 0x3F0000UL
/* VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1.SOURCEBUFFERDIMENSION6 */
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_SOURCEBUFFERDIMENSION6_LINEWIDTH6_Pos 0UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_SOURCEBUFFERDIMENSION6_LINEWIDTH6_Msk 0x3FFFUL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_SOURCEBUFFERDIMENSION6_LINECOUNT6_Pos 16UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_SOURCEBUFFERDIMENSION6_LINECOUNT6_Msk 0x3FFF0000UL
/* VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1.COLORCOMPONENTBITS6 */
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_COLORCOMPONENTBITS6_COMPONENTBITSALPHA6_Pos 0UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_COLORCOMPONENTBITS6_COMPONENTBITSALPHA6_Msk 0xFUL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_COLORCOMPONENTBITS6_COMPONENTBITSBLUE6_Pos 8UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_COLORCOMPONENTBITS6_COMPONENTBITSBLUE6_Msk 0xF00UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_COLORCOMPONENTBITS6_COMPONENTBITSGREEN6_Pos 16UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_COLORCOMPONENTBITS6_COMPONENTBITSGREEN6_Msk 0xF0000UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_COLORCOMPONENTBITS6_COMPONENTBITSRED6_Pos 24UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_COLORCOMPONENTBITS6_COMPONENTBITSRED6_Msk 0xF000000UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_COLORCOMPONENTBITS6_ITUFORMAT6_Pos 31UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_COLORCOMPONENTBITS6_ITUFORMAT6_Msk 0x80000000UL
/* VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1.COLORCOMPONENTSHIFT6 */
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_COLORCOMPONENTSHIFT6_COMPONENTSHIFTALPHA6_Pos 0UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_COLORCOMPONENTSHIFT6_COMPONENTSHIFTALPHA6_Msk 0x1FUL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_COLORCOMPONENTSHIFT6_COMPONENTSHIFTBLUE6_Pos 8UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_COLORCOMPONENTSHIFT6_COMPONENTSHIFTBLUE6_Msk 0x1F00UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_COLORCOMPONENTSHIFT6_COMPONENTSHIFTGREEN6_Pos 16UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_COLORCOMPONENTSHIFT6_COMPONENTSHIFTGREEN6_Msk 0x1F0000UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_COLORCOMPONENTSHIFT6_COMPONENTSHIFTRED6_Pos 24UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_COLORCOMPONENTSHIFT6_COMPONENTSHIFTRED6_Msk 0x1F000000UL
/* VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1.LAYEROFFSET6 */
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_LAYEROFFSET6_LAYERXOFFSET6_Pos 0UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_LAYEROFFSET6_LAYERXOFFSET6_Msk 0x7FFFUL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_LAYEROFFSET6_LAYERYOFFSET6_Pos 16UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_LAYEROFFSET6_LAYERYOFFSET6_Msk 0x7FFF0000UL
/* VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1.CLIPWINDOWOFFSET6 */
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_CLIPWINDOWOFFSET6_CLIPWINDOWXOFFSET6_Pos 0UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_CLIPWINDOWOFFSET6_CLIPWINDOWXOFFSET6_Msk 0x7FFFUL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_CLIPWINDOWOFFSET6_CLIPWINDOWYOFFSET6_Pos 16UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_CLIPWINDOWOFFSET6_CLIPWINDOWYOFFSET6_Msk 0x7FFF0000UL
/* VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1.CLIPWINDOWDIMENSIONS6 */
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_CLIPWINDOWDIMENSIONS6_CLIPWINDOWWIDTH6_Pos 0UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_CLIPWINDOWDIMENSIONS6_CLIPWINDOWWIDTH6_Msk 0x3FFFUL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_CLIPWINDOWDIMENSIONS6_CLIPWINDOWHEIGHT6_Pos 16UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_CLIPWINDOWDIMENSIONS6_CLIPWINDOWHEIGHT6_Msk 0x3FFF0000UL
/* VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1.CONSTANTCOLOR6 */
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_CONSTANTCOLOR6_CONSTANTALPHA6_Pos 0UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_CONSTANTCOLOR6_CONSTANTALPHA6_Msk 0xFFUL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_CONSTANTCOLOR6_CONSTANTBLUE6_Pos 8UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_CONSTANTCOLOR6_CONSTANTBLUE6_Msk 0xFF00UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_CONSTANTCOLOR6_CONSTANTGREEN6_Pos 16UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_CONSTANTCOLOR6_CONSTANTGREEN6_Msk 0xFF0000UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_CONSTANTCOLOR6_CONSTANTRED6_Pos 24UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_CONSTANTCOLOR6_CONSTANTRED6_Msk 0xFF000000UL
/* VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1.LAYERPROPERTY6 */
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_LAYERPROPERTY6_TILEMODE6_Pos 1UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_LAYERPROPERTY6_TILEMODE6_Msk 0x6UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_LAYERPROPERTY6_ALPHASRCENABLE6_Pos 3UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_LAYERPROPERTY6_ALPHASRCENABLE6_Msk 0x8UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_LAYERPROPERTY6_ALPHACONSTENABLE6_Pos 4UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_LAYERPROPERTY6_ALPHACONSTENABLE6_Msk 0x10UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_LAYERPROPERTY6_ALPHAMASKENABLE6_Pos 5UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_LAYERPROPERTY6_ALPHAMASKENABLE6_Msk 0x20UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_LAYERPROPERTY6_ALPHATRANSENABLE6_Pos 6UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_LAYERPROPERTY6_ALPHATRANSENABLE6_Msk 0x40UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_LAYERPROPERTY6_RGBALPHASRCENABLE6_Pos 7UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_LAYERPROPERTY6_RGBALPHASRCENABLE6_Msk 0x80UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_LAYERPROPERTY6_RGBALPHACONSTENABLE6_Pos 8UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_LAYERPROPERTY6_RGBALPHACONSTENABLE6_Msk 0x100UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_LAYERPROPERTY6_RGBALPHAMASKENABLE6_Pos 9UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_LAYERPROPERTY6_RGBALPHAMASKENABLE6_Msk 0x200UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_LAYERPROPERTY6_RGBALPHATRANSENABLE6_Pos 10UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_LAYERPROPERTY6_RGBALPHATRANSENABLE6_Msk 0x400UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_LAYERPROPERTY6_PREMULCONSTRGB6_Pos 11UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_LAYERPROPERTY6_PREMULCONSTRGB6_Msk 0x800UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_LAYERPROPERTY6_YUVCONVERSIONMODE6_Pos 12UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_LAYERPROPERTY6_YUVCONVERSIONMODE6_Msk 0x3000UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_LAYERPROPERTY6_GAMMAREMOVEENABLE6_Pos 14UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_LAYERPROPERTY6_GAMMAREMOVEENABLE6_Msk 0x4000UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_LAYERPROPERTY6_CLIPWINDOWENABLE6_Pos 30UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_LAYERPROPERTY6_CLIPWINDOWENABLE6_Msk 0x40000000UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_LAYERPROPERTY6_SOURCEBUFFERENABLE6_Pos 31UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_LAYERPROPERTY6_SOURCEBUFFERENABLE6_Msk 0x80000000UL
/* VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1.BASEADDRESS7 */
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_BASEADDRESS7_BASEADDRESS7_Pos 0UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_BASEADDRESS7_BASEADDRESS7_Msk 0xFFFFFFFFUL
/* VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1.SOURCEBUFFERATTRIBUTES7 */
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_SOURCEBUFFERATTRIBUTES7_STRIDE7_Pos 0UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_SOURCEBUFFERATTRIBUTES7_STRIDE7_Msk 0xFFFFUL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_SOURCEBUFFERATTRIBUTES7_BITSPERPIXEL7_Pos 16UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_SOURCEBUFFERATTRIBUTES7_BITSPERPIXEL7_Msk 0x3F0000UL
/* VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1.SOURCEBUFFERDIMENSION7 */
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_SOURCEBUFFERDIMENSION7_LINEWIDTH7_Pos 0UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_SOURCEBUFFERDIMENSION7_LINEWIDTH7_Msk 0x3FFFUL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_SOURCEBUFFERDIMENSION7_LINECOUNT7_Pos 16UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_SOURCEBUFFERDIMENSION7_LINECOUNT7_Msk 0x3FFF0000UL
/* VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1.COLORCOMPONENTBITS7 */
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_COLORCOMPONENTBITS7_COMPONENTBITSALPHA7_Pos 0UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_COLORCOMPONENTBITS7_COMPONENTBITSALPHA7_Msk 0xFUL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_COLORCOMPONENTBITS7_COMPONENTBITSBLUE7_Pos 8UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_COLORCOMPONENTBITS7_COMPONENTBITSBLUE7_Msk 0xF00UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_COLORCOMPONENTBITS7_COMPONENTBITSGREEN7_Pos 16UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_COLORCOMPONENTBITS7_COMPONENTBITSGREEN7_Msk 0xF0000UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_COLORCOMPONENTBITS7_COMPONENTBITSRED7_Pos 24UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_COLORCOMPONENTBITS7_COMPONENTBITSRED7_Msk 0xF000000UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_COLORCOMPONENTBITS7_ITUFORMAT7_Pos 31UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_COLORCOMPONENTBITS7_ITUFORMAT7_Msk 0x80000000UL
/* VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1.COLORCOMPONENTSHIFT7 */
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_COLORCOMPONENTSHIFT7_COMPONENTSHIFTALPHA7_Pos 0UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_COLORCOMPONENTSHIFT7_COMPONENTSHIFTALPHA7_Msk 0x1FUL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_COLORCOMPONENTSHIFT7_COMPONENTSHIFTBLUE7_Pos 8UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_COLORCOMPONENTSHIFT7_COMPONENTSHIFTBLUE7_Msk 0x1F00UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_COLORCOMPONENTSHIFT7_COMPONENTSHIFTGREEN7_Pos 16UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_COLORCOMPONENTSHIFT7_COMPONENTSHIFTGREEN7_Msk 0x1F0000UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_COLORCOMPONENTSHIFT7_COMPONENTSHIFTRED7_Pos 24UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_COLORCOMPONENTSHIFT7_COMPONENTSHIFTRED7_Msk 0x1F000000UL
/* VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1.LAYEROFFSET7 */
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_LAYEROFFSET7_LAYERXOFFSET7_Pos 0UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_LAYEROFFSET7_LAYERXOFFSET7_Msk 0x7FFFUL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_LAYEROFFSET7_LAYERYOFFSET7_Pos 16UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_LAYEROFFSET7_LAYERYOFFSET7_Msk 0x7FFF0000UL
/* VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1.CLIPWINDOWOFFSET7 */
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_CLIPWINDOWOFFSET7_CLIPWINDOWXOFFSET7_Pos 0UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_CLIPWINDOWOFFSET7_CLIPWINDOWXOFFSET7_Msk 0x7FFFUL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_CLIPWINDOWOFFSET7_CLIPWINDOWYOFFSET7_Pos 16UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_CLIPWINDOWOFFSET7_CLIPWINDOWYOFFSET7_Msk 0x7FFF0000UL
/* VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1.CLIPWINDOWDIMENSIONS7 */
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_CLIPWINDOWDIMENSIONS7_CLIPWINDOWWIDTH7_Pos 0UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_CLIPWINDOWDIMENSIONS7_CLIPWINDOWWIDTH7_Msk 0x3FFFUL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_CLIPWINDOWDIMENSIONS7_CLIPWINDOWHEIGHT7_Pos 16UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_CLIPWINDOWDIMENSIONS7_CLIPWINDOWHEIGHT7_Msk 0x3FFF0000UL
/* VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1.CONSTANTCOLOR7 */
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_CONSTANTCOLOR7_CONSTANTALPHA7_Pos 0UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_CONSTANTCOLOR7_CONSTANTALPHA7_Msk 0xFFUL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_CONSTANTCOLOR7_CONSTANTBLUE7_Pos 8UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_CONSTANTCOLOR7_CONSTANTBLUE7_Msk 0xFF00UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_CONSTANTCOLOR7_CONSTANTGREEN7_Pos 16UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_CONSTANTCOLOR7_CONSTANTGREEN7_Msk 0xFF0000UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_CONSTANTCOLOR7_CONSTANTRED7_Pos 24UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_CONSTANTCOLOR7_CONSTANTRED7_Msk 0xFF000000UL
/* VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1.LAYERPROPERTY7 */
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_LAYERPROPERTY7_TILEMODE7_Pos 1UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_LAYERPROPERTY7_TILEMODE7_Msk 0x6UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_LAYERPROPERTY7_ALPHASRCENABLE7_Pos 3UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_LAYERPROPERTY7_ALPHASRCENABLE7_Msk 0x8UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_LAYERPROPERTY7_ALPHACONSTENABLE7_Pos 4UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_LAYERPROPERTY7_ALPHACONSTENABLE7_Msk 0x10UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_LAYERPROPERTY7_ALPHAMASKENABLE7_Pos 5UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_LAYERPROPERTY7_ALPHAMASKENABLE7_Msk 0x20UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_LAYERPROPERTY7_ALPHATRANSENABLE7_Pos 6UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_LAYERPROPERTY7_ALPHATRANSENABLE7_Msk 0x40UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_LAYERPROPERTY7_RGBALPHASRCENABLE7_Pos 7UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_LAYERPROPERTY7_RGBALPHASRCENABLE7_Msk 0x80UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_LAYERPROPERTY7_RGBALPHACONSTENABLE7_Pos 8UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_LAYERPROPERTY7_RGBALPHACONSTENABLE7_Msk 0x100UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_LAYERPROPERTY7_RGBALPHAMASKENABLE7_Pos 9UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_LAYERPROPERTY7_RGBALPHAMASKENABLE7_Msk 0x200UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_LAYERPROPERTY7_RGBALPHATRANSENABLE7_Pos 10UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_LAYERPROPERTY7_RGBALPHATRANSENABLE7_Msk 0x400UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_LAYERPROPERTY7_PREMULCONSTRGB7_Pos 11UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_LAYERPROPERTY7_PREMULCONSTRGB7_Msk 0x800UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_LAYERPROPERTY7_YUVCONVERSIONMODE7_Pos 12UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_LAYERPROPERTY7_YUVCONVERSIONMODE7_Msk 0x3000UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_LAYERPROPERTY7_GAMMAREMOVEENABLE7_Pos 14UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_LAYERPROPERTY7_GAMMAREMOVEENABLE7_Msk 0x4000UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_LAYERPROPERTY7_CLIPWINDOWENABLE7_Pos 30UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_LAYERPROPERTY7_CLIPWINDOWENABLE7_Msk 0x40000000UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_LAYERPROPERTY7_SOURCEBUFFERENABLE7_Pos 31UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_LAYERPROPERTY7_SOURCEBUFFERENABLE7_Msk 0x80000000UL
/* VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1.FRAMEDIMENSIONS */
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_FRAMEDIMENSIONS_FRAMEWIDTH_Pos 0UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_FRAMEDIMENSIONS_FRAMEWIDTH_Msk 0x3FFFUL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_FRAMEDIMENSIONS_FRAMEHEIGHT_Pos 16UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_FRAMEDIMENSIONS_FRAMEHEIGHT_Msk 0x3FFF0000UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_FRAMEDIMENSIONS_EMPTYFRAME_Pos 31UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_FRAMEDIMENSIONS_EMPTYFRAME_Msk 0x80000000UL
/* VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1.FRAMERESAMPLING */
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_FRAMERESAMPLING_STARTX_Pos 0UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_FRAMERESAMPLING_STARTX_Msk 0x3FUL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_FRAMERESAMPLING_STARTY_Pos 6UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_FRAMERESAMPLING_STARTY_Msk 0xFC0UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_FRAMERESAMPLING_DELTAX_Pos 12UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_FRAMERESAMPLING_DELTAX_Msk 0x3F000UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_FRAMERESAMPLING_DELTAY_Pos 18UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_FRAMERESAMPLING_DELTAY_Msk 0xFC0000UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_FRAMERESAMPLING_SWAPDIRECTION_Pos 24UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_FRAMERESAMPLING_SWAPDIRECTION_Msk 0x1000000UL
/* VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1.WARPCONTROL */
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_WARPCONTROL_WARPBITSPERPIXEL_Pos 0UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_WARPCONTROL_WARPBITSPERPIXEL_Msk 0x3FUL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_WARPCONTROL_WARPCOORDINATEMODE_Pos 8UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_WARPCONTROL_WARPCOORDINATEMODE_Msk 0x300UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_WARPCONTROL_WARPSYMMETRICOFFSET_Pos 12UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_WARPCONTROL_WARPSYMMETRICOFFSET_Msk 0x1000UL
/* VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1.ARBSTARTX */
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_ARBSTARTX_ARBSTARTX_Pos 0UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_ARBSTARTX_ARBSTARTX_Msk 0x1FFFFFUL
/* VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1.ARBSTARTY */
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_ARBSTARTY_ARBSTARTY_Pos 0UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_ARBSTARTY_ARBSTARTY_Msk 0x1FFFFFUL
/* VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1.ARBDELTA */
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_ARBDELTA_ARBDELTAXX_Pos 0UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_ARBDELTA_ARBDELTAXX_Msk 0xFFUL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_ARBDELTA_ARBDELTAXY_Pos 8UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_ARBDELTA_ARBDELTAXY_Msk 0xFF00UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_ARBDELTA_ARBDELTAYX_Pos 16UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_ARBDELTA_ARBDELTAYX_Msk 0xFF0000UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_ARBDELTA_ARBDELTAYY_Pos 24UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_ARBDELTA_ARBDELTAYY_Msk 0xFF000000UL
/* VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1.FIRPOSITIONS */
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_FIRPOSITIONS_FIR0POSITION_Pos 0UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_FIRPOSITIONS_FIR0POSITION_Msk 0xFUL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_FIRPOSITIONS_FIR1POSITION_Pos 4UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_FIRPOSITIONS_FIR1POSITION_Msk 0xF0UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_FIRPOSITIONS_FIR2POSITION_Pos 8UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_FIRPOSITIONS_FIR2POSITION_Msk 0xF00UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_FIRPOSITIONS_FIR3POSITION_Pos 12UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_FIRPOSITIONS_FIR3POSITION_Msk 0xF000UL
/* VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1.FIRCOEFFICIENTS */
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_FIRCOEFFICIENTS_FIR0COEFFICIENT_Pos 0UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_FIRCOEFFICIENTS_FIR0COEFFICIENT_Msk 0xFFUL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_FIRCOEFFICIENTS_FIR1COEFFICIENT_Pos 8UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_FIRCOEFFICIENTS_FIR1COEFFICIENT_Msk 0xFF00UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_FIRCOEFFICIENTS_FIR2COEFFICIENT_Pos 16UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_FIRCOEFFICIENTS_FIR2COEFFICIENT_Msk 0xFF0000UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_FIRCOEFFICIENTS_FIR3COEFFICIENT_Pos 24UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_FIRCOEFFICIENTS_FIR3COEFFICIENT_Msk 0xFF000000UL
/* VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1.CONTROL */
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_CONTROL_RASTERMODE_Pos 0UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_CONTROL_RASTERMODE_Msk 0x7UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_CONTROL_INPUTSELECT_Pos 3UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_CONTROL_INPUTSELECT_Msk 0x18UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_CONTROL_RAWPIXEL_Pos 7UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_CONTROL_RAWPIXEL_Msk 0x80UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_CONTROL_CLIPCOLOR_Pos 16UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_CONTROL_CLIPCOLOR_Msk 0x10000UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_CONTROL_CLIPLAYER_Pos 17UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_CONTROL_CLIPLAYER_Msk 0xE0000UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_CONTROL_FILTERMODE_Pos 20UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_CONTROL_FILTERMODE_Msk 0x700000UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_CONTROL_LINEBUFLAYER_Pos 24UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_CONTROL_LINEBUFLAYER_Msk 0x7000000UL
/* VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1.TRIGGERENABLE */
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_TRIGGERENABLE_SHDLDREQ_Pos 0UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_TRIGGERENABLE_SHDLDREQ_Msk 0xFFUL
/* VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1.CONTROLTRIGGER */
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_CONTROLTRIGGER_SHDTOKGEN_Pos 0UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_CONTROLTRIGGER_SHDTOKGEN_Msk 0x1UL
/* VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1.START */
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_START_START_Pos 0UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_START_START_Msk 0x1UL
/* VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1.FETCHTYPE */
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_FETCHTYPE_FETCHTYPE_Pos 0UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_FETCHTYPE_FETCHTYPE_Msk 0xFUL
/* VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1.BURSTBUFFERPROPERTIES */
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_BURSTBUFFERPROPERTIES_MANAGEDBURSTBUFFERS_Pos 0UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_BURSTBUFFERPROPERTIES_MANAGEDBURSTBUFFERS_Msk 0xFFUL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_BURSTBUFFERPROPERTIES_BURSTLENGTHFORMAXBUFFERS_Pos 8UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_BURSTBUFFERPROPERTIES_BURSTLENGTHFORMAXBUFFERS_Msk 0x1F00UL
/* VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1.STATUS */
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_STATUS_WRITETIMEOUT_Pos 0UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_STATUS_WRITETIMEOUT_Msk 0x1UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_STATUS_READTIMEOUT_Pos 4UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHWARP1_STATUS_READTIMEOUT_Msk 0x10UL


/* VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHECO1.STATICCONTROL */
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHECO1_STATICCONTROL_SHDEN_Pos 0UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHECO1_STATICCONTROL_SHDEN_Msk 0x1UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHECO1_STATICCONTROL_BASEADDRESSAUTOUPDATE_Pos 16UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHECO1_STATICCONTROL_BASEADDRESSAUTOUPDATE_Msk 0xFF0000UL
/* VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHECO1.BURSTBUFFERMANAGEMENT */
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHECO1_BURSTBUFFERMANAGEMENT_SETNUMBUFFERS_Pos 0UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHECO1_BURSTBUFFERMANAGEMENT_SETNUMBUFFERS_Msk 0xFFUL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHECO1_BURSTBUFFERMANAGEMENT_SETBURSTLENGTH_Pos 8UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHECO1_BURSTBUFFERMANAGEMENT_SETBURSTLENGTH_Msk 0x1F00UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHECO1_BURSTBUFFERMANAGEMENT_LINEMODE_Pos 31UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHECO1_BURSTBUFFERMANAGEMENT_LINEMODE_Msk 0x80000000UL
/* VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHECO1.BASEADDRESS0 */
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHECO1_BASEADDRESS0_BASEADDRESS0_Pos 0UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHECO1_BASEADDRESS0_BASEADDRESS0_Msk 0xFFFFFFFFUL
/* VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHECO1.SOURCEBUFFERATTRIBUTES0 */
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHECO1_SOURCEBUFFERATTRIBUTES0_STRIDE0_Pos 0UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHECO1_SOURCEBUFFERATTRIBUTES0_STRIDE0_Msk 0xFFFFUL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHECO1_SOURCEBUFFERATTRIBUTES0_BITSPERPIXEL0_Pos 16UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHECO1_SOURCEBUFFERATTRIBUTES0_BITSPERPIXEL0_Msk 0x3F0000UL
/* VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHECO1.SOURCEBUFFERDIMENSION0 */
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHECO1_SOURCEBUFFERDIMENSION0_LINEWIDTH0_Pos 0UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHECO1_SOURCEBUFFERDIMENSION0_LINEWIDTH0_Msk 0x3FFFUL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHECO1_SOURCEBUFFERDIMENSION0_LINECOUNT0_Pos 16UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHECO1_SOURCEBUFFERDIMENSION0_LINECOUNT0_Msk 0x3FFF0000UL
/* VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHECO1.COLORCOMPONENTBITS0 */
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHECO1_COLORCOMPONENTBITS0_COMPONENTBITSALPHA0_Pos 0UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHECO1_COLORCOMPONENTBITS0_COMPONENTBITSALPHA0_Msk 0xFUL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHECO1_COLORCOMPONENTBITS0_COMPONENTBITSBLUE0_Pos 8UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHECO1_COLORCOMPONENTBITS0_COMPONENTBITSBLUE0_Msk 0xF00UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHECO1_COLORCOMPONENTBITS0_COMPONENTBITSGREEN0_Pos 16UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHECO1_COLORCOMPONENTBITS0_COMPONENTBITSGREEN0_Msk 0xF0000UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHECO1_COLORCOMPONENTBITS0_COMPONENTBITSRED0_Pos 24UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHECO1_COLORCOMPONENTBITS0_COMPONENTBITSRED0_Msk 0xF000000UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHECO1_COLORCOMPONENTBITS0_ITUFORMAT0_Pos 31UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHECO1_COLORCOMPONENTBITS0_ITUFORMAT0_Msk 0x80000000UL
/* VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHECO1.COLORCOMPONENTSHIFT0 */
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHECO1_COLORCOMPONENTSHIFT0_COMPONENTSHIFTALPHA0_Pos 0UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHECO1_COLORCOMPONENTSHIFT0_COMPONENTSHIFTALPHA0_Msk 0x1FUL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHECO1_COLORCOMPONENTSHIFT0_COMPONENTSHIFTBLUE0_Pos 8UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHECO1_COLORCOMPONENTSHIFT0_COMPONENTSHIFTBLUE0_Msk 0x1F00UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHECO1_COLORCOMPONENTSHIFT0_COMPONENTSHIFTGREEN0_Pos 16UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHECO1_COLORCOMPONENTSHIFT0_COMPONENTSHIFTGREEN0_Msk 0x1F0000UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHECO1_COLORCOMPONENTSHIFT0_COMPONENTSHIFTRED0_Pos 24UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHECO1_COLORCOMPONENTSHIFT0_COMPONENTSHIFTRED0_Msk 0x1F000000UL
/* VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHECO1.LAYEROFFSET0 */
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHECO1_LAYEROFFSET0_LAYERXOFFSET0_Pos 0UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHECO1_LAYEROFFSET0_LAYERXOFFSET0_Msk 0x7FFFUL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHECO1_LAYEROFFSET0_LAYERYOFFSET0_Pos 16UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHECO1_LAYEROFFSET0_LAYERYOFFSET0_Msk 0x7FFF0000UL
/* VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHECO1.CLIPWINDOWOFFSET0 */
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHECO1_CLIPWINDOWOFFSET0_CLIPWINDOWXOFFSET0_Pos 0UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHECO1_CLIPWINDOWOFFSET0_CLIPWINDOWXOFFSET0_Msk 0x7FFFUL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHECO1_CLIPWINDOWOFFSET0_CLIPWINDOWYOFFSET0_Pos 16UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHECO1_CLIPWINDOWOFFSET0_CLIPWINDOWYOFFSET0_Msk 0x7FFF0000UL
/* VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHECO1.CLIPWINDOWDIMENSIONS0 */
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHECO1_CLIPWINDOWDIMENSIONS0_CLIPWINDOWWIDTH0_Pos 0UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHECO1_CLIPWINDOWDIMENSIONS0_CLIPWINDOWWIDTH0_Msk 0x3FFFUL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHECO1_CLIPWINDOWDIMENSIONS0_CLIPWINDOWHEIGHT0_Pos 16UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHECO1_CLIPWINDOWDIMENSIONS0_CLIPWINDOWHEIGHT0_Msk 0x3FFF0000UL
/* VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHECO1.CONSTANTCOLOR0 */
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHECO1_CONSTANTCOLOR0_CONSTANTALPHA0_Pos 0UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHECO1_CONSTANTCOLOR0_CONSTANTALPHA0_Msk 0xFFUL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHECO1_CONSTANTCOLOR0_CONSTANTBLUE0_Pos 8UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHECO1_CONSTANTCOLOR0_CONSTANTBLUE0_Msk 0xFF00UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHECO1_CONSTANTCOLOR0_CONSTANTGREEN0_Pos 16UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHECO1_CONSTANTCOLOR0_CONSTANTGREEN0_Msk 0xFF0000UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHECO1_CONSTANTCOLOR0_CONSTANTRED0_Pos 24UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHECO1_CONSTANTCOLOR0_CONSTANTRED0_Msk 0xFF000000UL
/* VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHECO1.LAYERPROPERTY0 */
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHECO1_LAYERPROPERTY0_TILEMODE0_Pos 1UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHECO1_LAYERPROPERTY0_TILEMODE0_Msk 0x6UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHECO1_LAYERPROPERTY0_CLIPWINDOWENABLE0_Pos 30UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHECO1_LAYERPROPERTY0_CLIPWINDOWENABLE0_Msk 0x40000000UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHECO1_LAYERPROPERTY0_SOURCEBUFFERENABLE0_Pos 31UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHECO1_LAYERPROPERTY0_SOURCEBUFFERENABLE0_Msk 0x80000000UL
/* VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHECO1.FRAMEDIMENSIONS */
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHECO1_FRAMEDIMENSIONS_FRAMEWIDTH_Pos 0UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHECO1_FRAMEDIMENSIONS_FRAMEWIDTH_Msk 0x3FFFUL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHECO1_FRAMEDIMENSIONS_FRAMEHEIGHT_Pos 16UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHECO1_FRAMEDIMENSIONS_FRAMEHEIGHT_Msk 0x3FFF0000UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHECO1_FRAMEDIMENSIONS_EMPTYFRAME_Pos 31UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHECO1_FRAMEDIMENSIONS_EMPTYFRAME_Msk 0x80000000UL
/* VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHECO1.FRAMERESAMPLING */
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHECO1_FRAMERESAMPLING_STARTX_Pos 0UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHECO1_FRAMERESAMPLING_STARTX_Msk 0x3FUL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHECO1_FRAMERESAMPLING_STARTY_Pos 6UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHECO1_FRAMERESAMPLING_STARTY_Msk 0xFC0UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHECO1_FRAMERESAMPLING_DELTAX_Pos 12UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHECO1_FRAMERESAMPLING_DELTAX_Msk 0x3F000UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHECO1_FRAMERESAMPLING_DELTAY_Pos 18UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHECO1_FRAMERESAMPLING_DELTAY_Msk 0xFC0000UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHECO1_FRAMERESAMPLING_SWAPDIRECTION_Pos 24UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHECO1_FRAMERESAMPLING_SWAPDIRECTION_Msk 0x1000000UL
/* VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHECO1.CONTROL */
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHECO1_CONTROL_RAWPIXEL_Pos 7UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHECO1_CONTROL_RAWPIXEL_Msk 0x80UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHECO1_CONTROL_CLIPCOLOR_Pos 16UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHECO1_CONTROL_CLIPCOLOR_Msk 0x10000UL
/* VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHECO1.CONTROLTRIGGER */
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHECO1_CONTROLTRIGGER_SHDTOKGEN_Pos 0UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHECO1_CONTROLTRIGGER_SHDTOKGEN_Msk 0x1UL
/* VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHECO1.START */
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHECO1_START_START_Pos 0UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHECO1_START_START_Msk 0x1UL
/* VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHECO1.FETCHTYPE */
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHECO1_FETCHTYPE_FETCHTYPE_Pos 0UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHECO1_FETCHTYPE_FETCHTYPE_Msk 0xFUL
/* VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHECO1.BURSTBUFFERPROPERTIES */
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHECO1_BURSTBUFFERPROPERTIES_MANAGEDBURSTBUFFERS_Pos 0UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHECO1_BURSTBUFFERPROPERTIES_MANAGEDBURSTBUFFERS_Msk 0xFFUL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHECO1_BURSTBUFFERPROPERTIES_BURSTLENGTHFORMAXBUFFERS_Pos 8UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHECO1_BURSTBUFFERPROPERTIES_BURSTLENGTHFORMAXBUFFERS_Msk 0x1F00UL


/* VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1.STATICCONTROL */
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_STATICCONTROL_SHDEN_Pos 0UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_STATICCONTROL_SHDEN_Msk 0x1UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_STATICCONTROL_LBHSHDEN_Pos 1UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_STATICCONTROL_LBHSHDEN_Msk 0x2UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_STATICCONTROL_BASEADDRESSAUTOUPDATE_Pos 16UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_STATICCONTROL_BASEADDRESSAUTOUPDATE_Msk 0xFF0000UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_STATICCONTROL_SHDLDREQSTICKY_Pos 24UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_STATICCONTROL_SHDLDREQSTICKY_Msk 0xFF000000UL
/* VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1.BURSTBUFFERMANAGEMENT */
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_BURSTBUFFERMANAGEMENT_SETNUMBUFFERS_Pos 0UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_BURSTBUFFERMANAGEMENT_SETNUMBUFFERS_Msk 0xFFUL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_BURSTBUFFERMANAGEMENT_SETBURSTLENGTH_Pos 8UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_BURSTBUFFERMANAGEMENT_SETBURSTLENGTH_Msk 0x1F00UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_BURSTBUFFERMANAGEMENT_LINEMODE_Pos 31UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_BURSTBUFFERMANAGEMENT_LINEMODE_Msk 0x80000000UL
/* VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1.BASEADDRESS0 */
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_BASEADDRESS0_BASEADDRESS0_Pos 0UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_BASEADDRESS0_BASEADDRESS0_Msk 0xFFFFFFFFUL
/* VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1.SOURCEBUFFERATTRIBUTES0 */
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_SOURCEBUFFERATTRIBUTES0_STRIDE0_Pos 0UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_SOURCEBUFFERATTRIBUTES0_STRIDE0_Msk 0xFFFFUL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_SOURCEBUFFERATTRIBUTES0_BITSPERPIXEL0_Pos 16UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_SOURCEBUFFERATTRIBUTES0_BITSPERPIXEL0_Msk 0x3F0000UL
/* VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1.SOURCEBUFFERDIMENSION0 */
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_SOURCEBUFFERDIMENSION0_LINEWIDTH0_Pos 0UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_SOURCEBUFFERDIMENSION0_LINEWIDTH0_Msk 0x3FFFUL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_SOURCEBUFFERDIMENSION0_LINECOUNT0_Pos 16UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_SOURCEBUFFERDIMENSION0_LINECOUNT0_Msk 0x3FFF0000UL
/* VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1.COLORCOMPONENTBITS0 */
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_COLORCOMPONENTBITS0_COMPONENTBITSALPHA0_Pos 0UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_COLORCOMPONENTBITS0_COMPONENTBITSALPHA0_Msk 0xFUL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_COLORCOMPONENTBITS0_COMPONENTBITSBLUE0_Pos 8UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_COLORCOMPONENTBITS0_COMPONENTBITSBLUE0_Msk 0xF00UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_COLORCOMPONENTBITS0_COMPONENTBITSGREEN0_Pos 16UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_COLORCOMPONENTBITS0_COMPONENTBITSGREEN0_Msk 0xF0000UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_COLORCOMPONENTBITS0_COMPONENTBITSRED0_Pos 24UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_COLORCOMPONENTBITS0_COMPONENTBITSRED0_Msk 0xF000000UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_COLORCOMPONENTBITS0_ITUFORMAT0_Pos 31UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_COLORCOMPONENTBITS0_ITUFORMAT0_Msk 0x80000000UL
/* VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1.COLORCOMPONENTSHIFT0 */
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_COLORCOMPONENTSHIFT0_COMPONENTSHIFTALPHA0_Pos 0UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_COLORCOMPONENTSHIFT0_COMPONENTSHIFTALPHA0_Msk 0x1FUL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_COLORCOMPONENTSHIFT0_COMPONENTSHIFTBLUE0_Pos 8UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_COLORCOMPONENTSHIFT0_COMPONENTSHIFTBLUE0_Msk 0x1F00UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_COLORCOMPONENTSHIFT0_COMPONENTSHIFTGREEN0_Pos 16UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_COLORCOMPONENTSHIFT0_COMPONENTSHIFTGREEN0_Msk 0x1F0000UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_COLORCOMPONENTSHIFT0_COMPONENTSHIFTRED0_Pos 24UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_COLORCOMPONENTSHIFT0_COMPONENTSHIFTRED0_Msk 0x1F000000UL
/* VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1.LAYEROFFSET0 */
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_LAYEROFFSET0_LAYERXOFFSET0_Pos 0UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_LAYEROFFSET0_LAYERXOFFSET0_Msk 0x7FFFUL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_LAYEROFFSET0_LAYERYOFFSET0_Pos 16UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_LAYEROFFSET0_LAYERYOFFSET0_Msk 0x7FFF0000UL
/* VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1.CLIPWINDOWOFFSET0 */
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_CLIPWINDOWOFFSET0_CLIPWINDOWXOFFSET0_Pos 0UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_CLIPWINDOWOFFSET0_CLIPWINDOWXOFFSET0_Msk 0x7FFFUL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_CLIPWINDOWOFFSET0_CLIPWINDOWYOFFSET0_Pos 16UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_CLIPWINDOWOFFSET0_CLIPWINDOWYOFFSET0_Msk 0x7FFF0000UL
/* VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1.CLIPWINDOWDIMENSIONS0 */
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_CLIPWINDOWDIMENSIONS0_CLIPWINDOWWIDTH0_Pos 0UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_CLIPWINDOWDIMENSIONS0_CLIPWINDOWWIDTH0_Msk 0x3FFFUL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_CLIPWINDOWDIMENSIONS0_CLIPWINDOWHEIGHT0_Pos 16UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_CLIPWINDOWDIMENSIONS0_CLIPWINDOWHEIGHT0_Msk 0x3FFF0000UL
/* VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1.CONSTANTCOLOR0 */
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_CONSTANTCOLOR0_CONSTANTALPHA0_Pos 0UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_CONSTANTCOLOR0_CONSTANTALPHA0_Msk 0xFFUL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_CONSTANTCOLOR0_CONSTANTBLUE0_Pos 8UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_CONSTANTCOLOR0_CONSTANTBLUE0_Msk 0xFF00UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_CONSTANTCOLOR0_CONSTANTGREEN0_Pos 16UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_CONSTANTCOLOR0_CONSTANTGREEN0_Msk 0xFF0000UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_CONSTANTCOLOR0_CONSTANTRED0_Pos 24UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_CONSTANTCOLOR0_CONSTANTRED0_Msk 0xFF000000UL
/* VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1.LAYERPROPERTY0 */
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_LAYERPROPERTY0_PALETTEENABLE0_Pos 0UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_LAYERPROPERTY0_PALETTEENABLE0_Msk 0x1UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_LAYERPROPERTY0_TILEMODE0_Pos 1UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_LAYERPROPERTY0_TILEMODE0_Msk 0x6UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_LAYERPROPERTY0_ALPHASRCENABLE0_Pos 3UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_LAYERPROPERTY0_ALPHASRCENABLE0_Msk 0x8UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_LAYERPROPERTY0_ALPHACONSTENABLE0_Pos 4UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_LAYERPROPERTY0_ALPHACONSTENABLE0_Msk 0x10UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_LAYERPROPERTY0_ALPHATRANSENABLE0_Pos 6UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_LAYERPROPERTY0_ALPHATRANSENABLE0_Msk 0x40UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_LAYERPROPERTY0_RGBALPHASRCENABLE0_Pos 7UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_LAYERPROPERTY0_RGBALPHASRCENABLE0_Msk 0x80UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_LAYERPROPERTY0_RGBALPHACONSTENABLE0_Pos 8UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_LAYERPROPERTY0_RGBALPHACONSTENABLE0_Msk 0x100UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_LAYERPROPERTY0_RGBALPHATRANSENABLE0_Pos 10UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_LAYERPROPERTY0_RGBALPHATRANSENABLE0_Msk 0x400UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_LAYERPROPERTY0_PREMULCONSTRGB0_Pos 11UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_LAYERPROPERTY0_PREMULCONSTRGB0_Msk 0x800UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_LAYERPROPERTY0_YUVCONVERSIONMODE0_Pos 12UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_LAYERPROPERTY0_YUVCONVERSIONMODE0_Msk 0x3000UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_LAYERPROPERTY0_GAMMAREMOVEENABLE0_Pos 14UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_LAYERPROPERTY0_GAMMAREMOVEENABLE0_Msk 0x4000UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_LAYERPROPERTY0_PALETTEOFFSET0_Pos 16UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_LAYERPROPERTY0_PALETTEOFFSET0_Msk 0x7FF0000UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_LAYERPROPERTY0_PALETTEIDWIDTH0_Pos 27UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_LAYERPROPERTY0_PALETTEIDWIDTH0_Msk 0x38000000UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_LAYERPROPERTY0_CLIPWINDOWENABLE0_Pos 30UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_LAYERPROPERTY0_CLIPWINDOWENABLE0_Msk 0x40000000UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_LAYERPROPERTY0_SOURCEBUFFERENABLE0_Pos 31UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_LAYERPROPERTY0_SOURCEBUFFERENABLE0_Msk 0x80000000UL
/* VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1.BASEADDRESS1 */
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_BASEADDRESS1_BASEADDRESS1_Pos 0UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_BASEADDRESS1_BASEADDRESS1_Msk 0xFFFFFFFFUL
/* VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1.SOURCEBUFFERATTRIBUTES1 */
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_SOURCEBUFFERATTRIBUTES1_STRIDE1_Pos 0UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_SOURCEBUFFERATTRIBUTES1_STRIDE1_Msk 0xFFFFUL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_SOURCEBUFFERATTRIBUTES1_BITSPERPIXEL1_Pos 16UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_SOURCEBUFFERATTRIBUTES1_BITSPERPIXEL1_Msk 0x3F0000UL
/* VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1.SOURCEBUFFERDIMENSION1 */
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_SOURCEBUFFERDIMENSION1_LINEWIDTH1_Pos 0UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_SOURCEBUFFERDIMENSION1_LINEWIDTH1_Msk 0x3FFFUL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_SOURCEBUFFERDIMENSION1_LINECOUNT1_Pos 16UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_SOURCEBUFFERDIMENSION1_LINECOUNT1_Msk 0x3FFF0000UL
/* VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1.COLORCOMPONENTBITS1 */
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_COLORCOMPONENTBITS1_COMPONENTBITSALPHA1_Pos 0UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_COLORCOMPONENTBITS1_COMPONENTBITSALPHA1_Msk 0xFUL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_COLORCOMPONENTBITS1_COMPONENTBITSBLUE1_Pos 8UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_COLORCOMPONENTBITS1_COMPONENTBITSBLUE1_Msk 0xF00UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_COLORCOMPONENTBITS1_COMPONENTBITSGREEN1_Pos 16UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_COLORCOMPONENTBITS1_COMPONENTBITSGREEN1_Msk 0xF0000UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_COLORCOMPONENTBITS1_COMPONENTBITSRED1_Pos 24UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_COLORCOMPONENTBITS1_COMPONENTBITSRED1_Msk 0xF000000UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_COLORCOMPONENTBITS1_ITUFORMAT1_Pos 31UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_COLORCOMPONENTBITS1_ITUFORMAT1_Msk 0x80000000UL
/* VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1.COLORCOMPONENTSHIFT1 */
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_COLORCOMPONENTSHIFT1_COMPONENTSHIFTALPHA1_Pos 0UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_COLORCOMPONENTSHIFT1_COMPONENTSHIFTALPHA1_Msk 0x1FUL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_COLORCOMPONENTSHIFT1_COMPONENTSHIFTBLUE1_Pos 8UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_COLORCOMPONENTSHIFT1_COMPONENTSHIFTBLUE1_Msk 0x1F00UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_COLORCOMPONENTSHIFT1_COMPONENTSHIFTGREEN1_Pos 16UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_COLORCOMPONENTSHIFT1_COMPONENTSHIFTGREEN1_Msk 0x1F0000UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_COLORCOMPONENTSHIFT1_COMPONENTSHIFTRED1_Pos 24UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_COLORCOMPONENTSHIFT1_COMPONENTSHIFTRED1_Msk 0x1F000000UL
/* VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1.LAYEROFFSET1 */
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_LAYEROFFSET1_LAYERXOFFSET1_Pos 0UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_LAYEROFFSET1_LAYERXOFFSET1_Msk 0x7FFFUL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_LAYEROFFSET1_LAYERYOFFSET1_Pos 16UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_LAYEROFFSET1_LAYERYOFFSET1_Msk 0x7FFF0000UL
/* VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1.CLIPWINDOWOFFSET1 */
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_CLIPWINDOWOFFSET1_CLIPWINDOWXOFFSET1_Pos 0UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_CLIPWINDOWOFFSET1_CLIPWINDOWXOFFSET1_Msk 0x7FFFUL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_CLIPWINDOWOFFSET1_CLIPWINDOWYOFFSET1_Pos 16UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_CLIPWINDOWOFFSET1_CLIPWINDOWYOFFSET1_Msk 0x7FFF0000UL
/* VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1.CLIPWINDOWDIMENSIONS1 */
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_CLIPWINDOWDIMENSIONS1_CLIPWINDOWWIDTH1_Pos 0UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_CLIPWINDOWDIMENSIONS1_CLIPWINDOWWIDTH1_Msk 0x3FFFUL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_CLIPWINDOWDIMENSIONS1_CLIPWINDOWHEIGHT1_Pos 16UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_CLIPWINDOWDIMENSIONS1_CLIPWINDOWHEIGHT1_Msk 0x3FFF0000UL
/* VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1.CONSTANTCOLOR1 */
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_CONSTANTCOLOR1_CONSTANTALPHA1_Pos 0UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_CONSTANTCOLOR1_CONSTANTALPHA1_Msk 0xFFUL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_CONSTANTCOLOR1_CONSTANTBLUE1_Pos 8UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_CONSTANTCOLOR1_CONSTANTBLUE1_Msk 0xFF00UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_CONSTANTCOLOR1_CONSTANTGREEN1_Pos 16UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_CONSTANTCOLOR1_CONSTANTGREEN1_Msk 0xFF0000UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_CONSTANTCOLOR1_CONSTANTRED1_Pos 24UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_CONSTANTCOLOR1_CONSTANTRED1_Msk 0xFF000000UL
/* VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1.LAYERPROPERTY1 */
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_LAYERPROPERTY1_PALETTEENABLE1_Pos 0UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_LAYERPROPERTY1_PALETTEENABLE1_Msk 0x1UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_LAYERPROPERTY1_TILEMODE1_Pos 1UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_LAYERPROPERTY1_TILEMODE1_Msk 0x6UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_LAYERPROPERTY1_ALPHASRCENABLE1_Pos 3UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_LAYERPROPERTY1_ALPHASRCENABLE1_Msk 0x8UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_LAYERPROPERTY1_ALPHACONSTENABLE1_Pos 4UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_LAYERPROPERTY1_ALPHACONSTENABLE1_Msk 0x10UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_LAYERPROPERTY1_ALPHATRANSENABLE1_Pos 6UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_LAYERPROPERTY1_ALPHATRANSENABLE1_Msk 0x40UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_LAYERPROPERTY1_RGBALPHASRCENABLE1_Pos 7UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_LAYERPROPERTY1_RGBALPHASRCENABLE1_Msk 0x80UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_LAYERPROPERTY1_RGBALPHACONSTENABLE1_Pos 8UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_LAYERPROPERTY1_RGBALPHACONSTENABLE1_Msk 0x100UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_LAYERPROPERTY1_RGBALPHATRANSENABLE1_Pos 10UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_LAYERPROPERTY1_RGBALPHATRANSENABLE1_Msk 0x400UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_LAYERPROPERTY1_PREMULCONSTRGB1_Pos 11UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_LAYERPROPERTY1_PREMULCONSTRGB1_Msk 0x800UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_LAYERPROPERTY1_YUVCONVERSIONMODE1_Pos 12UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_LAYERPROPERTY1_YUVCONVERSIONMODE1_Msk 0x3000UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_LAYERPROPERTY1_GAMMAREMOVEENABLE1_Pos 14UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_LAYERPROPERTY1_GAMMAREMOVEENABLE1_Msk 0x4000UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_LAYERPROPERTY1_PALETTEOFFSET1_Pos 16UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_LAYERPROPERTY1_PALETTEOFFSET1_Msk 0x7FF0000UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_LAYERPROPERTY1_PALETTEIDWIDTH1_Pos 27UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_LAYERPROPERTY1_PALETTEIDWIDTH1_Msk 0x38000000UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_LAYERPROPERTY1_CLIPWINDOWENABLE1_Pos 30UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_LAYERPROPERTY1_CLIPWINDOWENABLE1_Msk 0x40000000UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_LAYERPROPERTY1_SOURCEBUFFERENABLE1_Pos 31UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_LAYERPROPERTY1_SOURCEBUFFERENABLE1_Msk 0x80000000UL
/* VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1.BASEADDRESS2 */
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_BASEADDRESS2_BASEADDRESS2_Pos 0UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_BASEADDRESS2_BASEADDRESS2_Msk 0xFFFFFFFFUL
/* VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1.SOURCEBUFFERATTRIBUTES2 */
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_SOURCEBUFFERATTRIBUTES2_STRIDE2_Pos 0UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_SOURCEBUFFERATTRIBUTES2_STRIDE2_Msk 0xFFFFUL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_SOURCEBUFFERATTRIBUTES2_BITSPERPIXEL2_Pos 16UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_SOURCEBUFFERATTRIBUTES2_BITSPERPIXEL2_Msk 0x3F0000UL
/* VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1.SOURCEBUFFERDIMENSION2 */
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_SOURCEBUFFERDIMENSION2_LINEWIDTH2_Pos 0UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_SOURCEBUFFERDIMENSION2_LINEWIDTH2_Msk 0x3FFFUL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_SOURCEBUFFERDIMENSION2_LINECOUNT2_Pos 16UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_SOURCEBUFFERDIMENSION2_LINECOUNT2_Msk 0x3FFF0000UL
/* VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1.COLORCOMPONENTBITS2 */
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_COLORCOMPONENTBITS2_COMPONENTBITSALPHA2_Pos 0UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_COLORCOMPONENTBITS2_COMPONENTBITSALPHA2_Msk 0xFUL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_COLORCOMPONENTBITS2_COMPONENTBITSBLUE2_Pos 8UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_COLORCOMPONENTBITS2_COMPONENTBITSBLUE2_Msk 0xF00UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_COLORCOMPONENTBITS2_COMPONENTBITSGREEN2_Pos 16UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_COLORCOMPONENTBITS2_COMPONENTBITSGREEN2_Msk 0xF0000UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_COLORCOMPONENTBITS2_COMPONENTBITSRED2_Pos 24UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_COLORCOMPONENTBITS2_COMPONENTBITSRED2_Msk 0xF000000UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_COLORCOMPONENTBITS2_ITUFORMAT2_Pos 31UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_COLORCOMPONENTBITS2_ITUFORMAT2_Msk 0x80000000UL
/* VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1.COLORCOMPONENTSHIFT2 */
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_COLORCOMPONENTSHIFT2_COMPONENTSHIFTALPHA2_Pos 0UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_COLORCOMPONENTSHIFT2_COMPONENTSHIFTALPHA2_Msk 0x1FUL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_COLORCOMPONENTSHIFT2_COMPONENTSHIFTBLUE2_Pos 8UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_COLORCOMPONENTSHIFT2_COMPONENTSHIFTBLUE2_Msk 0x1F00UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_COLORCOMPONENTSHIFT2_COMPONENTSHIFTGREEN2_Pos 16UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_COLORCOMPONENTSHIFT2_COMPONENTSHIFTGREEN2_Msk 0x1F0000UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_COLORCOMPONENTSHIFT2_COMPONENTSHIFTRED2_Pos 24UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_COLORCOMPONENTSHIFT2_COMPONENTSHIFTRED2_Msk 0x1F000000UL
/* VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1.LAYEROFFSET2 */
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_LAYEROFFSET2_LAYERXOFFSET2_Pos 0UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_LAYEROFFSET2_LAYERXOFFSET2_Msk 0x7FFFUL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_LAYEROFFSET2_LAYERYOFFSET2_Pos 16UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_LAYEROFFSET2_LAYERYOFFSET2_Msk 0x7FFF0000UL
/* VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1.CLIPWINDOWOFFSET2 */
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_CLIPWINDOWOFFSET2_CLIPWINDOWXOFFSET2_Pos 0UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_CLIPWINDOWOFFSET2_CLIPWINDOWXOFFSET2_Msk 0x7FFFUL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_CLIPWINDOWOFFSET2_CLIPWINDOWYOFFSET2_Pos 16UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_CLIPWINDOWOFFSET2_CLIPWINDOWYOFFSET2_Msk 0x7FFF0000UL
/* VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1.CLIPWINDOWDIMENSIONS2 */
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_CLIPWINDOWDIMENSIONS2_CLIPWINDOWWIDTH2_Pos 0UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_CLIPWINDOWDIMENSIONS2_CLIPWINDOWWIDTH2_Msk 0x3FFFUL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_CLIPWINDOWDIMENSIONS2_CLIPWINDOWHEIGHT2_Pos 16UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_CLIPWINDOWDIMENSIONS2_CLIPWINDOWHEIGHT2_Msk 0x3FFF0000UL
/* VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1.CONSTANTCOLOR2 */
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_CONSTANTCOLOR2_CONSTANTALPHA2_Pos 0UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_CONSTANTCOLOR2_CONSTANTALPHA2_Msk 0xFFUL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_CONSTANTCOLOR2_CONSTANTBLUE2_Pos 8UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_CONSTANTCOLOR2_CONSTANTBLUE2_Msk 0xFF00UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_CONSTANTCOLOR2_CONSTANTGREEN2_Pos 16UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_CONSTANTCOLOR2_CONSTANTGREEN2_Msk 0xFF0000UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_CONSTANTCOLOR2_CONSTANTRED2_Pos 24UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_CONSTANTCOLOR2_CONSTANTRED2_Msk 0xFF000000UL
/* VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1.LAYERPROPERTY2 */
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_LAYERPROPERTY2_PALETTEENABLE2_Pos 0UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_LAYERPROPERTY2_PALETTEENABLE2_Msk 0x1UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_LAYERPROPERTY2_TILEMODE2_Pos 1UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_LAYERPROPERTY2_TILEMODE2_Msk 0x6UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_LAYERPROPERTY2_ALPHASRCENABLE2_Pos 3UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_LAYERPROPERTY2_ALPHASRCENABLE2_Msk 0x8UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_LAYERPROPERTY2_ALPHACONSTENABLE2_Pos 4UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_LAYERPROPERTY2_ALPHACONSTENABLE2_Msk 0x10UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_LAYERPROPERTY2_ALPHATRANSENABLE2_Pos 6UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_LAYERPROPERTY2_ALPHATRANSENABLE2_Msk 0x40UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_LAYERPROPERTY2_RGBALPHASRCENABLE2_Pos 7UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_LAYERPROPERTY2_RGBALPHASRCENABLE2_Msk 0x80UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_LAYERPROPERTY2_RGBALPHACONSTENABLE2_Pos 8UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_LAYERPROPERTY2_RGBALPHACONSTENABLE2_Msk 0x100UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_LAYERPROPERTY2_RGBALPHATRANSENABLE2_Pos 10UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_LAYERPROPERTY2_RGBALPHATRANSENABLE2_Msk 0x400UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_LAYERPROPERTY2_PREMULCONSTRGB2_Pos 11UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_LAYERPROPERTY2_PREMULCONSTRGB2_Msk 0x800UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_LAYERPROPERTY2_YUVCONVERSIONMODE2_Pos 12UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_LAYERPROPERTY2_YUVCONVERSIONMODE2_Msk 0x3000UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_LAYERPROPERTY2_GAMMAREMOVEENABLE2_Pos 14UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_LAYERPROPERTY2_GAMMAREMOVEENABLE2_Msk 0x4000UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_LAYERPROPERTY2_PALETTEOFFSET2_Pos 16UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_LAYERPROPERTY2_PALETTEOFFSET2_Msk 0x7FF0000UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_LAYERPROPERTY2_PALETTEIDWIDTH2_Pos 27UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_LAYERPROPERTY2_PALETTEIDWIDTH2_Msk 0x38000000UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_LAYERPROPERTY2_CLIPWINDOWENABLE2_Pos 30UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_LAYERPROPERTY2_CLIPWINDOWENABLE2_Msk 0x40000000UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_LAYERPROPERTY2_SOURCEBUFFERENABLE2_Pos 31UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_LAYERPROPERTY2_SOURCEBUFFERENABLE2_Msk 0x80000000UL
/* VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1.BASEADDRESS3 */
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_BASEADDRESS3_BASEADDRESS3_Pos 0UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_BASEADDRESS3_BASEADDRESS3_Msk 0xFFFFFFFFUL
/* VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1.SOURCEBUFFERATTRIBUTES3 */
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_SOURCEBUFFERATTRIBUTES3_STRIDE3_Pos 0UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_SOURCEBUFFERATTRIBUTES3_STRIDE3_Msk 0xFFFFUL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_SOURCEBUFFERATTRIBUTES3_BITSPERPIXEL3_Pos 16UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_SOURCEBUFFERATTRIBUTES3_BITSPERPIXEL3_Msk 0x3F0000UL
/* VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1.SOURCEBUFFERDIMENSION3 */
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_SOURCEBUFFERDIMENSION3_LINEWIDTH3_Pos 0UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_SOURCEBUFFERDIMENSION3_LINEWIDTH3_Msk 0x3FFFUL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_SOURCEBUFFERDIMENSION3_LINECOUNT3_Pos 16UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_SOURCEBUFFERDIMENSION3_LINECOUNT3_Msk 0x3FFF0000UL
/* VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1.COLORCOMPONENTBITS3 */
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_COLORCOMPONENTBITS3_COMPONENTBITSALPHA3_Pos 0UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_COLORCOMPONENTBITS3_COMPONENTBITSALPHA3_Msk 0xFUL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_COLORCOMPONENTBITS3_COMPONENTBITSBLUE3_Pos 8UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_COLORCOMPONENTBITS3_COMPONENTBITSBLUE3_Msk 0xF00UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_COLORCOMPONENTBITS3_COMPONENTBITSGREEN3_Pos 16UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_COLORCOMPONENTBITS3_COMPONENTBITSGREEN3_Msk 0xF0000UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_COLORCOMPONENTBITS3_COMPONENTBITSRED3_Pos 24UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_COLORCOMPONENTBITS3_COMPONENTBITSRED3_Msk 0xF000000UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_COLORCOMPONENTBITS3_ITUFORMAT3_Pos 31UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_COLORCOMPONENTBITS3_ITUFORMAT3_Msk 0x80000000UL
/* VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1.COLORCOMPONENTSHIFT3 */
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_COLORCOMPONENTSHIFT3_COMPONENTSHIFTALPHA3_Pos 0UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_COLORCOMPONENTSHIFT3_COMPONENTSHIFTALPHA3_Msk 0x1FUL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_COLORCOMPONENTSHIFT3_COMPONENTSHIFTBLUE3_Pos 8UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_COLORCOMPONENTSHIFT3_COMPONENTSHIFTBLUE3_Msk 0x1F00UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_COLORCOMPONENTSHIFT3_COMPONENTSHIFTGREEN3_Pos 16UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_COLORCOMPONENTSHIFT3_COMPONENTSHIFTGREEN3_Msk 0x1F0000UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_COLORCOMPONENTSHIFT3_COMPONENTSHIFTRED3_Pos 24UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_COLORCOMPONENTSHIFT3_COMPONENTSHIFTRED3_Msk 0x1F000000UL
/* VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1.LAYEROFFSET3 */
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_LAYEROFFSET3_LAYERXOFFSET3_Pos 0UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_LAYEROFFSET3_LAYERXOFFSET3_Msk 0x7FFFUL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_LAYEROFFSET3_LAYERYOFFSET3_Pos 16UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_LAYEROFFSET3_LAYERYOFFSET3_Msk 0x7FFF0000UL
/* VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1.CLIPWINDOWOFFSET3 */
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_CLIPWINDOWOFFSET3_CLIPWINDOWXOFFSET3_Pos 0UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_CLIPWINDOWOFFSET3_CLIPWINDOWXOFFSET3_Msk 0x7FFFUL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_CLIPWINDOWOFFSET3_CLIPWINDOWYOFFSET3_Pos 16UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_CLIPWINDOWOFFSET3_CLIPWINDOWYOFFSET3_Msk 0x7FFF0000UL
/* VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1.CLIPWINDOWDIMENSIONS3 */
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_CLIPWINDOWDIMENSIONS3_CLIPWINDOWWIDTH3_Pos 0UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_CLIPWINDOWDIMENSIONS3_CLIPWINDOWWIDTH3_Msk 0x3FFFUL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_CLIPWINDOWDIMENSIONS3_CLIPWINDOWHEIGHT3_Pos 16UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_CLIPWINDOWDIMENSIONS3_CLIPWINDOWHEIGHT3_Msk 0x3FFF0000UL
/* VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1.CONSTANTCOLOR3 */
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_CONSTANTCOLOR3_CONSTANTALPHA3_Pos 0UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_CONSTANTCOLOR3_CONSTANTALPHA3_Msk 0xFFUL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_CONSTANTCOLOR3_CONSTANTBLUE3_Pos 8UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_CONSTANTCOLOR3_CONSTANTBLUE3_Msk 0xFF00UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_CONSTANTCOLOR3_CONSTANTGREEN3_Pos 16UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_CONSTANTCOLOR3_CONSTANTGREEN3_Msk 0xFF0000UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_CONSTANTCOLOR3_CONSTANTRED3_Pos 24UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_CONSTANTCOLOR3_CONSTANTRED3_Msk 0xFF000000UL
/* VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1.LAYERPROPERTY3 */
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_LAYERPROPERTY3_PALETTEENABLE3_Pos 0UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_LAYERPROPERTY3_PALETTEENABLE3_Msk 0x1UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_LAYERPROPERTY3_TILEMODE3_Pos 1UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_LAYERPROPERTY3_TILEMODE3_Msk 0x6UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_LAYERPROPERTY3_ALPHASRCENABLE3_Pos 3UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_LAYERPROPERTY3_ALPHASRCENABLE3_Msk 0x8UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_LAYERPROPERTY3_ALPHACONSTENABLE3_Pos 4UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_LAYERPROPERTY3_ALPHACONSTENABLE3_Msk 0x10UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_LAYERPROPERTY3_ALPHATRANSENABLE3_Pos 6UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_LAYERPROPERTY3_ALPHATRANSENABLE3_Msk 0x40UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_LAYERPROPERTY3_RGBALPHASRCENABLE3_Pos 7UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_LAYERPROPERTY3_RGBALPHASRCENABLE3_Msk 0x80UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_LAYERPROPERTY3_RGBALPHACONSTENABLE3_Pos 8UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_LAYERPROPERTY3_RGBALPHACONSTENABLE3_Msk 0x100UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_LAYERPROPERTY3_RGBALPHATRANSENABLE3_Pos 10UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_LAYERPROPERTY3_RGBALPHATRANSENABLE3_Msk 0x400UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_LAYERPROPERTY3_PREMULCONSTRGB3_Pos 11UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_LAYERPROPERTY3_PREMULCONSTRGB3_Msk 0x800UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_LAYERPROPERTY3_YUVCONVERSIONMODE3_Pos 12UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_LAYERPROPERTY3_YUVCONVERSIONMODE3_Msk 0x3000UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_LAYERPROPERTY3_GAMMAREMOVEENABLE3_Pos 14UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_LAYERPROPERTY3_GAMMAREMOVEENABLE3_Msk 0x4000UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_LAYERPROPERTY3_PALETTEOFFSET3_Pos 16UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_LAYERPROPERTY3_PALETTEOFFSET3_Msk 0x7FF0000UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_LAYERPROPERTY3_PALETTEIDWIDTH3_Pos 27UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_LAYERPROPERTY3_PALETTEIDWIDTH3_Msk 0x38000000UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_LAYERPROPERTY3_CLIPWINDOWENABLE3_Pos 30UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_LAYERPROPERTY3_CLIPWINDOWENABLE3_Msk 0x40000000UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_LAYERPROPERTY3_SOURCEBUFFERENABLE3_Pos 31UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_LAYERPROPERTY3_SOURCEBUFFERENABLE3_Msk 0x80000000UL
/* VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1.BASEADDRESS4 */
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_BASEADDRESS4_BASEADDRESS4_Pos 0UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_BASEADDRESS4_BASEADDRESS4_Msk 0xFFFFFFFFUL
/* VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1.SOURCEBUFFERATTRIBUTES4 */
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_SOURCEBUFFERATTRIBUTES4_STRIDE4_Pos 0UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_SOURCEBUFFERATTRIBUTES4_STRIDE4_Msk 0xFFFFUL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_SOURCEBUFFERATTRIBUTES4_BITSPERPIXEL4_Pos 16UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_SOURCEBUFFERATTRIBUTES4_BITSPERPIXEL4_Msk 0x3F0000UL
/* VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1.SOURCEBUFFERDIMENSION4 */
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_SOURCEBUFFERDIMENSION4_LINEWIDTH4_Pos 0UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_SOURCEBUFFERDIMENSION4_LINEWIDTH4_Msk 0x3FFFUL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_SOURCEBUFFERDIMENSION4_LINECOUNT4_Pos 16UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_SOURCEBUFFERDIMENSION4_LINECOUNT4_Msk 0x3FFF0000UL
/* VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1.COLORCOMPONENTBITS4 */
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_COLORCOMPONENTBITS4_COMPONENTBITSALPHA4_Pos 0UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_COLORCOMPONENTBITS4_COMPONENTBITSALPHA4_Msk 0xFUL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_COLORCOMPONENTBITS4_COMPONENTBITSBLUE4_Pos 8UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_COLORCOMPONENTBITS4_COMPONENTBITSBLUE4_Msk 0xF00UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_COLORCOMPONENTBITS4_COMPONENTBITSGREEN4_Pos 16UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_COLORCOMPONENTBITS4_COMPONENTBITSGREEN4_Msk 0xF0000UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_COLORCOMPONENTBITS4_COMPONENTBITSRED4_Pos 24UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_COLORCOMPONENTBITS4_COMPONENTBITSRED4_Msk 0xF000000UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_COLORCOMPONENTBITS4_ITUFORMAT4_Pos 31UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_COLORCOMPONENTBITS4_ITUFORMAT4_Msk 0x80000000UL
/* VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1.COLORCOMPONENTSHIFT4 */
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_COLORCOMPONENTSHIFT4_COMPONENTSHIFTALPHA4_Pos 0UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_COLORCOMPONENTSHIFT4_COMPONENTSHIFTALPHA4_Msk 0x1FUL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_COLORCOMPONENTSHIFT4_COMPONENTSHIFTBLUE4_Pos 8UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_COLORCOMPONENTSHIFT4_COMPONENTSHIFTBLUE4_Msk 0x1F00UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_COLORCOMPONENTSHIFT4_COMPONENTSHIFTGREEN4_Pos 16UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_COLORCOMPONENTSHIFT4_COMPONENTSHIFTGREEN4_Msk 0x1F0000UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_COLORCOMPONENTSHIFT4_COMPONENTSHIFTRED4_Pos 24UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_COLORCOMPONENTSHIFT4_COMPONENTSHIFTRED4_Msk 0x1F000000UL
/* VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1.LAYEROFFSET4 */
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_LAYEROFFSET4_LAYERXOFFSET4_Pos 0UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_LAYEROFFSET4_LAYERXOFFSET4_Msk 0x7FFFUL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_LAYEROFFSET4_LAYERYOFFSET4_Pos 16UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_LAYEROFFSET4_LAYERYOFFSET4_Msk 0x7FFF0000UL
/* VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1.CLIPWINDOWOFFSET4 */
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_CLIPWINDOWOFFSET4_CLIPWINDOWXOFFSET4_Pos 0UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_CLIPWINDOWOFFSET4_CLIPWINDOWXOFFSET4_Msk 0x7FFFUL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_CLIPWINDOWOFFSET4_CLIPWINDOWYOFFSET4_Pos 16UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_CLIPWINDOWOFFSET4_CLIPWINDOWYOFFSET4_Msk 0x7FFF0000UL
/* VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1.CLIPWINDOWDIMENSIONS4 */
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_CLIPWINDOWDIMENSIONS4_CLIPWINDOWWIDTH4_Pos 0UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_CLIPWINDOWDIMENSIONS4_CLIPWINDOWWIDTH4_Msk 0x3FFFUL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_CLIPWINDOWDIMENSIONS4_CLIPWINDOWHEIGHT4_Pos 16UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_CLIPWINDOWDIMENSIONS4_CLIPWINDOWHEIGHT4_Msk 0x3FFF0000UL
/* VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1.CONSTANTCOLOR4 */
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_CONSTANTCOLOR4_CONSTANTALPHA4_Pos 0UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_CONSTANTCOLOR4_CONSTANTALPHA4_Msk 0xFFUL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_CONSTANTCOLOR4_CONSTANTBLUE4_Pos 8UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_CONSTANTCOLOR4_CONSTANTBLUE4_Msk 0xFF00UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_CONSTANTCOLOR4_CONSTANTGREEN4_Pos 16UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_CONSTANTCOLOR4_CONSTANTGREEN4_Msk 0xFF0000UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_CONSTANTCOLOR4_CONSTANTRED4_Pos 24UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_CONSTANTCOLOR4_CONSTANTRED4_Msk 0xFF000000UL
/* VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1.LAYERPROPERTY4 */
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_LAYERPROPERTY4_PALETTEENABLE4_Pos 0UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_LAYERPROPERTY4_PALETTEENABLE4_Msk 0x1UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_LAYERPROPERTY4_TILEMODE4_Pos 1UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_LAYERPROPERTY4_TILEMODE4_Msk 0x6UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_LAYERPROPERTY4_ALPHASRCENABLE4_Pos 3UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_LAYERPROPERTY4_ALPHASRCENABLE4_Msk 0x8UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_LAYERPROPERTY4_ALPHACONSTENABLE4_Pos 4UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_LAYERPROPERTY4_ALPHACONSTENABLE4_Msk 0x10UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_LAYERPROPERTY4_ALPHATRANSENABLE4_Pos 6UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_LAYERPROPERTY4_ALPHATRANSENABLE4_Msk 0x40UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_LAYERPROPERTY4_RGBALPHASRCENABLE4_Pos 7UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_LAYERPROPERTY4_RGBALPHASRCENABLE4_Msk 0x80UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_LAYERPROPERTY4_RGBALPHACONSTENABLE4_Pos 8UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_LAYERPROPERTY4_RGBALPHACONSTENABLE4_Msk 0x100UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_LAYERPROPERTY4_RGBALPHATRANSENABLE4_Pos 10UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_LAYERPROPERTY4_RGBALPHATRANSENABLE4_Msk 0x400UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_LAYERPROPERTY4_PREMULCONSTRGB4_Pos 11UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_LAYERPROPERTY4_PREMULCONSTRGB4_Msk 0x800UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_LAYERPROPERTY4_YUVCONVERSIONMODE4_Pos 12UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_LAYERPROPERTY4_YUVCONVERSIONMODE4_Msk 0x3000UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_LAYERPROPERTY4_GAMMAREMOVEENABLE4_Pos 14UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_LAYERPROPERTY4_GAMMAREMOVEENABLE4_Msk 0x4000UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_LAYERPROPERTY4_PALETTEOFFSET4_Pos 16UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_LAYERPROPERTY4_PALETTEOFFSET4_Msk 0x7FF0000UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_LAYERPROPERTY4_PALETTEIDWIDTH4_Pos 27UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_LAYERPROPERTY4_PALETTEIDWIDTH4_Msk 0x38000000UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_LAYERPROPERTY4_CLIPWINDOWENABLE4_Pos 30UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_LAYERPROPERTY4_CLIPWINDOWENABLE4_Msk 0x40000000UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_LAYERPROPERTY4_SOURCEBUFFERENABLE4_Pos 31UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_LAYERPROPERTY4_SOURCEBUFFERENABLE4_Msk 0x80000000UL
/* VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1.BASEADDRESS5 */
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_BASEADDRESS5_BASEADDRESS5_Pos 0UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_BASEADDRESS5_BASEADDRESS5_Msk 0xFFFFFFFFUL
/* VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1.SOURCEBUFFERATTRIBUTES5 */
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_SOURCEBUFFERATTRIBUTES5_STRIDE5_Pos 0UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_SOURCEBUFFERATTRIBUTES5_STRIDE5_Msk 0xFFFFUL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_SOURCEBUFFERATTRIBUTES5_BITSPERPIXEL5_Pos 16UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_SOURCEBUFFERATTRIBUTES5_BITSPERPIXEL5_Msk 0x3F0000UL
/* VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1.SOURCEBUFFERDIMENSION5 */
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_SOURCEBUFFERDIMENSION5_LINEWIDTH5_Pos 0UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_SOURCEBUFFERDIMENSION5_LINEWIDTH5_Msk 0x3FFFUL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_SOURCEBUFFERDIMENSION5_LINECOUNT5_Pos 16UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_SOURCEBUFFERDIMENSION5_LINECOUNT5_Msk 0x3FFF0000UL
/* VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1.COLORCOMPONENTBITS5 */
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_COLORCOMPONENTBITS5_COMPONENTBITSALPHA5_Pos 0UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_COLORCOMPONENTBITS5_COMPONENTBITSALPHA5_Msk 0xFUL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_COLORCOMPONENTBITS5_COMPONENTBITSBLUE5_Pos 8UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_COLORCOMPONENTBITS5_COMPONENTBITSBLUE5_Msk 0xF00UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_COLORCOMPONENTBITS5_COMPONENTBITSGREEN5_Pos 16UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_COLORCOMPONENTBITS5_COMPONENTBITSGREEN5_Msk 0xF0000UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_COLORCOMPONENTBITS5_COMPONENTBITSRED5_Pos 24UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_COLORCOMPONENTBITS5_COMPONENTBITSRED5_Msk 0xF000000UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_COLORCOMPONENTBITS5_ITUFORMAT5_Pos 31UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_COLORCOMPONENTBITS5_ITUFORMAT5_Msk 0x80000000UL
/* VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1.COLORCOMPONENTSHIFT5 */
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_COLORCOMPONENTSHIFT5_COMPONENTSHIFTALPHA5_Pos 0UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_COLORCOMPONENTSHIFT5_COMPONENTSHIFTALPHA5_Msk 0x1FUL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_COLORCOMPONENTSHIFT5_COMPONENTSHIFTBLUE5_Pos 8UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_COLORCOMPONENTSHIFT5_COMPONENTSHIFTBLUE5_Msk 0x1F00UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_COLORCOMPONENTSHIFT5_COMPONENTSHIFTGREEN5_Pos 16UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_COLORCOMPONENTSHIFT5_COMPONENTSHIFTGREEN5_Msk 0x1F0000UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_COLORCOMPONENTSHIFT5_COMPONENTSHIFTRED5_Pos 24UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_COLORCOMPONENTSHIFT5_COMPONENTSHIFTRED5_Msk 0x1F000000UL
/* VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1.LAYEROFFSET5 */
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_LAYEROFFSET5_LAYERXOFFSET5_Pos 0UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_LAYEROFFSET5_LAYERXOFFSET5_Msk 0x7FFFUL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_LAYEROFFSET5_LAYERYOFFSET5_Pos 16UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_LAYEROFFSET5_LAYERYOFFSET5_Msk 0x7FFF0000UL
/* VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1.CLIPWINDOWOFFSET5 */
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_CLIPWINDOWOFFSET5_CLIPWINDOWXOFFSET5_Pos 0UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_CLIPWINDOWOFFSET5_CLIPWINDOWXOFFSET5_Msk 0x7FFFUL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_CLIPWINDOWOFFSET5_CLIPWINDOWYOFFSET5_Pos 16UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_CLIPWINDOWOFFSET5_CLIPWINDOWYOFFSET5_Msk 0x7FFF0000UL
/* VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1.CLIPWINDOWDIMENSIONS5 */
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_CLIPWINDOWDIMENSIONS5_CLIPWINDOWWIDTH5_Pos 0UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_CLIPWINDOWDIMENSIONS5_CLIPWINDOWWIDTH5_Msk 0x3FFFUL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_CLIPWINDOWDIMENSIONS5_CLIPWINDOWHEIGHT5_Pos 16UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_CLIPWINDOWDIMENSIONS5_CLIPWINDOWHEIGHT5_Msk 0x3FFF0000UL
/* VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1.CONSTANTCOLOR5 */
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_CONSTANTCOLOR5_CONSTANTALPHA5_Pos 0UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_CONSTANTCOLOR5_CONSTANTALPHA5_Msk 0xFFUL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_CONSTANTCOLOR5_CONSTANTBLUE5_Pos 8UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_CONSTANTCOLOR5_CONSTANTBLUE5_Msk 0xFF00UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_CONSTANTCOLOR5_CONSTANTGREEN5_Pos 16UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_CONSTANTCOLOR5_CONSTANTGREEN5_Msk 0xFF0000UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_CONSTANTCOLOR5_CONSTANTRED5_Pos 24UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_CONSTANTCOLOR5_CONSTANTRED5_Msk 0xFF000000UL
/* VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1.LAYERPROPERTY5 */
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_LAYERPROPERTY5_PALETTEENABLE5_Pos 0UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_LAYERPROPERTY5_PALETTEENABLE5_Msk 0x1UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_LAYERPROPERTY5_TILEMODE5_Pos 1UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_LAYERPROPERTY5_TILEMODE5_Msk 0x6UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_LAYERPROPERTY5_ALPHASRCENABLE5_Pos 3UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_LAYERPROPERTY5_ALPHASRCENABLE5_Msk 0x8UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_LAYERPROPERTY5_ALPHACONSTENABLE5_Pos 4UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_LAYERPROPERTY5_ALPHACONSTENABLE5_Msk 0x10UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_LAYERPROPERTY5_ALPHATRANSENABLE5_Pos 6UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_LAYERPROPERTY5_ALPHATRANSENABLE5_Msk 0x40UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_LAYERPROPERTY5_RGBALPHASRCENABLE5_Pos 7UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_LAYERPROPERTY5_RGBALPHASRCENABLE5_Msk 0x80UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_LAYERPROPERTY5_RGBALPHACONSTENABLE5_Pos 8UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_LAYERPROPERTY5_RGBALPHACONSTENABLE5_Msk 0x100UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_LAYERPROPERTY5_RGBALPHATRANSENABLE5_Pos 10UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_LAYERPROPERTY5_RGBALPHATRANSENABLE5_Msk 0x400UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_LAYERPROPERTY5_PREMULCONSTRGB5_Pos 11UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_LAYERPROPERTY5_PREMULCONSTRGB5_Msk 0x800UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_LAYERPROPERTY5_YUVCONVERSIONMODE5_Pos 12UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_LAYERPROPERTY5_YUVCONVERSIONMODE5_Msk 0x3000UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_LAYERPROPERTY5_GAMMAREMOVEENABLE5_Pos 14UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_LAYERPROPERTY5_GAMMAREMOVEENABLE5_Msk 0x4000UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_LAYERPROPERTY5_PALETTEOFFSET5_Pos 16UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_LAYERPROPERTY5_PALETTEOFFSET5_Msk 0x7FF0000UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_LAYERPROPERTY5_PALETTEIDWIDTH5_Pos 27UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_LAYERPROPERTY5_PALETTEIDWIDTH5_Msk 0x38000000UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_LAYERPROPERTY5_CLIPWINDOWENABLE5_Pos 30UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_LAYERPROPERTY5_CLIPWINDOWENABLE5_Msk 0x40000000UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_LAYERPROPERTY5_SOURCEBUFFERENABLE5_Pos 31UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_LAYERPROPERTY5_SOURCEBUFFERENABLE5_Msk 0x80000000UL
/* VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1.BASEADDRESS6 */
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_BASEADDRESS6_BASEADDRESS6_Pos 0UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_BASEADDRESS6_BASEADDRESS6_Msk 0xFFFFFFFFUL
/* VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1.SOURCEBUFFERATTRIBUTES6 */
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_SOURCEBUFFERATTRIBUTES6_STRIDE6_Pos 0UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_SOURCEBUFFERATTRIBUTES6_STRIDE6_Msk 0xFFFFUL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_SOURCEBUFFERATTRIBUTES6_BITSPERPIXEL6_Pos 16UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_SOURCEBUFFERATTRIBUTES6_BITSPERPIXEL6_Msk 0x3F0000UL
/* VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1.SOURCEBUFFERDIMENSION6 */
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_SOURCEBUFFERDIMENSION6_LINEWIDTH6_Pos 0UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_SOURCEBUFFERDIMENSION6_LINEWIDTH6_Msk 0x3FFFUL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_SOURCEBUFFERDIMENSION6_LINECOUNT6_Pos 16UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_SOURCEBUFFERDIMENSION6_LINECOUNT6_Msk 0x3FFF0000UL
/* VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1.COLORCOMPONENTBITS6 */
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_COLORCOMPONENTBITS6_COMPONENTBITSALPHA6_Pos 0UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_COLORCOMPONENTBITS6_COMPONENTBITSALPHA6_Msk 0xFUL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_COLORCOMPONENTBITS6_COMPONENTBITSBLUE6_Pos 8UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_COLORCOMPONENTBITS6_COMPONENTBITSBLUE6_Msk 0xF00UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_COLORCOMPONENTBITS6_COMPONENTBITSGREEN6_Pos 16UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_COLORCOMPONENTBITS6_COMPONENTBITSGREEN6_Msk 0xF0000UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_COLORCOMPONENTBITS6_COMPONENTBITSRED6_Pos 24UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_COLORCOMPONENTBITS6_COMPONENTBITSRED6_Msk 0xF000000UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_COLORCOMPONENTBITS6_ITUFORMAT6_Pos 31UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_COLORCOMPONENTBITS6_ITUFORMAT6_Msk 0x80000000UL
/* VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1.COLORCOMPONENTSHIFT6 */
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_COLORCOMPONENTSHIFT6_COMPONENTSHIFTALPHA6_Pos 0UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_COLORCOMPONENTSHIFT6_COMPONENTSHIFTALPHA6_Msk 0x1FUL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_COLORCOMPONENTSHIFT6_COMPONENTSHIFTBLUE6_Pos 8UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_COLORCOMPONENTSHIFT6_COMPONENTSHIFTBLUE6_Msk 0x1F00UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_COLORCOMPONENTSHIFT6_COMPONENTSHIFTGREEN6_Pos 16UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_COLORCOMPONENTSHIFT6_COMPONENTSHIFTGREEN6_Msk 0x1F0000UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_COLORCOMPONENTSHIFT6_COMPONENTSHIFTRED6_Pos 24UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_COLORCOMPONENTSHIFT6_COMPONENTSHIFTRED6_Msk 0x1F000000UL
/* VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1.LAYEROFFSET6 */
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_LAYEROFFSET6_LAYERXOFFSET6_Pos 0UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_LAYEROFFSET6_LAYERXOFFSET6_Msk 0x7FFFUL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_LAYEROFFSET6_LAYERYOFFSET6_Pos 16UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_LAYEROFFSET6_LAYERYOFFSET6_Msk 0x7FFF0000UL
/* VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1.CLIPWINDOWOFFSET6 */
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_CLIPWINDOWOFFSET6_CLIPWINDOWXOFFSET6_Pos 0UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_CLIPWINDOWOFFSET6_CLIPWINDOWXOFFSET6_Msk 0x7FFFUL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_CLIPWINDOWOFFSET6_CLIPWINDOWYOFFSET6_Pos 16UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_CLIPWINDOWOFFSET6_CLIPWINDOWYOFFSET6_Msk 0x7FFF0000UL
/* VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1.CLIPWINDOWDIMENSIONS6 */
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_CLIPWINDOWDIMENSIONS6_CLIPWINDOWWIDTH6_Pos 0UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_CLIPWINDOWDIMENSIONS6_CLIPWINDOWWIDTH6_Msk 0x3FFFUL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_CLIPWINDOWDIMENSIONS6_CLIPWINDOWHEIGHT6_Pos 16UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_CLIPWINDOWDIMENSIONS6_CLIPWINDOWHEIGHT6_Msk 0x3FFF0000UL
/* VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1.CONSTANTCOLOR6 */
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_CONSTANTCOLOR6_CONSTANTALPHA6_Pos 0UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_CONSTANTCOLOR6_CONSTANTALPHA6_Msk 0xFFUL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_CONSTANTCOLOR6_CONSTANTBLUE6_Pos 8UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_CONSTANTCOLOR6_CONSTANTBLUE6_Msk 0xFF00UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_CONSTANTCOLOR6_CONSTANTGREEN6_Pos 16UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_CONSTANTCOLOR6_CONSTANTGREEN6_Msk 0xFF0000UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_CONSTANTCOLOR6_CONSTANTRED6_Pos 24UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_CONSTANTCOLOR6_CONSTANTRED6_Msk 0xFF000000UL
/* VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1.LAYERPROPERTY6 */
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_LAYERPROPERTY6_PALETTEENABLE6_Pos 0UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_LAYERPROPERTY6_PALETTEENABLE6_Msk 0x1UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_LAYERPROPERTY6_TILEMODE6_Pos 1UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_LAYERPROPERTY6_TILEMODE6_Msk 0x6UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_LAYERPROPERTY6_ALPHASRCENABLE6_Pos 3UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_LAYERPROPERTY6_ALPHASRCENABLE6_Msk 0x8UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_LAYERPROPERTY6_ALPHACONSTENABLE6_Pos 4UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_LAYERPROPERTY6_ALPHACONSTENABLE6_Msk 0x10UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_LAYERPROPERTY6_ALPHATRANSENABLE6_Pos 6UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_LAYERPROPERTY6_ALPHATRANSENABLE6_Msk 0x40UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_LAYERPROPERTY6_RGBALPHASRCENABLE6_Pos 7UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_LAYERPROPERTY6_RGBALPHASRCENABLE6_Msk 0x80UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_LAYERPROPERTY6_RGBALPHACONSTENABLE6_Pos 8UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_LAYERPROPERTY6_RGBALPHACONSTENABLE6_Msk 0x100UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_LAYERPROPERTY6_RGBALPHATRANSENABLE6_Pos 10UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_LAYERPROPERTY6_RGBALPHATRANSENABLE6_Msk 0x400UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_LAYERPROPERTY6_PREMULCONSTRGB6_Pos 11UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_LAYERPROPERTY6_PREMULCONSTRGB6_Msk 0x800UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_LAYERPROPERTY6_YUVCONVERSIONMODE6_Pos 12UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_LAYERPROPERTY6_YUVCONVERSIONMODE6_Msk 0x3000UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_LAYERPROPERTY6_GAMMAREMOVEENABLE6_Pos 14UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_LAYERPROPERTY6_GAMMAREMOVEENABLE6_Msk 0x4000UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_LAYERPROPERTY6_PALETTEOFFSET6_Pos 16UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_LAYERPROPERTY6_PALETTEOFFSET6_Msk 0x7FF0000UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_LAYERPROPERTY6_PALETTEIDWIDTH6_Pos 27UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_LAYERPROPERTY6_PALETTEIDWIDTH6_Msk 0x38000000UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_LAYERPROPERTY6_CLIPWINDOWENABLE6_Pos 30UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_LAYERPROPERTY6_CLIPWINDOWENABLE6_Msk 0x40000000UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_LAYERPROPERTY6_SOURCEBUFFERENABLE6_Pos 31UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_LAYERPROPERTY6_SOURCEBUFFERENABLE6_Msk 0x80000000UL
/* VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1.BASEADDRESS7 */
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_BASEADDRESS7_BASEADDRESS7_Pos 0UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_BASEADDRESS7_BASEADDRESS7_Msk 0xFFFFFFFFUL
/* VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1.SOURCEBUFFERATTRIBUTES7 */
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_SOURCEBUFFERATTRIBUTES7_STRIDE7_Pos 0UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_SOURCEBUFFERATTRIBUTES7_STRIDE7_Msk 0xFFFFUL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_SOURCEBUFFERATTRIBUTES7_BITSPERPIXEL7_Pos 16UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_SOURCEBUFFERATTRIBUTES7_BITSPERPIXEL7_Msk 0x3F0000UL
/* VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1.SOURCEBUFFERDIMENSION7 */
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_SOURCEBUFFERDIMENSION7_LINEWIDTH7_Pos 0UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_SOURCEBUFFERDIMENSION7_LINEWIDTH7_Msk 0x3FFFUL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_SOURCEBUFFERDIMENSION7_LINECOUNT7_Pos 16UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_SOURCEBUFFERDIMENSION7_LINECOUNT7_Msk 0x3FFF0000UL
/* VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1.COLORCOMPONENTBITS7 */
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_COLORCOMPONENTBITS7_COMPONENTBITSALPHA7_Pos 0UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_COLORCOMPONENTBITS7_COMPONENTBITSALPHA7_Msk 0xFUL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_COLORCOMPONENTBITS7_COMPONENTBITSBLUE7_Pos 8UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_COLORCOMPONENTBITS7_COMPONENTBITSBLUE7_Msk 0xF00UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_COLORCOMPONENTBITS7_COMPONENTBITSGREEN7_Pos 16UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_COLORCOMPONENTBITS7_COMPONENTBITSGREEN7_Msk 0xF0000UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_COLORCOMPONENTBITS7_COMPONENTBITSRED7_Pos 24UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_COLORCOMPONENTBITS7_COMPONENTBITSRED7_Msk 0xF000000UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_COLORCOMPONENTBITS7_ITUFORMAT7_Pos 31UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_COLORCOMPONENTBITS7_ITUFORMAT7_Msk 0x80000000UL
/* VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1.COLORCOMPONENTSHIFT7 */
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_COLORCOMPONENTSHIFT7_COMPONENTSHIFTALPHA7_Pos 0UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_COLORCOMPONENTSHIFT7_COMPONENTSHIFTALPHA7_Msk 0x1FUL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_COLORCOMPONENTSHIFT7_COMPONENTSHIFTBLUE7_Pos 8UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_COLORCOMPONENTSHIFT7_COMPONENTSHIFTBLUE7_Msk 0x1F00UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_COLORCOMPONENTSHIFT7_COMPONENTSHIFTGREEN7_Pos 16UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_COLORCOMPONENTSHIFT7_COMPONENTSHIFTGREEN7_Msk 0x1F0000UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_COLORCOMPONENTSHIFT7_COMPONENTSHIFTRED7_Pos 24UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_COLORCOMPONENTSHIFT7_COMPONENTSHIFTRED7_Msk 0x1F000000UL
/* VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1.LAYEROFFSET7 */
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_LAYEROFFSET7_LAYERXOFFSET7_Pos 0UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_LAYEROFFSET7_LAYERXOFFSET7_Msk 0x7FFFUL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_LAYEROFFSET7_LAYERYOFFSET7_Pos 16UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_LAYEROFFSET7_LAYERYOFFSET7_Msk 0x7FFF0000UL
/* VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1.CLIPWINDOWOFFSET7 */
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_CLIPWINDOWOFFSET7_CLIPWINDOWXOFFSET7_Pos 0UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_CLIPWINDOWOFFSET7_CLIPWINDOWXOFFSET7_Msk 0x7FFFUL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_CLIPWINDOWOFFSET7_CLIPWINDOWYOFFSET7_Pos 16UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_CLIPWINDOWOFFSET7_CLIPWINDOWYOFFSET7_Msk 0x7FFF0000UL
/* VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1.CLIPWINDOWDIMENSIONS7 */
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_CLIPWINDOWDIMENSIONS7_CLIPWINDOWWIDTH7_Pos 0UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_CLIPWINDOWDIMENSIONS7_CLIPWINDOWWIDTH7_Msk 0x3FFFUL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_CLIPWINDOWDIMENSIONS7_CLIPWINDOWHEIGHT7_Pos 16UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_CLIPWINDOWDIMENSIONS7_CLIPWINDOWHEIGHT7_Msk 0x3FFF0000UL
/* VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1.CONSTANTCOLOR7 */
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_CONSTANTCOLOR7_CONSTANTALPHA7_Pos 0UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_CONSTANTCOLOR7_CONSTANTALPHA7_Msk 0xFFUL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_CONSTANTCOLOR7_CONSTANTBLUE7_Pos 8UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_CONSTANTCOLOR7_CONSTANTBLUE7_Msk 0xFF00UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_CONSTANTCOLOR7_CONSTANTGREEN7_Pos 16UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_CONSTANTCOLOR7_CONSTANTGREEN7_Msk 0xFF0000UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_CONSTANTCOLOR7_CONSTANTRED7_Pos 24UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_CONSTANTCOLOR7_CONSTANTRED7_Msk 0xFF000000UL
/* VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1.LAYERPROPERTY7 */
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_LAYERPROPERTY7_PALETTEENABLE7_Pos 0UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_LAYERPROPERTY7_PALETTEENABLE7_Msk 0x1UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_LAYERPROPERTY7_TILEMODE7_Pos 1UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_LAYERPROPERTY7_TILEMODE7_Msk 0x6UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_LAYERPROPERTY7_ALPHASRCENABLE7_Pos 3UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_LAYERPROPERTY7_ALPHASRCENABLE7_Msk 0x8UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_LAYERPROPERTY7_ALPHACONSTENABLE7_Pos 4UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_LAYERPROPERTY7_ALPHACONSTENABLE7_Msk 0x10UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_LAYERPROPERTY7_ALPHATRANSENABLE7_Pos 6UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_LAYERPROPERTY7_ALPHATRANSENABLE7_Msk 0x40UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_LAYERPROPERTY7_RGBALPHASRCENABLE7_Pos 7UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_LAYERPROPERTY7_RGBALPHASRCENABLE7_Msk 0x80UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_LAYERPROPERTY7_RGBALPHACONSTENABLE7_Pos 8UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_LAYERPROPERTY7_RGBALPHACONSTENABLE7_Msk 0x100UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_LAYERPROPERTY7_RGBALPHATRANSENABLE7_Pos 10UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_LAYERPROPERTY7_RGBALPHATRANSENABLE7_Msk 0x400UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_LAYERPROPERTY7_PREMULCONSTRGB7_Pos 11UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_LAYERPROPERTY7_PREMULCONSTRGB7_Msk 0x800UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_LAYERPROPERTY7_YUVCONVERSIONMODE7_Pos 12UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_LAYERPROPERTY7_YUVCONVERSIONMODE7_Msk 0x3000UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_LAYERPROPERTY7_GAMMAREMOVEENABLE7_Pos 14UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_LAYERPROPERTY7_GAMMAREMOVEENABLE7_Msk 0x4000UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_LAYERPROPERTY7_PALETTEOFFSET7_Pos 16UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_LAYERPROPERTY7_PALETTEOFFSET7_Msk 0x7FF0000UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_LAYERPROPERTY7_PALETTEIDWIDTH7_Pos 27UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_LAYERPROPERTY7_PALETTEIDWIDTH7_Msk 0x38000000UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_LAYERPROPERTY7_CLIPWINDOWENABLE7_Pos 30UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_LAYERPROPERTY7_CLIPWINDOWENABLE7_Msk 0x40000000UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_LAYERPROPERTY7_SOURCEBUFFERENABLE7_Pos 31UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_LAYERPROPERTY7_SOURCEBUFFERENABLE7_Msk 0x80000000UL
/* VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1.FRAMEDIMENSIONS */
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_FRAMEDIMENSIONS_FRAMEWIDTH_Pos 0UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_FRAMEDIMENSIONS_FRAMEWIDTH_Msk 0x3FFFUL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_FRAMEDIMENSIONS_FRAMEHEIGHT_Pos 16UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_FRAMEDIMENSIONS_FRAMEHEIGHT_Msk 0x3FFF0000UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_FRAMEDIMENSIONS_EMPTYFRAME_Pos 31UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_FRAMEDIMENSIONS_EMPTYFRAME_Msk 0x80000000UL
/* VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1.FRAMERESAMPLING */
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_FRAMERESAMPLING_STARTX_Pos 0UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_FRAMERESAMPLING_STARTX_Msk 0x3FUL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_FRAMERESAMPLING_STARTY_Pos 6UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_FRAMERESAMPLING_STARTY_Msk 0xFC0UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_FRAMERESAMPLING_DELTAX_Pos 12UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_FRAMERESAMPLING_DELTAX_Msk 0x3F000UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_FRAMERESAMPLING_DELTAY_Pos 18UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_FRAMERESAMPLING_DELTAY_Msk 0xFC0000UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_FRAMERESAMPLING_SWAPDIRECTION_Pos 24UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_FRAMERESAMPLING_SWAPDIRECTION_Msk 0x1000000UL
/* VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1.CONTROL */
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_CONTROL_RAWPIXEL_Pos 7UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_CONTROL_RAWPIXEL_Msk 0x80UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_CONTROL_CLIPCOLOR_Pos 16UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_CONTROL_CLIPCOLOR_Msk 0x10000UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_CONTROL_CLIPLAYER_Pos 17UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_CONTROL_CLIPLAYER_Msk 0xE0000UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_CONTROL_LINEBUFLAYER_Pos 24UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_CONTROL_LINEBUFLAYER_Msk 0x7000000UL
/* VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1.TRIGGERENABLE */
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_TRIGGERENABLE_SHDLDREQ_Pos 0UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_TRIGGERENABLE_SHDLDREQ_Msk 0xFFUL
/* VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1.CONTROLTRIGGER */
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_CONTROLTRIGGER_SHDTOKGEN_Pos 0UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_CONTROLTRIGGER_SHDTOKGEN_Msk 0x1UL
/* VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1.START */
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_START_START_Pos 0UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_START_START_Msk 0x1UL
/* VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1.FETCHTYPE */
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_FETCHTYPE_FETCHTYPE_Pos 0UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_FETCHTYPE_FETCHTYPE_Msk 0xFUL
/* VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1.BURSTBUFFERPROPERTIES */
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_BURSTBUFFERPROPERTIES_MANAGEDBURSTBUFFERS_Pos 0UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_BURSTBUFFERPROPERTIES_MANAGEDBURSTBUFFERS_Msk 0xFFUL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_BURSTBUFFERPROPERTIES_BURSTLENGTHFORMAXBUFFERS_Pos 8UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_BURSTBUFFERPROPERTIES_BURSTLENGTHFORMAXBUFFERS_Msk 0x1F00UL
/* VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1.STATUS */
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_STATUS_WRITETIMEOUT_Pos 0UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_STATUS_WRITETIMEOUT_Msk 0x1UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_STATUS_READTIMEOUT_Pos 4UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHLAYER1_STATUS_READTIMEOUT_Msk 0x10UL


/* VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHDECODE0.STATICCONTROL */
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHDECODE0_STATICCONTROL_SHDEN_Pos 0UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHDECODE0_STATICCONTROL_SHDEN_Msk 0x1UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHDECODE0_STATICCONTROL_LBHSHDEN_Pos 1UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHDECODE0_STATICCONTROL_LBHSHDEN_Msk 0x2UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHDECODE0_STATICCONTROL_BASEADDRESSAUTOUPDATE_Pos 16UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHDECODE0_STATICCONTROL_BASEADDRESSAUTOUPDATE_Msk 0xFF0000UL
/* VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHDECODE0.BURSTBUFFERMANAGEMENT */
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHDECODE0_BURSTBUFFERMANAGEMENT_SETNUMBUFFERS_Pos 0UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHDECODE0_BURSTBUFFERMANAGEMENT_SETNUMBUFFERS_Msk 0xFFUL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHDECODE0_BURSTBUFFERMANAGEMENT_SETBURSTLENGTH_Pos 8UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHDECODE0_BURSTBUFFERMANAGEMENT_SETBURSTLENGTH_Msk 0x1F00UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHDECODE0_BURSTBUFFERMANAGEMENT_LINEMODE_Pos 31UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHDECODE0_BURSTBUFFERMANAGEMENT_LINEMODE_Msk 0x80000000UL
/* VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHDECODE0.RINGBUFSTARTADDR0 */
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHDECODE0_RINGBUFSTARTADDR0_RINGBUFSTARTADDR0_Pos 0UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHDECODE0_RINGBUFSTARTADDR0_RINGBUFSTARTADDR0_Msk 0xFFFFFFFFUL
/* VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHDECODE0.RINGBUFWRAPADDR0 */
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHDECODE0_RINGBUFWRAPADDR0_RINGBUFWRAPADDR0_Pos 0UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHDECODE0_RINGBUFWRAPADDR0_RINGBUFWRAPADDR0_Msk 0xFFFFFFFFUL
/* VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHDECODE0.FRAMEPROPERTIES0 */
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHDECODE0_FRAMEPROPERTIES0_FIELDID0_Pos 0UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHDECODE0_FRAMEPROPERTIES0_FIELDID0_Msk 0x1UL
/* VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHDECODE0.BASEADDRESS0 */
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHDECODE0_BASEADDRESS0_BASEADDRESS0_Pos 0UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHDECODE0_BASEADDRESS0_BASEADDRESS0_Msk 0xFFFFFFFFUL
/* VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHDECODE0.SOURCEBUFFERATTRIBUTES0 */
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHDECODE0_SOURCEBUFFERATTRIBUTES0_STRIDE0_Pos 0UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHDECODE0_SOURCEBUFFERATTRIBUTES0_STRIDE0_Msk 0xFFFFUL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHDECODE0_SOURCEBUFFERATTRIBUTES0_BITSPERPIXEL0_Pos 16UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHDECODE0_SOURCEBUFFERATTRIBUTES0_BITSPERPIXEL0_Msk 0x3F0000UL
/* VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHDECODE0.SOURCEBUFFERDIMENSION0 */
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHDECODE0_SOURCEBUFFERDIMENSION0_LINEWIDTH0_Pos 0UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHDECODE0_SOURCEBUFFERDIMENSION0_LINEWIDTH0_Msk 0x3FFFUL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHDECODE0_SOURCEBUFFERDIMENSION0_LINECOUNT0_Pos 16UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHDECODE0_SOURCEBUFFERDIMENSION0_LINECOUNT0_Msk 0x3FFF0000UL
/* VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHDECODE0.COLORCOMPONENTBITS0 */
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHDECODE0_COLORCOMPONENTBITS0_COMPONENTBITSALPHA0_Pos 0UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHDECODE0_COLORCOMPONENTBITS0_COMPONENTBITSALPHA0_Msk 0xFUL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHDECODE0_COLORCOMPONENTBITS0_COMPONENTBITSBLUE0_Pos 8UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHDECODE0_COLORCOMPONENTBITS0_COMPONENTBITSBLUE0_Msk 0xF00UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHDECODE0_COLORCOMPONENTBITS0_COMPONENTBITSGREEN0_Pos 16UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHDECODE0_COLORCOMPONENTBITS0_COMPONENTBITSGREEN0_Msk 0xF0000UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHDECODE0_COLORCOMPONENTBITS0_COMPONENTBITSRED0_Pos 24UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHDECODE0_COLORCOMPONENTBITS0_COMPONENTBITSRED0_Msk 0xF000000UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHDECODE0_COLORCOMPONENTBITS0_ITUFORMAT0_Pos 31UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHDECODE0_COLORCOMPONENTBITS0_ITUFORMAT0_Msk 0x80000000UL
/* VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHDECODE0.COLORCOMPONENTSHIFT0 */
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHDECODE0_COLORCOMPONENTSHIFT0_COMPONENTSHIFTALPHA0_Pos 0UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHDECODE0_COLORCOMPONENTSHIFT0_COMPONENTSHIFTALPHA0_Msk 0x1FUL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHDECODE0_COLORCOMPONENTSHIFT0_COMPONENTSHIFTBLUE0_Pos 8UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHDECODE0_COLORCOMPONENTSHIFT0_COMPONENTSHIFTBLUE0_Msk 0x1F00UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHDECODE0_COLORCOMPONENTSHIFT0_COMPONENTSHIFTGREEN0_Pos 16UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHDECODE0_COLORCOMPONENTSHIFT0_COMPONENTSHIFTGREEN0_Msk 0x1F0000UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHDECODE0_COLORCOMPONENTSHIFT0_COMPONENTSHIFTRED0_Pos 24UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHDECODE0_COLORCOMPONENTSHIFT0_COMPONENTSHIFTRED0_Msk 0x1F000000UL
/* VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHDECODE0.LAYEROFFSET0 */
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHDECODE0_LAYEROFFSET0_LAYERXOFFSET0_Pos 0UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHDECODE0_LAYEROFFSET0_LAYERXOFFSET0_Msk 0x7FFFUL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHDECODE0_LAYEROFFSET0_LAYERYOFFSET0_Pos 16UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHDECODE0_LAYEROFFSET0_LAYERYOFFSET0_Msk 0x7FFF0000UL
/* VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHDECODE0.CLIPWINDOWOFFSET0 */
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHDECODE0_CLIPWINDOWOFFSET0_CLIPWINDOWXOFFSET0_Pos 0UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHDECODE0_CLIPWINDOWOFFSET0_CLIPWINDOWXOFFSET0_Msk 0x7FFFUL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHDECODE0_CLIPWINDOWOFFSET0_CLIPWINDOWYOFFSET0_Pos 16UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHDECODE0_CLIPWINDOWOFFSET0_CLIPWINDOWYOFFSET0_Msk 0x7FFF0000UL
/* VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHDECODE0.CLIPWINDOWDIMENSIONS0 */
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHDECODE0_CLIPWINDOWDIMENSIONS0_CLIPWINDOWWIDTH0_Pos 0UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHDECODE0_CLIPWINDOWDIMENSIONS0_CLIPWINDOWWIDTH0_Msk 0x3FFFUL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHDECODE0_CLIPWINDOWDIMENSIONS0_CLIPWINDOWHEIGHT0_Pos 16UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHDECODE0_CLIPWINDOWDIMENSIONS0_CLIPWINDOWHEIGHT0_Msk 0x3FFF0000UL
/* VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHDECODE0.CONSTANTCOLOR0 */
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHDECODE0_CONSTANTCOLOR0_CONSTANTALPHA0_Pos 0UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHDECODE0_CONSTANTCOLOR0_CONSTANTALPHA0_Msk 0xFFUL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHDECODE0_CONSTANTCOLOR0_CONSTANTBLUE0_Pos 8UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHDECODE0_CONSTANTCOLOR0_CONSTANTBLUE0_Msk 0xFF00UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHDECODE0_CONSTANTCOLOR0_CONSTANTGREEN0_Pos 16UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHDECODE0_CONSTANTCOLOR0_CONSTANTGREEN0_Msk 0xFF0000UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHDECODE0_CONSTANTCOLOR0_CONSTANTRED0_Pos 24UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHDECODE0_CONSTANTCOLOR0_CONSTANTRED0_Msk 0xFF000000UL
/* VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHDECODE0.LAYERPROPERTY0 */
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHDECODE0_LAYERPROPERTY0_PALETTEENABLE0_Pos 0UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHDECODE0_LAYERPROPERTY0_PALETTEENABLE0_Msk 0x1UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHDECODE0_LAYERPROPERTY0_TILEMODE0_Pos 1UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHDECODE0_LAYERPROPERTY0_TILEMODE0_Msk 0x6UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHDECODE0_LAYERPROPERTY0_ALPHASRCENABLE0_Pos 3UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHDECODE0_LAYERPROPERTY0_ALPHASRCENABLE0_Msk 0x8UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHDECODE0_LAYERPROPERTY0_ALPHACONSTENABLE0_Pos 4UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHDECODE0_LAYERPROPERTY0_ALPHACONSTENABLE0_Msk 0x10UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHDECODE0_LAYERPROPERTY0_ALPHAMASKENABLE0_Pos 5UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHDECODE0_LAYERPROPERTY0_ALPHAMASKENABLE0_Msk 0x20UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHDECODE0_LAYERPROPERTY0_ALPHATRANSENABLE0_Pos 6UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHDECODE0_LAYERPROPERTY0_ALPHATRANSENABLE0_Msk 0x40UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHDECODE0_LAYERPROPERTY0_RGBALPHASRCENABLE0_Pos 7UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHDECODE0_LAYERPROPERTY0_RGBALPHASRCENABLE0_Msk 0x80UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHDECODE0_LAYERPROPERTY0_RGBALPHACONSTENABLE0_Pos 8UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHDECODE0_LAYERPROPERTY0_RGBALPHACONSTENABLE0_Msk 0x100UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHDECODE0_LAYERPROPERTY0_RGBALPHAMASKENABLE0_Pos 9UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHDECODE0_LAYERPROPERTY0_RGBALPHAMASKENABLE0_Msk 0x200UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHDECODE0_LAYERPROPERTY0_RGBALPHATRANSENABLE0_Pos 10UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHDECODE0_LAYERPROPERTY0_RGBALPHATRANSENABLE0_Msk 0x400UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHDECODE0_LAYERPROPERTY0_PREMULCONSTRGB0_Pos 11UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHDECODE0_LAYERPROPERTY0_PREMULCONSTRGB0_Msk 0x800UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHDECODE0_LAYERPROPERTY0_YUVCONVERSIONMODE0_Pos 12UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHDECODE0_LAYERPROPERTY0_YUVCONVERSIONMODE0_Msk 0x3000UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHDECODE0_LAYERPROPERTY0_GAMMAREMOVEENABLE0_Pos 14UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHDECODE0_LAYERPROPERTY0_GAMMAREMOVEENABLE0_Msk 0x4000UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHDECODE0_LAYERPROPERTY0_PALETTEOFFSET0_Pos 16UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHDECODE0_LAYERPROPERTY0_PALETTEOFFSET0_Msk 0x7FF0000UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHDECODE0_LAYERPROPERTY0_PALETTEIDWIDTH0_Pos 27UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHDECODE0_LAYERPROPERTY0_PALETTEIDWIDTH0_Msk 0x38000000UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHDECODE0_LAYERPROPERTY0_CLIPWINDOWENABLE0_Pos 30UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHDECODE0_LAYERPROPERTY0_CLIPWINDOWENABLE0_Msk 0x40000000UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHDECODE0_LAYERPROPERTY0_SOURCEBUFFERENABLE0_Pos 31UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHDECODE0_LAYERPROPERTY0_SOURCEBUFFERENABLE0_Msk 0x80000000UL
/* VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHDECODE0.FRAMEDIMENSIONS */
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHDECODE0_FRAMEDIMENSIONS_FRAMEWIDTH_Pos 0UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHDECODE0_FRAMEDIMENSIONS_FRAMEWIDTH_Msk 0x3FFFUL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHDECODE0_FRAMEDIMENSIONS_FRAMEHEIGHT_Pos 16UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHDECODE0_FRAMEDIMENSIONS_FRAMEHEIGHT_Msk 0x3FFF0000UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHDECODE0_FRAMEDIMENSIONS_EMPTYFRAME_Pos 31UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHDECODE0_FRAMEDIMENSIONS_EMPTYFRAME_Msk 0x80000000UL
/* VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHDECODE0.FRAMERESAMPLING */
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHDECODE0_FRAMERESAMPLING_STARTX_Pos 0UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHDECODE0_FRAMERESAMPLING_STARTX_Msk 0x3FUL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHDECODE0_FRAMERESAMPLING_STARTY_Pos 6UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHDECODE0_FRAMERESAMPLING_STARTY_Msk 0xFC0UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHDECODE0_FRAMERESAMPLING_DELTAX_Pos 12UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHDECODE0_FRAMERESAMPLING_DELTAX_Msk 0x3F000UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHDECODE0_FRAMERESAMPLING_DELTAY_Pos 18UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHDECODE0_FRAMERESAMPLING_DELTAY_Msk 0xFC0000UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHDECODE0_FRAMERESAMPLING_SWAPDIRECTION_Pos 24UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHDECODE0_FRAMERESAMPLING_SWAPDIRECTION_Msk 0x1000000UL
/* VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHDECODE0.DECODECONTROL */
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHDECODE0_DECODECONTROL_COMPRESSIONMODE_Pos 0UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHDECODE0_DECODECONTROL_COMPRESSIONMODE_Msk 0x3UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHDECODE0_DECODECONTROL_RLADCOMPBITSRED_Pos 16UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHDECODE0_DECODECONTROL_RLADCOMPBITSRED_Msk 0xF0000UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHDECODE0_DECODECONTROL_RLADCOMPBITSGREEN_Pos 20UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHDECODE0_DECODECONTROL_RLADCOMPBITSGREEN_Msk 0xF00000UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHDECODE0_DECODECONTROL_RLADCOMPBITSBLUE_Pos 24UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHDECODE0_DECODECONTROL_RLADCOMPBITSBLUE_Msk 0xF000000UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHDECODE0_DECODECONTROL_RLADCOMPBITSALPHA_Pos 28UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHDECODE0_DECODECONTROL_RLADCOMPBITSALPHA_Msk 0xF0000000UL
/* VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHDECODE0.SOURCEBUFFERLENGTH */
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHDECODE0_SOURCEBUFFERLENGTH_RLEWORDS_Pos 0UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHDECODE0_SOURCEBUFFERLENGTH_RLEWORDS_Msk 0x1FFFFFFFUL
/* VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHDECODE0.CONTROL */
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHDECODE0_CONTROL_RASTERMODE_Pos 0UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHDECODE0_CONTROL_RASTERMODE_Msk 0x7UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHDECODE0_CONTROL_INPUTSELECT_Pos 3UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHDECODE0_CONTROL_INPUTSELECT_Msk 0x18UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHDECODE0_CONTROL_YUV422UPSAMPLINGMODE_Pos 5UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHDECODE0_CONTROL_YUV422UPSAMPLINGMODE_Msk 0x20UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHDECODE0_CONTROL_RAWPIXEL_Pos 7UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHDECODE0_CONTROL_RAWPIXEL_Msk 0x80UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHDECODE0_CONTROL_CLIPCOLOR_Pos 16UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHDECODE0_CONTROL_CLIPCOLOR_Msk 0x10000UL
/* VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHDECODE0.CONTROLTRIGGER */
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHDECODE0_CONTROLTRIGGER_SHDTOKGEN_Pos 0UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHDECODE0_CONTROLTRIGGER_SHDTOKGEN_Msk 0x1UL
/* VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHDECODE0.START */
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHDECODE0_START_START_Pos 0UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHDECODE0_START_START_Msk 0x1UL
/* VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHDECODE0.FETCHTYPE */
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHDECODE0_FETCHTYPE_FETCHTYPE_Pos 0UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHDECODE0_FETCHTYPE_FETCHTYPE_Msk 0xFUL
/* VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHDECODE0.DECODERSTATUS */
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHDECODE0_DECODERSTATUS_BUFFERTOOSMALL_Pos 0UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHDECODE0_DECODERSTATUS_BUFFERTOOSMALL_Msk 0x1UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHDECODE0_DECODERSTATUS_BUFFERTOOLARGE_Pos 1UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHDECODE0_DECODERSTATUS_BUFFERTOOLARGE_Msk 0x2UL
/* VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHDECODE0.READADDRESS0 */
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHDECODE0_READADDRESS0_READADDRESS0_Pos 0UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHDECODE0_READADDRESS0_READADDRESS0_Msk 0xFFFFFFFFUL
/* VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHDECODE0.BURSTBUFFERPROPERTIES */
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHDECODE0_BURSTBUFFERPROPERTIES_MANAGEDBURSTBUFFERS_Pos 0UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHDECODE0_BURSTBUFFERPROPERTIES_MANAGEDBURSTBUFFERS_Msk 0xFFUL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHDECODE0_BURSTBUFFERPROPERTIES_BURSTLENGTHFORMAXBUFFERS_Pos 8UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHDECODE0_BURSTBUFFERPROPERTIES_BURSTLENGTHFORMAXBUFFERS_Msk 0x1F00UL
/* VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHDECODE0.STATUS */
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHDECODE0_STATUS_WRITETIMEOUT_Pos 0UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHDECODE0_STATUS_WRITETIMEOUT_Msk 0x1UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHDECODE0_STATUS_READTIMEOUT_Pos 4UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_FETCHDECODE0_STATUS_READTIMEOUT_Msk 0x10UL


/* VIDEOSS_VIDEOIO_SUBIO_COMPENG_GAMMACOR4.STATICCONTROL */
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_GAMMACOR4_STATICCONTROL_SHDEN_Pos 0UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_GAMMACOR4_STATICCONTROL_SHDEN_Msk 0x1UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_GAMMACOR4_STATICCONTROL_BLUEWRITEENABLE_Pos 1UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_GAMMACOR4_STATICCONTROL_BLUEWRITEENABLE_Msk 0x2UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_GAMMACOR4_STATICCONTROL_GREENWRITEENABLE_Pos 2UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_GAMMACOR4_STATICCONTROL_GREENWRITEENABLE_Msk 0x4UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_GAMMACOR4_STATICCONTROL_REDWRITEENABLE_Pos 3UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_GAMMACOR4_STATICCONTROL_REDWRITEENABLE_Msk 0x8UL
/* VIDEOSS_VIDEOIO_SUBIO_COMPENG_GAMMACOR4.LUTSTART */
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_GAMMACOR4_LUTSTART_STARTBLUE_Pos 0UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_GAMMACOR4_LUTSTART_STARTBLUE_Msk 0x3FFUL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_GAMMACOR4_LUTSTART_STARTGREEN_Pos 10UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_GAMMACOR4_LUTSTART_STARTGREEN_Msk 0xFFC00UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_GAMMACOR4_LUTSTART_STARTRED_Pos 20UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_GAMMACOR4_LUTSTART_STARTRED_Msk 0x3FF00000UL
/* VIDEOSS_VIDEOIO_SUBIO_COMPENG_GAMMACOR4.LUTDELTAS */
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_GAMMACOR4_LUTDELTAS_DELTABLUE_Pos 0UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_GAMMACOR4_LUTDELTAS_DELTABLUE_Msk 0x3FFUL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_GAMMACOR4_LUTDELTAS_DELTAGREEN_Pos 10UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_GAMMACOR4_LUTDELTAS_DELTAGREEN_Msk 0xFFC00UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_GAMMACOR4_LUTDELTAS_DELTARED_Pos 20UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_GAMMACOR4_LUTDELTAS_DELTARED_Msk 0x3FF00000UL
/* VIDEOSS_VIDEOIO_SUBIO_COMPENG_GAMMACOR4.CONTROL */
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_GAMMACOR4_CONTROL_MODE_Pos 0UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_GAMMACOR4_CONTROL_MODE_Msk 0x1UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_GAMMACOR4_CONTROL_ALPHAMASK_Pos 4UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_GAMMACOR4_CONTROL_ALPHAMASK_Msk 0x10UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_GAMMACOR4_CONTROL_ALPHAINVERT_Pos 5UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_GAMMACOR4_CONTROL_ALPHAINVERT_Msk 0x20UL


/* VIDEOSS_VIDEOIO_SUBIO_COMPENG_MATRIX4.STATICCONTROL */
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_MATRIX4_STATICCONTROL_SHDEN_Pos 0UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_MATRIX4_STATICCONTROL_SHDEN_Msk 0x1UL
/* VIDEOSS_VIDEOIO_SUBIO_COMPENG_MATRIX4.CONTROL */
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_MATRIX4_CONTROL_MODE_Pos 0UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_MATRIX4_CONTROL_MODE_Msk 0x3UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_MATRIX4_CONTROL_ALPHAMASK_Pos 4UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_MATRIX4_CONTROL_ALPHAMASK_Msk 0x10UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_MATRIX4_CONTROL_ALPHAINVERT_Pos 5UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_MATRIX4_CONTROL_ALPHAINVERT_Msk 0x20UL
/* VIDEOSS_VIDEOIO_SUBIO_COMPENG_MATRIX4.RED0 */
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_MATRIX4_RED0_A11_Pos 0UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_MATRIX4_RED0_A11_Msk 0x1FFFUL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_MATRIX4_RED0_A12_Pos 16UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_MATRIX4_RED0_A12_Msk 0x1FFF0000UL
/* VIDEOSS_VIDEOIO_SUBIO_COMPENG_MATRIX4.RED1 */
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_MATRIX4_RED1_A13_Pos 0UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_MATRIX4_RED1_A13_Msk 0x1FFFUL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_MATRIX4_RED1_A14_Pos 16UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_MATRIX4_RED1_A14_Msk 0x1FFF0000UL
/* VIDEOSS_VIDEOIO_SUBIO_COMPENG_MATRIX4.GREEN0 */
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_MATRIX4_GREEN0_A21_Pos 0UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_MATRIX4_GREEN0_A21_Msk 0x1FFFUL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_MATRIX4_GREEN0_A22_Pos 16UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_MATRIX4_GREEN0_A22_Msk 0x1FFF0000UL
/* VIDEOSS_VIDEOIO_SUBIO_COMPENG_MATRIX4.GREEN1 */
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_MATRIX4_GREEN1_A23_Pos 0UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_MATRIX4_GREEN1_A23_Msk 0x1FFFUL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_MATRIX4_GREEN1_A24_Pos 16UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_MATRIX4_GREEN1_A24_Msk 0x1FFF0000UL
/* VIDEOSS_VIDEOIO_SUBIO_COMPENG_MATRIX4.BLUE0 */
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_MATRIX4_BLUE0_A31_Pos 0UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_MATRIX4_BLUE0_A31_Msk 0x1FFFUL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_MATRIX4_BLUE0_A32_Pos 16UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_MATRIX4_BLUE0_A32_Msk 0x1FFF0000UL
/* VIDEOSS_VIDEOIO_SUBIO_COMPENG_MATRIX4.BLUE1 */
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_MATRIX4_BLUE1_A33_Pos 0UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_MATRIX4_BLUE1_A33_Msk 0x1FFFUL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_MATRIX4_BLUE1_A34_Pos 16UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_MATRIX4_BLUE1_A34_Msk 0x1FFF0000UL
/* VIDEOSS_VIDEOIO_SUBIO_COMPENG_MATRIX4.ALPHA0 */
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_MATRIX4_ALPHA0_A41_Pos 0UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_MATRIX4_ALPHA0_A41_Msk 0x1FFFUL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_MATRIX4_ALPHA0_A42_Pos 16UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_MATRIX4_ALPHA0_A42_Msk 0x1FFF0000UL
/* VIDEOSS_VIDEOIO_SUBIO_COMPENG_MATRIX4.ALPHA1 */
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_MATRIX4_ALPHA1_A43_Pos 0UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_MATRIX4_ALPHA1_A43_Msk 0x1FFFUL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_MATRIX4_ALPHA1_A44_Pos 16UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_MATRIX4_ALPHA1_A44_Msk 0x1FFF0000UL
/* VIDEOSS_VIDEOIO_SUBIO_COMPENG_MATRIX4.OFFSETVECTOR0 */
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_MATRIX4_OFFSETVECTOR0_C1_Pos 0UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_MATRIX4_OFFSETVECTOR0_C1_Msk 0x1FFFUL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_MATRIX4_OFFSETVECTOR0_C2_Pos 16UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_MATRIX4_OFFSETVECTOR0_C2_Msk 0x1FFF0000UL
/* VIDEOSS_VIDEOIO_SUBIO_COMPENG_MATRIX4.OFFSETVECTOR1 */
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_MATRIX4_OFFSETVECTOR1_C3_Pos 0UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_MATRIX4_OFFSETVECTOR1_C3_Msk 0x1FFFUL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_MATRIX4_OFFSETVECTOR1_C4_Pos 16UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_MATRIX4_OFFSETVECTOR1_C4_Msk 0x1FFF0000UL


/* VIDEOSS_VIDEOIO_SUBIO_COMPENG_GPSCALER4.STATICCONTROL */
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_GPSCALER4_STATICCONTROL_SHDEN_Pos 0UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_GPSCALER4_STATICCONTROL_SHDEN_Msk 0x1UL
/* VIDEOSS_VIDEOIO_SUBIO_COMPENG_GPSCALER4.CONTROL */
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_GPSCALER4_CONTROL_MODE_Pos 0UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_GPSCALER4_CONTROL_MODE_Msk 0xFUL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_GPSCALER4_CONTROL_OPERATION_MODE_Pos 8UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_GPSCALER4_CONTROL_OPERATION_MODE_Msk 0x100UL
/* VIDEOSS_VIDEOIO_SUBIO_COMPENG_GPSCALER4.OUTPUTDIMENSION */
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_GPSCALER4_OUTPUTDIMENSION_OUTPUT_WIDTH_Pos 0UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_GPSCALER4_OUTPUTDIMENSION_OUTPUT_WIDTH_Msk 0x3FFFUL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_GPSCALER4_OUTPUTDIMENSION_OUTPUT_HEIGHT_Pos 16UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_GPSCALER4_OUTPUTDIMENSION_OUTPUT_HEIGHT_Msk 0x3FFF0000UL
/* VIDEOSS_VIDEOIO_SUBIO_COMPENG_GPSCALER4.SCALERCONTROL */
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_GPSCALER4_SCALERCONTROL_SCALE_MODE_H_Pos 0UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_GPSCALER4_SCALERCONTROL_SCALE_MODE_H_Msk 0x1UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_GPSCALER4_SCALERCONTROL_SCALE_MODE_V_Pos 4UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_GPSCALER4_SCALERCONTROL_SCALE_MODE_V_Msk 0x10UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_GPSCALER4_SCALERCONTROL_FILTER_MODE_H_Pos 8UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_GPSCALER4_SCALERCONTROL_FILTER_MODE_H_Msk 0x100UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_GPSCALER4_SCALERCONTROL_FILTER_MODE_V_Pos 12UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_GPSCALER4_SCALERCONTROL_FILTER_MODE_V_Msk 0x1000UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_GPSCALER4_SCALERCONTROL_FIELD_MODE_Pos 16UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_GPSCALER4_SCALERCONTROL_FIELD_MODE_Msk 0x30000UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_GPSCALER4_SCALERCONTROL_ALPHA_VALUE_Pos 20UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_GPSCALER4_SCALERCONTROL_ALPHA_VALUE_Msk 0xFF00000UL
/* VIDEOSS_VIDEOIO_SUBIO_COMPENG_GPSCALER4.SCALERSETUPH0 */
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_GPSCALER4_SCALERSETUPH0_SCALE_FACTOR_H_Pos 0UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_GPSCALER4_SCALERSETUPH0_SCALE_FACTOR_H_Msk 0xFFFFFUL
/* VIDEOSS_VIDEOIO_SUBIO_COMPENG_GPSCALER4.SCALERSETUPH1 */
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_GPSCALER4_SCALERSETUPH1_PHASE_OFFSET_H_Pos 0UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_GPSCALER4_SCALERSETUPH1_PHASE_OFFSET_H_Msk 0x1FFFFFUL
/* VIDEOSS_VIDEOIO_SUBIO_COMPENG_GPSCALER4.SCALERSETUPV0 */
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_GPSCALER4_SCALERSETUPV0_SCALE_FACTOR_V_Pos 0UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_GPSCALER4_SCALERSETUPV0_SCALE_FACTOR_V_Msk 0xFFFFFUL
/* VIDEOSS_VIDEOIO_SUBIO_COMPENG_GPSCALER4.SCALERSETUPV1 */
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_GPSCALER4_SCALERSETUPV1_PHASE_OFFSET_V_Pos 0UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_GPSCALER4_SCALERSETUPV1_PHASE_OFFSET_V_Msk 0x1FFFFFUL
/* VIDEOSS_VIDEOIO_SUBIO_COMPENG_GPSCALER4.SCALERSETUPV2 */
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_GPSCALER4_SCALERSETUPV2_PHASE_OFFSET_V1_Pos 0UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_GPSCALER4_SCALERSETUPV2_PHASE_OFFSET_V1_Msk 0x1FFFFFUL
/* VIDEOSS_VIDEOIO_SUBIO_COMPENG_GPSCALER4.SCALERSETUPV3 */
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_GPSCALER4_SCALERSETUPV3_PHASE_OFFSET_V2_Pos 0UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_GPSCALER4_SCALERSETUPV3_PHASE_OFFSET_V2_Msk 0x1FFFFFUL
/* VIDEOSS_VIDEOIO_SUBIO_COMPENG_GPSCALER4.SCALERSETUPV4 */
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_GPSCALER4_SCALERSETUPV4_PHASE_OFFSET_V3_Pos 0UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_GPSCALER4_SCALERSETUPV4_PHASE_OFFSET_V3_Msk 0x1FFFFFUL
/* VIDEOSS_VIDEOIO_SUBIO_COMPENG_GPSCALER4.FILTERCONTROL */
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_GPSCALER4_FILTERCONTROL_TAPS_H_Pos 0UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_GPSCALER4_FILTERCONTROL_TAPS_H_Msk 0x7UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_GPSCALER4_FILTERCONTROL_TAPS_V_Pos 4UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_GPSCALER4_FILTERCONTROL_TAPS_V_Msk 0x70UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_GPSCALER4_FILTERCONTROL_BYPASS_MODE_R_Pos 8UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_GPSCALER4_FILTERCONTROL_BYPASS_MODE_R_Msk 0x100UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_GPSCALER4_FILTERCONTROL_BYPASS_MODE_G_Pos 9UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_GPSCALER4_FILTERCONTROL_BYPASS_MODE_G_Msk 0x200UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_GPSCALER4_FILTERCONTROL_BYPASS_MODE_B_Pos 10UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_GPSCALER4_FILTERCONTROL_BYPASS_MODE_B_Msk 0x400UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_GPSCALER4_FILTERCONTROL_BYPASS_MODE_A_Pos 11UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_GPSCALER4_FILTERCONTROL_BYPASS_MODE_A_Msk 0x800UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_GPSCALER4_FILTERCONTROL_EXPONENT_FIR_Pos 12UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_GPSCALER4_FILTERCONTROL_EXPONENT_FIR_Msk 0xF000UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_GPSCALER4_FILTERCONTROL_TILE_MODE_Pos 16UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_GPSCALER4_FILTERCONTROL_TILE_MODE_Msk 0x30000UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_GPSCALER4_FILTERCONTROL_TILING_AT_BEGIN_H_Pos 20UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_GPSCALER4_FILTERCONTROL_TILING_AT_BEGIN_H_Msk 0x100000UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_GPSCALER4_FILTERCONTROL_TILING_AT_BEGIN_V_Pos 21UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_GPSCALER4_FILTERCONTROL_TILING_AT_BEGIN_V_Msk 0x200000UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_GPSCALER4_FILTERCONTROL_TILE_COLOR_ALPHA_Pos 24UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_GPSCALER4_FILTERCONTROL_TILE_COLOR_ALPHA_Msk 0xFF000000UL
/* VIDEOSS_VIDEOIO_SUBIO_COMPENG_GPSCALER4.TILECOLORRGB */
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_GPSCALER4_TILECOLORRGB_TILE_COLOR_RED_Pos 0UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_GPSCALER4_TILECOLORRGB_TILE_COLOR_RED_Msk 0x3FFUL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_GPSCALER4_TILECOLORRGB_TILE_COLOR_GREEN_Pos 10UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_GPSCALER4_TILECOLORRGB_TILE_COLOR_GREEN_Msk 0xFFC00UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_GPSCALER4_TILECOLORRGB_TILE_COLOR_BLUE_Pos 20UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_GPSCALER4_TILECOLORRGB_TILE_COLOR_BLUE_Msk 0x3FF00000UL
/* VIDEOSS_VIDEOIO_SUBIO_COMPENG_GPSCALER4.COEFFICIENTSH0 */
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_GPSCALER4_COEFFICIENTSH0_COEFF_H3_Pos 0UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_GPSCALER4_COEFFICIENTSH0_COEFF_H3_Msk 0xFFUL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_GPSCALER4_COEFFICIENTSH0_COEFF_H2_Pos 8UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_GPSCALER4_COEFFICIENTSH0_COEFF_H2_Msk 0xFF00UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_GPSCALER4_COEFFICIENTSH0_COEFF_H1_Pos 16UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_GPSCALER4_COEFFICIENTSH0_COEFF_H1_Msk 0xFF0000UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_GPSCALER4_COEFFICIENTSH0_COEFF_H0_Pos 24UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_GPSCALER4_COEFFICIENTSH0_COEFF_H0_Msk 0xFF000000UL
/* VIDEOSS_VIDEOIO_SUBIO_COMPENG_GPSCALER4.COEFFICIENTSH1 */
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_GPSCALER4_COEFFICIENTSH1_COEFF_H7_Pos 0UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_GPSCALER4_COEFFICIENTSH1_COEFF_H7_Msk 0xFFUL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_GPSCALER4_COEFFICIENTSH1_COEFF_H6_Pos 8UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_GPSCALER4_COEFFICIENTSH1_COEFF_H6_Msk 0xFF00UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_GPSCALER4_COEFFICIENTSH1_COEFF_H5_Pos 16UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_GPSCALER4_COEFFICIENTSH1_COEFF_H5_Msk 0xFF0000UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_GPSCALER4_COEFFICIENTSH1_COEFF_H4_Pos 24UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_GPSCALER4_COEFFICIENTSH1_COEFF_H4_Msk 0xFF000000UL
/* VIDEOSS_VIDEOIO_SUBIO_COMPENG_GPSCALER4.COEFFICIENTSH2 */
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_GPSCALER4_COEFFICIENTSH2_COEFF_H11_Pos 0UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_GPSCALER4_COEFFICIENTSH2_COEFF_H11_Msk 0xFFUL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_GPSCALER4_COEFFICIENTSH2_COEFF_H10_Pos 8UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_GPSCALER4_COEFFICIENTSH2_COEFF_H10_Msk 0xFF00UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_GPSCALER4_COEFFICIENTSH2_COEFF_H9_Pos 16UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_GPSCALER4_COEFFICIENTSH2_COEFF_H9_Msk 0xFF0000UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_GPSCALER4_COEFFICIENTSH2_COEFF_H8_Pos 24UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_GPSCALER4_COEFFICIENTSH2_COEFF_H8_Msk 0xFF000000UL
/* VIDEOSS_VIDEOIO_SUBIO_COMPENG_GPSCALER4.COEFFICIENTSH3 */
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_GPSCALER4_COEFFICIENTSH3_COEFF_H14_Pos 8UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_GPSCALER4_COEFFICIENTSH3_COEFF_H14_Msk 0xFF00UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_GPSCALER4_COEFFICIENTSH3_COEFF_H13_Pos 16UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_GPSCALER4_COEFFICIENTSH3_COEFF_H13_Msk 0xFF0000UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_GPSCALER4_COEFFICIENTSH3_COEFF_H12_Pos 24UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_GPSCALER4_COEFFICIENTSH3_COEFF_H12_Msk 0xFF000000UL
/* VIDEOSS_VIDEOIO_SUBIO_COMPENG_GPSCALER4.COEFFICIENTSV0 */
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_GPSCALER4_COEFFICIENTSV0_COEFF_V3_Pos 0UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_GPSCALER4_COEFFICIENTSV0_COEFF_V3_Msk 0xFFUL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_GPSCALER4_COEFFICIENTSV0_COEFF_V2_Pos 8UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_GPSCALER4_COEFFICIENTSV0_COEFF_V2_Msk 0xFF00UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_GPSCALER4_COEFFICIENTSV0_COEFF_V1_Pos 16UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_GPSCALER4_COEFFICIENTSV0_COEFF_V1_Msk 0xFF0000UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_GPSCALER4_COEFFICIENTSV0_COEFF_V0_Pos 24UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_GPSCALER4_COEFFICIENTSV0_COEFF_V0_Msk 0xFF000000UL
/* VIDEOSS_VIDEOIO_SUBIO_COMPENG_GPSCALER4.COEFFICIENTSV1 */
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_GPSCALER4_COEFFICIENTSV1_COEFF_V7_Pos 0UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_GPSCALER4_COEFFICIENTSV1_COEFF_V7_Msk 0xFFUL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_GPSCALER4_COEFFICIENTSV1_COEFF_V6_Pos 8UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_GPSCALER4_COEFFICIENTSV1_COEFF_V6_Msk 0xFF00UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_GPSCALER4_COEFFICIENTSV1_COEFF_V5_Pos 16UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_GPSCALER4_COEFFICIENTSV1_COEFF_V5_Msk 0xFF0000UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_GPSCALER4_COEFFICIENTSV1_COEFF_V4_Pos 24UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_GPSCALER4_COEFFICIENTSV1_COEFF_V4_Msk 0xFF000000UL
/* VIDEOSS_VIDEOIO_SUBIO_COMPENG_GPSCALER4.COEFFICIENTSV2 */
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_GPSCALER4_COEFFICIENTSV2_COEFF_V11_Pos 0UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_GPSCALER4_COEFFICIENTSV2_COEFF_V11_Msk 0xFFUL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_GPSCALER4_COEFFICIENTSV2_COEFF_V10_Pos 8UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_GPSCALER4_COEFFICIENTSV2_COEFF_V10_Msk 0xFF00UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_GPSCALER4_COEFFICIENTSV2_COEFF_V9_Pos 16UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_GPSCALER4_COEFFICIENTSV2_COEFF_V9_Msk 0xFF0000UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_GPSCALER4_COEFFICIENTSV2_COEFF_V8_Pos 24UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_GPSCALER4_COEFFICIENTSV2_COEFF_V8_Msk 0xFF000000UL
/* VIDEOSS_VIDEOIO_SUBIO_COMPENG_GPSCALER4.COEFFICIENTSV3 */
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_GPSCALER4_COEFFICIENTSV3_COEFF_V14_Pos 8UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_GPSCALER4_COEFFICIENTSV3_COEFF_V14_Msk 0xFF00UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_GPSCALER4_COEFFICIENTSV3_COEFF_V13_Pos 16UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_GPSCALER4_COEFFICIENTSV3_COEFF_V13_Msk 0xFF0000UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_GPSCALER4_COEFFICIENTSV3_COEFF_V12_Pos 24UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_GPSCALER4_COEFFICIENTSV3_COEFF_V12_Msk 0xFF000000UL


/* VIDEOSS_VIDEOIO_SUBIO_COMPENG_HISTOGRAM4.CONTROL */
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_HISTOGRAM4_CONTROL_CLIP_EN_Pos 0UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_HISTOGRAM4_CONTROL_CLIP_EN_Msk 0x1UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_HISTOGRAM4_CONTROL_COLOR_SPACE_MODE_Pos 4UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_HISTOGRAM4_CONTROL_COLOR_SPACE_MODE_Msk 0x30UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_HISTOGRAM4_CONTROL_LUM_MODE_Pos 8UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_HISTOGRAM4_CONTROL_LUM_MODE_Msk 0x300UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_HISTOGRAM4_CONTROL_ALPHAMASK_Pos 12UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_HISTOGRAM4_CONTROL_ALPHAMASK_Msk 0x1000UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_HISTOGRAM4_CONTROL_ALPHAINVERT_Pos 13UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_HISTOGRAM4_CONTROL_ALPHAINVERT_Msk 0x2000UL
/* VIDEOSS_VIDEOIO_SUBIO_COMPENG_HISTOGRAM4.BINPROPERTIES */
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_HISTOGRAM4_BINPROPERTIES_BINNUM_WIDTH_Pos 0UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_HISTOGRAM4_BINPROPERTIES_BINNUM_WIDTH_Msk 0x7UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_HISTOGRAM4_BINPROPERTIES_CNT_MODE_Pos 4UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_HISTOGRAM4_BINPROPERTIES_CNT_MODE_Msk 0x10UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_HISTOGRAM4_BINPROPERTIES_BINCNT_RD_MODE_Pos 8UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_HISTOGRAM4_BINPROPERTIES_BINCNT_RD_MODE_Msk 0x100UL
/* VIDEOSS_VIDEOIO_SUBIO_COMPENG_HISTOGRAM4.BINCNTTHRESH */
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_HISTOGRAM4_BINCNTTHRESH_BINCNT_THRESH_Pos 0UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_HISTOGRAM4_BINCNTTHRESH_BINCNT_THRESH_Msk 0x1FFFFFFFUL
/* VIDEOSS_VIDEOIO_SUBIO_COMPENG_HISTOGRAM4.CLIPWINUPPERLEFT */
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_HISTOGRAM4_CLIPWINUPPERLEFT_CLIP_X_Pos 0UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_HISTOGRAM4_CLIPWINUPPERLEFT_CLIP_X_Msk 0x3FFFUL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_HISTOGRAM4_CLIPWINUPPERLEFT_CLIP_Y_Pos 16UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_HISTOGRAM4_CLIPWINUPPERLEFT_CLIP_Y_Msk 0x3FFF0000UL
/* VIDEOSS_VIDEOIO_SUBIO_COMPENG_HISTOGRAM4.CLIPWINSIZE */
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_HISTOGRAM4_CLIPWINSIZE_CLIP_WIDTH_Pos 0UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_HISTOGRAM4_CLIPWINSIZE_CLIP_WIDTH_Msk 0x3FFFUL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_HISTOGRAM4_CLIPWINSIZE_CLIP_HEIGHT_Pos 16UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_HISTOGRAM4_CLIPWINSIZE_CLIP_HEIGHT_Msk 0x3FFF0000UL
/* VIDEOSS_VIDEOIO_SUBIO_COMPENG_HISTOGRAM4.RSLTRDY */
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_HISTOGRAM4_RSLTRDY_RSLT_RDY_Pos 0UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_HISTOGRAM4_RSLTRDY_RSLT_RDY_Msk 0x1UL
/* VIDEOSS_VIDEOIO_SUBIO_COMPENG_HISTOGRAM4.RSLTFRMINF */
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_HISTOGRAM4_RSLTFRMINF_FRM_IDX_Pos 0UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_HISTOGRAM4_RSLTFRMINF_FRM_IDX_Msk 0xFFUL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_HISTOGRAM4_RSLTFRMINF_FLD_POLARITY_Pos 16UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_HISTOGRAM4_RSLTFRMINF_FLD_POLARITY_Msk 0x10000UL
/* VIDEOSS_VIDEOIO_SUBIO_COMPENG_HISTOGRAM4.RSLTCOMP0BINIDX */
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_HISTOGRAM4_RSLTCOMP0BINIDX_COMP0_BINIDX_MAXCNT_Pos 0UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_HISTOGRAM4_RSLTCOMP0BINIDX_COMP0_BINIDX_MAXCNT_Msk 0x3FUL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_HISTOGRAM4_RSLTCOMP0BINIDX_COMP0_BINIDX_NXT_Pos 16UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_HISTOGRAM4_RSLTCOMP0BINIDX_COMP0_BINIDX_NXT_Msk 0x3F0000UL
/* VIDEOSS_VIDEOIO_SUBIO_COMPENG_HISTOGRAM4.RSLTCOMP1BINIDX */
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_HISTOGRAM4_RSLTCOMP1BINIDX_COMP1_BINIDX_MAXCNT_Pos 0UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_HISTOGRAM4_RSLTCOMP1BINIDX_COMP1_BINIDX_MAXCNT_Msk 0x3FUL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_HISTOGRAM4_RSLTCOMP1BINIDX_COMP1_BINIDX_NXT_Pos 16UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_HISTOGRAM4_RSLTCOMP1BINIDX_COMP1_BINIDX_NXT_Msk 0x3F0000UL
/* VIDEOSS_VIDEOIO_SUBIO_COMPENG_HISTOGRAM4.RSLTCOMP2BINIDX */
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_HISTOGRAM4_RSLTCOMP2BINIDX_COMP2_BINIDX_MAXCNT_Pos 0UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_HISTOGRAM4_RSLTCOMP2BINIDX_COMP2_BINIDX_MAXCNT_Msk 0x3FUL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_HISTOGRAM4_RSLTCOMP2BINIDX_COMP2_BINIDX_NXT_Pos 16UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_HISTOGRAM4_RSLTCOMP2BINIDX_COMP2_BINIDX_NXT_Msk 0x3F0000UL
/* VIDEOSS_VIDEOIO_SUBIO_COMPENG_HISTOGRAM4.RSLTCOMP0SUM */
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_HISTOGRAM4_RSLTCOMP0SUM_COMP0_SUM_Pos 0UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_HISTOGRAM4_RSLTCOMP0SUM_COMP0_SUM_Msk 0xFFFFFFFFUL
/* VIDEOSS_VIDEOIO_SUBIO_COMPENG_HISTOGRAM4.RSLTCOMP1SUM */
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_HISTOGRAM4_RSLTCOMP1SUM_COMP1_SUM_Pos 0UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_HISTOGRAM4_RSLTCOMP1SUM_COMP1_SUM_Msk 0xFFFFFFFFUL
/* VIDEOSS_VIDEOIO_SUBIO_COMPENG_HISTOGRAM4.RSLTCOMP2SUM */
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_HISTOGRAM4_RSLTCOMP2SUM_COMP2_SUM_Pos 0UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_HISTOGRAM4_RSLTCOMP2SUM_COMP2_SUM_Msk 0xFFFFFFFFUL
/* VIDEOSS_VIDEOIO_SUBIO_COMPENG_HISTOGRAM4.RSLTCOMP0BINCNT */
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_HISTOGRAM4_RSLTCOMP0BINCNT_COMP0_BINCNT_Pos 0UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_HISTOGRAM4_RSLTCOMP0BINCNT_COMP0_BINCNT_Msk 0x1FFFFFFFUL
/* VIDEOSS_VIDEOIO_SUBIO_COMPENG_HISTOGRAM4.RSLTCOMP1BINCNT */
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_HISTOGRAM4_RSLTCOMP1BINCNT_COMP1_BINCNT_Pos 0UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_HISTOGRAM4_RSLTCOMP1BINCNT_COMP1_BINCNT_Msk 0x1FFFFFFFUL
/* VIDEOSS_VIDEOIO_SUBIO_COMPENG_HISTOGRAM4.RSLTCOMP2BINCNT */
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_HISTOGRAM4_RSLTCOMP2BINCNT_COMP2_BINCNT_Pos 0UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_HISTOGRAM4_RSLTCOMP2BINCNT_COMP2_BINCNT_Msk 0x1FFFFFFFUL
/* VIDEOSS_VIDEOIO_SUBIO_COMPENG_HISTOGRAM4.FRMSTRTTRIG */
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_HISTOGRAM4_FRMSTRTTRIG_MSRMNT_STRT_TRIG_Pos 0UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_HISTOGRAM4_FRMSTRTTRIG_MSRMNT_STRT_TRIG_Msk 0x1UL


/* VIDEOSS_VIDEOIO_SUBIO_COMPENG_LAYERBLEND1.STATICCONTROL */
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_LAYERBLEND1_STATICCONTROL_SHDEN_Pos 0UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_LAYERBLEND1_STATICCONTROL_SHDEN_Msk 0x1UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_LAYERBLEND1_STATICCONTROL_SHDLDSEL_Pos 1UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_LAYERBLEND1_STATICCONTROL_SHDLDSEL_Msk 0x6UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_LAYERBLEND1_STATICCONTROL_SHDTOKSEL_Pos 3UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_LAYERBLEND1_STATICCONTROL_SHDTOKSEL_Msk 0x18UL
/* VIDEOSS_VIDEOIO_SUBIO_COMPENG_LAYERBLEND1.CONTROL */
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_LAYERBLEND1_CONTROL_MODE_Pos 0UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_LAYERBLEND1_CONTROL_MODE_Msk 0x1UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_LAYERBLEND1_CONTROL_ALPHAMASKENABLE_Pos 2UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_LAYERBLEND1_CONTROL_ALPHAMASKENABLE_Msk 0x4UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_LAYERBLEND1_CONTROL_ALPHAMASKMODE_Pos 4UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_LAYERBLEND1_CONTROL_ALPHAMASKMODE_Msk 0x70UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_LAYERBLEND1_CONTROL_SECLOWPASSEN_Pos 8UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_LAYERBLEND1_CONTROL_SECLOWPASSEN_Msk 0x100UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_LAYERBLEND1_CONTROL_SECREPLICATEEN_Pos 9UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_LAYERBLEND1_CONTROL_SECREPLICATEEN_Msk 0x200UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_LAYERBLEND1_CONTROL_SECEVENROWEVENCOLDIS_Pos 10UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_LAYERBLEND1_CONTROL_SECEVENROWEVENCOLDIS_Msk 0x3C00UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_LAYERBLEND1_CONTROL_SECEVENROWODDCOLDIS_Pos 14UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_LAYERBLEND1_CONTROL_SECEVENROWODDCOLDIS_Msk 0x3C000UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_LAYERBLEND1_CONTROL_SECODDROWEVENCOLDIS_Pos 18UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_LAYERBLEND1_CONTROL_SECODDROWEVENCOLDIS_Msk 0x3C0000UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_LAYERBLEND1_CONTROL_SECODDROWODDCOLDIS_Pos 22UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_LAYERBLEND1_CONTROL_SECODDROWODDCOLDIS_Msk 0x3C00000UL
/* VIDEOSS_VIDEOIO_SUBIO_COMPENG_LAYERBLEND1.BLENDCONTROL */
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_LAYERBLEND1_BLENDCONTROL_PRIM_C_BLD_FUNC_Pos 0UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_LAYERBLEND1_BLENDCONTROL_PRIM_C_BLD_FUNC_Msk 0x7UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_LAYERBLEND1_BLENDCONTROL_SEC_C_BLD_FUNC_Pos 4UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_LAYERBLEND1_BLENDCONTROL_SEC_C_BLD_FUNC_Msk 0x70UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_LAYERBLEND1_BLENDCONTROL_PRIM_A_BLD_FUNC_Pos 8UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_LAYERBLEND1_BLENDCONTROL_PRIM_A_BLD_FUNC_Msk 0x700UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_LAYERBLEND1_BLENDCONTROL_SEC_A_BLD_FUNC_Pos 12UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_LAYERBLEND1_BLENDCONTROL_SEC_A_BLD_FUNC_Msk 0x7000UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_LAYERBLEND1_BLENDCONTROL_BLENDALPHA_Pos 16UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_LAYERBLEND1_BLENDCONTROL_BLENDALPHA_Msk 0xFF0000UL
/* VIDEOSS_VIDEOIO_SUBIO_COMPENG_LAYERBLEND1.POSITION */
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_LAYERBLEND1_POSITION_XPOS_Pos 0UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_LAYERBLEND1_POSITION_XPOS_Msk 0xFFFFUL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_LAYERBLEND1_POSITION_YPOS_Pos 16UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_LAYERBLEND1_POSITION_YPOS_Msk 0xFFFF0000UL


/* VIDEOSS_VIDEOIO_SUBIO_COMPENG_LAYERBLEND2.STATICCONTROL */
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_LAYERBLEND2_STATICCONTROL_SHDEN_Pos 0UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_LAYERBLEND2_STATICCONTROL_SHDEN_Msk 0x1UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_LAYERBLEND2_STATICCONTROL_SHDLDSEL_Pos 1UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_LAYERBLEND2_STATICCONTROL_SHDLDSEL_Msk 0x6UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_LAYERBLEND2_STATICCONTROL_SHDTOKSEL_Pos 3UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_LAYERBLEND2_STATICCONTROL_SHDTOKSEL_Msk 0x18UL
/* VIDEOSS_VIDEOIO_SUBIO_COMPENG_LAYERBLEND2.CONTROL */
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_LAYERBLEND2_CONTROL_MODE_Pos 0UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_LAYERBLEND2_CONTROL_MODE_Msk 0x1UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_LAYERBLEND2_CONTROL_ALPHAMASKENABLE_Pos 2UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_LAYERBLEND2_CONTROL_ALPHAMASKENABLE_Msk 0x4UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_LAYERBLEND2_CONTROL_ALPHAMASKMODE_Pos 4UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_LAYERBLEND2_CONTROL_ALPHAMASKMODE_Msk 0x70UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_LAYERBLEND2_CONTROL_SECLOWPASSEN_Pos 8UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_LAYERBLEND2_CONTROL_SECLOWPASSEN_Msk 0x100UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_LAYERBLEND2_CONTROL_SECREPLICATEEN_Pos 9UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_LAYERBLEND2_CONTROL_SECREPLICATEEN_Msk 0x200UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_LAYERBLEND2_CONTROL_SECEVENROWEVENCOLDIS_Pos 10UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_LAYERBLEND2_CONTROL_SECEVENROWEVENCOLDIS_Msk 0x3C00UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_LAYERBLEND2_CONTROL_SECEVENROWODDCOLDIS_Pos 14UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_LAYERBLEND2_CONTROL_SECEVENROWODDCOLDIS_Msk 0x3C000UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_LAYERBLEND2_CONTROL_SECODDROWEVENCOLDIS_Pos 18UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_LAYERBLEND2_CONTROL_SECODDROWEVENCOLDIS_Msk 0x3C0000UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_LAYERBLEND2_CONTROL_SECODDROWODDCOLDIS_Pos 22UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_LAYERBLEND2_CONTROL_SECODDROWODDCOLDIS_Msk 0x3C00000UL
/* VIDEOSS_VIDEOIO_SUBIO_COMPENG_LAYERBLEND2.BLENDCONTROL */
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_LAYERBLEND2_BLENDCONTROL_PRIM_C_BLD_FUNC_Pos 0UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_LAYERBLEND2_BLENDCONTROL_PRIM_C_BLD_FUNC_Msk 0x7UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_LAYERBLEND2_BLENDCONTROL_SEC_C_BLD_FUNC_Pos 4UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_LAYERBLEND2_BLENDCONTROL_SEC_C_BLD_FUNC_Msk 0x70UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_LAYERBLEND2_BLENDCONTROL_PRIM_A_BLD_FUNC_Pos 8UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_LAYERBLEND2_BLENDCONTROL_PRIM_A_BLD_FUNC_Msk 0x700UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_LAYERBLEND2_BLENDCONTROL_SEC_A_BLD_FUNC_Pos 12UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_LAYERBLEND2_BLENDCONTROL_SEC_A_BLD_FUNC_Msk 0x7000UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_LAYERBLEND2_BLENDCONTROL_BLENDALPHA_Pos 16UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_LAYERBLEND2_BLENDCONTROL_BLENDALPHA_Msk 0xFF0000UL
/* VIDEOSS_VIDEOIO_SUBIO_COMPENG_LAYERBLEND2.POSITION */
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_LAYERBLEND2_POSITION_XPOS_Pos 0UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_LAYERBLEND2_POSITION_XPOS_Msk 0xFFFFUL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_LAYERBLEND2_POSITION_YPOS_Pos 16UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_LAYERBLEND2_POSITION_YPOS_Msk 0xFFFF0000UL


/* VIDEOSS_VIDEOIO_SUBIO_COMPENG_LAYERBLEND3.STATICCONTROL */
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_LAYERBLEND3_STATICCONTROL_SHDEN_Pos 0UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_LAYERBLEND3_STATICCONTROL_SHDEN_Msk 0x1UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_LAYERBLEND3_STATICCONTROL_SHDLDSEL_Pos 1UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_LAYERBLEND3_STATICCONTROL_SHDLDSEL_Msk 0x6UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_LAYERBLEND3_STATICCONTROL_SHDTOKSEL_Pos 3UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_LAYERBLEND3_STATICCONTROL_SHDTOKSEL_Msk 0x18UL
/* VIDEOSS_VIDEOIO_SUBIO_COMPENG_LAYERBLEND3.CONTROL */
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_LAYERBLEND3_CONTROL_MODE_Pos 0UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_LAYERBLEND3_CONTROL_MODE_Msk 0x1UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_LAYERBLEND3_CONTROL_ALPHAMASKENABLE_Pos 2UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_LAYERBLEND3_CONTROL_ALPHAMASKENABLE_Msk 0x4UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_LAYERBLEND3_CONTROL_ALPHAMASKMODE_Pos 4UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_LAYERBLEND3_CONTROL_ALPHAMASKMODE_Msk 0x70UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_LAYERBLEND3_CONTROL_SECLOWPASSEN_Pos 8UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_LAYERBLEND3_CONTROL_SECLOWPASSEN_Msk 0x100UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_LAYERBLEND3_CONTROL_SECREPLICATEEN_Pos 9UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_LAYERBLEND3_CONTROL_SECREPLICATEEN_Msk 0x200UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_LAYERBLEND3_CONTROL_SECEVENROWEVENCOLDIS_Pos 10UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_LAYERBLEND3_CONTROL_SECEVENROWEVENCOLDIS_Msk 0x3C00UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_LAYERBLEND3_CONTROL_SECEVENROWODDCOLDIS_Pos 14UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_LAYERBLEND3_CONTROL_SECEVENROWODDCOLDIS_Msk 0x3C000UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_LAYERBLEND3_CONTROL_SECODDROWEVENCOLDIS_Pos 18UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_LAYERBLEND3_CONTROL_SECODDROWEVENCOLDIS_Msk 0x3C0000UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_LAYERBLEND3_CONTROL_SECODDROWODDCOLDIS_Pos 22UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_LAYERBLEND3_CONTROL_SECODDROWODDCOLDIS_Msk 0x3C00000UL
/* VIDEOSS_VIDEOIO_SUBIO_COMPENG_LAYERBLEND3.BLENDCONTROL */
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_LAYERBLEND3_BLENDCONTROL_PRIM_C_BLD_FUNC_Pos 0UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_LAYERBLEND3_BLENDCONTROL_PRIM_C_BLD_FUNC_Msk 0x7UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_LAYERBLEND3_BLENDCONTROL_SEC_C_BLD_FUNC_Pos 4UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_LAYERBLEND3_BLENDCONTROL_SEC_C_BLD_FUNC_Msk 0x70UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_LAYERBLEND3_BLENDCONTROL_PRIM_A_BLD_FUNC_Pos 8UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_LAYERBLEND3_BLENDCONTROL_PRIM_A_BLD_FUNC_Msk 0x700UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_LAYERBLEND3_BLENDCONTROL_SEC_A_BLD_FUNC_Pos 12UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_LAYERBLEND3_BLENDCONTROL_SEC_A_BLD_FUNC_Msk 0x7000UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_LAYERBLEND3_BLENDCONTROL_BLENDALPHA_Pos 16UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_LAYERBLEND3_BLENDCONTROL_BLENDALPHA_Msk 0xFF0000UL
/* VIDEOSS_VIDEOIO_SUBIO_COMPENG_LAYERBLEND3.POSITION */
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_LAYERBLEND3_POSITION_XPOS_Pos 0UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_LAYERBLEND3_POSITION_XPOS_Msk 0xFFFFUL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_LAYERBLEND3_POSITION_YPOS_Pos 16UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_LAYERBLEND3_POSITION_YPOS_Msk 0xFFFF0000UL


/* VIDEOSS_VIDEOIO_SUBIO_COMPENG_LAYERBLEND4.STATICCONTROL */
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_LAYERBLEND4_STATICCONTROL_SHDEN_Pos 0UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_LAYERBLEND4_STATICCONTROL_SHDEN_Msk 0x1UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_LAYERBLEND4_STATICCONTROL_SHDLDSEL_Pos 1UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_LAYERBLEND4_STATICCONTROL_SHDLDSEL_Msk 0x6UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_LAYERBLEND4_STATICCONTROL_SHDTOKSEL_Pos 3UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_LAYERBLEND4_STATICCONTROL_SHDTOKSEL_Msk 0x18UL
/* VIDEOSS_VIDEOIO_SUBIO_COMPENG_LAYERBLEND4.CONTROL */
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_LAYERBLEND4_CONTROL_MODE_Pos 0UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_LAYERBLEND4_CONTROL_MODE_Msk 0x1UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_LAYERBLEND4_CONTROL_ALPHAMASKENABLE_Pos 2UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_LAYERBLEND4_CONTROL_ALPHAMASKENABLE_Msk 0x4UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_LAYERBLEND4_CONTROL_ALPHAMASKMODE_Pos 4UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_LAYERBLEND4_CONTROL_ALPHAMASKMODE_Msk 0x70UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_LAYERBLEND4_CONTROL_SECLOWPASSEN_Pos 8UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_LAYERBLEND4_CONTROL_SECLOWPASSEN_Msk 0x100UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_LAYERBLEND4_CONTROL_SECREPLICATEEN_Pos 9UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_LAYERBLEND4_CONTROL_SECREPLICATEEN_Msk 0x200UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_LAYERBLEND4_CONTROL_SECEVENROWEVENCOLDIS_Pos 10UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_LAYERBLEND4_CONTROL_SECEVENROWEVENCOLDIS_Msk 0x3C00UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_LAYERBLEND4_CONTROL_SECEVENROWODDCOLDIS_Pos 14UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_LAYERBLEND4_CONTROL_SECEVENROWODDCOLDIS_Msk 0x3C000UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_LAYERBLEND4_CONTROL_SECODDROWEVENCOLDIS_Pos 18UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_LAYERBLEND4_CONTROL_SECODDROWEVENCOLDIS_Msk 0x3C0000UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_LAYERBLEND4_CONTROL_SECODDROWODDCOLDIS_Pos 22UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_LAYERBLEND4_CONTROL_SECODDROWODDCOLDIS_Msk 0x3C00000UL
/* VIDEOSS_VIDEOIO_SUBIO_COMPENG_LAYERBLEND4.BLENDCONTROL */
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_LAYERBLEND4_BLENDCONTROL_PRIM_C_BLD_FUNC_Pos 0UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_LAYERBLEND4_BLENDCONTROL_PRIM_C_BLD_FUNC_Msk 0x7UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_LAYERBLEND4_BLENDCONTROL_SEC_C_BLD_FUNC_Pos 4UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_LAYERBLEND4_BLENDCONTROL_SEC_C_BLD_FUNC_Msk 0x70UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_LAYERBLEND4_BLENDCONTROL_PRIM_A_BLD_FUNC_Pos 8UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_LAYERBLEND4_BLENDCONTROL_PRIM_A_BLD_FUNC_Msk 0x700UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_LAYERBLEND4_BLENDCONTROL_SEC_A_BLD_FUNC_Pos 12UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_LAYERBLEND4_BLENDCONTROL_SEC_A_BLD_FUNC_Msk 0x7000UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_LAYERBLEND4_BLENDCONTROL_BLENDALPHA_Pos 16UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_LAYERBLEND4_BLENDCONTROL_BLENDALPHA_Msk 0xFF0000UL
/* VIDEOSS_VIDEOIO_SUBIO_COMPENG_LAYERBLEND4.POSITION */
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_LAYERBLEND4_POSITION_XPOS_Pos 0UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_LAYERBLEND4_POSITION_XPOS_Msk 0xFFFFUL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_LAYERBLEND4_POSITION_YPOS_Pos 16UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_LAYERBLEND4_POSITION_YPOS_Msk 0xFFFF0000UL


/* VIDEOSS_VIDEOIO_SUBIO_COMPENG_LAYERBLEND5.STATICCONTROL */
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_LAYERBLEND5_STATICCONTROL_SHDEN_Pos 0UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_LAYERBLEND5_STATICCONTROL_SHDEN_Msk 0x1UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_LAYERBLEND5_STATICCONTROL_SHDLDSEL_Pos 1UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_LAYERBLEND5_STATICCONTROL_SHDLDSEL_Msk 0x6UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_LAYERBLEND5_STATICCONTROL_SHDTOKSEL_Pos 3UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_LAYERBLEND5_STATICCONTROL_SHDTOKSEL_Msk 0x18UL
/* VIDEOSS_VIDEOIO_SUBIO_COMPENG_LAYERBLEND5.CONTROL */
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_LAYERBLEND5_CONTROL_MODE_Pos 0UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_LAYERBLEND5_CONTROL_MODE_Msk 0x1UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_LAYERBLEND5_CONTROL_ALPHAMASKENABLE_Pos 2UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_LAYERBLEND5_CONTROL_ALPHAMASKENABLE_Msk 0x4UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_LAYERBLEND5_CONTROL_ALPHAMASKMODE_Pos 4UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_LAYERBLEND5_CONTROL_ALPHAMASKMODE_Msk 0x70UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_LAYERBLEND5_CONTROL_SECLOWPASSEN_Pos 8UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_LAYERBLEND5_CONTROL_SECLOWPASSEN_Msk 0x100UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_LAYERBLEND5_CONTROL_SECREPLICATEEN_Pos 9UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_LAYERBLEND5_CONTROL_SECREPLICATEEN_Msk 0x200UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_LAYERBLEND5_CONTROL_SECEVENROWEVENCOLDIS_Pos 10UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_LAYERBLEND5_CONTROL_SECEVENROWEVENCOLDIS_Msk 0x3C00UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_LAYERBLEND5_CONTROL_SECEVENROWODDCOLDIS_Pos 14UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_LAYERBLEND5_CONTROL_SECEVENROWODDCOLDIS_Msk 0x3C000UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_LAYERBLEND5_CONTROL_SECODDROWEVENCOLDIS_Pos 18UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_LAYERBLEND5_CONTROL_SECODDROWEVENCOLDIS_Msk 0x3C0000UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_LAYERBLEND5_CONTROL_SECODDROWODDCOLDIS_Pos 22UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_LAYERBLEND5_CONTROL_SECODDROWODDCOLDIS_Msk 0x3C00000UL
/* VIDEOSS_VIDEOIO_SUBIO_COMPENG_LAYERBLEND5.BLENDCONTROL */
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_LAYERBLEND5_BLENDCONTROL_PRIM_C_BLD_FUNC_Pos 0UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_LAYERBLEND5_BLENDCONTROL_PRIM_C_BLD_FUNC_Msk 0x7UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_LAYERBLEND5_BLENDCONTROL_SEC_C_BLD_FUNC_Pos 4UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_LAYERBLEND5_BLENDCONTROL_SEC_C_BLD_FUNC_Msk 0x70UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_LAYERBLEND5_BLENDCONTROL_PRIM_A_BLD_FUNC_Pos 8UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_LAYERBLEND5_BLENDCONTROL_PRIM_A_BLD_FUNC_Msk 0x700UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_LAYERBLEND5_BLENDCONTROL_SEC_A_BLD_FUNC_Pos 12UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_LAYERBLEND5_BLENDCONTROL_SEC_A_BLD_FUNC_Msk 0x7000UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_LAYERBLEND5_BLENDCONTROL_BLENDALPHA_Pos 16UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_LAYERBLEND5_BLENDCONTROL_BLENDALPHA_Msk 0xFF0000UL
/* VIDEOSS_VIDEOIO_SUBIO_COMPENG_LAYERBLEND5.POSITION */
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_LAYERBLEND5_POSITION_XPOS_Pos 0UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_LAYERBLEND5_POSITION_XPOS_Msk 0xFFFFUL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_LAYERBLEND5_POSITION_YPOS_Pos 16UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_LAYERBLEND5_POSITION_YPOS_Msk 0xFFFF0000UL


/* VIDEOSS_VIDEOIO_SUBIO_COMPENG_EXTSRC8.STATICCONTROL */
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_EXTSRC8_STATICCONTROL_SHDEN_Pos 0UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_EXTSRC8_STATICCONTROL_SHDEN_Msk 0x1UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_EXTSRC8_STATICCONTROL_STARTSEL_Pos 8UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_EXTSRC8_STATICCONTROL_STARTSEL_Msk 0x100UL
/* VIDEOSS_VIDEOIO_SUBIO_COMPENG_EXTSRC8.CLIPWINDOWOFFSET */
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_EXTSRC8_CLIPWINDOWOFFSET_CLIPWINDOWXOFFSET_Pos 0UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_EXTSRC8_CLIPWINDOWOFFSET_CLIPWINDOWXOFFSET_Msk 0x3FFFUL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_EXTSRC8_CLIPWINDOWOFFSET_CLIPWINDOWYOFFSET_Pos 16UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_EXTSRC8_CLIPWINDOWOFFSET_CLIPWINDOWYOFFSET_Msk 0x3FFF0000UL
/* VIDEOSS_VIDEOIO_SUBIO_COMPENG_EXTSRC8.CLIPWINDOWDIMENSION */
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_EXTSRC8_CLIPWINDOWDIMENSION_CLIPWINDOWWIDTH_Pos 0UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_EXTSRC8_CLIPWINDOWDIMENSION_CLIPWINDOWWIDTH_Msk 0x3FFFUL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_EXTSRC8_CLIPWINDOWDIMENSION_CLIPWINDOWHEIGHT_Pos 16UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_EXTSRC8_CLIPWINDOWDIMENSION_CLIPWINDOWHEIGHT_Msk 0x3FFF0000UL
/* VIDEOSS_VIDEOIO_SUBIO_COMPENG_EXTSRC8.COLORCOMPONENTBITS */
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_EXTSRC8_COLORCOMPONENTBITS_COMPONENTBITSALPHA_Pos 0UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_EXTSRC8_COLORCOMPONENTBITS_COMPONENTBITSALPHA_Msk 0xFUL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_EXTSRC8_COLORCOMPONENTBITS_COMPONENTBITSBLUE_Pos 8UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_EXTSRC8_COLORCOMPONENTBITS_COMPONENTBITSBLUE_Msk 0xF00UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_EXTSRC8_COLORCOMPONENTBITS_COMPONENTBITSGREEN_Pos 16UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_EXTSRC8_COLORCOMPONENTBITS_COMPONENTBITSGREEN_Msk 0xF0000UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_EXTSRC8_COLORCOMPONENTBITS_COMPONENTBITSRED_Pos 24UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_EXTSRC8_COLORCOMPONENTBITS_COMPONENTBITSRED_Msk 0xF000000UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_EXTSRC8_COLORCOMPONENTBITS_ITUFORMAT_Pos 31UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_EXTSRC8_COLORCOMPONENTBITS_ITUFORMAT_Msk 0x80000000UL
/* VIDEOSS_VIDEOIO_SUBIO_COMPENG_EXTSRC8.COLORCOMPONENTSHIFT */
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_EXTSRC8_COLORCOMPONENTSHIFT_COMPONENTSHIFTALPHA_Pos 0UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_EXTSRC8_COLORCOMPONENTSHIFT_COMPONENTSHIFTALPHA_Msk 0x3FUL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_EXTSRC8_COLORCOMPONENTSHIFT_COMPONENTSHIFTBLUE_Pos 8UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_EXTSRC8_COLORCOMPONENTSHIFT_COMPONENTSHIFTBLUE_Msk 0x3F00UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_EXTSRC8_COLORCOMPONENTSHIFT_COMPONENTSHIFTGREEN_Pos 16UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_EXTSRC8_COLORCOMPONENTSHIFT_COMPONENTSHIFTGREEN_Msk 0x3F0000UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_EXTSRC8_COLORCOMPONENTSHIFT_COMPONENTSHIFTRED_Pos 24UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_EXTSRC8_COLORCOMPONENTSHIFT_COMPONENTSHIFTRED_Msk 0x3F000000UL
/* VIDEOSS_VIDEOIO_SUBIO_COMPENG_EXTSRC8.CONSTANTCOLOR */
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_EXTSRC8_CONSTANTCOLOR_CONSTANTALPHA_Pos 0UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_EXTSRC8_CONSTANTCOLOR_CONSTANTALPHA_Msk 0xFFUL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_EXTSRC8_CONSTANTCOLOR_CONSTANTBLUE_Pos 8UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_EXTSRC8_CONSTANTCOLOR_CONSTANTBLUE_Msk 0xFF00UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_EXTSRC8_CONSTANTCOLOR_CONSTANTGREEN_Pos 16UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_EXTSRC8_CONSTANTCOLOR_CONSTANTGREEN_Msk 0xFF0000UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_EXTSRC8_CONSTANTCOLOR_CONSTANTRED_Pos 24UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_EXTSRC8_CONSTANTCOLOR_CONSTANTRED_Msk 0xFF000000UL
/* VIDEOSS_VIDEOIO_SUBIO_COMPENG_EXTSRC8.CONTROL */
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_EXTSRC8_CONTROL_CLIPWINDOWENABLE_Pos 0UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_EXTSRC8_CONTROL_CLIPWINDOWENABLE_Msk 0x1UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_EXTSRC8_CONTROL_RASTERMODE_Pos 4UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_EXTSRC8_CONTROL_RASTERMODE_Msk 0x10UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_EXTSRC8_CONTROL_YUV422UPSAMPLINGMODE_Pos 5UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_EXTSRC8_CONTROL_YUV422UPSAMPLINGMODE_Msk 0x20UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_EXTSRC8_CONTROL_YUVCONVERSIONMODE_Pos 6UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_EXTSRC8_CONTROL_YUVCONVERSIONMODE_Msk 0xC0UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_EXTSRC8_CONTROL_RGBALPHASRCENABLE_Pos 8UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_EXTSRC8_CONTROL_RGBALPHASRCENABLE_Msk 0x100UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_EXTSRC8_CONTROL_RGBALPHACONSTENABLE_Pos 9UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_EXTSRC8_CONTROL_RGBALPHACONSTENABLE_Msk 0x200UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_EXTSRC8_CONTROL_RGBALPHATRANSENABLE_Pos 10UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_EXTSRC8_CONTROL_RGBALPHATRANSENABLE_Msk 0x400UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_EXTSRC8_CONTROL_PREMULCONSTRGB_Pos 11UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_EXTSRC8_CONTROL_PREMULCONSTRGB_Msk 0x800UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_EXTSRC8_CONTROL_ALPHASRCENABLE_Pos 12UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_EXTSRC8_CONTROL_ALPHASRCENABLE_Msk 0x1000UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_EXTSRC8_CONTROL_ALPHACONSTENABLE_Pos 13UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_EXTSRC8_CONTROL_ALPHACONSTENABLE_Msk 0x2000UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_EXTSRC8_CONTROL_ALPHATRANSENABLE_Pos 14UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_EXTSRC8_CONTROL_ALPHATRANSENABLE_Msk 0x4000UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_EXTSRC8_CONTROL_GAMMAREMOVEENABLE_Pos 16UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_EXTSRC8_CONTROL_GAMMAREMOVEENABLE_Msk 0x10000UL
/* VIDEOSS_VIDEOIO_SUBIO_COMPENG_EXTSRC8.CONTROLTRIGGER */
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_EXTSRC8_CONTROLTRIGGER_SHDTOKGEN_Pos 0UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_EXTSRC8_CONTROLTRIGGER_SHDTOKGEN_Msk 0x1UL
/* VIDEOSS_VIDEOIO_SUBIO_COMPENG_EXTSRC8.START */
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_EXTSRC8_START_START_Pos 0UL
#define VIDEOSS_VIDEOIO_SUBIO_COMPENG_EXTSRC8_START_START_Msk 0x1UL


/* VIDEOSS_VIDEOIO_DISENG0_DISENGCFG0.CTL */
#define VIDEOSS_VIDEOIO_DISENG0_DISENGCFG0_CTL_DSPCLKDIVIDE_Pos 0UL
#define VIDEOSS_VIDEOIO_DISENG0_DISENGCFG0_CTL_DSPCLKDIVIDE_Msk 0x1UL
/* VIDEOSS_VIDEOIO_DISENG0_DISENGCFG0.POLARITYCTRL */
#define VIDEOSS_VIDEOIO_DISENG0_DISENGCFG0_POLARITYCTRL_POLHS_Pos 0UL
#define VIDEOSS_VIDEOIO_DISENG0_DISENGCFG0_POLARITYCTRL_POLHS_Msk 0x1UL
#define VIDEOSS_VIDEOIO_DISENG0_DISENGCFG0_POLARITYCTRL_POLVS_Pos 1UL
#define VIDEOSS_VIDEOIO_DISENG0_DISENGCFG0_POLARITYCTRL_POLVS_Msk 0x2UL
#define VIDEOSS_VIDEOIO_DISENG0_DISENGCFG0_POLARITYCTRL_POLEN_Pos 2UL
#define VIDEOSS_VIDEOIO_DISENG0_DISENGCFG0_POLARITYCTRL_POLEN_Msk 0x4UL
#define VIDEOSS_VIDEOIO_DISENG0_DISENGCFG0_POLARITYCTRL_PIXINV_Pos 3UL
#define VIDEOSS_VIDEOIO_DISENG0_DISENGCFG0_POLARITYCTRL_PIXINV_Msk 0x8UL
/* VIDEOSS_VIDEOIO_DISENG0_DISENGCFG0.SIGSELECT */
#define VIDEOSS_VIDEOIO_DISENG0_DISENGCFG0_SIGSELECT_SIG_SELECT_Pos 0UL
#define VIDEOSS_VIDEOIO_DISENG0_DISENGCFG0_SIGSELECT_SIG_SELECT_Msk 0x3UL
/* VIDEOSS_VIDEOIO_DISENG0_DISENGCFG0.DUMPSELECT */
#define VIDEOSS_VIDEOIO_DISENG0_DISENGCFG0_DUMPSELECT_DUMP_SELECT_Pos 8UL
#define VIDEOSS_VIDEOIO_DISENG0_DISENGCFG0_DUMPSELECT_DUMP_SELECT_Msk 0x300UL


/* VIDEOSS_VIDEOIO_DISENG0_SIG0.STATICCONTROL */
#define VIDEOSS_VIDEOIO_DISENG0_SIG0_STATICCONTROL_SHDEN_Pos 0UL
#define VIDEOSS_VIDEOIO_DISENG0_SIG0_STATICCONTROL_SHDEN_Msk 0x1UL
#define VIDEOSS_VIDEOIO_DISENG0_SIG0_STATICCONTROL_SHDLDSEL_Pos 4UL
#define VIDEOSS_VIDEOIO_DISENG0_SIG0_STATICCONTROL_SHDLDSEL_Msk 0x10UL
#define VIDEOSS_VIDEOIO_DISENG0_SIG0_STATICCONTROL_ERRTHRES_Pos 16UL
#define VIDEOSS_VIDEOIO_DISENG0_SIG0_STATICCONTROL_ERRTHRES_Msk 0xFF0000UL
#define VIDEOSS_VIDEOIO_DISENG0_SIG0_STATICCONTROL_ERRTHRESRESET_Pos 24UL
#define VIDEOSS_VIDEOIO_DISENG0_SIG0_STATICCONTROL_ERRTHRESRESET_Msk 0xFF000000UL
/* VIDEOSS_VIDEOIO_DISENG0_SIG0.PANICCOLOR */
#define VIDEOSS_VIDEOIO_DISENG0_SIG0_PANICCOLOR_PANICALPHA_Pos 7UL
#define VIDEOSS_VIDEOIO_DISENG0_SIG0_PANICCOLOR_PANICALPHA_Msk 0x80UL
#define VIDEOSS_VIDEOIO_DISENG0_SIG0_PANICCOLOR_PANICBLUE_Pos 8UL
#define VIDEOSS_VIDEOIO_DISENG0_SIG0_PANICCOLOR_PANICBLUE_Msk 0xFF00UL
#define VIDEOSS_VIDEOIO_DISENG0_SIG0_PANICCOLOR_PANICGREEN_Pos 16UL
#define VIDEOSS_VIDEOIO_DISENG0_SIG0_PANICCOLOR_PANICGREEN_Msk 0xFF0000UL
#define VIDEOSS_VIDEOIO_DISENG0_SIG0_PANICCOLOR_PANICRED_Pos 24UL
#define VIDEOSS_VIDEOIO_DISENG0_SIG0_PANICCOLOR_PANICRED_Msk 0xFF000000UL
/* VIDEOSS_VIDEOIO_DISENG0_SIG0.EVALCONTROL0 */
#define VIDEOSS_VIDEOIO_DISENG0_SIG0_EVALCONTROL0_ENEVALWIN0_Pos 0UL
#define VIDEOSS_VIDEOIO_DISENG0_SIG0_EVALCONTROL0_ENEVALWIN0_Msk 0x1UL
#define VIDEOSS_VIDEOIO_DISENG0_SIG0_EVALCONTROL0_ENCRC0_Pos 1UL
#define VIDEOSS_VIDEOIO_DISENG0_SIG0_EVALCONTROL0_ENCRC0_Msk 0x2UL
#define VIDEOSS_VIDEOIO_DISENG0_SIG0_EVALCONTROL0_ALPHAMASK0_Pos 8UL
#define VIDEOSS_VIDEOIO_DISENG0_SIG0_EVALCONTROL0_ALPHAMASK0_Msk 0x100UL
#define VIDEOSS_VIDEOIO_DISENG0_SIG0_EVALCONTROL0_ALPHAINV0_Pos 9UL
#define VIDEOSS_VIDEOIO_DISENG0_SIG0_EVALCONTROL0_ALPHAINV0_Msk 0x200UL
#define VIDEOSS_VIDEOIO_DISENG0_SIG0_EVALCONTROL0_ENLOCALPANIC0_Pos 16UL
#define VIDEOSS_VIDEOIO_DISENG0_SIG0_EVALCONTROL0_ENLOCALPANIC0_Msk 0x10000UL
#define VIDEOSS_VIDEOIO_DISENG0_SIG0_EVALCONTROL0_ENGLOBALPANIC0_Pos 17UL
#define VIDEOSS_VIDEOIO_DISENG0_SIG0_EVALCONTROL0_ENGLOBALPANIC0_Msk 0x20000UL
/* VIDEOSS_VIDEOIO_DISENG0_SIG0.EVALUPPERLEFT0 */
#define VIDEOSS_VIDEOIO_DISENG0_SIG0_EVALUPPERLEFT0_XEVALUPPERLEFT0_Pos 0UL
#define VIDEOSS_VIDEOIO_DISENG0_SIG0_EVALUPPERLEFT0_XEVALUPPERLEFT0_Msk 0x3FFFUL
#define VIDEOSS_VIDEOIO_DISENG0_SIG0_EVALUPPERLEFT0_YEVALUPPERLEFT0_Pos 16UL
#define VIDEOSS_VIDEOIO_DISENG0_SIG0_EVALUPPERLEFT0_YEVALUPPERLEFT0_Msk 0x3FFF0000UL
/* VIDEOSS_VIDEOIO_DISENG0_SIG0.EVALLOWERRIGHT0 */
#define VIDEOSS_VIDEOIO_DISENG0_SIG0_EVALLOWERRIGHT0_XEVALLOWERRIGHT0_Pos 0UL
#define VIDEOSS_VIDEOIO_DISENG0_SIG0_EVALLOWERRIGHT0_XEVALLOWERRIGHT0_Msk 0x3FFFUL
#define VIDEOSS_VIDEOIO_DISENG0_SIG0_EVALLOWERRIGHT0_YEVALLOWERRIGHT0_Pos 16UL
#define VIDEOSS_VIDEOIO_DISENG0_SIG0_EVALLOWERRIGHT0_YEVALLOWERRIGHT0_Msk 0x3FFF0000UL
/* VIDEOSS_VIDEOIO_DISENG0_SIG0.SIGCRCREDREF0 */
#define VIDEOSS_VIDEOIO_DISENG0_SIG0_SIGCRCREDREF0_SIGCRCREDREF0_Pos 0UL
#define VIDEOSS_VIDEOIO_DISENG0_SIG0_SIGCRCREDREF0_SIGCRCREDREF0_Msk 0xFFFFFFFFUL
/* VIDEOSS_VIDEOIO_DISENG0_SIG0.SIGCRCGREENREF0 */
#define VIDEOSS_VIDEOIO_DISENG0_SIG0_SIGCRCGREENREF0_SIGCRCGREENREF0_Pos 0UL
#define VIDEOSS_VIDEOIO_DISENG0_SIG0_SIGCRCGREENREF0_SIGCRCGREENREF0_Msk 0xFFFFFFFFUL
/* VIDEOSS_VIDEOIO_DISENG0_SIG0.SIGCRCBLUEREF0 */
#define VIDEOSS_VIDEOIO_DISENG0_SIG0_SIGCRCBLUEREF0_SIGCRCBLUEREF0_Pos 0UL
#define VIDEOSS_VIDEOIO_DISENG0_SIG0_SIGCRCBLUEREF0_SIGCRCBLUEREF0_Msk 0xFFFFFFFFUL
/* VIDEOSS_VIDEOIO_DISENG0_SIG0.SIGCRCRED0 */
#define VIDEOSS_VIDEOIO_DISENG0_SIG0_SIGCRCRED0_SIGCRCRED0_Pos 0UL
#define VIDEOSS_VIDEOIO_DISENG0_SIG0_SIGCRCRED0_SIGCRCRED0_Msk 0xFFFFFFFFUL
/* VIDEOSS_VIDEOIO_DISENG0_SIG0.SIGCRCGREEN0 */
#define VIDEOSS_VIDEOIO_DISENG0_SIG0_SIGCRCGREEN0_SIGCRCGREEN0_Pos 0UL
#define VIDEOSS_VIDEOIO_DISENG0_SIG0_SIGCRCGREEN0_SIGCRCGREEN0_Msk 0xFFFFFFFFUL
/* VIDEOSS_VIDEOIO_DISENG0_SIG0.SIGCRCBLUE0 */
#define VIDEOSS_VIDEOIO_DISENG0_SIG0_SIGCRCBLUE0_SIGCRCBLUE0_Pos 0UL
#define VIDEOSS_VIDEOIO_DISENG0_SIG0_SIGCRCBLUE0_SIGCRCBLUE0_Msk 0xFFFFFFFFUL
/* VIDEOSS_VIDEOIO_DISENG0_SIG0.EVALCONTROL1 */
#define VIDEOSS_VIDEOIO_DISENG0_SIG0_EVALCONTROL1_ENEVALWIN1_Pos 0UL
#define VIDEOSS_VIDEOIO_DISENG0_SIG0_EVALCONTROL1_ENEVALWIN1_Msk 0x1UL
#define VIDEOSS_VIDEOIO_DISENG0_SIG0_EVALCONTROL1_ENCRC1_Pos 1UL
#define VIDEOSS_VIDEOIO_DISENG0_SIG0_EVALCONTROL1_ENCRC1_Msk 0x2UL
#define VIDEOSS_VIDEOIO_DISENG0_SIG0_EVALCONTROL1_ALPHAMASK1_Pos 8UL
#define VIDEOSS_VIDEOIO_DISENG0_SIG0_EVALCONTROL1_ALPHAMASK1_Msk 0x100UL
#define VIDEOSS_VIDEOIO_DISENG0_SIG0_EVALCONTROL1_ALPHAINV1_Pos 9UL
#define VIDEOSS_VIDEOIO_DISENG0_SIG0_EVALCONTROL1_ALPHAINV1_Msk 0x200UL
#define VIDEOSS_VIDEOIO_DISENG0_SIG0_EVALCONTROL1_ENLOCALPANIC1_Pos 16UL
#define VIDEOSS_VIDEOIO_DISENG0_SIG0_EVALCONTROL1_ENLOCALPANIC1_Msk 0x10000UL
#define VIDEOSS_VIDEOIO_DISENG0_SIG0_EVALCONTROL1_ENGLOBALPANIC1_Pos 17UL
#define VIDEOSS_VIDEOIO_DISENG0_SIG0_EVALCONTROL1_ENGLOBALPANIC1_Msk 0x20000UL
/* VIDEOSS_VIDEOIO_DISENG0_SIG0.EVALUPPERLEFT1 */
#define VIDEOSS_VIDEOIO_DISENG0_SIG0_EVALUPPERLEFT1_XEVALUPPERLEFT1_Pos 0UL
#define VIDEOSS_VIDEOIO_DISENG0_SIG0_EVALUPPERLEFT1_XEVALUPPERLEFT1_Msk 0x3FFFUL
#define VIDEOSS_VIDEOIO_DISENG0_SIG0_EVALUPPERLEFT1_YEVALUPPERLEFT1_Pos 16UL
#define VIDEOSS_VIDEOIO_DISENG0_SIG0_EVALUPPERLEFT1_YEVALUPPERLEFT1_Msk 0x3FFF0000UL
/* VIDEOSS_VIDEOIO_DISENG0_SIG0.EVALLOWERRIGHT1 */
#define VIDEOSS_VIDEOIO_DISENG0_SIG0_EVALLOWERRIGHT1_XEVALLOWERRIGHT1_Pos 0UL
#define VIDEOSS_VIDEOIO_DISENG0_SIG0_EVALLOWERRIGHT1_XEVALLOWERRIGHT1_Msk 0x3FFFUL
#define VIDEOSS_VIDEOIO_DISENG0_SIG0_EVALLOWERRIGHT1_YEVALLOWERRIGHT1_Pos 16UL
#define VIDEOSS_VIDEOIO_DISENG0_SIG0_EVALLOWERRIGHT1_YEVALLOWERRIGHT1_Msk 0x3FFF0000UL
/* VIDEOSS_VIDEOIO_DISENG0_SIG0.SIGCRCREDREF1 */
#define VIDEOSS_VIDEOIO_DISENG0_SIG0_SIGCRCREDREF1_SIGCRCREDREF1_Pos 0UL
#define VIDEOSS_VIDEOIO_DISENG0_SIG0_SIGCRCREDREF1_SIGCRCREDREF1_Msk 0xFFFFFFFFUL
/* VIDEOSS_VIDEOIO_DISENG0_SIG0.SIGCRCGREENREF1 */
#define VIDEOSS_VIDEOIO_DISENG0_SIG0_SIGCRCGREENREF1_SIGCRCGREENREF1_Pos 0UL
#define VIDEOSS_VIDEOIO_DISENG0_SIG0_SIGCRCGREENREF1_SIGCRCGREENREF1_Msk 0xFFFFFFFFUL
/* VIDEOSS_VIDEOIO_DISENG0_SIG0.SIGCRCBLUEREF1 */
#define VIDEOSS_VIDEOIO_DISENG0_SIG0_SIGCRCBLUEREF1_SIGCRCBLUEREF1_Pos 0UL
#define VIDEOSS_VIDEOIO_DISENG0_SIG0_SIGCRCBLUEREF1_SIGCRCBLUEREF1_Msk 0xFFFFFFFFUL
/* VIDEOSS_VIDEOIO_DISENG0_SIG0.SIGCRCRED1 */
#define VIDEOSS_VIDEOIO_DISENG0_SIG0_SIGCRCRED1_SIGCRCRED1_Pos 0UL
#define VIDEOSS_VIDEOIO_DISENG0_SIG0_SIGCRCRED1_SIGCRCRED1_Msk 0xFFFFFFFFUL
/* VIDEOSS_VIDEOIO_DISENG0_SIG0.SIGCRCGREEN1 */
#define VIDEOSS_VIDEOIO_DISENG0_SIG0_SIGCRCGREEN1_SIGCRCGREEN1_Pos 0UL
#define VIDEOSS_VIDEOIO_DISENG0_SIG0_SIGCRCGREEN1_SIGCRCGREEN1_Msk 0xFFFFFFFFUL
/* VIDEOSS_VIDEOIO_DISENG0_SIG0.SIGCRCBLUE1 */
#define VIDEOSS_VIDEOIO_DISENG0_SIG0_SIGCRCBLUE1_SIGCRCBLUE1_Pos 0UL
#define VIDEOSS_VIDEOIO_DISENG0_SIG0_SIGCRCBLUE1_SIGCRCBLUE1_Msk 0xFFFFFFFFUL
/* VIDEOSS_VIDEOIO_DISENG0_SIG0.EVALCONTROL2 */
#define VIDEOSS_VIDEOIO_DISENG0_SIG0_EVALCONTROL2_ENEVALWIN2_Pos 0UL
#define VIDEOSS_VIDEOIO_DISENG0_SIG0_EVALCONTROL2_ENEVALWIN2_Msk 0x1UL
#define VIDEOSS_VIDEOIO_DISENG0_SIG0_EVALCONTROL2_ENCRC2_Pos 1UL
#define VIDEOSS_VIDEOIO_DISENG0_SIG0_EVALCONTROL2_ENCRC2_Msk 0x2UL
#define VIDEOSS_VIDEOIO_DISENG0_SIG0_EVALCONTROL2_ALPHAMASK2_Pos 8UL
#define VIDEOSS_VIDEOIO_DISENG0_SIG0_EVALCONTROL2_ALPHAMASK2_Msk 0x100UL
#define VIDEOSS_VIDEOIO_DISENG0_SIG0_EVALCONTROL2_ALPHAINV2_Pos 9UL
#define VIDEOSS_VIDEOIO_DISENG0_SIG0_EVALCONTROL2_ALPHAINV2_Msk 0x200UL
#define VIDEOSS_VIDEOIO_DISENG0_SIG0_EVALCONTROL2_ENLOCALPANIC2_Pos 16UL
#define VIDEOSS_VIDEOIO_DISENG0_SIG0_EVALCONTROL2_ENLOCALPANIC2_Msk 0x10000UL
#define VIDEOSS_VIDEOIO_DISENG0_SIG0_EVALCONTROL2_ENGLOBALPANIC2_Pos 17UL
#define VIDEOSS_VIDEOIO_DISENG0_SIG0_EVALCONTROL2_ENGLOBALPANIC2_Msk 0x20000UL
/* VIDEOSS_VIDEOIO_DISENG0_SIG0.EVALUPPERLEFT2 */
#define VIDEOSS_VIDEOIO_DISENG0_SIG0_EVALUPPERLEFT2_XEVALUPPERLEFT2_Pos 0UL
#define VIDEOSS_VIDEOIO_DISENG0_SIG0_EVALUPPERLEFT2_XEVALUPPERLEFT2_Msk 0x3FFFUL
#define VIDEOSS_VIDEOIO_DISENG0_SIG0_EVALUPPERLEFT2_YEVALUPPERLEFT2_Pos 16UL
#define VIDEOSS_VIDEOIO_DISENG0_SIG0_EVALUPPERLEFT2_YEVALUPPERLEFT2_Msk 0x3FFF0000UL
/* VIDEOSS_VIDEOIO_DISENG0_SIG0.EVALLOWERRIGHT2 */
#define VIDEOSS_VIDEOIO_DISENG0_SIG0_EVALLOWERRIGHT2_XEVALLOWERRIGHT2_Pos 0UL
#define VIDEOSS_VIDEOIO_DISENG0_SIG0_EVALLOWERRIGHT2_XEVALLOWERRIGHT2_Msk 0x3FFFUL
#define VIDEOSS_VIDEOIO_DISENG0_SIG0_EVALLOWERRIGHT2_YEVALLOWERRIGHT2_Pos 16UL
#define VIDEOSS_VIDEOIO_DISENG0_SIG0_EVALLOWERRIGHT2_YEVALLOWERRIGHT2_Msk 0x3FFF0000UL
/* VIDEOSS_VIDEOIO_DISENG0_SIG0.SIGCRCREDREF2 */
#define VIDEOSS_VIDEOIO_DISENG0_SIG0_SIGCRCREDREF2_SIGCRCREDREF2_Pos 0UL
#define VIDEOSS_VIDEOIO_DISENG0_SIG0_SIGCRCREDREF2_SIGCRCREDREF2_Msk 0xFFFFFFFFUL
/* VIDEOSS_VIDEOIO_DISENG0_SIG0.SIGCRCGREENREF2 */
#define VIDEOSS_VIDEOIO_DISENG0_SIG0_SIGCRCGREENREF2_SIGCRCGREENREF2_Pos 0UL
#define VIDEOSS_VIDEOIO_DISENG0_SIG0_SIGCRCGREENREF2_SIGCRCGREENREF2_Msk 0xFFFFFFFFUL
/* VIDEOSS_VIDEOIO_DISENG0_SIG0.SIGCRCBLUEREF2 */
#define VIDEOSS_VIDEOIO_DISENG0_SIG0_SIGCRCBLUEREF2_SIGCRCBLUEREF2_Pos 0UL
#define VIDEOSS_VIDEOIO_DISENG0_SIG0_SIGCRCBLUEREF2_SIGCRCBLUEREF2_Msk 0xFFFFFFFFUL
/* VIDEOSS_VIDEOIO_DISENG0_SIG0.SIGCRCRED2 */
#define VIDEOSS_VIDEOIO_DISENG0_SIG0_SIGCRCRED2_SIGCRCRED2_Pos 0UL
#define VIDEOSS_VIDEOIO_DISENG0_SIG0_SIGCRCRED2_SIGCRCRED2_Msk 0xFFFFFFFFUL
/* VIDEOSS_VIDEOIO_DISENG0_SIG0.SIGCRCGREEN2 */
#define VIDEOSS_VIDEOIO_DISENG0_SIG0_SIGCRCGREEN2_SIGCRCGREEN2_Pos 0UL
#define VIDEOSS_VIDEOIO_DISENG0_SIG0_SIGCRCGREEN2_SIGCRCGREEN2_Msk 0xFFFFFFFFUL
/* VIDEOSS_VIDEOIO_DISENG0_SIG0.SIGCRCBLUE2 */
#define VIDEOSS_VIDEOIO_DISENG0_SIG0_SIGCRCBLUE2_SIGCRCBLUE2_Pos 0UL
#define VIDEOSS_VIDEOIO_DISENG0_SIG0_SIGCRCBLUE2_SIGCRCBLUE2_Msk 0xFFFFFFFFUL
/* VIDEOSS_VIDEOIO_DISENG0_SIG0.EVALCONTROL3 */
#define VIDEOSS_VIDEOIO_DISENG0_SIG0_EVALCONTROL3_ENEVALWIN3_Pos 0UL
#define VIDEOSS_VIDEOIO_DISENG0_SIG0_EVALCONTROL3_ENEVALWIN3_Msk 0x1UL
#define VIDEOSS_VIDEOIO_DISENG0_SIG0_EVALCONTROL3_ENCRC3_Pos 1UL
#define VIDEOSS_VIDEOIO_DISENG0_SIG0_EVALCONTROL3_ENCRC3_Msk 0x2UL
#define VIDEOSS_VIDEOIO_DISENG0_SIG0_EVALCONTROL3_ALPHAMASK3_Pos 8UL
#define VIDEOSS_VIDEOIO_DISENG0_SIG0_EVALCONTROL3_ALPHAMASK3_Msk 0x100UL
#define VIDEOSS_VIDEOIO_DISENG0_SIG0_EVALCONTROL3_ALPHAINV3_Pos 9UL
#define VIDEOSS_VIDEOIO_DISENG0_SIG0_EVALCONTROL3_ALPHAINV3_Msk 0x200UL
#define VIDEOSS_VIDEOIO_DISENG0_SIG0_EVALCONTROL3_ENLOCALPANIC3_Pos 16UL
#define VIDEOSS_VIDEOIO_DISENG0_SIG0_EVALCONTROL3_ENLOCALPANIC3_Msk 0x10000UL
#define VIDEOSS_VIDEOIO_DISENG0_SIG0_EVALCONTROL3_ENGLOBALPANIC3_Pos 17UL
#define VIDEOSS_VIDEOIO_DISENG0_SIG0_EVALCONTROL3_ENGLOBALPANIC3_Msk 0x20000UL
/* VIDEOSS_VIDEOIO_DISENG0_SIG0.EVALUPPERLEFT3 */
#define VIDEOSS_VIDEOIO_DISENG0_SIG0_EVALUPPERLEFT3_XEVALUPPERLEFT3_Pos 0UL
#define VIDEOSS_VIDEOIO_DISENG0_SIG0_EVALUPPERLEFT3_XEVALUPPERLEFT3_Msk 0x3FFFUL
#define VIDEOSS_VIDEOIO_DISENG0_SIG0_EVALUPPERLEFT3_YEVALUPPERLEFT3_Pos 16UL
#define VIDEOSS_VIDEOIO_DISENG0_SIG0_EVALUPPERLEFT3_YEVALUPPERLEFT3_Msk 0x3FFF0000UL
/* VIDEOSS_VIDEOIO_DISENG0_SIG0.EVALLOWERRIGHT3 */
#define VIDEOSS_VIDEOIO_DISENG0_SIG0_EVALLOWERRIGHT3_XEVALLOWERRIGHT3_Pos 0UL
#define VIDEOSS_VIDEOIO_DISENG0_SIG0_EVALLOWERRIGHT3_XEVALLOWERRIGHT3_Msk 0x3FFFUL
#define VIDEOSS_VIDEOIO_DISENG0_SIG0_EVALLOWERRIGHT3_YEVALLOWERRIGHT3_Pos 16UL
#define VIDEOSS_VIDEOIO_DISENG0_SIG0_EVALLOWERRIGHT3_YEVALLOWERRIGHT3_Msk 0x3FFF0000UL
/* VIDEOSS_VIDEOIO_DISENG0_SIG0.SIGCRCREDREF3 */
#define VIDEOSS_VIDEOIO_DISENG0_SIG0_SIGCRCREDREF3_SIGCRCREDREF3_Pos 0UL
#define VIDEOSS_VIDEOIO_DISENG0_SIG0_SIGCRCREDREF3_SIGCRCREDREF3_Msk 0xFFFFFFFFUL
/* VIDEOSS_VIDEOIO_DISENG0_SIG0.SIGCRCGREENREF3 */
#define VIDEOSS_VIDEOIO_DISENG0_SIG0_SIGCRCGREENREF3_SIGCRCGREENREF3_Pos 0UL
#define VIDEOSS_VIDEOIO_DISENG0_SIG0_SIGCRCGREENREF3_SIGCRCGREENREF3_Msk 0xFFFFFFFFUL
/* VIDEOSS_VIDEOIO_DISENG0_SIG0.SIGCRCBLUEREF3 */
#define VIDEOSS_VIDEOIO_DISENG0_SIG0_SIGCRCBLUEREF3_SIGCRCBLUEREF3_Pos 0UL
#define VIDEOSS_VIDEOIO_DISENG0_SIG0_SIGCRCBLUEREF3_SIGCRCBLUEREF3_Msk 0xFFFFFFFFUL
/* VIDEOSS_VIDEOIO_DISENG0_SIG0.SIGCRCRED3 */
#define VIDEOSS_VIDEOIO_DISENG0_SIG0_SIGCRCRED3_SIGCRCRED3_Pos 0UL
#define VIDEOSS_VIDEOIO_DISENG0_SIG0_SIGCRCRED3_SIGCRCRED3_Msk 0xFFFFFFFFUL
/* VIDEOSS_VIDEOIO_DISENG0_SIG0.SIGCRCGREEN3 */
#define VIDEOSS_VIDEOIO_DISENG0_SIG0_SIGCRCGREEN3_SIGCRCGREEN3_Pos 0UL
#define VIDEOSS_VIDEOIO_DISENG0_SIG0_SIGCRCGREEN3_SIGCRCGREEN3_Msk 0xFFFFFFFFUL
/* VIDEOSS_VIDEOIO_DISENG0_SIG0.SIGCRCBLUE3 */
#define VIDEOSS_VIDEOIO_DISENG0_SIG0_SIGCRCBLUE3_SIGCRCBLUE3_Pos 0UL
#define VIDEOSS_VIDEOIO_DISENG0_SIG0_SIGCRCBLUE3_SIGCRCBLUE3_Msk 0xFFFFFFFFUL
/* VIDEOSS_VIDEOIO_DISENG0_SIG0.EVALCONTROL4 */
#define VIDEOSS_VIDEOIO_DISENG0_SIG0_EVALCONTROL4_ENEVALWIN4_Pos 0UL
#define VIDEOSS_VIDEOIO_DISENG0_SIG0_EVALCONTROL4_ENEVALWIN4_Msk 0x1UL
#define VIDEOSS_VIDEOIO_DISENG0_SIG0_EVALCONTROL4_ENCRC4_Pos 1UL
#define VIDEOSS_VIDEOIO_DISENG0_SIG0_EVALCONTROL4_ENCRC4_Msk 0x2UL
#define VIDEOSS_VIDEOIO_DISENG0_SIG0_EVALCONTROL4_ALPHAMASK4_Pos 8UL
#define VIDEOSS_VIDEOIO_DISENG0_SIG0_EVALCONTROL4_ALPHAMASK4_Msk 0x100UL
#define VIDEOSS_VIDEOIO_DISENG0_SIG0_EVALCONTROL4_ALPHAINV4_Pos 9UL
#define VIDEOSS_VIDEOIO_DISENG0_SIG0_EVALCONTROL4_ALPHAINV4_Msk 0x200UL
#define VIDEOSS_VIDEOIO_DISENG0_SIG0_EVALCONTROL4_ENLOCALPANIC4_Pos 16UL
#define VIDEOSS_VIDEOIO_DISENG0_SIG0_EVALCONTROL4_ENLOCALPANIC4_Msk 0x10000UL
#define VIDEOSS_VIDEOIO_DISENG0_SIG0_EVALCONTROL4_ENGLOBALPANIC4_Pos 17UL
#define VIDEOSS_VIDEOIO_DISENG0_SIG0_EVALCONTROL4_ENGLOBALPANIC4_Msk 0x20000UL
/* VIDEOSS_VIDEOIO_DISENG0_SIG0.EVALUPPERLEFT4 */
#define VIDEOSS_VIDEOIO_DISENG0_SIG0_EVALUPPERLEFT4_XEVALUPPERLEFT4_Pos 0UL
#define VIDEOSS_VIDEOIO_DISENG0_SIG0_EVALUPPERLEFT4_XEVALUPPERLEFT4_Msk 0x3FFFUL
#define VIDEOSS_VIDEOIO_DISENG0_SIG0_EVALUPPERLEFT4_YEVALUPPERLEFT4_Pos 16UL
#define VIDEOSS_VIDEOIO_DISENG0_SIG0_EVALUPPERLEFT4_YEVALUPPERLEFT4_Msk 0x3FFF0000UL
/* VIDEOSS_VIDEOIO_DISENG0_SIG0.EVALLOWERRIGHT4 */
#define VIDEOSS_VIDEOIO_DISENG0_SIG0_EVALLOWERRIGHT4_XEVALLOWERRIGHT4_Pos 0UL
#define VIDEOSS_VIDEOIO_DISENG0_SIG0_EVALLOWERRIGHT4_XEVALLOWERRIGHT4_Msk 0x3FFFUL
#define VIDEOSS_VIDEOIO_DISENG0_SIG0_EVALLOWERRIGHT4_YEVALLOWERRIGHT4_Pos 16UL
#define VIDEOSS_VIDEOIO_DISENG0_SIG0_EVALLOWERRIGHT4_YEVALLOWERRIGHT4_Msk 0x3FFF0000UL
/* VIDEOSS_VIDEOIO_DISENG0_SIG0.SIGCRCREDREF4 */
#define VIDEOSS_VIDEOIO_DISENG0_SIG0_SIGCRCREDREF4_SIGCRCREDREF4_Pos 0UL
#define VIDEOSS_VIDEOIO_DISENG0_SIG0_SIGCRCREDREF4_SIGCRCREDREF4_Msk 0xFFFFFFFFUL
/* VIDEOSS_VIDEOIO_DISENG0_SIG0.SIGCRCGREENREF4 */
#define VIDEOSS_VIDEOIO_DISENG0_SIG0_SIGCRCGREENREF4_SIGCRCGREENREF4_Pos 0UL
#define VIDEOSS_VIDEOIO_DISENG0_SIG0_SIGCRCGREENREF4_SIGCRCGREENREF4_Msk 0xFFFFFFFFUL
/* VIDEOSS_VIDEOIO_DISENG0_SIG0.SIGCRCBLUEREF4 */
#define VIDEOSS_VIDEOIO_DISENG0_SIG0_SIGCRCBLUEREF4_SIGCRCBLUEREF4_Pos 0UL
#define VIDEOSS_VIDEOIO_DISENG0_SIG0_SIGCRCBLUEREF4_SIGCRCBLUEREF4_Msk 0xFFFFFFFFUL
/* VIDEOSS_VIDEOIO_DISENG0_SIG0.SIGCRCRED4 */
#define VIDEOSS_VIDEOIO_DISENG0_SIG0_SIGCRCRED4_SIGCRCRED4_Pos 0UL
#define VIDEOSS_VIDEOIO_DISENG0_SIG0_SIGCRCRED4_SIGCRCRED4_Msk 0xFFFFFFFFUL
/* VIDEOSS_VIDEOIO_DISENG0_SIG0.SIGCRCGREEN4 */
#define VIDEOSS_VIDEOIO_DISENG0_SIG0_SIGCRCGREEN4_SIGCRCGREEN4_Pos 0UL
#define VIDEOSS_VIDEOIO_DISENG0_SIG0_SIGCRCGREEN4_SIGCRCGREEN4_Msk 0xFFFFFFFFUL
/* VIDEOSS_VIDEOIO_DISENG0_SIG0.SIGCRCBLUE4 */
#define VIDEOSS_VIDEOIO_DISENG0_SIG0_SIGCRCBLUE4_SIGCRCBLUE4_Pos 0UL
#define VIDEOSS_VIDEOIO_DISENG0_SIG0_SIGCRCBLUE4_SIGCRCBLUE4_Msk 0xFFFFFFFFUL
/* VIDEOSS_VIDEOIO_DISENG0_SIG0.EVALCONTROL5 */
#define VIDEOSS_VIDEOIO_DISENG0_SIG0_EVALCONTROL5_ENEVALWIN5_Pos 0UL
#define VIDEOSS_VIDEOIO_DISENG0_SIG0_EVALCONTROL5_ENEVALWIN5_Msk 0x1UL
#define VIDEOSS_VIDEOIO_DISENG0_SIG0_EVALCONTROL5_ENCRC5_Pos 1UL
#define VIDEOSS_VIDEOIO_DISENG0_SIG0_EVALCONTROL5_ENCRC5_Msk 0x2UL
#define VIDEOSS_VIDEOIO_DISENG0_SIG0_EVALCONTROL5_ALPHAMASK5_Pos 8UL
#define VIDEOSS_VIDEOIO_DISENG0_SIG0_EVALCONTROL5_ALPHAMASK5_Msk 0x100UL
#define VIDEOSS_VIDEOIO_DISENG0_SIG0_EVALCONTROL5_ALPHAINV5_Pos 9UL
#define VIDEOSS_VIDEOIO_DISENG0_SIG0_EVALCONTROL5_ALPHAINV5_Msk 0x200UL
#define VIDEOSS_VIDEOIO_DISENG0_SIG0_EVALCONTROL5_ENLOCALPANIC5_Pos 16UL
#define VIDEOSS_VIDEOIO_DISENG0_SIG0_EVALCONTROL5_ENLOCALPANIC5_Msk 0x10000UL
#define VIDEOSS_VIDEOIO_DISENG0_SIG0_EVALCONTROL5_ENGLOBALPANIC5_Pos 17UL
#define VIDEOSS_VIDEOIO_DISENG0_SIG0_EVALCONTROL5_ENGLOBALPANIC5_Msk 0x20000UL
/* VIDEOSS_VIDEOIO_DISENG0_SIG0.EVALUPPERLEFT5 */
#define VIDEOSS_VIDEOIO_DISENG0_SIG0_EVALUPPERLEFT5_XEVALUPPERLEFT5_Pos 0UL
#define VIDEOSS_VIDEOIO_DISENG0_SIG0_EVALUPPERLEFT5_XEVALUPPERLEFT5_Msk 0x3FFFUL
#define VIDEOSS_VIDEOIO_DISENG0_SIG0_EVALUPPERLEFT5_YEVALUPPERLEFT5_Pos 16UL
#define VIDEOSS_VIDEOIO_DISENG0_SIG0_EVALUPPERLEFT5_YEVALUPPERLEFT5_Msk 0x3FFF0000UL
/* VIDEOSS_VIDEOIO_DISENG0_SIG0.EVALLOWERRIGHT5 */
#define VIDEOSS_VIDEOIO_DISENG0_SIG0_EVALLOWERRIGHT5_XEVALLOWERRIGHT5_Pos 0UL
#define VIDEOSS_VIDEOIO_DISENG0_SIG0_EVALLOWERRIGHT5_XEVALLOWERRIGHT5_Msk 0x3FFFUL
#define VIDEOSS_VIDEOIO_DISENG0_SIG0_EVALLOWERRIGHT5_YEVALLOWERRIGHT5_Pos 16UL
#define VIDEOSS_VIDEOIO_DISENG0_SIG0_EVALLOWERRIGHT5_YEVALLOWERRIGHT5_Msk 0x3FFF0000UL
/* VIDEOSS_VIDEOIO_DISENG0_SIG0.SIGCRCREDREF5 */
#define VIDEOSS_VIDEOIO_DISENG0_SIG0_SIGCRCREDREF5_SIGCRCREDREF5_Pos 0UL
#define VIDEOSS_VIDEOIO_DISENG0_SIG0_SIGCRCREDREF5_SIGCRCREDREF5_Msk 0xFFFFFFFFUL
/* VIDEOSS_VIDEOIO_DISENG0_SIG0.SIGCRCGREENREF5 */
#define VIDEOSS_VIDEOIO_DISENG0_SIG0_SIGCRCGREENREF5_SIGCRCGREENREF5_Pos 0UL
#define VIDEOSS_VIDEOIO_DISENG0_SIG0_SIGCRCGREENREF5_SIGCRCGREENREF5_Msk 0xFFFFFFFFUL
/* VIDEOSS_VIDEOIO_DISENG0_SIG0.SIGCRCBLUEREF5 */
#define VIDEOSS_VIDEOIO_DISENG0_SIG0_SIGCRCBLUEREF5_SIGCRCBLUEREF5_Pos 0UL
#define VIDEOSS_VIDEOIO_DISENG0_SIG0_SIGCRCBLUEREF5_SIGCRCBLUEREF5_Msk 0xFFFFFFFFUL
/* VIDEOSS_VIDEOIO_DISENG0_SIG0.SIGCRCRED5 */
#define VIDEOSS_VIDEOIO_DISENG0_SIG0_SIGCRCRED5_SIGCRCRED5_Pos 0UL
#define VIDEOSS_VIDEOIO_DISENG0_SIG0_SIGCRCRED5_SIGCRCRED5_Msk 0xFFFFFFFFUL
/* VIDEOSS_VIDEOIO_DISENG0_SIG0.SIGCRCGREEN5 */
#define VIDEOSS_VIDEOIO_DISENG0_SIG0_SIGCRCGREEN5_SIGCRCGREEN5_Pos 0UL
#define VIDEOSS_VIDEOIO_DISENG0_SIG0_SIGCRCGREEN5_SIGCRCGREEN5_Msk 0xFFFFFFFFUL
/* VIDEOSS_VIDEOIO_DISENG0_SIG0.SIGCRCBLUE5 */
#define VIDEOSS_VIDEOIO_DISENG0_SIG0_SIGCRCBLUE5_SIGCRCBLUE5_Pos 0UL
#define VIDEOSS_VIDEOIO_DISENG0_SIG0_SIGCRCBLUE5_SIGCRCBLUE5_Msk 0xFFFFFFFFUL
/* VIDEOSS_VIDEOIO_DISENG0_SIG0.EVALCONTROL6 */
#define VIDEOSS_VIDEOIO_DISENG0_SIG0_EVALCONTROL6_ENEVALWIN6_Pos 0UL
#define VIDEOSS_VIDEOIO_DISENG0_SIG0_EVALCONTROL6_ENEVALWIN6_Msk 0x1UL
#define VIDEOSS_VIDEOIO_DISENG0_SIG0_EVALCONTROL6_ENCRC6_Pos 1UL
#define VIDEOSS_VIDEOIO_DISENG0_SIG0_EVALCONTROL6_ENCRC6_Msk 0x2UL
#define VIDEOSS_VIDEOIO_DISENG0_SIG0_EVALCONTROL6_ALPHAMASK6_Pos 8UL
#define VIDEOSS_VIDEOIO_DISENG0_SIG0_EVALCONTROL6_ALPHAMASK6_Msk 0x100UL
#define VIDEOSS_VIDEOIO_DISENG0_SIG0_EVALCONTROL6_ALPHAINV6_Pos 9UL
#define VIDEOSS_VIDEOIO_DISENG0_SIG0_EVALCONTROL6_ALPHAINV6_Msk 0x200UL
#define VIDEOSS_VIDEOIO_DISENG0_SIG0_EVALCONTROL6_ENLOCALPANIC6_Pos 16UL
#define VIDEOSS_VIDEOIO_DISENG0_SIG0_EVALCONTROL6_ENLOCALPANIC6_Msk 0x10000UL
#define VIDEOSS_VIDEOIO_DISENG0_SIG0_EVALCONTROL6_ENGLOBALPANIC6_Pos 17UL
#define VIDEOSS_VIDEOIO_DISENG0_SIG0_EVALCONTROL6_ENGLOBALPANIC6_Msk 0x20000UL
/* VIDEOSS_VIDEOIO_DISENG0_SIG0.EVALUPPERLEFT6 */
#define VIDEOSS_VIDEOIO_DISENG0_SIG0_EVALUPPERLEFT6_XEVALUPPERLEFT6_Pos 0UL
#define VIDEOSS_VIDEOIO_DISENG0_SIG0_EVALUPPERLEFT6_XEVALUPPERLEFT6_Msk 0x3FFFUL
#define VIDEOSS_VIDEOIO_DISENG0_SIG0_EVALUPPERLEFT6_YEVALUPPERLEFT6_Pos 16UL
#define VIDEOSS_VIDEOIO_DISENG0_SIG0_EVALUPPERLEFT6_YEVALUPPERLEFT6_Msk 0x3FFF0000UL
/* VIDEOSS_VIDEOIO_DISENG0_SIG0.EVALLOWERRIGHT6 */
#define VIDEOSS_VIDEOIO_DISENG0_SIG0_EVALLOWERRIGHT6_XEVALLOWERRIGHT6_Pos 0UL
#define VIDEOSS_VIDEOIO_DISENG0_SIG0_EVALLOWERRIGHT6_XEVALLOWERRIGHT6_Msk 0x3FFFUL
#define VIDEOSS_VIDEOIO_DISENG0_SIG0_EVALLOWERRIGHT6_YEVALLOWERRIGHT6_Pos 16UL
#define VIDEOSS_VIDEOIO_DISENG0_SIG0_EVALLOWERRIGHT6_YEVALLOWERRIGHT6_Msk 0x3FFF0000UL
/* VIDEOSS_VIDEOIO_DISENG0_SIG0.SIGCRCREDREF6 */
#define VIDEOSS_VIDEOIO_DISENG0_SIG0_SIGCRCREDREF6_SIGCRCREDREF6_Pos 0UL
#define VIDEOSS_VIDEOIO_DISENG0_SIG0_SIGCRCREDREF6_SIGCRCREDREF6_Msk 0xFFFFFFFFUL
/* VIDEOSS_VIDEOIO_DISENG0_SIG0.SIGCRCGREENREF6 */
#define VIDEOSS_VIDEOIO_DISENG0_SIG0_SIGCRCGREENREF6_SIGCRCGREENREF6_Pos 0UL
#define VIDEOSS_VIDEOIO_DISENG0_SIG0_SIGCRCGREENREF6_SIGCRCGREENREF6_Msk 0xFFFFFFFFUL
/* VIDEOSS_VIDEOIO_DISENG0_SIG0.SIGCRCBLUEREF6 */
#define VIDEOSS_VIDEOIO_DISENG0_SIG0_SIGCRCBLUEREF6_SIGCRCBLUEREF6_Pos 0UL
#define VIDEOSS_VIDEOIO_DISENG0_SIG0_SIGCRCBLUEREF6_SIGCRCBLUEREF6_Msk 0xFFFFFFFFUL
/* VIDEOSS_VIDEOIO_DISENG0_SIG0.SIGCRCRED6 */
#define VIDEOSS_VIDEOIO_DISENG0_SIG0_SIGCRCRED6_SIGCRCRED6_Pos 0UL
#define VIDEOSS_VIDEOIO_DISENG0_SIG0_SIGCRCRED6_SIGCRCRED6_Msk 0xFFFFFFFFUL
/* VIDEOSS_VIDEOIO_DISENG0_SIG0.SIGCRCGREEN6 */
#define VIDEOSS_VIDEOIO_DISENG0_SIG0_SIGCRCGREEN6_SIGCRCGREEN6_Pos 0UL
#define VIDEOSS_VIDEOIO_DISENG0_SIG0_SIGCRCGREEN6_SIGCRCGREEN6_Msk 0xFFFFFFFFUL
/* VIDEOSS_VIDEOIO_DISENG0_SIG0.SIGCRCBLUE6 */
#define VIDEOSS_VIDEOIO_DISENG0_SIG0_SIGCRCBLUE6_SIGCRCBLUE6_Pos 0UL
#define VIDEOSS_VIDEOIO_DISENG0_SIG0_SIGCRCBLUE6_SIGCRCBLUE6_Msk 0xFFFFFFFFUL
/* VIDEOSS_VIDEOIO_DISENG0_SIG0.EVALCONTROL7 */
#define VIDEOSS_VIDEOIO_DISENG0_SIG0_EVALCONTROL7_ENEVALWIN7_Pos 0UL
#define VIDEOSS_VIDEOIO_DISENG0_SIG0_EVALCONTROL7_ENEVALWIN7_Msk 0x1UL
#define VIDEOSS_VIDEOIO_DISENG0_SIG0_EVALCONTROL7_ENCRC7_Pos 1UL
#define VIDEOSS_VIDEOIO_DISENG0_SIG0_EVALCONTROL7_ENCRC7_Msk 0x2UL
#define VIDEOSS_VIDEOIO_DISENG0_SIG0_EVALCONTROL7_ALPHAMASK7_Pos 8UL
#define VIDEOSS_VIDEOIO_DISENG0_SIG0_EVALCONTROL7_ALPHAMASK7_Msk 0x100UL
#define VIDEOSS_VIDEOIO_DISENG0_SIG0_EVALCONTROL7_ALPHAINV7_Pos 9UL
#define VIDEOSS_VIDEOIO_DISENG0_SIG0_EVALCONTROL7_ALPHAINV7_Msk 0x200UL
#define VIDEOSS_VIDEOIO_DISENG0_SIG0_EVALCONTROL7_ENLOCALPANIC7_Pos 16UL
#define VIDEOSS_VIDEOIO_DISENG0_SIG0_EVALCONTROL7_ENLOCALPANIC7_Msk 0x10000UL
#define VIDEOSS_VIDEOIO_DISENG0_SIG0_EVALCONTROL7_ENGLOBALPANIC7_Pos 17UL
#define VIDEOSS_VIDEOIO_DISENG0_SIG0_EVALCONTROL7_ENGLOBALPANIC7_Msk 0x20000UL
/* VIDEOSS_VIDEOIO_DISENG0_SIG0.EVALUPPERLEFT7 */
#define VIDEOSS_VIDEOIO_DISENG0_SIG0_EVALUPPERLEFT7_XEVALUPPERLEFT7_Pos 0UL
#define VIDEOSS_VIDEOIO_DISENG0_SIG0_EVALUPPERLEFT7_XEVALUPPERLEFT7_Msk 0x3FFFUL
#define VIDEOSS_VIDEOIO_DISENG0_SIG0_EVALUPPERLEFT7_YEVALUPPERLEFT7_Pos 16UL
#define VIDEOSS_VIDEOIO_DISENG0_SIG0_EVALUPPERLEFT7_YEVALUPPERLEFT7_Msk 0x3FFF0000UL
/* VIDEOSS_VIDEOIO_DISENG0_SIG0.EVALLOWERRIGHT7 */
#define VIDEOSS_VIDEOIO_DISENG0_SIG0_EVALLOWERRIGHT7_XEVALLOWERRIGHT7_Pos 0UL
#define VIDEOSS_VIDEOIO_DISENG0_SIG0_EVALLOWERRIGHT7_XEVALLOWERRIGHT7_Msk 0x3FFFUL
#define VIDEOSS_VIDEOIO_DISENG0_SIG0_EVALLOWERRIGHT7_YEVALLOWERRIGHT7_Pos 16UL
#define VIDEOSS_VIDEOIO_DISENG0_SIG0_EVALLOWERRIGHT7_YEVALLOWERRIGHT7_Msk 0x3FFF0000UL
/* VIDEOSS_VIDEOIO_DISENG0_SIG0.SIGCRCREDREF7 */
#define VIDEOSS_VIDEOIO_DISENG0_SIG0_SIGCRCREDREF7_SIGCRCREDREF7_Pos 0UL
#define VIDEOSS_VIDEOIO_DISENG0_SIG0_SIGCRCREDREF7_SIGCRCREDREF7_Msk 0xFFFFFFFFUL
/* VIDEOSS_VIDEOIO_DISENG0_SIG0.SIGCRCGREENREF7 */
#define VIDEOSS_VIDEOIO_DISENG0_SIG0_SIGCRCGREENREF7_SIGCRCGREENREF7_Pos 0UL
#define VIDEOSS_VIDEOIO_DISENG0_SIG0_SIGCRCGREENREF7_SIGCRCGREENREF7_Msk 0xFFFFFFFFUL
/* VIDEOSS_VIDEOIO_DISENG0_SIG0.SIGCRCBLUEREF7 */
#define VIDEOSS_VIDEOIO_DISENG0_SIG0_SIGCRCBLUEREF7_SIGCRCBLUEREF7_Pos 0UL
#define VIDEOSS_VIDEOIO_DISENG0_SIG0_SIGCRCBLUEREF7_SIGCRCBLUEREF7_Msk 0xFFFFFFFFUL
/* VIDEOSS_VIDEOIO_DISENG0_SIG0.SIGCRCRED7 */
#define VIDEOSS_VIDEOIO_DISENG0_SIG0_SIGCRCRED7_SIGCRCRED7_Pos 0UL
#define VIDEOSS_VIDEOIO_DISENG0_SIG0_SIGCRCRED7_SIGCRCRED7_Msk 0xFFFFFFFFUL
/* VIDEOSS_VIDEOIO_DISENG0_SIG0.SIGCRCGREEN7 */
#define VIDEOSS_VIDEOIO_DISENG0_SIG0_SIGCRCGREEN7_SIGCRCGREEN7_Pos 0UL
#define VIDEOSS_VIDEOIO_DISENG0_SIG0_SIGCRCGREEN7_SIGCRCGREEN7_Msk 0xFFFFFFFFUL
/* VIDEOSS_VIDEOIO_DISENG0_SIG0.SIGCRCBLUE7 */
#define VIDEOSS_VIDEOIO_DISENG0_SIG0_SIGCRCBLUE7_SIGCRCBLUE7_Pos 0UL
#define VIDEOSS_VIDEOIO_DISENG0_SIG0_SIGCRCBLUE7_SIGCRCBLUE7_Msk 0xFFFFFFFFUL
/* VIDEOSS_VIDEOIO_DISENG0_SIG0.SHADOWLOAD */
#define VIDEOSS_VIDEOIO_DISENG0_SIG0_SHADOWLOAD_SHDLDREQ_Pos 0UL
#define VIDEOSS_VIDEOIO_DISENG0_SIG0_SHADOWLOAD_SHDLDREQ_Msk 0xFFUL
/* VIDEOSS_VIDEOIO_DISENG0_SIG0.CONTINUOUSMODE */
#define VIDEOSS_VIDEOIO_DISENG0_SIG0_CONTINUOUSMODE_ENCONT_Pos 0UL
#define VIDEOSS_VIDEOIO_DISENG0_SIG0_CONTINUOUSMODE_ENCONT_Msk 0x1UL
/* VIDEOSS_VIDEOIO_DISENG0_SIG0.SOFTWAREKICK */
#define VIDEOSS_VIDEOIO_DISENG0_SIG0_SOFTWAREKICK_KICK_Pos 0UL
#define VIDEOSS_VIDEOIO_DISENG0_SIG0_SOFTWAREKICK_KICK_Msk 0x1UL
/* VIDEOSS_VIDEOIO_DISENG0_SIG0.STATUS */
#define VIDEOSS_VIDEOIO_DISENG0_SIG0_STATUS_STSSIGERROR_Pos 0UL
#define VIDEOSS_VIDEOIO_DISENG0_SIG0_STATUS_STSSIGERROR_Msk 0xFFUL
#define VIDEOSS_VIDEOIO_DISENG0_SIG0_STATUS_STSSIGVALID_Pos 16UL
#define VIDEOSS_VIDEOIO_DISENG0_SIG0_STATUS_STSSIGVALID_Msk 0x10000UL
#define VIDEOSS_VIDEOIO_DISENG0_SIG0_STATUS_STSSIGIDLE_Pos 20UL
#define VIDEOSS_VIDEOIO_DISENG0_SIG0_STATUS_STSSIGIDLE_Msk 0x100000UL


/* VIDEOSS_VIDEOIO_DISENG0_FRAMEGEN0.FGSTCTRL */
#define VIDEOSS_VIDEOIO_DISENG0_FRAMEGEN0_FGSTCTRL_SHDEN_Pos 0UL
#define VIDEOSS_VIDEOIO_DISENG0_FRAMEGEN0_FGSTCTRL_SHDEN_Msk 0x1UL
#define VIDEOSS_VIDEOIO_DISENG0_FRAMEGEN0_FGSTCTRL_FGSYNCMODE_Pos 1UL
#define VIDEOSS_VIDEOIO_DISENG0_FRAMEGEN0_FGSTCTRL_FGSYNCMODE_Msk 0x6UL
/* VIDEOSS_VIDEOIO_DISENG0_FRAMEGEN0.HTCFG1 */
#define VIDEOSS_VIDEOIO_DISENG0_FRAMEGEN0_HTCFG1_HACT_Pos 0UL
#define VIDEOSS_VIDEOIO_DISENG0_FRAMEGEN0_HTCFG1_HACT_Msk 0x3FFFUL
#define VIDEOSS_VIDEOIO_DISENG0_FRAMEGEN0_HTCFG1_HTOTAL_Pos 16UL
#define VIDEOSS_VIDEOIO_DISENG0_FRAMEGEN0_HTCFG1_HTOTAL_Msk 0x3FFF0000UL
/* VIDEOSS_VIDEOIO_DISENG0_FRAMEGEN0.HTCFG2 */
#define VIDEOSS_VIDEOIO_DISENG0_FRAMEGEN0_HTCFG2_HSYNC_Pos 0UL
#define VIDEOSS_VIDEOIO_DISENG0_FRAMEGEN0_HTCFG2_HSYNC_Msk 0x3FFFUL
#define VIDEOSS_VIDEOIO_DISENG0_FRAMEGEN0_HTCFG2_HSBP_Pos 16UL
#define VIDEOSS_VIDEOIO_DISENG0_FRAMEGEN0_HTCFG2_HSBP_Msk 0x3FFF0000UL
#define VIDEOSS_VIDEOIO_DISENG0_FRAMEGEN0_HTCFG2_HSEN_Pos 31UL
#define VIDEOSS_VIDEOIO_DISENG0_FRAMEGEN0_HTCFG2_HSEN_Msk 0x80000000UL
/* VIDEOSS_VIDEOIO_DISENG0_FRAMEGEN0.VTCFG1 */
#define VIDEOSS_VIDEOIO_DISENG0_FRAMEGEN0_VTCFG1_VACT_Pos 0UL
#define VIDEOSS_VIDEOIO_DISENG0_FRAMEGEN0_VTCFG1_VACT_Msk 0x3FFFUL
#define VIDEOSS_VIDEOIO_DISENG0_FRAMEGEN0_VTCFG1_VTOTAL_Pos 16UL
#define VIDEOSS_VIDEOIO_DISENG0_FRAMEGEN0_VTCFG1_VTOTAL_Msk 0x3FFF0000UL
/* VIDEOSS_VIDEOIO_DISENG0_FRAMEGEN0.VTCFG2 */
#define VIDEOSS_VIDEOIO_DISENG0_FRAMEGEN0_VTCFG2_VSYNC_Pos 0UL
#define VIDEOSS_VIDEOIO_DISENG0_FRAMEGEN0_VTCFG2_VSYNC_Msk 0x3FFFUL
#define VIDEOSS_VIDEOIO_DISENG0_FRAMEGEN0_VTCFG2_VSBP_Pos 16UL
#define VIDEOSS_VIDEOIO_DISENG0_FRAMEGEN0_VTCFG2_VSBP_Msk 0x3FFF0000UL
#define VIDEOSS_VIDEOIO_DISENG0_FRAMEGEN0_VTCFG2_VSEN_Pos 31UL
#define VIDEOSS_VIDEOIO_DISENG0_FRAMEGEN0_VTCFG2_VSEN_Msk 0x80000000UL
/* VIDEOSS_VIDEOIO_DISENG0_FRAMEGEN0.INT0CONFIG */
#define VIDEOSS_VIDEOIO_DISENG0_FRAMEGEN0_INT0CONFIG_INT0COL_Pos 0UL
#define VIDEOSS_VIDEOIO_DISENG0_FRAMEGEN0_INT0CONFIG_INT0COL_Msk 0x3FFFUL
#define VIDEOSS_VIDEOIO_DISENG0_FRAMEGEN0_INT0CONFIG_INT0HSEN_Pos 15UL
#define VIDEOSS_VIDEOIO_DISENG0_FRAMEGEN0_INT0CONFIG_INT0HSEN_Msk 0x8000UL
#define VIDEOSS_VIDEOIO_DISENG0_FRAMEGEN0_INT0CONFIG_INT0ROW_Pos 16UL
#define VIDEOSS_VIDEOIO_DISENG0_FRAMEGEN0_INT0CONFIG_INT0ROW_Msk 0x3FFF0000UL
#define VIDEOSS_VIDEOIO_DISENG0_FRAMEGEN0_INT0CONFIG_INT0EN_Pos 31UL
#define VIDEOSS_VIDEOIO_DISENG0_FRAMEGEN0_INT0CONFIG_INT0EN_Msk 0x80000000UL
/* VIDEOSS_VIDEOIO_DISENG0_FRAMEGEN0.INT1CONFIG */
#define VIDEOSS_VIDEOIO_DISENG0_FRAMEGEN0_INT1CONFIG_INT1COL_Pos 0UL
#define VIDEOSS_VIDEOIO_DISENG0_FRAMEGEN0_INT1CONFIG_INT1COL_Msk 0x3FFFUL
#define VIDEOSS_VIDEOIO_DISENG0_FRAMEGEN0_INT1CONFIG_INT1HSEN_Pos 15UL
#define VIDEOSS_VIDEOIO_DISENG0_FRAMEGEN0_INT1CONFIG_INT1HSEN_Msk 0x8000UL
#define VIDEOSS_VIDEOIO_DISENG0_FRAMEGEN0_INT1CONFIG_INT1ROW_Pos 16UL
#define VIDEOSS_VIDEOIO_DISENG0_FRAMEGEN0_INT1CONFIG_INT1ROW_Msk 0x3FFF0000UL
#define VIDEOSS_VIDEOIO_DISENG0_FRAMEGEN0_INT1CONFIG_INT1EN_Pos 31UL
#define VIDEOSS_VIDEOIO_DISENG0_FRAMEGEN0_INT1CONFIG_INT1EN_Msk 0x80000000UL
/* VIDEOSS_VIDEOIO_DISENG0_FRAMEGEN0.INT2CONFIG */
#define VIDEOSS_VIDEOIO_DISENG0_FRAMEGEN0_INT2CONFIG_INT2COL_Pos 0UL
#define VIDEOSS_VIDEOIO_DISENG0_FRAMEGEN0_INT2CONFIG_INT2COL_Msk 0x3FFFUL
#define VIDEOSS_VIDEOIO_DISENG0_FRAMEGEN0_INT2CONFIG_INT2HSEN_Pos 15UL
#define VIDEOSS_VIDEOIO_DISENG0_FRAMEGEN0_INT2CONFIG_INT2HSEN_Msk 0x8000UL
#define VIDEOSS_VIDEOIO_DISENG0_FRAMEGEN0_INT2CONFIG_INT2ROW_Pos 16UL
#define VIDEOSS_VIDEOIO_DISENG0_FRAMEGEN0_INT2CONFIG_INT2ROW_Msk 0x3FFF0000UL
#define VIDEOSS_VIDEOIO_DISENG0_FRAMEGEN0_INT2CONFIG_INT2EN_Pos 31UL
#define VIDEOSS_VIDEOIO_DISENG0_FRAMEGEN0_INT2CONFIG_INT2EN_Msk 0x80000000UL
/* VIDEOSS_VIDEOIO_DISENG0_FRAMEGEN0.INT3CONFIG */
#define VIDEOSS_VIDEOIO_DISENG0_FRAMEGEN0_INT3CONFIG_INT3COL_Pos 0UL
#define VIDEOSS_VIDEOIO_DISENG0_FRAMEGEN0_INT3CONFIG_INT3COL_Msk 0x3FFFUL
#define VIDEOSS_VIDEOIO_DISENG0_FRAMEGEN0_INT3CONFIG_INT3HSEN_Pos 15UL
#define VIDEOSS_VIDEOIO_DISENG0_FRAMEGEN0_INT3CONFIG_INT3HSEN_Msk 0x8000UL
#define VIDEOSS_VIDEOIO_DISENG0_FRAMEGEN0_INT3CONFIG_INT3ROW_Pos 16UL
#define VIDEOSS_VIDEOIO_DISENG0_FRAMEGEN0_INT3CONFIG_INT3ROW_Msk 0x3FFF0000UL
#define VIDEOSS_VIDEOIO_DISENG0_FRAMEGEN0_INT3CONFIG_INT3EN_Pos 31UL
#define VIDEOSS_VIDEOIO_DISENG0_FRAMEGEN0_INT3CONFIG_INT3EN_Msk 0x80000000UL
/* VIDEOSS_VIDEOIO_DISENG0_FRAMEGEN0.PKICKCONFIG */
#define VIDEOSS_VIDEOIO_DISENG0_FRAMEGEN0_PKICKCONFIG_PKICKCOL_Pos 0UL
#define VIDEOSS_VIDEOIO_DISENG0_FRAMEGEN0_PKICKCONFIG_PKICKCOL_Msk 0x3FFFUL
#define VIDEOSS_VIDEOIO_DISENG0_FRAMEGEN0_PKICKCONFIG_PKICKINT0EN_Pos 15UL
#define VIDEOSS_VIDEOIO_DISENG0_FRAMEGEN0_PKICKCONFIG_PKICKINT0EN_Msk 0x8000UL
#define VIDEOSS_VIDEOIO_DISENG0_FRAMEGEN0_PKICKCONFIG_PKICKROW_Pos 16UL
#define VIDEOSS_VIDEOIO_DISENG0_FRAMEGEN0_PKICKCONFIG_PKICKROW_Msk 0x3FFF0000UL
#define VIDEOSS_VIDEOIO_DISENG0_FRAMEGEN0_PKICKCONFIG_PKICKEN_Pos 31UL
#define VIDEOSS_VIDEOIO_DISENG0_FRAMEGEN0_PKICKCONFIG_PKICKEN_Msk 0x80000000UL
/* VIDEOSS_VIDEOIO_DISENG0_FRAMEGEN0.SKICKCONFIG */
#define VIDEOSS_VIDEOIO_DISENG0_FRAMEGEN0_SKICKCONFIG_SKICKCOL_Pos 0UL
#define VIDEOSS_VIDEOIO_DISENG0_FRAMEGEN0_SKICKCONFIG_SKICKCOL_Msk 0x3FFFUL
#define VIDEOSS_VIDEOIO_DISENG0_FRAMEGEN0_SKICKCONFIG_SKICKINT1EN_Pos 15UL
#define VIDEOSS_VIDEOIO_DISENG0_FRAMEGEN0_SKICKCONFIG_SKICKINT1EN_Msk 0x8000UL
#define VIDEOSS_VIDEOIO_DISENG0_FRAMEGEN0_SKICKCONFIG_SKICKROW_Pos 16UL
#define VIDEOSS_VIDEOIO_DISENG0_FRAMEGEN0_SKICKCONFIG_SKICKROW_Msk 0x3FFF0000UL
#define VIDEOSS_VIDEOIO_DISENG0_FRAMEGEN0_SKICKCONFIG_SKICKTRIG_Pos 30UL
#define VIDEOSS_VIDEOIO_DISENG0_FRAMEGEN0_SKICKCONFIG_SKICKTRIG_Msk 0x40000000UL
#define VIDEOSS_VIDEOIO_DISENG0_FRAMEGEN0_SKICKCONFIG_SKICKEN_Pos 31UL
#define VIDEOSS_VIDEOIO_DISENG0_FRAMEGEN0_SKICKCONFIG_SKICKEN_Msk 0x80000000UL
/* VIDEOSS_VIDEOIO_DISENG0_FRAMEGEN0.SECSTATCONFIG */
#define VIDEOSS_VIDEOIO_DISENG0_FRAMEGEN0_SECSTATCONFIG_LEVGOODFRAMES_Pos 0UL
#define VIDEOSS_VIDEOIO_DISENG0_FRAMEGEN0_SECSTATCONFIG_LEVGOODFRAMES_Msk 0xFUL
#define VIDEOSS_VIDEOIO_DISENG0_FRAMEGEN0_SECSTATCONFIG_LEVBADFRAMES_Pos 4UL
#define VIDEOSS_VIDEOIO_DISENG0_FRAMEGEN0_SECSTATCONFIG_LEVBADFRAMES_Msk 0xF0UL
#define VIDEOSS_VIDEOIO_DISENG0_FRAMEGEN0_SECSTATCONFIG_LEVSKEWINRANGE_Pos 8UL
#define VIDEOSS_VIDEOIO_DISENG0_FRAMEGEN0_SECSTATCONFIG_LEVSKEWINRANGE_Msk 0xF00UL
/* VIDEOSS_VIDEOIO_DISENG0_FRAMEGEN0.FGSRCR1 */
#define VIDEOSS_VIDEOIO_DISENG0_FRAMEGEN0_FGSRCR1_SREN_Pos 0UL
#define VIDEOSS_VIDEOIO_DISENG0_FRAMEGEN0_FGSRCR1_SREN_Msk 0x1UL
#define VIDEOSS_VIDEOIO_DISENG0_FRAMEGEN0_FGSRCR1_SRMODE_Pos 1UL
#define VIDEOSS_VIDEOIO_DISENG0_FRAMEGEN0_FGSRCR1_SRMODE_Msk 0x6UL
#define VIDEOSS_VIDEOIO_DISENG0_FRAMEGEN0_FGSRCR1_SRADJ_Pos 3UL
#define VIDEOSS_VIDEOIO_DISENG0_FRAMEGEN0_FGSRCR1_SRADJ_Msk 0x8UL
#define VIDEOSS_VIDEOIO_DISENG0_FRAMEGEN0_FGSRCR1_SREVEN_Pos 4UL
#define VIDEOSS_VIDEOIO_DISENG0_FRAMEGEN0_FGSRCR1_SREVEN_Msk 0x10UL
#define VIDEOSS_VIDEOIO_DISENG0_FRAMEGEN0_FGSRCR1_SRFASTSYNC_Pos 5UL
#define VIDEOSS_VIDEOIO_DISENG0_FRAMEGEN0_FGSRCR1_SRFASTSYNC_Msk 0x20UL
#define VIDEOSS_VIDEOIO_DISENG0_FRAMEGEN0_FGSRCR1_SRQALIGN_Pos 6UL
#define VIDEOSS_VIDEOIO_DISENG0_FRAMEGEN0_FGSRCR1_SRQALIGN_Msk 0x40UL
#define VIDEOSS_VIDEOIO_DISENG0_FRAMEGEN0_FGSRCR1_SRQVAL_Pos 7UL
#define VIDEOSS_VIDEOIO_DISENG0_FRAMEGEN0_FGSRCR1_SRQVAL_Msk 0x180UL
#define VIDEOSS_VIDEOIO_DISENG0_FRAMEGEN0_FGSRCR1_SRDBGDISP_Pos 16UL
#define VIDEOSS_VIDEOIO_DISENG0_FRAMEGEN0_FGSRCR1_SRDBGDISP_Msk 0x10000UL
#define VIDEOSS_VIDEOIO_DISENG0_FRAMEGEN0_FGSRCR1_SREPOFF_Pos 17UL
#define VIDEOSS_VIDEOIO_DISENG0_FRAMEGEN0_FGSRCR1_SREPOFF_Msk 0x20000UL
/* VIDEOSS_VIDEOIO_DISENG0_FRAMEGEN0.FGSRCR2 */
#define VIDEOSS_VIDEOIO_DISENG0_FRAMEGEN0_FGSRCR2_HTOTALMIN_Pos 0UL
#define VIDEOSS_VIDEOIO_DISENG0_FRAMEGEN0_FGSRCR2_HTOTALMIN_Msk 0x3FFFUL
#define VIDEOSS_VIDEOIO_DISENG0_FRAMEGEN0_FGSRCR2_HTOTALMAX_Pos 16UL
#define VIDEOSS_VIDEOIO_DISENG0_FRAMEGEN0_FGSRCR2_HTOTALMAX_Msk 0x3FFF0000UL
/* VIDEOSS_VIDEOIO_DISENG0_FRAMEGEN0.FGSRCR3 */
#define VIDEOSS_VIDEOIO_DISENG0_FRAMEGEN0_FGSRCR3_VTOTALMIN_Pos 0UL
#define VIDEOSS_VIDEOIO_DISENG0_FRAMEGEN0_FGSRCR3_VTOTALMIN_Msk 0x3FFFUL
#define VIDEOSS_VIDEOIO_DISENG0_FRAMEGEN0_FGSRCR3_VTOTALMAX_Pos 16UL
#define VIDEOSS_VIDEOIO_DISENG0_FRAMEGEN0_FGSRCR3_VTOTALMAX_Msk 0x3FFF0000UL
/* VIDEOSS_VIDEOIO_DISENG0_FRAMEGEN0.FGSRCR4 */
#define VIDEOSS_VIDEOIO_DISENG0_FRAMEGEN0_FGSRCR4_TARGETSKEW_Pos 0UL
#define VIDEOSS_VIDEOIO_DISENG0_FRAMEGEN0_FGSRCR4_TARGETSKEW_Msk 0x1FFFFFFFUL
/* VIDEOSS_VIDEOIO_DISENG0_FRAMEGEN0.FGSRCR5 */
#define VIDEOSS_VIDEOIO_DISENG0_FRAMEGEN0_FGSRCR5_SYNCRANGELOW_Pos 0UL
#define VIDEOSS_VIDEOIO_DISENG0_FRAMEGEN0_FGSRCR5_SYNCRANGELOW_Msk 0x1FFFFFFFUL
/* VIDEOSS_VIDEOIO_DISENG0_FRAMEGEN0.FGSRCR6 */
#define VIDEOSS_VIDEOIO_DISENG0_FRAMEGEN0_FGSRCR6_SYNCRANGEHIGH_Pos 0UL
#define VIDEOSS_VIDEOIO_DISENG0_FRAMEGEN0_FGSRCR6_SYNCRANGEHIGH_Msk 0x1FFFFFFFUL
/* VIDEOSS_VIDEOIO_DISENG0_FRAMEGEN0.FGKSDR */
#define VIDEOSS_VIDEOIO_DISENG0_FRAMEGEN0_FGKSDR_PCNTCPLMAX_Pos 0UL
#define VIDEOSS_VIDEOIO_DISENG0_FRAMEGEN0_FGKSDR_PCNTCPLMAX_Msk 0x7UL
#define VIDEOSS_VIDEOIO_DISENG0_FRAMEGEN0_FGKSDR_SCNTCPLMAX_Pos 16UL
#define VIDEOSS_VIDEOIO_DISENG0_FRAMEGEN0_FGKSDR_SCNTCPLMAX_Msk 0x70000UL
/* VIDEOSS_VIDEOIO_DISENG0_FRAMEGEN0.PACFG */
#define VIDEOSS_VIDEOIO_DISENG0_FRAMEGEN0_PACFG_PSTARTX_Pos 0UL
#define VIDEOSS_VIDEOIO_DISENG0_FRAMEGEN0_PACFG_PSTARTX_Msk 0x3FFFUL
#define VIDEOSS_VIDEOIO_DISENG0_FRAMEGEN0_PACFG_PSTARTY_Pos 16UL
#define VIDEOSS_VIDEOIO_DISENG0_FRAMEGEN0_PACFG_PSTARTY_Msk 0x3FFF0000UL
/* VIDEOSS_VIDEOIO_DISENG0_FRAMEGEN0.SACFG */
#define VIDEOSS_VIDEOIO_DISENG0_FRAMEGEN0_SACFG_SSTARTX_Pos 0UL
#define VIDEOSS_VIDEOIO_DISENG0_FRAMEGEN0_SACFG_SSTARTX_Msk 0x3FFFUL
#define VIDEOSS_VIDEOIO_DISENG0_FRAMEGEN0_SACFG_SSTARTY_Pos 16UL
#define VIDEOSS_VIDEOIO_DISENG0_FRAMEGEN0_SACFG_SSTARTY_Msk 0x3FFF0000UL
/* VIDEOSS_VIDEOIO_DISENG0_FRAMEGEN0.FGINCTRL */
#define VIDEOSS_VIDEOIO_DISENG0_FRAMEGEN0_FGINCTRL_FGDM_Pos 0UL
#define VIDEOSS_VIDEOIO_DISENG0_FRAMEGEN0_FGINCTRL_FGDM_Msk 0x7UL
#define VIDEOSS_VIDEOIO_DISENG0_FRAMEGEN0_FGINCTRL_ENPRIMALPHA_Pos 3UL
#define VIDEOSS_VIDEOIO_DISENG0_FRAMEGEN0_FGINCTRL_ENPRIMALPHA_Msk 0x8UL
#define VIDEOSS_VIDEOIO_DISENG0_FRAMEGEN0_FGINCTRL_ENSECALPHA_Pos 4UL
#define VIDEOSS_VIDEOIO_DISENG0_FRAMEGEN0_FGINCTRL_ENSECALPHA_Msk 0x10UL
/* VIDEOSS_VIDEOIO_DISENG0_FRAMEGEN0.FGINCTRLPANIC */
#define VIDEOSS_VIDEOIO_DISENG0_FRAMEGEN0_FGINCTRLPANIC_FGDMPANIC_Pos 0UL
#define VIDEOSS_VIDEOIO_DISENG0_FRAMEGEN0_FGINCTRLPANIC_FGDMPANIC_Msk 0x7UL
#define VIDEOSS_VIDEOIO_DISENG0_FRAMEGEN0_FGINCTRLPANIC_ENPRIMALPHAPANIC_Pos 3UL
#define VIDEOSS_VIDEOIO_DISENG0_FRAMEGEN0_FGINCTRLPANIC_ENPRIMALPHAPANIC_Msk 0x8UL
#define VIDEOSS_VIDEOIO_DISENG0_FRAMEGEN0_FGINCTRLPANIC_ENSECALPHAPANIC_Pos 4UL
#define VIDEOSS_VIDEOIO_DISENG0_FRAMEGEN0_FGINCTRLPANIC_ENSECALPHAPANIC_Msk 0x10UL
/* VIDEOSS_VIDEOIO_DISENG0_FRAMEGEN0.FGCCR */
#define VIDEOSS_VIDEOIO_DISENG0_FRAMEGEN0_FGCCR_CCBLUE_Pos 0UL
#define VIDEOSS_VIDEOIO_DISENG0_FRAMEGEN0_FGCCR_CCBLUE_Msk 0xFFUL
#define VIDEOSS_VIDEOIO_DISENG0_FRAMEGEN0_FGCCR_CCGREEN_Pos 8UL
#define VIDEOSS_VIDEOIO_DISENG0_FRAMEGEN0_FGCCR_CCGREEN_Msk 0xFF00UL
#define VIDEOSS_VIDEOIO_DISENG0_FRAMEGEN0_FGCCR_CCRED_Pos 16UL
#define VIDEOSS_VIDEOIO_DISENG0_FRAMEGEN0_FGCCR_CCRED_Msk 0xFF0000UL
#define VIDEOSS_VIDEOIO_DISENG0_FRAMEGEN0_FGCCR_CCALPHA_Pos 24UL
#define VIDEOSS_VIDEOIO_DISENG0_FRAMEGEN0_FGCCR_CCALPHA_Msk 0x1000000UL
/* VIDEOSS_VIDEOIO_DISENG0_FRAMEGEN0.BLENDCONTROL */
#define VIDEOSS_VIDEOIO_DISENG0_FRAMEGEN0_BLENDCONTROL_PRIM_C_BLD_FUNC_Pos 0UL
#define VIDEOSS_VIDEOIO_DISENG0_FRAMEGEN0_BLENDCONTROL_PRIM_C_BLD_FUNC_Msk 0x7UL
#define VIDEOSS_VIDEOIO_DISENG0_FRAMEGEN0_BLENDCONTROL_SEC_C_BLD_FUNC_Pos 4UL
#define VIDEOSS_VIDEOIO_DISENG0_FRAMEGEN0_BLENDCONTROL_SEC_C_BLD_FUNC_Msk 0x70UL
#define VIDEOSS_VIDEOIO_DISENG0_FRAMEGEN0_BLENDCONTROL_PRIM_A_BLD_FUNC_Pos 8UL
#define VIDEOSS_VIDEOIO_DISENG0_FRAMEGEN0_BLENDCONTROL_PRIM_A_BLD_FUNC_Msk 0x700UL
#define VIDEOSS_VIDEOIO_DISENG0_FRAMEGEN0_BLENDCONTROL_SEC_A_BLD_FUNC_Pos 12UL
#define VIDEOSS_VIDEOIO_DISENG0_FRAMEGEN0_BLENDCONTROL_SEC_A_BLD_FUNC_Msk 0x7000UL
#define VIDEOSS_VIDEOIO_DISENG0_FRAMEGEN0_BLENDCONTROL_BLENDALPHA_Pos 16UL
#define VIDEOSS_VIDEOIO_DISENG0_FRAMEGEN0_BLENDCONTROL_BLENDALPHA_Msk 0xFF0000UL
/* VIDEOSS_VIDEOIO_DISENG0_FRAMEGEN0.FGENABLE */
#define VIDEOSS_VIDEOIO_DISENG0_FRAMEGEN0_FGENABLE_FGEN_Pos 0UL
#define VIDEOSS_VIDEOIO_DISENG0_FRAMEGEN0_FGENABLE_FGEN_Msk 0x1UL
/* VIDEOSS_VIDEOIO_DISENG0_FRAMEGEN0.FGSLR */
#define VIDEOSS_VIDEOIO_DISENG0_FRAMEGEN0_FGSLR_SHDTOKGEN_Pos 0UL
#define VIDEOSS_VIDEOIO_DISENG0_FRAMEGEN0_FGSLR_SHDTOKGEN_Msk 0x1UL
/* VIDEOSS_VIDEOIO_DISENG0_FRAMEGEN0.FGENSTS */
#define VIDEOSS_VIDEOIO_DISENG0_FRAMEGEN0_FGENSTS_ENSTS_Pos 0UL
#define VIDEOSS_VIDEOIO_DISENG0_FRAMEGEN0_FGENSTS_ENSTS_Msk 0x1UL
#define VIDEOSS_VIDEOIO_DISENG0_FRAMEGEN0_FGENSTS_PANICSTAT_Pos 1UL
#define VIDEOSS_VIDEOIO_DISENG0_FRAMEGEN0_FGENSTS_PANICSTAT_Msk 0x2UL
/* VIDEOSS_VIDEOIO_DISENG0_FRAMEGEN0.FGTIMESTAMP */
#define VIDEOSS_VIDEOIO_DISENG0_FRAMEGEN0_FGTIMESTAMP_LINEINDEX_Pos 0UL
#define VIDEOSS_VIDEOIO_DISENG0_FRAMEGEN0_FGTIMESTAMP_LINEINDEX_Msk 0x3FFFUL
#define VIDEOSS_VIDEOIO_DISENG0_FRAMEGEN0_FGTIMESTAMP_FRAMEINDEX_Pos 14UL
#define VIDEOSS_VIDEOIO_DISENG0_FRAMEGEN0_FGTIMESTAMP_FRAMEINDEX_Msk 0xFFFFC000UL
/* VIDEOSS_VIDEOIO_DISENG0_FRAMEGEN0.FGCHSTAT */
#define VIDEOSS_VIDEOIO_DISENG0_FRAMEGEN0_FGCHSTAT_PFIFOEMPTY_Pos 0UL
#define VIDEOSS_VIDEOIO_DISENG0_FRAMEGEN0_FGCHSTAT_PFIFOEMPTY_Msk 0x1UL
#define VIDEOSS_VIDEOIO_DISENG0_FRAMEGEN0_FGCHSTAT_PRIMSYNCSTAT_Pos 8UL
#define VIDEOSS_VIDEOIO_DISENG0_FRAMEGEN0_FGCHSTAT_PRIMSYNCSTAT_Msk 0x100UL
#define VIDEOSS_VIDEOIO_DISENG0_FRAMEGEN0_FGCHSTAT_SFIFOEMPTY_Pos 16UL
#define VIDEOSS_VIDEOIO_DISENG0_FRAMEGEN0_FGCHSTAT_SFIFOEMPTY_Msk 0x10000UL
#define VIDEOSS_VIDEOIO_DISENG0_FRAMEGEN0_FGCHSTAT_SKEWRANGEERR_Pos 17UL
#define VIDEOSS_VIDEOIO_DISENG0_FRAMEGEN0_FGCHSTAT_SKEWRANGEERR_Msk 0x20000UL
#define VIDEOSS_VIDEOIO_DISENG0_FRAMEGEN0_FGCHSTAT_SECSYNCSTAT_Pos 24UL
#define VIDEOSS_VIDEOIO_DISENG0_FRAMEGEN0_FGCHSTAT_SECSYNCSTAT_Msk 0x1000000UL
/* VIDEOSS_VIDEOIO_DISENG0_FRAMEGEN0.FGCHSTATCLR */
#define VIDEOSS_VIDEOIO_DISENG0_FRAMEGEN0_FGCHSTATCLR_CLRPRIMSTAT_Pos 0UL
#define VIDEOSS_VIDEOIO_DISENG0_FRAMEGEN0_FGCHSTATCLR_CLRPRIMSTAT_Msk 0x1UL
#define VIDEOSS_VIDEOIO_DISENG0_FRAMEGEN0_FGCHSTATCLR_CLRSECSTAT_Pos 16UL
#define VIDEOSS_VIDEOIO_DISENG0_FRAMEGEN0_FGCHSTATCLR_CLRSECSTAT_Msk 0x10000UL
/* VIDEOSS_VIDEOIO_DISENG0_FRAMEGEN0.FGSKEWMON */
#define VIDEOSS_VIDEOIO_DISENG0_FRAMEGEN0_FGSKEWMON_SKEWMON_Pos 0UL
#define VIDEOSS_VIDEOIO_DISENG0_FRAMEGEN0_FGSKEWMON_SKEWMON_Msk 0x1FFFFFFFUL
/* VIDEOSS_VIDEOIO_DISENG0_FRAMEGEN0.FGSFIFOMIN */
#define VIDEOSS_VIDEOIO_DISENG0_FRAMEGEN0_FGSFIFOMIN_SFIFOMIN_Pos 0UL
#define VIDEOSS_VIDEOIO_DISENG0_FRAMEGEN0_FGSFIFOMIN_SFIFOMIN_Msk 0x7FFUL
/* VIDEOSS_VIDEOIO_DISENG0_FRAMEGEN0.FGSFIFOMAX */
#define VIDEOSS_VIDEOIO_DISENG0_FRAMEGEN0_FGSFIFOMAX_SFIFOMAX_Pos 0UL
#define VIDEOSS_VIDEOIO_DISENG0_FRAMEGEN0_FGSFIFOMAX_SFIFOMAX_Msk 0x7FFUL
/* VIDEOSS_VIDEOIO_DISENG0_FRAMEGEN0.FGSFIFOFILLCLR */
#define VIDEOSS_VIDEOIO_DISENG0_FRAMEGEN0_FGSFIFOFILLCLR_SFIFOFILLCLR_Pos 0UL
#define VIDEOSS_VIDEOIO_DISENG0_FRAMEGEN0_FGSFIFOFILLCLR_SFIFOFILLCLR_Msk 0x1UL
/* VIDEOSS_VIDEOIO_DISENG0_FRAMEGEN0.FGSREPD */
#define VIDEOSS_VIDEOIO_DISENG0_FRAMEGEN0_FGSREPD_EPVAL_Pos 0UL
#define VIDEOSS_VIDEOIO_DISENG0_FRAMEGEN0_FGSREPD_EPVAL_Msk 0x1FFFFFFFUL
/* VIDEOSS_VIDEOIO_DISENG0_FRAMEGEN0.FGSRFTD */
#define VIDEOSS_VIDEOIO_DISENG0_FRAMEGEN0_FGSRFTD_FRTOT_Pos 0UL
#define VIDEOSS_VIDEOIO_DISENG0_FRAMEGEN0_FGSRFTD_FRTOT_Msk 0xFFFFFFFUL
/* VIDEOSS_VIDEOIO_DISENG0_FRAMEGEN0.FGTGPOSITION */
#define VIDEOSS_VIDEOIO_DISENG0_FRAMEGEN0_FGTGPOSITION_FRTGX_Pos 0UL
#define VIDEOSS_VIDEOIO_DISENG0_FRAMEGEN0_FGTGPOSITION_FRTGX_Msk 0x3FFFUL
#define VIDEOSS_VIDEOIO_DISENG0_FRAMEGEN0_FGTGPOSITION_FRTGY_Pos 14UL
#define VIDEOSS_VIDEOIO_DISENG0_FRAMEGEN0_FGTGPOSITION_FRTGY_Msk 0xFFFC000UL


/* VIDEOSS_VIDEOIO_DISENG0_GAMMACOR0.STATICCONTROL */
#define VIDEOSS_VIDEOIO_DISENG0_GAMMACOR0_STATICCONTROL_SHDEN_Pos 0UL
#define VIDEOSS_VIDEOIO_DISENG0_GAMMACOR0_STATICCONTROL_SHDEN_Msk 0x1UL
#define VIDEOSS_VIDEOIO_DISENG0_GAMMACOR0_STATICCONTROL_BLUEWRITEENABLE_Pos 1UL
#define VIDEOSS_VIDEOIO_DISENG0_GAMMACOR0_STATICCONTROL_BLUEWRITEENABLE_Msk 0x2UL
#define VIDEOSS_VIDEOIO_DISENG0_GAMMACOR0_STATICCONTROL_GREENWRITEENABLE_Pos 2UL
#define VIDEOSS_VIDEOIO_DISENG0_GAMMACOR0_STATICCONTROL_GREENWRITEENABLE_Msk 0x4UL
#define VIDEOSS_VIDEOIO_DISENG0_GAMMACOR0_STATICCONTROL_REDWRITEENABLE_Pos 3UL
#define VIDEOSS_VIDEOIO_DISENG0_GAMMACOR0_STATICCONTROL_REDWRITEENABLE_Msk 0x8UL
/* VIDEOSS_VIDEOIO_DISENG0_GAMMACOR0.LUTSTART */
#define VIDEOSS_VIDEOIO_DISENG0_GAMMACOR0_LUTSTART_STARTBLUE_Pos 0UL
#define VIDEOSS_VIDEOIO_DISENG0_GAMMACOR0_LUTSTART_STARTBLUE_Msk 0x3FFUL
#define VIDEOSS_VIDEOIO_DISENG0_GAMMACOR0_LUTSTART_STARTGREEN_Pos 10UL
#define VIDEOSS_VIDEOIO_DISENG0_GAMMACOR0_LUTSTART_STARTGREEN_Msk 0xFFC00UL
#define VIDEOSS_VIDEOIO_DISENG0_GAMMACOR0_LUTSTART_STARTRED_Pos 20UL
#define VIDEOSS_VIDEOIO_DISENG0_GAMMACOR0_LUTSTART_STARTRED_Msk 0x3FF00000UL
/* VIDEOSS_VIDEOIO_DISENG0_GAMMACOR0.LUTDELTAS */
#define VIDEOSS_VIDEOIO_DISENG0_GAMMACOR0_LUTDELTAS_DELTABLUE_Pos 0UL
#define VIDEOSS_VIDEOIO_DISENG0_GAMMACOR0_LUTDELTAS_DELTABLUE_Msk 0x3FFUL
#define VIDEOSS_VIDEOIO_DISENG0_GAMMACOR0_LUTDELTAS_DELTAGREEN_Pos 10UL
#define VIDEOSS_VIDEOIO_DISENG0_GAMMACOR0_LUTDELTAS_DELTAGREEN_Msk 0xFFC00UL
#define VIDEOSS_VIDEOIO_DISENG0_GAMMACOR0_LUTDELTAS_DELTARED_Pos 20UL
#define VIDEOSS_VIDEOIO_DISENG0_GAMMACOR0_LUTDELTAS_DELTARED_Msk 0x3FF00000UL
/* VIDEOSS_VIDEOIO_DISENG0_GAMMACOR0.CONTROL */
#define VIDEOSS_VIDEOIO_DISENG0_GAMMACOR0_CONTROL_MODE_Pos 0UL
#define VIDEOSS_VIDEOIO_DISENG0_GAMMACOR0_CONTROL_MODE_Msk 0x1UL
#define VIDEOSS_VIDEOIO_DISENG0_GAMMACOR0_CONTROL_ALPHAMASK_Pos 4UL
#define VIDEOSS_VIDEOIO_DISENG0_GAMMACOR0_CONTROL_ALPHAMASK_Msk 0x10UL
#define VIDEOSS_VIDEOIO_DISENG0_GAMMACOR0_CONTROL_ALPHAINVERT_Pos 5UL
#define VIDEOSS_VIDEOIO_DISENG0_GAMMACOR0_CONTROL_ALPHAINVERT_Msk 0x20UL


/* VIDEOSS_VIDEOIO_DISENG0_DITHER0.CONTROL */
#define VIDEOSS_VIDEOIO_DISENG0_DITHER0_CONTROL_MODE_Pos 0UL
#define VIDEOSS_VIDEOIO_DISENG0_DITHER0_CONTROL_MODE_Msk 0x1UL
/* VIDEOSS_VIDEOIO_DISENG0_DITHER0.DITHERCONTROL */
#define VIDEOSS_VIDEOIO_DISENG0_DITHER0_DITHERCONTROL_BLUE_RANGE_SELECT_Pos 0UL
#define VIDEOSS_VIDEOIO_DISENG0_DITHER0_DITHERCONTROL_BLUE_RANGE_SELECT_Msk 0x7UL
#define VIDEOSS_VIDEOIO_DISENG0_DITHER0_DITHERCONTROL_GREEN_RANGE_SELECT_Pos 4UL
#define VIDEOSS_VIDEOIO_DISENG0_DITHER0_DITHERCONTROL_GREEN_RANGE_SELECT_Msk 0x70UL
#define VIDEOSS_VIDEOIO_DISENG0_DITHER0_DITHERCONTROL_RED_RANGE_SELECT_Pos 8UL
#define VIDEOSS_VIDEOIO_DISENG0_DITHER0_DITHERCONTROL_RED_RANGE_SELECT_Msk 0x700UL
#define VIDEOSS_VIDEOIO_DISENG0_DITHER0_DITHERCONTROL_OFFSET_SELECT_Pos 16UL
#define VIDEOSS_VIDEOIO_DISENG0_DITHER0_DITHERCONTROL_OFFSET_SELECT_Msk 0x10000UL
#define VIDEOSS_VIDEOIO_DISENG0_DITHER0_DITHERCONTROL_ALGO_SELECT_Pos 20UL
#define VIDEOSS_VIDEOIO_DISENG0_DITHER0_DITHERCONTROL_ALGO_SELECT_Msk 0x300000UL
#define VIDEOSS_VIDEOIO_DISENG0_DITHER0_DITHERCONTROL_ALPHA_MODE_Pos 24UL
#define VIDEOSS_VIDEOIO_DISENG0_DITHER0_DITHERCONTROL_ALPHA_MODE_Msk 0x3000000UL
/* VIDEOSS_VIDEOIO_DISENG0_DITHER0.RELEASE */
#define VIDEOSS_VIDEOIO_DISENG0_DITHER0_RELEASE_SUBVERSION_Pos 0UL
#define VIDEOSS_VIDEOIO_DISENG0_DITHER0_RELEASE_SUBVERSION_Msk 0xFFUL
#define VIDEOSS_VIDEOIO_DISENG0_DITHER0_RELEASE_VERSION_Pos 8UL
#define VIDEOSS_VIDEOIO_DISENG0_DITHER0_RELEASE_VERSION_Msk 0xFF00UL


/* VIDEOSS_VIDEOIO_DISENG0_TCON0.SSQCNTS */
#define VIDEOSS_VIDEOIO_DISENG0_TCON0_SSQCNTS_SSQCNTS_SEQY_Pos 0UL
#define VIDEOSS_VIDEOIO_DISENG0_TCON0_SSQCNTS_SSQCNTS_SEQY_Msk 0x7FFFUL
#define VIDEOSS_VIDEOIO_DISENG0_TCON0_SSQCNTS_SSQCNTS_FIELD_Pos 15UL
#define VIDEOSS_VIDEOIO_DISENG0_TCON0_SSQCNTS_SSQCNTS_FIELD_Msk 0x8000UL
#define VIDEOSS_VIDEOIO_DISENG0_TCON0_SSQCNTS_SSQCNTS_SEQX_Pos 16UL
#define VIDEOSS_VIDEOIO_DISENG0_TCON0_SSQCNTS_SSQCNTS_SEQX_Msk 0x7FFF0000UL
#define VIDEOSS_VIDEOIO_DISENG0_TCON0_SSQCNTS_SSQCNTS_OUT_Pos 31UL
#define VIDEOSS_VIDEOIO_DISENG0_TCON0_SSQCNTS_SSQCNTS_OUT_Msk 0x80000000UL
/* VIDEOSS_VIDEOIO_DISENG0_TCON0.SSQCYCLE */
#define VIDEOSS_VIDEOIO_DISENG0_TCON0_SSQCYCLE_SSQCYCLE_Pos 0UL
#define VIDEOSS_VIDEOIO_DISENG0_TCON0_SSQCYCLE_SSQCYCLE_Msk 0x3FUL
/* VIDEOSS_VIDEOIO_DISENG0_TCON0.SWRESET */
#define VIDEOSS_VIDEOIO_DISENG0_TCON0_SWRESET_SWRESET_Pos 0UL
#define VIDEOSS_VIDEOIO_DISENG0_TCON0_SWRESET_SWRESET_Msk 0x1UL
#define VIDEOSS_VIDEOIO_DISENG0_TCON0_SWRESET_ENRESETWORD_Pos 4UL
#define VIDEOSS_VIDEOIO_DISENG0_TCON0_SWRESET_ENRESETWORD_Msk 0xFFF0UL
#define VIDEOSS_VIDEOIO_DISENG0_TCON0_SWRESET_RESETWORDEND_Pos 16UL
#define VIDEOSS_VIDEOIO_DISENG0_TCON0_SWRESET_RESETWORDEND_Msk 0xFF0000UL
#define VIDEOSS_VIDEOIO_DISENG0_TCON0_SWRESET_RESETWORDSTART_Pos 24UL
#define VIDEOSS_VIDEOIO_DISENG0_TCON0_SWRESET_RESETWORDSTART_Msk 0xFF000000UL
/* VIDEOSS_VIDEOIO_DISENG0_TCON0.TCON_CTRL */
#define VIDEOSS_VIDEOIO_DISENG0_TCON0_TCON_CTRL_CHANNELMODE_Pos 0UL
#define VIDEOSS_VIDEOIO_DISENG0_TCON0_TCON_CTRL_CHANNELMODE_Msk 0x3UL
#define VIDEOSS_VIDEOIO_DISENG0_TCON0_TCON_CTRL_TCON_SYNC_Pos 2UL
#define VIDEOSS_VIDEOIO_DISENG0_TCON0_TCON_CTRL_TCON_SYNC_Msk 0x4UL
#define VIDEOSS_VIDEOIO_DISENG0_TCON0_TCON_CTRL_BYPASS_Pos 3UL
#define VIDEOSS_VIDEOIO_DISENG0_TCON0_TCON_CTRL_BYPASS_Msk 0x8UL
#define VIDEOSS_VIDEOIO_DISENG0_TCON0_TCON_CTRL_INV_CTRL_Pos 4UL
#define VIDEOSS_VIDEOIO_DISENG0_TCON0_TCON_CTRL_INV_CTRL_Msk 0xF0UL
#define VIDEOSS_VIDEOIO_DISENG0_TCON0_TCON_CTRL_ENLVDS_Pos 8UL
#define VIDEOSS_VIDEOIO_DISENG0_TCON0_TCON_CTRL_ENLVDS_Msk 0x100UL
#define VIDEOSS_VIDEOIO_DISENG0_TCON0_TCON_CTRL_LVDSMODE_Pos 9UL
#define VIDEOSS_VIDEOIO_DISENG0_TCON0_TCON_CTRL_LVDSMODE_Msk 0x200UL
#define VIDEOSS_VIDEOIO_DISENG0_TCON0_TCON_CTRL_LVDS_BALANCE_Pos 10UL
#define VIDEOSS_VIDEOIO_DISENG0_TCON0_TCON_CTRL_LVDS_BALANCE_Msk 0x400UL
#define VIDEOSS_VIDEOIO_DISENG0_TCON0_TCON_CTRL_LVDS_CLOCK_INV_Pos 11UL
#define VIDEOSS_VIDEOIO_DISENG0_TCON0_TCON_CTRL_LVDS_CLOCK_INV_Msk 0x800UL
#define VIDEOSS_VIDEOIO_DISENG0_TCON0_TCON_CTRL_MINILVDS_OPCODE_Pos 12UL
#define VIDEOSS_VIDEOIO_DISENG0_TCON0_TCON_CTRL_MINILVDS_OPCODE_Msk 0x7000UL
#define VIDEOSS_VIDEOIO_DISENG0_TCON0_TCON_CTRL_DUAL_SWAP_Pos 15UL
#define VIDEOSS_VIDEOIO_DISENG0_TCON0_TCON_CTRL_DUAL_SWAP_Msk 0x8000UL
#define VIDEOSS_VIDEOIO_DISENG0_TCON0_TCON_CTRL_SPLITPOSITION_Pos 16UL
#define VIDEOSS_VIDEOIO_DISENG0_TCON0_TCON_CTRL_SPLITPOSITION_Msk 0x3FFF0000UL
/* VIDEOSS_VIDEOIO_DISENG0_TCON0.RSDSINVCTRL */
#define VIDEOSS_VIDEOIO_DISENG0_TCON0_RSDSINVCTRL_RSDS_INV_Pos 0UL
#define VIDEOSS_VIDEOIO_DISENG0_TCON0_RSDSINVCTRL_RSDS_INV_Msk 0xFFFUL
#define VIDEOSS_VIDEOIO_DISENG0_TCON0_RSDSINVCTRL_RSDS_INV_DUAL_Pos 16UL
#define VIDEOSS_VIDEOIO_DISENG0_TCON0_RSDSINVCTRL_RSDS_INV_DUAL_Msk 0xFFF0000UL
/* VIDEOSS_VIDEOIO_DISENG0_TCON0.MAPBIT3_0 */
#define VIDEOSS_VIDEOIO_DISENG0_TCON0_MAPBIT3_0_MAPBIT0_Pos 0UL
#define VIDEOSS_VIDEOIO_DISENG0_TCON0_MAPBIT3_0_MAPBIT0_Msk 0x1FUL
#define VIDEOSS_VIDEOIO_DISENG0_TCON0_MAPBIT3_0_MAPBIT1_Pos 8UL
#define VIDEOSS_VIDEOIO_DISENG0_TCON0_MAPBIT3_0_MAPBIT1_Msk 0x1F00UL
#define VIDEOSS_VIDEOIO_DISENG0_TCON0_MAPBIT3_0_MAPBIT2_Pos 16UL
#define VIDEOSS_VIDEOIO_DISENG0_TCON0_MAPBIT3_0_MAPBIT2_Msk 0x1F0000UL
#define VIDEOSS_VIDEOIO_DISENG0_TCON0_MAPBIT3_0_MAPBIT3_Pos 24UL
#define VIDEOSS_VIDEOIO_DISENG0_TCON0_MAPBIT3_0_MAPBIT3_Msk 0x1F000000UL
/* VIDEOSS_VIDEOIO_DISENG0_TCON0.MAPBIT7_4 */
#define VIDEOSS_VIDEOIO_DISENG0_TCON0_MAPBIT7_4_MAPBIT4_Pos 0UL
#define VIDEOSS_VIDEOIO_DISENG0_TCON0_MAPBIT7_4_MAPBIT4_Msk 0x1FUL
#define VIDEOSS_VIDEOIO_DISENG0_TCON0_MAPBIT7_4_MAPBIT5_Pos 8UL
#define VIDEOSS_VIDEOIO_DISENG0_TCON0_MAPBIT7_4_MAPBIT5_Msk 0x1F00UL
#define VIDEOSS_VIDEOIO_DISENG0_TCON0_MAPBIT7_4_MAPBIT6_Pos 16UL
#define VIDEOSS_VIDEOIO_DISENG0_TCON0_MAPBIT7_4_MAPBIT6_Msk 0x1F0000UL
#define VIDEOSS_VIDEOIO_DISENG0_TCON0_MAPBIT7_4_MAPBIT7_Pos 24UL
#define VIDEOSS_VIDEOIO_DISENG0_TCON0_MAPBIT7_4_MAPBIT7_Msk 0x1F000000UL
/* VIDEOSS_VIDEOIO_DISENG0_TCON0.MAPBIT11_8 */
#define VIDEOSS_VIDEOIO_DISENG0_TCON0_MAPBIT11_8_MAPBIT8_Pos 0UL
#define VIDEOSS_VIDEOIO_DISENG0_TCON0_MAPBIT11_8_MAPBIT8_Msk 0x1FUL
#define VIDEOSS_VIDEOIO_DISENG0_TCON0_MAPBIT11_8_MAPBIT9_Pos 8UL
#define VIDEOSS_VIDEOIO_DISENG0_TCON0_MAPBIT11_8_MAPBIT9_Msk 0x1F00UL
#define VIDEOSS_VIDEOIO_DISENG0_TCON0_MAPBIT11_8_MAPBIT10_Pos 16UL
#define VIDEOSS_VIDEOIO_DISENG0_TCON0_MAPBIT11_8_MAPBIT10_Msk 0x1F0000UL
#define VIDEOSS_VIDEOIO_DISENG0_TCON0_MAPBIT11_8_MAPBIT11_Pos 24UL
#define VIDEOSS_VIDEOIO_DISENG0_TCON0_MAPBIT11_8_MAPBIT11_Msk 0x1F000000UL
/* VIDEOSS_VIDEOIO_DISENG0_TCON0.MAPBIT15_12 */
#define VIDEOSS_VIDEOIO_DISENG0_TCON0_MAPBIT15_12_MAPBIT12_Pos 0UL
#define VIDEOSS_VIDEOIO_DISENG0_TCON0_MAPBIT15_12_MAPBIT12_Msk 0x1FUL
#define VIDEOSS_VIDEOIO_DISENG0_TCON0_MAPBIT15_12_MAPBIT13_Pos 8UL
#define VIDEOSS_VIDEOIO_DISENG0_TCON0_MAPBIT15_12_MAPBIT13_Msk 0x1F00UL
#define VIDEOSS_VIDEOIO_DISENG0_TCON0_MAPBIT15_12_MAPBIT14_Pos 16UL
#define VIDEOSS_VIDEOIO_DISENG0_TCON0_MAPBIT15_12_MAPBIT14_Msk 0x1F0000UL
#define VIDEOSS_VIDEOIO_DISENG0_TCON0_MAPBIT15_12_MAPBIT15_Pos 24UL
#define VIDEOSS_VIDEOIO_DISENG0_TCON0_MAPBIT15_12_MAPBIT15_Msk 0x1F000000UL
/* VIDEOSS_VIDEOIO_DISENG0_TCON0.MAPBIT19_16 */
#define VIDEOSS_VIDEOIO_DISENG0_TCON0_MAPBIT19_16_MAPBIT16_Pos 0UL
#define VIDEOSS_VIDEOIO_DISENG0_TCON0_MAPBIT19_16_MAPBIT16_Msk 0x1FUL
#define VIDEOSS_VIDEOIO_DISENG0_TCON0_MAPBIT19_16_MAPBIT17_Pos 8UL
#define VIDEOSS_VIDEOIO_DISENG0_TCON0_MAPBIT19_16_MAPBIT17_Msk 0x1F00UL
#define VIDEOSS_VIDEOIO_DISENG0_TCON0_MAPBIT19_16_MAPBIT18_Pos 16UL
#define VIDEOSS_VIDEOIO_DISENG0_TCON0_MAPBIT19_16_MAPBIT18_Msk 0x1F0000UL
#define VIDEOSS_VIDEOIO_DISENG0_TCON0_MAPBIT19_16_MAPBIT19_Pos 24UL
#define VIDEOSS_VIDEOIO_DISENG0_TCON0_MAPBIT19_16_MAPBIT19_Msk 0x1F000000UL
/* VIDEOSS_VIDEOIO_DISENG0_TCON0.MAPBIT23_20 */
#define VIDEOSS_VIDEOIO_DISENG0_TCON0_MAPBIT23_20_MAPBIT20_Pos 0UL
#define VIDEOSS_VIDEOIO_DISENG0_TCON0_MAPBIT23_20_MAPBIT20_Msk 0x1FUL
#define VIDEOSS_VIDEOIO_DISENG0_TCON0_MAPBIT23_20_MAPBIT21_Pos 8UL
#define VIDEOSS_VIDEOIO_DISENG0_TCON0_MAPBIT23_20_MAPBIT21_Msk 0x1F00UL
#define VIDEOSS_VIDEOIO_DISENG0_TCON0_MAPBIT23_20_MAPBIT22_Pos 16UL
#define VIDEOSS_VIDEOIO_DISENG0_TCON0_MAPBIT23_20_MAPBIT22_Msk 0x1F0000UL
#define VIDEOSS_VIDEOIO_DISENG0_TCON0_MAPBIT23_20_MAPBIT23_Pos 24UL
#define VIDEOSS_VIDEOIO_DISENG0_TCON0_MAPBIT23_20_MAPBIT23_Msk 0x1F000000UL
/* VIDEOSS_VIDEOIO_DISENG0_TCON0.MAPBIT27_24 */
#define VIDEOSS_VIDEOIO_DISENG0_TCON0_MAPBIT27_24_MAPBIT24_Pos 0UL
#define VIDEOSS_VIDEOIO_DISENG0_TCON0_MAPBIT27_24_MAPBIT24_Msk 0x1FUL
#define VIDEOSS_VIDEOIO_DISENG0_TCON0_MAPBIT27_24_MAPBIT25_Pos 8UL
#define VIDEOSS_VIDEOIO_DISENG0_TCON0_MAPBIT27_24_MAPBIT25_Msk 0x1F00UL
#define VIDEOSS_VIDEOIO_DISENG0_TCON0_MAPBIT27_24_MAPBIT26_Pos 16UL
#define VIDEOSS_VIDEOIO_DISENG0_TCON0_MAPBIT27_24_MAPBIT26_Msk 0x1F0000UL
#define VIDEOSS_VIDEOIO_DISENG0_TCON0_MAPBIT27_24_MAPBIT27_Pos 24UL
#define VIDEOSS_VIDEOIO_DISENG0_TCON0_MAPBIT27_24_MAPBIT27_Msk 0x1F000000UL
/* VIDEOSS_VIDEOIO_DISENG0_TCON0.MAPBIT3_0_DUAL */
#define VIDEOSS_VIDEOIO_DISENG0_TCON0_MAPBIT3_0_DUAL_MAPBIT0_DUAL_Pos 0UL
#define VIDEOSS_VIDEOIO_DISENG0_TCON0_MAPBIT3_0_DUAL_MAPBIT0_DUAL_Msk 0x1FUL
#define VIDEOSS_VIDEOIO_DISENG0_TCON0_MAPBIT3_0_DUAL_MAPBIT1_DUAL_Pos 8UL
#define VIDEOSS_VIDEOIO_DISENG0_TCON0_MAPBIT3_0_DUAL_MAPBIT1_DUAL_Msk 0x1F00UL
#define VIDEOSS_VIDEOIO_DISENG0_TCON0_MAPBIT3_0_DUAL_MAPBIT2_DUAL_Pos 16UL
#define VIDEOSS_VIDEOIO_DISENG0_TCON0_MAPBIT3_0_DUAL_MAPBIT2_DUAL_Msk 0x1F0000UL
#define VIDEOSS_VIDEOIO_DISENG0_TCON0_MAPBIT3_0_DUAL_MAPBIT3_DUAL_Pos 24UL
#define VIDEOSS_VIDEOIO_DISENG0_TCON0_MAPBIT3_0_DUAL_MAPBIT3_DUAL_Msk 0x1F000000UL
/* VIDEOSS_VIDEOIO_DISENG0_TCON0.MAPBIT7_4_DUAL */
#define VIDEOSS_VIDEOIO_DISENG0_TCON0_MAPBIT7_4_DUAL_MAPBIT4_DUAL_Pos 0UL
#define VIDEOSS_VIDEOIO_DISENG0_TCON0_MAPBIT7_4_DUAL_MAPBIT4_DUAL_Msk 0x1FUL
#define VIDEOSS_VIDEOIO_DISENG0_TCON0_MAPBIT7_4_DUAL_MAPBIT5_DUAL_Pos 8UL
#define VIDEOSS_VIDEOIO_DISENG0_TCON0_MAPBIT7_4_DUAL_MAPBIT5_DUAL_Msk 0x1F00UL
#define VIDEOSS_VIDEOIO_DISENG0_TCON0_MAPBIT7_4_DUAL_MAPBIT6_DUAL_Pos 16UL
#define VIDEOSS_VIDEOIO_DISENG0_TCON0_MAPBIT7_4_DUAL_MAPBIT6_DUAL_Msk 0x1F0000UL
#define VIDEOSS_VIDEOIO_DISENG0_TCON0_MAPBIT7_4_DUAL_MAPBIT7_DUAL_Pos 24UL
#define VIDEOSS_VIDEOIO_DISENG0_TCON0_MAPBIT7_4_DUAL_MAPBIT7_DUAL_Msk 0x1F000000UL
/* VIDEOSS_VIDEOIO_DISENG0_TCON0.MAPBIT11_8_DUAL */
#define VIDEOSS_VIDEOIO_DISENG0_TCON0_MAPBIT11_8_DUAL_MAPBIT8_DUAL_Pos 0UL
#define VIDEOSS_VIDEOIO_DISENG0_TCON0_MAPBIT11_8_DUAL_MAPBIT8_DUAL_Msk 0x1FUL
#define VIDEOSS_VIDEOIO_DISENG0_TCON0_MAPBIT11_8_DUAL_MAPBIT9_DUAL_Pos 8UL
#define VIDEOSS_VIDEOIO_DISENG0_TCON0_MAPBIT11_8_DUAL_MAPBIT9_DUAL_Msk 0x1F00UL
#define VIDEOSS_VIDEOIO_DISENG0_TCON0_MAPBIT11_8_DUAL_MAPBIT10_DUAL_Pos 16UL
#define VIDEOSS_VIDEOIO_DISENG0_TCON0_MAPBIT11_8_DUAL_MAPBIT10_DUAL_Msk 0x1F0000UL
#define VIDEOSS_VIDEOIO_DISENG0_TCON0_MAPBIT11_8_DUAL_MAPBIT11_DUAL_Pos 24UL
#define VIDEOSS_VIDEOIO_DISENG0_TCON0_MAPBIT11_8_DUAL_MAPBIT11_DUAL_Msk 0x1F000000UL
/* VIDEOSS_VIDEOIO_DISENG0_TCON0.MAPBIT15_12_DUAL */
#define VIDEOSS_VIDEOIO_DISENG0_TCON0_MAPBIT15_12_DUAL_MAPBIT12_DUAL_Pos 0UL
#define VIDEOSS_VIDEOIO_DISENG0_TCON0_MAPBIT15_12_DUAL_MAPBIT12_DUAL_Msk 0x1FUL
#define VIDEOSS_VIDEOIO_DISENG0_TCON0_MAPBIT15_12_DUAL_MAPBIT13_DUAL_Pos 8UL
#define VIDEOSS_VIDEOIO_DISENG0_TCON0_MAPBIT15_12_DUAL_MAPBIT13_DUAL_Msk 0x1F00UL
#define VIDEOSS_VIDEOIO_DISENG0_TCON0_MAPBIT15_12_DUAL_MAPBIT14_DUAL_Pos 16UL
#define VIDEOSS_VIDEOIO_DISENG0_TCON0_MAPBIT15_12_DUAL_MAPBIT14_DUAL_Msk 0x1F0000UL
#define VIDEOSS_VIDEOIO_DISENG0_TCON0_MAPBIT15_12_DUAL_MAPBIT15_DUAL_Pos 24UL
#define VIDEOSS_VIDEOIO_DISENG0_TCON0_MAPBIT15_12_DUAL_MAPBIT15_DUAL_Msk 0x1F000000UL
/* VIDEOSS_VIDEOIO_DISENG0_TCON0.MAPBIT19_16_DUAL */
#define VIDEOSS_VIDEOIO_DISENG0_TCON0_MAPBIT19_16_DUAL_MAPBIT16_DUAL_Pos 0UL
#define VIDEOSS_VIDEOIO_DISENG0_TCON0_MAPBIT19_16_DUAL_MAPBIT16_DUAL_Msk 0x1FUL
#define VIDEOSS_VIDEOIO_DISENG0_TCON0_MAPBIT19_16_DUAL_MAPBIT17_DUAL_Pos 8UL
#define VIDEOSS_VIDEOIO_DISENG0_TCON0_MAPBIT19_16_DUAL_MAPBIT17_DUAL_Msk 0x1F00UL
#define VIDEOSS_VIDEOIO_DISENG0_TCON0_MAPBIT19_16_DUAL_MAPBIT18_DUAL_Pos 16UL
#define VIDEOSS_VIDEOIO_DISENG0_TCON0_MAPBIT19_16_DUAL_MAPBIT18_DUAL_Msk 0x1F0000UL
#define VIDEOSS_VIDEOIO_DISENG0_TCON0_MAPBIT19_16_DUAL_MAPBIT19_DUAL_Pos 24UL
#define VIDEOSS_VIDEOIO_DISENG0_TCON0_MAPBIT19_16_DUAL_MAPBIT19_DUAL_Msk 0x1F000000UL
/* VIDEOSS_VIDEOIO_DISENG0_TCON0.MAPBIT23_20_DUAL */
#define VIDEOSS_VIDEOIO_DISENG0_TCON0_MAPBIT23_20_DUAL_MAPBIT20_DUAL_Pos 0UL
#define VIDEOSS_VIDEOIO_DISENG0_TCON0_MAPBIT23_20_DUAL_MAPBIT20_DUAL_Msk 0x1FUL
#define VIDEOSS_VIDEOIO_DISENG0_TCON0_MAPBIT23_20_DUAL_MAPBIT21_DUAL_Pos 8UL
#define VIDEOSS_VIDEOIO_DISENG0_TCON0_MAPBIT23_20_DUAL_MAPBIT21_DUAL_Msk 0x1F00UL
#define VIDEOSS_VIDEOIO_DISENG0_TCON0_MAPBIT23_20_DUAL_MAPBIT22_DUAL_Pos 16UL
#define VIDEOSS_VIDEOIO_DISENG0_TCON0_MAPBIT23_20_DUAL_MAPBIT22_DUAL_Msk 0x1F0000UL
#define VIDEOSS_VIDEOIO_DISENG0_TCON0_MAPBIT23_20_DUAL_MAPBIT23_DUAL_Pos 24UL
#define VIDEOSS_VIDEOIO_DISENG0_TCON0_MAPBIT23_20_DUAL_MAPBIT23_DUAL_Msk 0x1F000000UL
/* VIDEOSS_VIDEOIO_DISENG0_TCON0.MAPBIT27_24_DUAL */
#define VIDEOSS_VIDEOIO_DISENG0_TCON0_MAPBIT27_24_DUAL_MAPBIT24_DUAL_Pos 0UL
#define VIDEOSS_VIDEOIO_DISENG0_TCON0_MAPBIT27_24_DUAL_MAPBIT24_DUAL_Msk 0x1FUL
#define VIDEOSS_VIDEOIO_DISENG0_TCON0_MAPBIT27_24_DUAL_MAPBIT25_DUAL_Pos 8UL
#define VIDEOSS_VIDEOIO_DISENG0_TCON0_MAPBIT27_24_DUAL_MAPBIT25_DUAL_Msk 0x1F00UL
#define VIDEOSS_VIDEOIO_DISENG0_TCON0_MAPBIT27_24_DUAL_MAPBIT26_DUAL_Pos 16UL
#define VIDEOSS_VIDEOIO_DISENG0_TCON0_MAPBIT27_24_DUAL_MAPBIT26_DUAL_Msk 0x1F0000UL
#define VIDEOSS_VIDEOIO_DISENG0_TCON0_MAPBIT27_24_DUAL_MAPBIT27_DUAL_Pos 24UL
#define VIDEOSS_VIDEOIO_DISENG0_TCON0_MAPBIT27_24_DUAL_MAPBIT27_DUAL_Msk 0x1F000000UL
/* VIDEOSS_VIDEOIO_DISENG0_TCON0.SPG0POSON */
#define VIDEOSS_VIDEOIO_DISENG0_TCON0_SPG0POSON_SPGPSON_Y0_Pos 0UL
#define VIDEOSS_VIDEOIO_DISENG0_TCON0_SPG0POSON_SPGPSON_Y0_Msk 0x7FFFUL
#define VIDEOSS_VIDEOIO_DISENG0_TCON0_SPG0POSON_SPGPSON_FIELD0_Pos 15UL
#define VIDEOSS_VIDEOIO_DISENG0_TCON0_SPG0POSON_SPGPSON_FIELD0_Msk 0x8000UL
#define VIDEOSS_VIDEOIO_DISENG0_TCON0_SPG0POSON_SPGPSON_X0_Pos 16UL
#define VIDEOSS_VIDEOIO_DISENG0_TCON0_SPG0POSON_SPGPSON_X0_Msk 0x7FFF0000UL
#define VIDEOSS_VIDEOIO_DISENG0_TCON0_SPG0POSON_SPGPSON_TOGGLE0_Pos 31UL
#define VIDEOSS_VIDEOIO_DISENG0_TCON0_SPG0POSON_SPGPSON_TOGGLE0_Msk 0x80000000UL
/* VIDEOSS_VIDEOIO_DISENG0_TCON0.SPG0MASKON */
#define VIDEOSS_VIDEOIO_DISENG0_TCON0_SPG0MASKON_SPGMKON0_Pos 0UL
#define VIDEOSS_VIDEOIO_DISENG0_TCON0_SPG0MASKON_SPGMKON0_Msk 0x7FFFFFFFUL
/* VIDEOSS_VIDEOIO_DISENG0_TCON0.SPG0POSOFF */
#define VIDEOSS_VIDEOIO_DISENG0_TCON0_SPG0POSOFF_SPGPSOFF_Y0_Pos 0UL
#define VIDEOSS_VIDEOIO_DISENG0_TCON0_SPG0POSOFF_SPGPSOFF_Y0_Msk 0x7FFFUL
#define VIDEOSS_VIDEOIO_DISENG0_TCON0_SPG0POSOFF_SPGPSOFF_FIELD0_Pos 15UL
#define VIDEOSS_VIDEOIO_DISENG0_TCON0_SPG0POSOFF_SPGPSOFF_FIELD0_Msk 0x8000UL
#define VIDEOSS_VIDEOIO_DISENG0_TCON0_SPG0POSOFF_SPGPSOFF_X0_Pos 16UL
#define VIDEOSS_VIDEOIO_DISENG0_TCON0_SPG0POSOFF_SPGPSOFF_X0_Msk 0x7FFF0000UL
#define VIDEOSS_VIDEOIO_DISENG0_TCON0_SPG0POSOFF_SPGPSOFF_TOGGLE0_Pos 31UL
#define VIDEOSS_VIDEOIO_DISENG0_TCON0_SPG0POSOFF_SPGPSOFF_TOGGLE0_Msk 0x80000000UL
/* VIDEOSS_VIDEOIO_DISENG0_TCON0.SPG0MASKOFF */
#define VIDEOSS_VIDEOIO_DISENG0_TCON0_SPG0MASKOFF_SPGMKOFF0_Pos 0UL
#define VIDEOSS_VIDEOIO_DISENG0_TCON0_SPG0MASKOFF_SPGMKOFF0_Msk 0x7FFFFFFFUL
/* VIDEOSS_VIDEOIO_DISENG0_TCON0.SPG1POSON */
#define VIDEOSS_VIDEOIO_DISENG0_TCON0_SPG1POSON_SPGPSON_Y1_Pos 0UL
#define VIDEOSS_VIDEOIO_DISENG0_TCON0_SPG1POSON_SPGPSON_Y1_Msk 0x7FFFUL
#define VIDEOSS_VIDEOIO_DISENG0_TCON0_SPG1POSON_SPGPSON_FIELD1_Pos 15UL
#define VIDEOSS_VIDEOIO_DISENG0_TCON0_SPG1POSON_SPGPSON_FIELD1_Msk 0x8000UL
#define VIDEOSS_VIDEOIO_DISENG0_TCON0_SPG1POSON_SPGPSON_X1_Pos 16UL
#define VIDEOSS_VIDEOIO_DISENG0_TCON0_SPG1POSON_SPGPSON_X1_Msk 0x7FFF0000UL
#define VIDEOSS_VIDEOIO_DISENG0_TCON0_SPG1POSON_SPGPSON_TOGGLE1_Pos 31UL
#define VIDEOSS_VIDEOIO_DISENG0_TCON0_SPG1POSON_SPGPSON_TOGGLE1_Msk 0x80000000UL
/* VIDEOSS_VIDEOIO_DISENG0_TCON0.SPG1MASKON */
#define VIDEOSS_VIDEOIO_DISENG0_TCON0_SPG1MASKON_SPGMKON1_Pos 0UL
#define VIDEOSS_VIDEOIO_DISENG0_TCON0_SPG1MASKON_SPGMKON1_Msk 0x7FFFFFFFUL
/* VIDEOSS_VIDEOIO_DISENG0_TCON0.SPG1POSOFF */
#define VIDEOSS_VIDEOIO_DISENG0_TCON0_SPG1POSOFF_SPGPSOFF_Y1_Pos 0UL
#define VIDEOSS_VIDEOIO_DISENG0_TCON0_SPG1POSOFF_SPGPSOFF_Y1_Msk 0x7FFFUL
#define VIDEOSS_VIDEOIO_DISENG0_TCON0_SPG1POSOFF_SPGPSOFF_FIELD1_Pos 15UL
#define VIDEOSS_VIDEOIO_DISENG0_TCON0_SPG1POSOFF_SPGPSOFF_FIELD1_Msk 0x8000UL
#define VIDEOSS_VIDEOIO_DISENG0_TCON0_SPG1POSOFF_SPGPSOFF_X1_Pos 16UL
#define VIDEOSS_VIDEOIO_DISENG0_TCON0_SPG1POSOFF_SPGPSOFF_X1_Msk 0x7FFF0000UL
#define VIDEOSS_VIDEOIO_DISENG0_TCON0_SPG1POSOFF_SPGPSOFF_TOGGLE1_Pos 31UL
#define VIDEOSS_VIDEOIO_DISENG0_TCON0_SPG1POSOFF_SPGPSOFF_TOGGLE1_Msk 0x80000000UL
/* VIDEOSS_VIDEOIO_DISENG0_TCON0.SPG1MASKOFF */
#define VIDEOSS_VIDEOIO_DISENG0_TCON0_SPG1MASKOFF_SPGMKOFF1_Pos 0UL
#define VIDEOSS_VIDEOIO_DISENG0_TCON0_SPG1MASKOFF_SPGMKOFF1_Msk 0x7FFFFFFFUL
/* VIDEOSS_VIDEOIO_DISENG0_TCON0.SPG2POSON */
#define VIDEOSS_VIDEOIO_DISENG0_TCON0_SPG2POSON_SPGPSON_Y2_Pos 0UL
#define VIDEOSS_VIDEOIO_DISENG0_TCON0_SPG2POSON_SPGPSON_Y2_Msk 0x7FFFUL
#define VIDEOSS_VIDEOIO_DISENG0_TCON0_SPG2POSON_SPGPSON_FIELD2_Pos 15UL
#define VIDEOSS_VIDEOIO_DISENG0_TCON0_SPG2POSON_SPGPSON_FIELD2_Msk 0x8000UL
#define VIDEOSS_VIDEOIO_DISENG0_TCON0_SPG2POSON_SPGPSON_X2_Pos 16UL
#define VIDEOSS_VIDEOIO_DISENG0_TCON0_SPG2POSON_SPGPSON_X2_Msk 0x7FFF0000UL
#define VIDEOSS_VIDEOIO_DISENG0_TCON0_SPG2POSON_SPGPSON_TOGGLE2_Pos 31UL
#define VIDEOSS_VIDEOIO_DISENG0_TCON0_SPG2POSON_SPGPSON_TOGGLE2_Msk 0x80000000UL
/* VIDEOSS_VIDEOIO_DISENG0_TCON0.SPG2MASKON */
#define VIDEOSS_VIDEOIO_DISENG0_TCON0_SPG2MASKON_SPGMKON2_Pos 0UL
#define VIDEOSS_VIDEOIO_DISENG0_TCON0_SPG2MASKON_SPGMKON2_Msk 0x7FFFFFFFUL
/* VIDEOSS_VIDEOIO_DISENG0_TCON0.SPG2POSOFF */
#define VIDEOSS_VIDEOIO_DISENG0_TCON0_SPG2POSOFF_SPGPSOFF_Y2_Pos 0UL
#define VIDEOSS_VIDEOIO_DISENG0_TCON0_SPG2POSOFF_SPGPSOFF_Y2_Msk 0x7FFFUL
#define VIDEOSS_VIDEOIO_DISENG0_TCON0_SPG2POSOFF_SPGPSOFF_FIELD2_Pos 15UL
#define VIDEOSS_VIDEOIO_DISENG0_TCON0_SPG2POSOFF_SPGPSOFF_FIELD2_Msk 0x8000UL
#define VIDEOSS_VIDEOIO_DISENG0_TCON0_SPG2POSOFF_SPGPSOFF_X2_Pos 16UL
#define VIDEOSS_VIDEOIO_DISENG0_TCON0_SPG2POSOFF_SPGPSOFF_X2_Msk 0x7FFF0000UL
#define VIDEOSS_VIDEOIO_DISENG0_TCON0_SPG2POSOFF_SPGPSOFF_TOGGLE2_Pos 31UL
#define VIDEOSS_VIDEOIO_DISENG0_TCON0_SPG2POSOFF_SPGPSOFF_TOGGLE2_Msk 0x80000000UL
/* VIDEOSS_VIDEOIO_DISENG0_TCON0.SPG2MASKOFF */
#define VIDEOSS_VIDEOIO_DISENG0_TCON0_SPG2MASKOFF_SPGMKOFF2_Pos 0UL
#define VIDEOSS_VIDEOIO_DISENG0_TCON0_SPG2MASKOFF_SPGMKOFF2_Msk 0x7FFFFFFFUL
/* VIDEOSS_VIDEOIO_DISENG0_TCON0.SPG3POSON */
#define VIDEOSS_VIDEOIO_DISENG0_TCON0_SPG3POSON_SPGPSON_Y3_Pos 0UL
#define VIDEOSS_VIDEOIO_DISENG0_TCON0_SPG3POSON_SPGPSON_Y3_Msk 0x7FFFUL
#define VIDEOSS_VIDEOIO_DISENG0_TCON0_SPG3POSON_SPGPSON_FIELD3_Pos 15UL
#define VIDEOSS_VIDEOIO_DISENG0_TCON0_SPG3POSON_SPGPSON_FIELD3_Msk 0x8000UL
#define VIDEOSS_VIDEOIO_DISENG0_TCON0_SPG3POSON_SPGPSON_X3_Pos 16UL
#define VIDEOSS_VIDEOIO_DISENG0_TCON0_SPG3POSON_SPGPSON_X3_Msk 0x7FFF0000UL
#define VIDEOSS_VIDEOIO_DISENG0_TCON0_SPG3POSON_SPGPSON_TOGGLE3_Pos 31UL
#define VIDEOSS_VIDEOIO_DISENG0_TCON0_SPG3POSON_SPGPSON_TOGGLE3_Msk 0x80000000UL
/* VIDEOSS_VIDEOIO_DISENG0_TCON0.SPG3MASKON */
#define VIDEOSS_VIDEOIO_DISENG0_TCON0_SPG3MASKON_SPGMKON3_Pos 0UL
#define VIDEOSS_VIDEOIO_DISENG0_TCON0_SPG3MASKON_SPGMKON3_Msk 0x7FFFFFFFUL
/* VIDEOSS_VIDEOIO_DISENG0_TCON0.SPG3POSOFF */
#define VIDEOSS_VIDEOIO_DISENG0_TCON0_SPG3POSOFF_SPGPSOFF_Y3_Pos 0UL
#define VIDEOSS_VIDEOIO_DISENG0_TCON0_SPG3POSOFF_SPGPSOFF_Y3_Msk 0x7FFFUL
#define VIDEOSS_VIDEOIO_DISENG0_TCON0_SPG3POSOFF_SPGPSOFF_FIELD3_Pos 15UL
#define VIDEOSS_VIDEOIO_DISENG0_TCON0_SPG3POSOFF_SPGPSOFF_FIELD3_Msk 0x8000UL
#define VIDEOSS_VIDEOIO_DISENG0_TCON0_SPG3POSOFF_SPGPSOFF_X3_Pos 16UL
#define VIDEOSS_VIDEOIO_DISENG0_TCON0_SPG3POSOFF_SPGPSOFF_X3_Msk 0x7FFF0000UL
#define VIDEOSS_VIDEOIO_DISENG0_TCON0_SPG3POSOFF_SPGPSOFF_TOGGLE3_Pos 31UL
#define VIDEOSS_VIDEOIO_DISENG0_TCON0_SPG3POSOFF_SPGPSOFF_TOGGLE3_Msk 0x80000000UL
/* VIDEOSS_VIDEOIO_DISENG0_TCON0.SPG3MASKOFF */
#define VIDEOSS_VIDEOIO_DISENG0_TCON0_SPG3MASKOFF_SPGMKOFF3_Pos 0UL
#define VIDEOSS_VIDEOIO_DISENG0_TCON0_SPG3MASKOFF_SPGMKOFF3_Msk 0x7FFFFFFFUL
/* VIDEOSS_VIDEOIO_DISENG0_TCON0.SPG4POSON */
#define VIDEOSS_VIDEOIO_DISENG0_TCON0_SPG4POSON_SPGPSON_Y4_Pos 0UL
#define VIDEOSS_VIDEOIO_DISENG0_TCON0_SPG4POSON_SPGPSON_Y4_Msk 0x7FFFUL
#define VIDEOSS_VIDEOIO_DISENG0_TCON0_SPG4POSON_SPGPSON_FIELD4_Pos 15UL
#define VIDEOSS_VIDEOIO_DISENG0_TCON0_SPG4POSON_SPGPSON_FIELD4_Msk 0x8000UL
#define VIDEOSS_VIDEOIO_DISENG0_TCON0_SPG4POSON_SPGPSON_X4_Pos 16UL
#define VIDEOSS_VIDEOIO_DISENG0_TCON0_SPG4POSON_SPGPSON_X4_Msk 0x7FFF0000UL
#define VIDEOSS_VIDEOIO_DISENG0_TCON0_SPG4POSON_SPGPSON_TOGGLE4_Pos 31UL
#define VIDEOSS_VIDEOIO_DISENG0_TCON0_SPG4POSON_SPGPSON_TOGGLE4_Msk 0x80000000UL
/* VIDEOSS_VIDEOIO_DISENG0_TCON0.SPG4MASKON */
#define VIDEOSS_VIDEOIO_DISENG0_TCON0_SPG4MASKON_SPGMKON4_Pos 0UL
#define VIDEOSS_VIDEOIO_DISENG0_TCON0_SPG4MASKON_SPGMKON4_Msk 0x7FFFFFFFUL
/* VIDEOSS_VIDEOIO_DISENG0_TCON0.SPG4POSOFF */
#define VIDEOSS_VIDEOIO_DISENG0_TCON0_SPG4POSOFF_SPGPSOFF_Y4_Pos 0UL
#define VIDEOSS_VIDEOIO_DISENG0_TCON0_SPG4POSOFF_SPGPSOFF_Y4_Msk 0x7FFFUL
#define VIDEOSS_VIDEOIO_DISENG0_TCON0_SPG4POSOFF_SPGPSOFF_FIELD4_Pos 15UL
#define VIDEOSS_VIDEOIO_DISENG0_TCON0_SPG4POSOFF_SPGPSOFF_FIELD4_Msk 0x8000UL
#define VIDEOSS_VIDEOIO_DISENG0_TCON0_SPG4POSOFF_SPGPSOFF_X4_Pos 16UL
#define VIDEOSS_VIDEOIO_DISENG0_TCON0_SPG4POSOFF_SPGPSOFF_X4_Msk 0x7FFF0000UL
#define VIDEOSS_VIDEOIO_DISENG0_TCON0_SPG4POSOFF_SPGPSOFF_TOGGLE4_Pos 31UL
#define VIDEOSS_VIDEOIO_DISENG0_TCON0_SPG4POSOFF_SPGPSOFF_TOGGLE4_Msk 0x80000000UL
/* VIDEOSS_VIDEOIO_DISENG0_TCON0.SPG4MASKOFF */
#define VIDEOSS_VIDEOIO_DISENG0_TCON0_SPG4MASKOFF_SPGMKOFF4_Pos 0UL
#define VIDEOSS_VIDEOIO_DISENG0_TCON0_SPG4MASKOFF_SPGMKOFF4_Msk 0x7FFFFFFFUL
/* VIDEOSS_VIDEOIO_DISENG0_TCON0.SPG5POSON */
#define VIDEOSS_VIDEOIO_DISENG0_TCON0_SPG5POSON_SPGPSON_Y5_Pos 0UL
#define VIDEOSS_VIDEOIO_DISENG0_TCON0_SPG5POSON_SPGPSON_Y5_Msk 0x7FFFUL
#define VIDEOSS_VIDEOIO_DISENG0_TCON0_SPG5POSON_SPGPSON_FIELD5_Pos 15UL
#define VIDEOSS_VIDEOIO_DISENG0_TCON0_SPG5POSON_SPGPSON_FIELD5_Msk 0x8000UL
#define VIDEOSS_VIDEOIO_DISENG0_TCON0_SPG5POSON_SPGPSON_X5_Pos 16UL
#define VIDEOSS_VIDEOIO_DISENG0_TCON0_SPG5POSON_SPGPSON_X5_Msk 0x7FFF0000UL
#define VIDEOSS_VIDEOIO_DISENG0_TCON0_SPG5POSON_SPGPSON_TOGGLE5_Pos 31UL
#define VIDEOSS_VIDEOIO_DISENG0_TCON0_SPG5POSON_SPGPSON_TOGGLE5_Msk 0x80000000UL
/* VIDEOSS_VIDEOIO_DISENG0_TCON0.SPG5MASKON */
#define VIDEOSS_VIDEOIO_DISENG0_TCON0_SPG5MASKON_SPGMKON5_Pos 0UL
#define VIDEOSS_VIDEOIO_DISENG0_TCON0_SPG5MASKON_SPGMKON5_Msk 0x7FFFFFFFUL
/* VIDEOSS_VIDEOIO_DISENG0_TCON0.SPG5POSOFF */
#define VIDEOSS_VIDEOIO_DISENG0_TCON0_SPG5POSOFF_SPGPSOFF_Y5_Pos 0UL
#define VIDEOSS_VIDEOIO_DISENG0_TCON0_SPG5POSOFF_SPGPSOFF_Y5_Msk 0x7FFFUL
#define VIDEOSS_VIDEOIO_DISENG0_TCON0_SPG5POSOFF_SPGPSOFF_FIELD5_Pos 15UL
#define VIDEOSS_VIDEOIO_DISENG0_TCON0_SPG5POSOFF_SPGPSOFF_FIELD5_Msk 0x8000UL
#define VIDEOSS_VIDEOIO_DISENG0_TCON0_SPG5POSOFF_SPGPSOFF_X5_Pos 16UL
#define VIDEOSS_VIDEOIO_DISENG0_TCON0_SPG5POSOFF_SPGPSOFF_X5_Msk 0x7FFF0000UL
#define VIDEOSS_VIDEOIO_DISENG0_TCON0_SPG5POSOFF_SPGPSOFF_TOGGLE5_Pos 31UL
#define VIDEOSS_VIDEOIO_DISENG0_TCON0_SPG5POSOFF_SPGPSOFF_TOGGLE5_Msk 0x80000000UL
/* VIDEOSS_VIDEOIO_DISENG0_TCON0.SPG5MASKOFF */
#define VIDEOSS_VIDEOIO_DISENG0_TCON0_SPG5MASKOFF_SPGMKOFF5_Pos 0UL
#define VIDEOSS_VIDEOIO_DISENG0_TCON0_SPG5MASKOFF_SPGMKOFF5_Msk 0x7FFFFFFFUL
/* VIDEOSS_VIDEOIO_DISENG0_TCON0.SPG6POSON */
#define VIDEOSS_VIDEOIO_DISENG0_TCON0_SPG6POSON_SPGPSON_Y6_Pos 0UL
#define VIDEOSS_VIDEOIO_DISENG0_TCON0_SPG6POSON_SPGPSON_Y6_Msk 0x7FFFUL
#define VIDEOSS_VIDEOIO_DISENG0_TCON0_SPG6POSON_SPGPSON_FIELD6_Pos 15UL
#define VIDEOSS_VIDEOIO_DISENG0_TCON0_SPG6POSON_SPGPSON_FIELD6_Msk 0x8000UL
#define VIDEOSS_VIDEOIO_DISENG0_TCON0_SPG6POSON_SPGPSON_X6_Pos 16UL
#define VIDEOSS_VIDEOIO_DISENG0_TCON0_SPG6POSON_SPGPSON_X6_Msk 0x7FFF0000UL
#define VIDEOSS_VIDEOIO_DISENG0_TCON0_SPG6POSON_SPGPSON_TOGGLE6_Pos 31UL
#define VIDEOSS_VIDEOIO_DISENG0_TCON0_SPG6POSON_SPGPSON_TOGGLE6_Msk 0x80000000UL
/* VIDEOSS_VIDEOIO_DISENG0_TCON0.SPG6MASKON */
#define VIDEOSS_VIDEOIO_DISENG0_TCON0_SPG6MASKON_SPGMKON6_Pos 0UL
#define VIDEOSS_VIDEOIO_DISENG0_TCON0_SPG6MASKON_SPGMKON6_Msk 0x7FFFFFFFUL
/* VIDEOSS_VIDEOIO_DISENG0_TCON0.SPG6POSOFF */
#define VIDEOSS_VIDEOIO_DISENG0_TCON0_SPG6POSOFF_SPGPSOFF_Y6_Pos 0UL
#define VIDEOSS_VIDEOIO_DISENG0_TCON0_SPG6POSOFF_SPGPSOFF_Y6_Msk 0x7FFFUL
#define VIDEOSS_VIDEOIO_DISENG0_TCON0_SPG6POSOFF_SPGPSOFF_FIELD6_Pos 15UL
#define VIDEOSS_VIDEOIO_DISENG0_TCON0_SPG6POSOFF_SPGPSOFF_FIELD6_Msk 0x8000UL
#define VIDEOSS_VIDEOIO_DISENG0_TCON0_SPG6POSOFF_SPGPSOFF_X6_Pos 16UL
#define VIDEOSS_VIDEOIO_DISENG0_TCON0_SPG6POSOFF_SPGPSOFF_X6_Msk 0x7FFF0000UL
#define VIDEOSS_VIDEOIO_DISENG0_TCON0_SPG6POSOFF_SPGPSOFF_TOGGLE6_Pos 31UL
#define VIDEOSS_VIDEOIO_DISENG0_TCON0_SPG6POSOFF_SPGPSOFF_TOGGLE6_Msk 0x80000000UL
/* VIDEOSS_VIDEOIO_DISENG0_TCON0.SPG6MASKOFF */
#define VIDEOSS_VIDEOIO_DISENG0_TCON0_SPG6MASKOFF_SPGMKOFF6_Pos 0UL
#define VIDEOSS_VIDEOIO_DISENG0_TCON0_SPG6MASKOFF_SPGMKOFF6_Msk 0x7FFFFFFFUL
/* VIDEOSS_VIDEOIO_DISENG0_TCON0.SPG7POSON */
#define VIDEOSS_VIDEOIO_DISENG0_TCON0_SPG7POSON_SPGPSON_Y7_Pos 0UL
#define VIDEOSS_VIDEOIO_DISENG0_TCON0_SPG7POSON_SPGPSON_Y7_Msk 0x7FFFUL
#define VIDEOSS_VIDEOIO_DISENG0_TCON0_SPG7POSON_SPGPSON_FIELD7_Pos 15UL
#define VIDEOSS_VIDEOIO_DISENG0_TCON0_SPG7POSON_SPGPSON_FIELD7_Msk 0x8000UL
#define VIDEOSS_VIDEOIO_DISENG0_TCON0_SPG7POSON_SPGPSON_X7_Pos 16UL
#define VIDEOSS_VIDEOIO_DISENG0_TCON0_SPG7POSON_SPGPSON_X7_Msk 0x7FFF0000UL
#define VIDEOSS_VIDEOIO_DISENG0_TCON0_SPG7POSON_SPGPSON_TOGGLE7_Pos 31UL
#define VIDEOSS_VIDEOIO_DISENG0_TCON0_SPG7POSON_SPGPSON_TOGGLE7_Msk 0x80000000UL
/* VIDEOSS_VIDEOIO_DISENG0_TCON0.SPG7MASKON */
#define VIDEOSS_VIDEOIO_DISENG0_TCON0_SPG7MASKON_SPGMKON7_Pos 0UL
#define VIDEOSS_VIDEOIO_DISENG0_TCON0_SPG7MASKON_SPGMKON7_Msk 0x7FFFFFFFUL
/* VIDEOSS_VIDEOIO_DISENG0_TCON0.SPG7POSOFF */
#define VIDEOSS_VIDEOIO_DISENG0_TCON0_SPG7POSOFF_SPGPSOFF_Y7_Pos 0UL
#define VIDEOSS_VIDEOIO_DISENG0_TCON0_SPG7POSOFF_SPGPSOFF_Y7_Msk 0x7FFFUL
#define VIDEOSS_VIDEOIO_DISENG0_TCON0_SPG7POSOFF_SPGPSOFF_FIELD7_Pos 15UL
#define VIDEOSS_VIDEOIO_DISENG0_TCON0_SPG7POSOFF_SPGPSOFF_FIELD7_Msk 0x8000UL
#define VIDEOSS_VIDEOIO_DISENG0_TCON0_SPG7POSOFF_SPGPSOFF_X7_Pos 16UL
#define VIDEOSS_VIDEOIO_DISENG0_TCON0_SPG7POSOFF_SPGPSOFF_X7_Msk 0x7FFF0000UL
#define VIDEOSS_VIDEOIO_DISENG0_TCON0_SPG7POSOFF_SPGPSOFF_TOGGLE7_Pos 31UL
#define VIDEOSS_VIDEOIO_DISENG0_TCON0_SPG7POSOFF_SPGPSOFF_TOGGLE7_Msk 0x80000000UL
/* VIDEOSS_VIDEOIO_DISENG0_TCON0.SPG7MASKOFF */
#define VIDEOSS_VIDEOIO_DISENG0_TCON0_SPG7MASKOFF_SPGMKOFF7_Pos 0UL
#define VIDEOSS_VIDEOIO_DISENG0_TCON0_SPG7MASKOFF_SPGMKOFF7_Msk 0x7FFFFFFFUL
/* VIDEOSS_VIDEOIO_DISENG0_TCON0.SPG8POSON */
#define VIDEOSS_VIDEOIO_DISENG0_TCON0_SPG8POSON_SPGPSON_Y8_Pos 0UL
#define VIDEOSS_VIDEOIO_DISENG0_TCON0_SPG8POSON_SPGPSON_Y8_Msk 0x7FFFUL
#define VIDEOSS_VIDEOIO_DISENG0_TCON0_SPG8POSON_SPGPSON_FIELD8_Pos 15UL
#define VIDEOSS_VIDEOIO_DISENG0_TCON0_SPG8POSON_SPGPSON_FIELD8_Msk 0x8000UL
#define VIDEOSS_VIDEOIO_DISENG0_TCON0_SPG8POSON_SPGPSON_X8_Pos 16UL
#define VIDEOSS_VIDEOIO_DISENG0_TCON0_SPG8POSON_SPGPSON_X8_Msk 0x7FFF0000UL
#define VIDEOSS_VIDEOIO_DISENG0_TCON0_SPG8POSON_SPGPSON_TOGGLE8_Pos 31UL
#define VIDEOSS_VIDEOIO_DISENG0_TCON0_SPG8POSON_SPGPSON_TOGGLE8_Msk 0x80000000UL
/* VIDEOSS_VIDEOIO_DISENG0_TCON0.SPG8MASKON */
#define VIDEOSS_VIDEOIO_DISENG0_TCON0_SPG8MASKON_SPGMKON8_Pos 0UL
#define VIDEOSS_VIDEOIO_DISENG0_TCON0_SPG8MASKON_SPGMKON8_Msk 0x7FFFFFFFUL
/* VIDEOSS_VIDEOIO_DISENG0_TCON0.SPG8POSOFF */
#define VIDEOSS_VIDEOIO_DISENG0_TCON0_SPG8POSOFF_SPGPSOFF_Y8_Pos 0UL
#define VIDEOSS_VIDEOIO_DISENG0_TCON0_SPG8POSOFF_SPGPSOFF_Y8_Msk 0x7FFFUL
#define VIDEOSS_VIDEOIO_DISENG0_TCON0_SPG8POSOFF_SPGPSOFF_FIELD8_Pos 15UL
#define VIDEOSS_VIDEOIO_DISENG0_TCON0_SPG8POSOFF_SPGPSOFF_FIELD8_Msk 0x8000UL
#define VIDEOSS_VIDEOIO_DISENG0_TCON0_SPG8POSOFF_SPGPSOFF_X8_Pos 16UL
#define VIDEOSS_VIDEOIO_DISENG0_TCON0_SPG8POSOFF_SPGPSOFF_X8_Msk 0x7FFF0000UL
#define VIDEOSS_VIDEOIO_DISENG0_TCON0_SPG8POSOFF_SPGPSOFF_TOGGLE8_Pos 31UL
#define VIDEOSS_VIDEOIO_DISENG0_TCON0_SPG8POSOFF_SPGPSOFF_TOGGLE8_Msk 0x80000000UL
/* VIDEOSS_VIDEOIO_DISENG0_TCON0.SPG8MASKOFF */
#define VIDEOSS_VIDEOIO_DISENG0_TCON0_SPG8MASKOFF_SPGMKOFF8_Pos 0UL
#define VIDEOSS_VIDEOIO_DISENG0_TCON0_SPG8MASKOFF_SPGMKOFF8_Msk 0x7FFFFFFFUL
/* VIDEOSS_VIDEOIO_DISENG0_TCON0.SPG9POSON */
#define VIDEOSS_VIDEOIO_DISENG0_TCON0_SPG9POSON_SPGPSON_Y9_Pos 0UL
#define VIDEOSS_VIDEOIO_DISENG0_TCON0_SPG9POSON_SPGPSON_Y9_Msk 0x7FFFUL
#define VIDEOSS_VIDEOIO_DISENG0_TCON0_SPG9POSON_SPGPSON_FIELD9_Pos 15UL
#define VIDEOSS_VIDEOIO_DISENG0_TCON0_SPG9POSON_SPGPSON_FIELD9_Msk 0x8000UL
#define VIDEOSS_VIDEOIO_DISENG0_TCON0_SPG9POSON_SPGPSON_X9_Pos 16UL
#define VIDEOSS_VIDEOIO_DISENG0_TCON0_SPG9POSON_SPGPSON_X9_Msk 0x7FFF0000UL
#define VIDEOSS_VIDEOIO_DISENG0_TCON0_SPG9POSON_SPGPSON_TOGGLE9_Pos 31UL
#define VIDEOSS_VIDEOIO_DISENG0_TCON0_SPG9POSON_SPGPSON_TOGGLE9_Msk 0x80000000UL
/* VIDEOSS_VIDEOIO_DISENG0_TCON0.SPG9MASKON */
#define VIDEOSS_VIDEOIO_DISENG0_TCON0_SPG9MASKON_SPGMKON9_Pos 0UL
#define VIDEOSS_VIDEOIO_DISENG0_TCON0_SPG9MASKON_SPGMKON9_Msk 0x7FFFFFFFUL
/* VIDEOSS_VIDEOIO_DISENG0_TCON0.SPG9POSOFF */
#define VIDEOSS_VIDEOIO_DISENG0_TCON0_SPG9POSOFF_SPGPSOFF_Y9_Pos 0UL
#define VIDEOSS_VIDEOIO_DISENG0_TCON0_SPG9POSOFF_SPGPSOFF_Y9_Msk 0x7FFFUL
#define VIDEOSS_VIDEOIO_DISENG0_TCON0_SPG9POSOFF_SPGPSOFF_FIELD9_Pos 15UL
#define VIDEOSS_VIDEOIO_DISENG0_TCON0_SPG9POSOFF_SPGPSOFF_FIELD9_Msk 0x8000UL
#define VIDEOSS_VIDEOIO_DISENG0_TCON0_SPG9POSOFF_SPGPSOFF_X9_Pos 16UL
#define VIDEOSS_VIDEOIO_DISENG0_TCON0_SPG9POSOFF_SPGPSOFF_X9_Msk 0x7FFF0000UL
#define VIDEOSS_VIDEOIO_DISENG0_TCON0_SPG9POSOFF_SPGPSOFF_TOGGLE9_Pos 31UL
#define VIDEOSS_VIDEOIO_DISENG0_TCON0_SPG9POSOFF_SPGPSOFF_TOGGLE9_Msk 0x80000000UL
/* VIDEOSS_VIDEOIO_DISENG0_TCON0.SPG9MASKOFF */
#define VIDEOSS_VIDEOIO_DISENG0_TCON0_SPG9MASKOFF_SPGMKOFF9_Pos 0UL
#define VIDEOSS_VIDEOIO_DISENG0_TCON0_SPG9MASKOFF_SPGMKOFF9_Msk 0x7FFFFFFFUL
/* VIDEOSS_VIDEOIO_DISENG0_TCON0.SPG10POSON */
#define VIDEOSS_VIDEOIO_DISENG0_TCON0_SPG10POSON_SPGPSON_Y10_Pos 0UL
#define VIDEOSS_VIDEOIO_DISENG0_TCON0_SPG10POSON_SPGPSON_Y10_Msk 0x7FFFUL
#define VIDEOSS_VIDEOIO_DISENG0_TCON0_SPG10POSON_SPGPSON_FIELD10_Pos 15UL
#define VIDEOSS_VIDEOIO_DISENG0_TCON0_SPG10POSON_SPGPSON_FIELD10_Msk 0x8000UL
#define VIDEOSS_VIDEOIO_DISENG0_TCON0_SPG10POSON_SPGPSON_X10_Pos 16UL
#define VIDEOSS_VIDEOIO_DISENG0_TCON0_SPG10POSON_SPGPSON_X10_Msk 0x7FFF0000UL
#define VIDEOSS_VIDEOIO_DISENG0_TCON0_SPG10POSON_SPGPSON_TOGGLE10_Pos 31UL
#define VIDEOSS_VIDEOIO_DISENG0_TCON0_SPG10POSON_SPGPSON_TOGGLE10_Msk 0x80000000UL
/* VIDEOSS_VIDEOIO_DISENG0_TCON0.SPG10MASKON */
#define VIDEOSS_VIDEOIO_DISENG0_TCON0_SPG10MASKON_SPGMKON10_Pos 0UL
#define VIDEOSS_VIDEOIO_DISENG0_TCON0_SPG10MASKON_SPGMKON10_Msk 0x7FFFFFFFUL
/* VIDEOSS_VIDEOIO_DISENG0_TCON0.SPG10POSOFF */
#define VIDEOSS_VIDEOIO_DISENG0_TCON0_SPG10POSOFF_SPGPSOFF_Y10_Pos 0UL
#define VIDEOSS_VIDEOIO_DISENG0_TCON0_SPG10POSOFF_SPGPSOFF_Y10_Msk 0x7FFFUL
#define VIDEOSS_VIDEOIO_DISENG0_TCON0_SPG10POSOFF_SPGPSOFF_FIELD10_Pos 15UL
#define VIDEOSS_VIDEOIO_DISENG0_TCON0_SPG10POSOFF_SPGPSOFF_FIELD10_Msk 0x8000UL
#define VIDEOSS_VIDEOIO_DISENG0_TCON0_SPG10POSOFF_SPGPSOFF_X10_Pos 16UL
#define VIDEOSS_VIDEOIO_DISENG0_TCON0_SPG10POSOFF_SPGPSOFF_X10_Msk 0x7FFF0000UL
#define VIDEOSS_VIDEOIO_DISENG0_TCON0_SPG10POSOFF_SPGPSOFF_TOGGLE10_Pos 31UL
#define VIDEOSS_VIDEOIO_DISENG0_TCON0_SPG10POSOFF_SPGPSOFF_TOGGLE10_Msk 0x80000000UL
/* VIDEOSS_VIDEOIO_DISENG0_TCON0.SPG10MASKOFF */
#define VIDEOSS_VIDEOIO_DISENG0_TCON0_SPG10MASKOFF_SPGMKOFF10_Pos 0UL
#define VIDEOSS_VIDEOIO_DISENG0_TCON0_SPG10MASKOFF_SPGMKOFF10_Msk 0x7FFFFFFFUL
/* VIDEOSS_VIDEOIO_DISENG0_TCON0.SPG11POSON */
#define VIDEOSS_VIDEOIO_DISENG0_TCON0_SPG11POSON_SPGPSON_Y11_Pos 0UL
#define VIDEOSS_VIDEOIO_DISENG0_TCON0_SPG11POSON_SPGPSON_Y11_Msk 0x7FFFUL
#define VIDEOSS_VIDEOIO_DISENG0_TCON0_SPG11POSON_SPGPSON_FIELD11_Pos 15UL
#define VIDEOSS_VIDEOIO_DISENG0_TCON0_SPG11POSON_SPGPSON_FIELD11_Msk 0x8000UL
#define VIDEOSS_VIDEOIO_DISENG0_TCON0_SPG11POSON_SPGPSON_X11_Pos 16UL
#define VIDEOSS_VIDEOIO_DISENG0_TCON0_SPG11POSON_SPGPSON_X11_Msk 0x7FFF0000UL
#define VIDEOSS_VIDEOIO_DISENG0_TCON0_SPG11POSON_SPGPSON_TOGGLE11_Pos 31UL
#define VIDEOSS_VIDEOIO_DISENG0_TCON0_SPG11POSON_SPGPSON_TOGGLE11_Msk 0x80000000UL
/* VIDEOSS_VIDEOIO_DISENG0_TCON0.SPG11MASKON */
#define VIDEOSS_VIDEOIO_DISENG0_TCON0_SPG11MASKON_SPGMKON11_Pos 0UL
#define VIDEOSS_VIDEOIO_DISENG0_TCON0_SPG11MASKON_SPGMKON11_Msk 0x7FFFFFFFUL
/* VIDEOSS_VIDEOIO_DISENG0_TCON0.SPG11POSOFF */
#define VIDEOSS_VIDEOIO_DISENG0_TCON0_SPG11POSOFF_SPGPSOFF_Y11_Pos 0UL
#define VIDEOSS_VIDEOIO_DISENG0_TCON0_SPG11POSOFF_SPGPSOFF_Y11_Msk 0x7FFFUL
#define VIDEOSS_VIDEOIO_DISENG0_TCON0_SPG11POSOFF_SPGPSOFF_FIELD11_Pos 15UL
#define VIDEOSS_VIDEOIO_DISENG0_TCON0_SPG11POSOFF_SPGPSOFF_FIELD11_Msk 0x8000UL
#define VIDEOSS_VIDEOIO_DISENG0_TCON0_SPG11POSOFF_SPGPSOFF_X11_Pos 16UL
#define VIDEOSS_VIDEOIO_DISENG0_TCON0_SPG11POSOFF_SPGPSOFF_X11_Msk 0x7FFF0000UL
#define VIDEOSS_VIDEOIO_DISENG0_TCON0_SPG11POSOFF_SPGPSOFF_TOGGLE11_Pos 31UL
#define VIDEOSS_VIDEOIO_DISENG0_TCON0_SPG11POSOFF_SPGPSOFF_TOGGLE11_Msk 0x80000000UL
/* VIDEOSS_VIDEOIO_DISENG0_TCON0.SPG11MASKOFF */
#define VIDEOSS_VIDEOIO_DISENG0_TCON0_SPG11MASKOFF_SPGMKOFF11_Pos 0UL
#define VIDEOSS_VIDEOIO_DISENG0_TCON0_SPG11MASKOFF_SPGMKOFF11_Msk 0x7FFFFFFFUL
/* VIDEOSS_VIDEOIO_DISENG0_TCON0.SMX0SIGS */
#define VIDEOSS_VIDEOIO_DISENG0_TCON0_SMX0SIGS_SMX0SIGS_S0_Pos 0UL
#define VIDEOSS_VIDEOIO_DISENG0_TCON0_SMX0SIGS_SMX0SIGS_S0_Msk 0x7UL
#define VIDEOSS_VIDEOIO_DISENG0_TCON0_SMX0SIGS_SMX0SIGS_S1_Pos 3UL
#define VIDEOSS_VIDEOIO_DISENG0_TCON0_SMX0SIGS_SMX0SIGS_S1_Msk 0x38UL
#define VIDEOSS_VIDEOIO_DISENG0_TCON0_SMX0SIGS_SMX0SIGS_S2_Pos 6UL
#define VIDEOSS_VIDEOIO_DISENG0_TCON0_SMX0SIGS_SMX0SIGS_S2_Msk 0x1C0UL
#define VIDEOSS_VIDEOIO_DISENG0_TCON0_SMX0SIGS_SMX0SIGS_S3_Pos 9UL
#define VIDEOSS_VIDEOIO_DISENG0_TCON0_SMX0SIGS_SMX0SIGS_S3_Msk 0xE00UL
#define VIDEOSS_VIDEOIO_DISENG0_TCON0_SMX0SIGS_SMX0SIGS_S4_Pos 12UL
#define VIDEOSS_VIDEOIO_DISENG0_TCON0_SMX0SIGS_SMX0SIGS_S4_Msk 0x7000UL
/* VIDEOSS_VIDEOIO_DISENG0_TCON0.SMX0FCTTABLE */
#define VIDEOSS_VIDEOIO_DISENG0_TCON0_SMX0FCTTABLE_SMXFCT0_Pos 0UL
#define VIDEOSS_VIDEOIO_DISENG0_TCON0_SMX0FCTTABLE_SMXFCT0_Msk 0xFFFFFFFFUL
/* VIDEOSS_VIDEOIO_DISENG0_TCON0.SMX1SIGS */
#define VIDEOSS_VIDEOIO_DISENG0_TCON0_SMX1SIGS_SMX1SIGS_S0_Pos 0UL
#define VIDEOSS_VIDEOIO_DISENG0_TCON0_SMX1SIGS_SMX1SIGS_S0_Msk 0x7UL
#define VIDEOSS_VIDEOIO_DISENG0_TCON0_SMX1SIGS_SMX1SIGS_S1_Pos 3UL
#define VIDEOSS_VIDEOIO_DISENG0_TCON0_SMX1SIGS_SMX1SIGS_S1_Msk 0x38UL
#define VIDEOSS_VIDEOIO_DISENG0_TCON0_SMX1SIGS_SMX1SIGS_S2_Pos 6UL
#define VIDEOSS_VIDEOIO_DISENG0_TCON0_SMX1SIGS_SMX1SIGS_S2_Msk 0x1C0UL
#define VIDEOSS_VIDEOIO_DISENG0_TCON0_SMX1SIGS_SMX1SIGS_S3_Pos 9UL
#define VIDEOSS_VIDEOIO_DISENG0_TCON0_SMX1SIGS_SMX1SIGS_S3_Msk 0xE00UL
#define VIDEOSS_VIDEOIO_DISENG0_TCON0_SMX1SIGS_SMX1SIGS_S4_Pos 12UL
#define VIDEOSS_VIDEOIO_DISENG0_TCON0_SMX1SIGS_SMX1SIGS_S4_Msk 0x7000UL
/* VIDEOSS_VIDEOIO_DISENG0_TCON0.SMX1FCTTABLE */
#define VIDEOSS_VIDEOIO_DISENG0_TCON0_SMX1FCTTABLE_SMXFCT1_Pos 0UL
#define VIDEOSS_VIDEOIO_DISENG0_TCON0_SMX1FCTTABLE_SMXFCT1_Msk 0xFFFFFFFFUL
/* VIDEOSS_VIDEOIO_DISENG0_TCON0.SMX2SIGS */
#define VIDEOSS_VIDEOIO_DISENG0_TCON0_SMX2SIGS_SMX2SIGS_S0_Pos 0UL
#define VIDEOSS_VIDEOIO_DISENG0_TCON0_SMX2SIGS_SMX2SIGS_S0_Msk 0x7UL
#define VIDEOSS_VIDEOIO_DISENG0_TCON0_SMX2SIGS_SMX2SIGS_S1_Pos 3UL
#define VIDEOSS_VIDEOIO_DISENG0_TCON0_SMX2SIGS_SMX2SIGS_S1_Msk 0x38UL
#define VIDEOSS_VIDEOIO_DISENG0_TCON0_SMX2SIGS_SMX2SIGS_S2_Pos 6UL
#define VIDEOSS_VIDEOIO_DISENG0_TCON0_SMX2SIGS_SMX2SIGS_S2_Msk 0x1C0UL
#define VIDEOSS_VIDEOIO_DISENG0_TCON0_SMX2SIGS_SMX2SIGS_S3_Pos 9UL
#define VIDEOSS_VIDEOIO_DISENG0_TCON0_SMX2SIGS_SMX2SIGS_S3_Msk 0xE00UL
#define VIDEOSS_VIDEOIO_DISENG0_TCON0_SMX2SIGS_SMX2SIGS_S4_Pos 12UL
#define VIDEOSS_VIDEOIO_DISENG0_TCON0_SMX2SIGS_SMX2SIGS_S4_Msk 0x7000UL
/* VIDEOSS_VIDEOIO_DISENG0_TCON0.SMX2FCTTABLE */
#define VIDEOSS_VIDEOIO_DISENG0_TCON0_SMX2FCTTABLE_SMXFCT2_Pos 0UL
#define VIDEOSS_VIDEOIO_DISENG0_TCON0_SMX2FCTTABLE_SMXFCT2_Msk 0xFFFFFFFFUL
/* VIDEOSS_VIDEOIO_DISENG0_TCON0.SMX3SIGS */
#define VIDEOSS_VIDEOIO_DISENG0_TCON0_SMX3SIGS_SMX3SIGS_S0_Pos 0UL
#define VIDEOSS_VIDEOIO_DISENG0_TCON0_SMX3SIGS_SMX3SIGS_S0_Msk 0x7UL
#define VIDEOSS_VIDEOIO_DISENG0_TCON0_SMX3SIGS_SMX3SIGS_S1_Pos 3UL
#define VIDEOSS_VIDEOIO_DISENG0_TCON0_SMX3SIGS_SMX3SIGS_S1_Msk 0x38UL
#define VIDEOSS_VIDEOIO_DISENG0_TCON0_SMX3SIGS_SMX3SIGS_S2_Pos 6UL
#define VIDEOSS_VIDEOIO_DISENG0_TCON0_SMX3SIGS_SMX3SIGS_S2_Msk 0x1C0UL
#define VIDEOSS_VIDEOIO_DISENG0_TCON0_SMX3SIGS_SMX3SIGS_S3_Pos 9UL
#define VIDEOSS_VIDEOIO_DISENG0_TCON0_SMX3SIGS_SMX3SIGS_S3_Msk 0xE00UL
#define VIDEOSS_VIDEOIO_DISENG0_TCON0_SMX3SIGS_SMX3SIGS_S4_Pos 12UL
#define VIDEOSS_VIDEOIO_DISENG0_TCON0_SMX3SIGS_SMX3SIGS_S4_Msk 0x7000UL
/* VIDEOSS_VIDEOIO_DISENG0_TCON0.SMX3FCTTABLE */
#define VIDEOSS_VIDEOIO_DISENG0_TCON0_SMX3FCTTABLE_SMXFCT3_Pos 0UL
#define VIDEOSS_VIDEOIO_DISENG0_TCON0_SMX3FCTTABLE_SMXFCT3_Msk 0xFFFFFFFFUL
/* VIDEOSS_VIDEOIO_DISENG0_TCON0.SMX4SIGS */
#define VIDEOSS_VIDEOIO_DISENG0_TCON0_SMX4SIGS_SMX4SIGS_S0_Pos 0UL
#define VIDEOSS_VIDEOIO_DISENG0_TCON0_SMX4SIGS_SMX4SIGS_S0_Msk 0x7UL
#define VIDEOSS_VIDEOIO_DISENG0_TCON0_SMX4SIGS_SMX4SIGS_S1_Pos 3UL
#define VIDEOSS_VIDEOIO_DISENG0_TCON0_SMX4SIGS_SMX4SIGS_S1_Msk 0x38UL
#define VIDEOSS_VIDEOIO_DISENG0_TCON0_SMX4SIGS_SMX4SIGS_S2_Pos 6UL
#define VIDEOSS_VIDEOIO_DISENG0_TCON0_SMX4SIGS_SMX4SIGS_S2_Msk 0x1C0UL
#define VIDEOSS_VIDEOIO_DISENG0_TCON0_SMX4SIGS_SMX4SIGS_S3_Pos 9UL
#define VIDEOSS_VIDEOIO_DISENG0_TCON0_SMX4SIGS_SMX4SIGS_S3_Msk 0xE00UL
#define VIDEOSS_VIDEOIO_DISENG0_TCON0_SMX4SIGS_SMX4SIGS_S4_Pos 12UL
#define VIDEOSS_VIDEOIO_DISENG0_TCON0_SMX4SIGS_SMX4SIGS_S4_Msk 0x7000UL
/* VIDEOSS_VIDEOIO_DISENG0_TCON0.SMX4FCTTABLE */
#define VIDEOSS_VIDEOIO_DISENG0_TCON0_SMX4FCTTABLE_SMXFCT4_Pos 0UL
#define VIDEOSS_VIDEOIO_DISENG0_TCON0_SMX4FCTTABLE_SMXFCT4_Msk 0xFFFFFFFFUL
/* VIDEOSS_VIDEOIO_DISENG0_TCON0.SMX5SIGS */
#define VIDEOSS_VIDEOIO_DISENG0_TCON0_SMX5SIGS_SMX5SIGS_S0_Pos 0UL
#define VIDEOSS_VIDEOIO_DISENG0_TCON0_SMX5SIGS_SMX5SIGS_S0_Msk 0x7UL
#define VIDEOSS_VIDEOIO_DISENG0_TCON0_SMX5SIGS_SMX5SIGS_S1_Pos 3UL
#define VIDEOSS_VIDEOIO_DISENG0_TCON0_SMX5SIGS_SMX5SIGS_S1_Msk 0x38UL
#define VIDEOSS_VIDEOIO_DISENG0_TCON0_SMX5SIGS_SMX5SIGS_S2_Pos 6UL
#define VIDEOSS_VIDEOIO_DISENG0_TCON0_SMX5SIGS_SMX5SIGS_S2_Msk 0x1C0UL
#define VIDEOSS_VIDEOIO_DISENG0_TCON0_SMX5SIGS_SMX5SIGS_S3_Pos 9UL
#define VIDEOSS_VIDEOIO_DISENG0_TCON0_SMX5SIGS_SMX5SIGS_S3_Msk 0xE00UL
#define VIDEOSS_VIDEOIO_DISENG0_TCON0_SMX5SIGS_SMX5SIGS_S4_Pos 12UL
#define VIDEOSS_VIDEOIO_DISENG0_TCON0_SMX5SIGS_SMX5SIGS_S4_Msk 0x7000UL
/* VIDEOSS_VIDEOIO_DISENG0_TCON0.SMX5FCTTABLE */
#define VIDEOSS_VIDEOIO_DISENG0_TCON0_SMX5FCTTABLE_SMXFCT5_Pos 0UL
#define VIDEOSS_VIDEOIO_DISENG0_TCON0_SMX5FCTTABLE_SMXFCT5_Msk 0xFFFFFFFFUL
/* VIDEOSS_VIDEOIO_DISENG0_TCON0.SMX6SIGS */
#define VIDEOSS_VIDEOIO_DISENG0_TCON0_SMX6SIGS_SMX6SIGS_S0_Pos 0UL
#define VIDEOSS_VIDEOIO_DISENG0_TCON0_SMX6SIGS_SMX6SIGS_S0_Msk 0x7UL
#define VIDEOSS_VIDEOIO_DISENG0_TCON0_SMX6SIGS_SMX6SIGS_S1_Pos 3UL
#define VIDEOSS_VIDEOIO_DISENG0_TCON0_SMX6SIGS_SMX6SIGS_S1_Msk 0x38UL
#define VIDEOSS_VIDEOIO_DISENG0_TCON0_SMX6SIGS_SMX6SIGS_S2_Pos 6UL
#define VIDEOSS_VIDEOIO_DISENG0_TCON0_SMX6SIGS_SMX6SIGS_S2_Msk 0x1C0UL
#define VIDEOSS_VIDEOIO_DISENG0_TCON0_SMX6SIGS_SMX6SIGS_S3_Pos 9UL
#define VIDEOSS_VIDEOIO_DISENG0_TCON0_SMX6SIGS_SMX6SIGS_S3_Msk 0xE00UL
#define VIDEOSS_VIDEOIO_DISENG0_TCON0_SMX6SIGS_SMX6SIGS_S4_Pos 12UL
#define VIDEOSS_VIDEOIO_DISENG0_TCON0_SMX6SIGS_SMX6SIGS_S4_Msk 0x7000UL
/* VIDEOSS_VIDEOIO_DISENG0_TCON0.SMX6FCTTABLE */
#define VIDEOSS_VIDEOIO_DISENG0_TCON0_SMX6FCTTABLE_SMXFCT6_Pos 0UL
#define VIDEOSS_VIDEOIO_DISENG0_TCON0_SMX6FCTTABLE_SMXFCT6_Msk 0xFFFFFFFFUL
/* VIDEOSS_VIDEOIO_DISENG0_TCON0.SMX7SIGS */
#define VIDEOSS_VIDEOIO_DISENG0_TCON0_SMX7SIGS_SMX7SIGS_S0_Pos 0UL
#define VIDEOSS_VIDEOIO_DISENG0_TCON0_SMX7SIGS_SMX7SIGS_S0_Msk 0x7UL
#define VIDEOSS_VIDEOIO_DISENG0_TCON0_SMX7SIGS_SMX7SIGS_S1_Pos 3UL
#define VIDEOSS_VIDEOIO_DISENG0_TCON0_SMX7SIGS_SMX7SIGS_S1_Msk 0x38UL
#define VIDEOSS_VIDEOIO_DISENG0_TCON0_SMX7SIGS_SMX7SIGS_S2_Pos 6UL
#define VIDEOSS_VIDEOIO_DISENG0_TCON0_SMX7SIGS_SMX7SIGS_S2_Msk 0x1C0UL
#define VIDEOSS_VIDEOIO_DISENG0_TCON0_SMX7SIGS_SMX7SIGS_S3_Pos 9UL
#define VIDEOSS_VIDEOIO_DISENG0_TCON0_SMX7SIGS_SMX7SIGS_S3_Msk 0xE00UL
#define VIDEOSS_VIDEOIO_DISENG0_TCON0_SMX7SIGS_SMX7SIGS_S4_Pos 12UL
#define VIDEOSS_VIDEOIO_DISENG0_TCON0_SMX7SIGS_SMX7SIGS_S4_Msk 0x7000UL
/* VIDEOSS_VIDEOIO_DISENG0_TCON0.SMX7FCTTABLE */
#define VIDEOSS_VIDEOIO_DISENG0_TCON0_SMX7FCTTABLE_SMXFCT7_Pos 0UL
#define VIDEOSS_VIDEOIO_DISENG0_TCON0_SMX7FCTTABLE_SMXFCT7_Msk 0xFFFFFFFFUL
/* VIDEOSS_VIDEOIO_DISENG0_TCON0.SMX8SIGS */
#define VIDEOSS_VIDEOIO_DISENG0_TCON0_SMX8SIGS_SMX8SIGS_S0_Pos 0UL
#define VIDEOSS_VIDEOIO_DISENG0_TCON0_SMX8SIGS_SMX8SIGS_S0_Msk 0x7UL
#define VIDEOSS_VIDEOIO_DISENG0_TCON0_SMX8SIGS_SMX8SIGS_S1_Pos 3UL
#define VIDEOSS_VIDEOIO_DISENG0_TCON0_SMX8SIGS_SMX8SIGS_S1_Msk 0x38UL
#define VIDEOSS_VIDEOIO_DISENG0_TCON0_SMX8SIGS_SMX8SIGS_S2_Pos 6UL
#define VIDEOSS_VIDEOIO_DISENG0_TCON0_SMX8SIGS_SMX8SIGS_S2_Msk 0x1C0UL
#define VIDEOSS_VIDEOIO_DISENG0_TCON0_SMX8SIGS_SMX8SIGS_S3_Pos 9UL
#define VIDEOSS_VIDEOIO_DISENG0_TCON0_SMX8SIGS_SMX8SIGS_S3_Msk 0xE00UL
#define VIDEOSS_VIDEOIO_DISENG0_TCON0_SMX8SIGS_SMX8SIGS_S4_Pos 12UL
#define VIDEOSS_VIDEOIO_DISENG0_TCON0_SMX8SIGS_SMX8SIGS_S4_Msk 0x7000UL
/* VIDEOSS_VIDEOIO_DISENG0_TCON0.SMX8FCTTABLE */
#define VIDEOSS_VIDEOIO_DISENG0_TCON0_SMX8FCTTABLE_SMXFCT8_Pos 0UL
#define VIDEOSS_VIDEOIO_DISENG0_TCON0_SMX8FCTTABLE_SMXFCT8_Msk 0xFFFFFFFFUL
/* VIDEOSS_VIDEOIO_DISENG0_TCON0.SMX9SIGS */
#define VIDEOSS_VIDEOIO_DISENG0_TCON0_SMX9SIGS_SMX9SIGS_S0_Pos 0UL
#define VIDEOSS_VIDEOIO_DISENG0_TCON0_SMX9SIGS_SMX9SIGS_S0_Msk 0x7UL
#define VIDEOSS_VIDEOIO_DISENG0_TCON0_SMX9SIGS_SMX9SIGS_S1_Pos 3UL
#define VIDEOSS_VIDEOIO_DISENG0_TCON0_SMX9SIGS_SMX9SIGS_S1_Msk 0x38UL
#define VIDEOSS_VIDEOIO_DISENG0_TCON0_SMX9SIGS_SMX9SIGS_S2_Pos 6UL
#define VIDEOSS_VIDEOIO_DISENG0_TCON0_SMX9SIGS_SMX9SIGS_S2_Msk 0x1C0UL
#define VIDEOSS_VIDEOIO_DISENG0_TCON0_SMX9SIGS_SMX9SIGS_S3_Pos 9UL
#define VIDEOSS_VIDEOIO_DISENG0_TCON0_SMX9SIGS_SMX9SIGS_S3_Msk 0xE00UL
#define VIDEOSS_VIDEOIO_DISENG0_TCON0_SMX9SIGS_SMX9SIGS_S4_Pos 12UL
#define VIDEOSS_VIDEOIO_DISENG0_TCON0_SMX9SIGS_SMX9SIGS_S4_Msk 0x7000UL
/* VIDEOSS_VIDEOIO_DISENG0_TCON0.SMX9FCTTABLE */
#define VIDEOSS_VIDEOIO_DISENG0_TCON0_SMX9FCTTABLE_SMXFCT9_Pos 0UL
#define VIDEOSS_VIDEOIO_DISENG0_TCON0_SMX9FCTTABLE_SMXFCT9_Msk 0xFFFFFFFFUL
/* VIDEOSS_VIDEOIO_DISENG0_TCON0.SMX10SIGS */
#define VIDEOSS_VIDEOIO_DISENG0_TCON0_SMX10SIGS_SMX10SIGS_S0_Pos 0UL
#define VIDEOSS_VIDEOIO_DISENG0_TCON0_SMX10SIGS_SMX10SIGS_S0_Msk 0x7UL
#define VIDEOSS_VIDEOIO_DISENG0_TCON0_SMX10SIGS_SMX10SIGS_S1_Pos 3UL
#define VIDEOSS_VIDEOIO_DISENG0_TCON0_SMX10SIGS_SMX10SIGS_S1_Msk 0x38UL
#define VIDEOSS_VIDEOIO_DISENG0_TCON0_SMX10SIGS_SMX10SIGS_S2_Pos 6UL
#define VIDEOSS_VIDEOIO_DISENG0_TCON0_SMX10SIGS_SMX10SIGS_S2_Msk 0x1C0UL
#define VIDEOSS_VIDEOIO_DISENG0_TCON0_SMX10SIGS_SMX10SIGS_S3_Pos 9UL
#define VIDEOSS_VIDEOIO_DISENG0_TCON0_SMX10SIGS_SMX10SIGS_S3_Msk 0xE00UL
#define VIDEOSS_VIDEOIO_DISENG0_TCON0_SMX10SIGS_SMX10SIGS_S4_Pos 12UL
#define VIDEOSS_VIDEOIO_DISENG0_TCON0_SMX10SIGS_SMX10SIGS_S4_Msk 0x7000UL
/* VIDEOSS_VIDEOIO_DISENG0_TCON0.SMX10FCTTABLE */
#define VIDEOSS_VIDEOIO_DISENG0_TCON0_SMX10FCTTABLE_SMXFCT10_Pos 0UL
#define VIDEOSS_VIDEOIO_DISENG0_TCON0_SMX10FCTTABLE_SMXFCT10_Msk 0xFFFFFFFFUL
/* VIDEOSS_VIDEOIO_DISENG0_TCON0.SMX11SIGS */
#define VIDEOSS_VIDEOIO_DISENG0_TCON0_SMX11SIGS_SMX11SIGS_S0_Pos 0UL
#define VIDEOSS_VIDEOIO_DISENG0_TCON0_SMX11SIGS_SMX11SIGS_S0_Msk 0x7UL
#define VIDEOSS_VIDEOIO_DISENG0_TCON0_SMX11SIGS_SMX11SIGS_S1_Pos 3UL
#define VIDEOSS_VIDEOIO_DISENG0_TCON0_SMX11SIGS_SMX11SIGS_S1_Msk 0x38UL
#define VIDEOSS_VIDEOIO_DISENG0_TCON0_SMX11SIGS_SMX11SIGS_S2_Pos 6UL
#define VIDEOSS_VIDEOIO_DISENG0_TCON0_SMX11SIGS_SMX11SIGS_S2_Msk 0x1C0UL
#define VIDEOSS_VIDEOIO_DISENG0_TCON0_SMX11SIGS_SMX11SIGS_S3_Pos 9UL
#define VIDEOSS_VIDEOIO_DISENG0_TCON0_SMX11SIGS_SMX11SIGS_S3_Msk 0xE00UL
#define VIDEOSS_VIDEOIO_DISENG0_TCON0_SMX11SIGS_SMX11SIGS_S4_Pos 12UL
#define VIDEOSS_VIDEOIO_DISENG0_TCON0_SMX11SIGS_SMX11SIGS_S4_Msk 0x7000UL
/* VIDEOSS_VIDEOIO_DISENG0_TCON0.SMX11FCTTABLE */
#define VIDEOSS_VIDEOIO_DISENG0_TCON0_SMX11FCTTABLE_SMXFCT11_Pos 0UL
#define VIDEOSS_VIDEOIO_DISENG0_TCON0_SMX11FCTTABLE_SMXFCT11_Msk 0xFFFFFFFFUL


/* VIDEOSS_VIDEOIO_DISENG1_DISENGCFG1.CTL */
#define VIDEOSS_VIDEOIO_DISENG1_DISENGCFG1_CTL_DSPCLKDIVIDE_Pos 0UL
#define VIDEOSS_VIDEOIO_DISENG1_DISENGCFG1_CTL_DSPCLKDIVIDE_Msk 0x1UL
/* VIDEOSS_VIDEOIO_DISENG1_DISENGCFG1.POLARITYCTRL */
#define VIDEOSS_VIDEOIO_DISENG1_DISENGCFG1_POLARITYCTRL_POLHS_Pos 0UL
#define VIDEOSS_VIDEOIO_DISENG1_DISENGCFG1_POLARITYCTRL_POLHS_Msk 0x1UL
#define VIDEOSS_VIDEOIO_DISENG1_DISENGCFG1_POLARITYCTRL_POLVS_Pos 1UL
#define VIDEOSS_VIDEOIO_DISENG1_DISENGCFG1_POLARITYCTRL_POLVS_Msk 0x2UL
#define VIDEOSS_VIDEOIO_DISENG1_DISENGCFG1_POLARITYCTRL_POLEN_Pos 2UL
#define VIDEOSS_VIDEOIO_DISENG1_DISENGCFG1_POLARITYCTRL_POLEN_Msk 0x4UL
#define VIDEOSS_VIDEOIO_DISENG1_DISENGCFG1_POLARITYCTRL_PIXINV_Pos 3UL
#define VIDEOSS_VIDEOIO_DISENG1_DISENGCFG1_POLARITYCTRL_PIXINV_Msk 0x8UL
/* VIDEOSS_VIDEOIO_DISENG1_DISENGCFG1.SIGSELECT */
#define VIDEOSS_VIDEOIO_DISENG1_DISENGCFG1_SIGSELECT_SIG_SELECT_Pos 0UL
#define VIDEOSS_VIDEOIO_DISENG1_DISENGCFG1_SIGSELECT_SIG_SELECT_Msk 0x3UL
/* VIDEOSS_VIDEOIO_DISENG1_DISENGCFG1.DUMPSELECT */
#define VIDEOSS_VIDEOIO_DISENG1_DISENGCFG1_DUMPSELECT_DUMP_SELECT_Pos 8UL
#define VIDEOSS_VIDEOIO_DISENG1_DISENGCFG1_DUMPSELECT_DUMP_SELECT_Msk 0x300UL


/* VIDEOSS_VIDEOIO_DISENG1_SIG1.STATICCONTROL */
#define VIDEOSS_VIDEOIO_DISENG1_SIG1_STATICCONTROL_SHDEN_Pos 0UL
#define VIDEOSS_VIDEOIO_DISENG1_SIG1_STATICCONTROL_SHDEN_Msk 0x1UL
#define VIDEOSS_VIDEOIO_DISENG1_SIG1_STATICCONTROL_SHDLDSEL_Pos 4UL
#define VIDEOSS_VIDEOIO_DISENG1_SIG1_STATICCONTROL_SHDLDSEL_Msk 0x10UL
#define VIDEOSS_VIDEOIO_DISENG1_SIG1_STATICCONTROL_ERRTHRES_Pos 16UL
#define VIDEOSS_VIDEOIO_DISENG1_SIG1_STATICCONTROL_ERRTHRES_Msk 0xFF0000UL
#define VIDEOSS_VIDEOIO_DISENG1_SIG1_STATICCONTROL_ERRTHRESRESET_Pos 24UL
#define VIDEOSS_VIDEOIO_DISENG1_SIG1_STATICCONTROL_ERRTHRESRESET_Msk 0xFF000000UL
/* VIDEOSS_VIDEOIO_DISENG1_SIG1.PANICCOLOR */
#define VIDEOSS_VIDEOIO_DISENG1_SIG1_PANICCOLOR_PANICALPHA_Pos 7UL
#define VIDEOSS_VIDEOIO_DISENG1_SIG1_PANICCOLOR_PANICALPHA_Msk 0x80UL
#define VIDEOSS_VIDEOIO_DISENG1_SIG1_PANICCOLOR_PANICBLUE_Pos 8UL
#define VIDEOSS_VIDEOIO_DISENG1_SIG1_PANICCOLOR_PANICBLUE_Msk 0xFF00UL
#define VIDEOSS_VIDEOIO_DISENG1_SIG1_PANICCOLOR_PANICGREEN_Pos 16UL
#define VIDEOSS_VIDEOIO_DISENG1_SIG1_PANICCOLOR_PANICGREEN_Msk 0xFF0000UL
#define VIDEOSS_VIDEOIO_DISENG1_SIG1_PANICCOLOR_PANICRED_Pos 24UL
#define VIDEOSS_VIDEOIO_DISENG1_SIG1_PANICCOLOR_PANICRED_Msk 0xFF000000UL
/* VIDEOSS_VIDEOIO_DISENG1_SIG1.EVALCONTROL0 */
#define VIDEOSS_VIDEOIO_DISENG1_SIG1_EVALCONTROL0_ENEVALWIN0_Pos 0UL
#define VIDEOSS_VIDEOIO_DISENG1_SIG1_EVALCONTROL0_ENEVALWIN0_Msk 0x1UL
#define VIDEOSS_VIDEOIO_DISENG1_SIG1_EVALCONTROL0_ENCRC0_Pos 1UL
#define VIDEOSS_VIDEOIO_DISENG1_SIG1_EVALCONTROL0_ENCRC0_Msk 0x2UL
#define VIDEOSS_VIDEOIO_DISENG1_SIG1_EVALCONTROL0_ALPHAMASK0_Pos 8UL
#define VIDEOSS_VIDEOIO_DISENG1_SIG1_EVALCONTROL0_ALPHAMASK0_Msk 0x100UL
#define VIDEOSS_VIDEOIO_DISENG1_SIG1_EVALCONTROL0_ALPHAINV0_Pos 9UL
#define VIDEOSS_VIDEOIO_DISENG1_SIG1_EVALCONTROL0_ALPHAINV0_Msk 0x200UL
#define VIDEOSS_VIDEOIO_DISENG1_SIG1_EVALCONTROL0_ENLOCALPANIC0_Pos 16UL
#define VIDEOSS_VIDEOIO_DISENG1_SIG1_EVALCONTROL0_ENLOCALPANIC0_Msk 0x10000UL
#define VIDEOSS_VIDEOIO_DISENG1_SIG1_EVALCONTROL0_ENGLOBALPANIC0_Pos 17UL
#define VIDEOSS_VIDEOIO_DISENG1_SIG1_EVALCONTROL0_ENGLOBALPANIC0_Msk 0x20000UL
/* VIDEOSS_VIDEOIO_DISENG1_SIG1.EVALUPPERLEFT0 */
#define VIDEOSS_VIDEOIO_DISENG1_SIG1_EVALUPPERLEFT0_XEVALUPPERLEFT0_Pos 0UL
#define VIDEOSS_VIDEOIO_DISENG1_SIG1_EVALUPPERLEFT0_XEVALUPPERLEFT0_Msk 0x3FFFUL
#define VIDEOSS_VIDEOIO_DISENG1_SIG1_EVALUPPERLEFT0_YEVALUPPERLEFT0_Pos 16UL
#define VIDEOSS_VIDEOIO_DISENG1_SIG1_EVALUPPERLEFT0_YEVALUPPERLEFT0_Msk 0x3FFF0000UL
/* VIDEOSS_VIDEOIO_DISENG1_SIG1.EVALLOWERRIGHT0 */
#define VIDEOSS_VIDEOIO_DISENG1_SIG1_EVALLOWERRIGHT0_XEVALLOWERRIGHT0_Pos 0UL
#define VIDEOSS_VIDEOIO_DISENG1_SIG1_EVALLOWERRIGHT0_XEVALLOWERRIGHT0_Msk 0x3FFFUL
#define VIDEOSS_VIDEOIO_DISENG1_SIG1_EVALLOWERRIGHT0_YEVALLOWERRIGHT0_Pos 16UL
#define VIDEOSS_VIDEOIO_DISENG1_SIG1_EVALLOWERRIGHT0_YEVALLOWERRIGHT0_Msk 0x3FFF0000UL
/* VIDEOSS_VIDEOIO_DISENG1_SIG1.SIGCRCREDREF0 */
#define VIDEOSS_VIDEOIO_DISENG1_SIG1_SIGCRCREDREF0_SIGCRCREDREF0_Pos 0UL
#define VIDEOSS_VIDEOIO_DISENG1_SIG1_SIGCRCREDREF0_SIGCRCREDREF0_Msk 0xFFFFFFFFUL
/* VIDEOSS_VIDEOIO_DISENG1_SIG1.SIGCRCGREENREF0 */
#define VIDEOSS_VIDEOIO_DISENG1_SIG1_SIGCRCGREENREF0_SIGCRCGREENREF0_Pos 0UL
#define VIDEOSS_VIDEOIO_DISENG1_SIG1_SIGCRCGREENREF0_SIGCRCGREENREF0_Msk 0xFFFFFFFFUL
/* VIDEOSS_VIDEOIO_DISENG1_SIG1.SIGCRCBLUEREF0 */
#define VIDEOSS_VIDEOIO_DISENG1_SIG1_SIGCRCBLUEREF0_SIGCRCBLUEREF0_Pos 0UL
#define VIDEOSS_VIDEOIO_DISENG1_SIG1_SIGCRCBLUEREF0_SIGCRCBLUEREF0_Msk 0xFFFFFFFFUL
/* VIDEOSS_VIDEOIO_DISENG1_SIG1.SIGCRCRED0 */
#define VIDEOSS_VIDEOIO_DISENG1_SIG1_SIGCRCRED0_SIGCRCRED0_Pos 0UL
#define VIDEOSS_VIDEOIO_DISENG1_SIG1_SIGCRCRED0_SIGCRCRED0_Msk 0xFFFFFFFFUL
/* VIDEOSS_VIDEOIO_DISENG1_SIG1.SIGCRCGREEN0 */
#define VIDEOSS_VIDEOIO_DISENG1_SIG1_SIGCRCGREEN0_SIGCRCGREEN0_Pos 0UL
#define VIDEOSS_VIDEOIO_DISENG1_SIG1_SIGCRCGREEN0_SIGCRCGREEN0_Msk 0xFFFFFFFFUL
/* VIDEOSS_VIDEOIO_DISENG1_SIG1.SIGCRCBLUE0 */
#define VIDEOSS_VIDEOIO_DISENG1_SIG1_SIGCRCBLUE0_SIGCRCBLUE0_Pos 0UL
#define VIDEOSS_VIDEOIO_DISENG1_SIG1_SIGCRCBLUE0_SIGCRCBLUE0_Msk 0xFFFFFFFFUL
/* VIDEOSS_VIDEOIO_DISENG1_SIG1.EVALCONTROL1 */
#define VIDEOSS_VIDEOIO_DISENG1_SIG1_EVALCONTROL1_ENEVALWIN1_Pos 0UL
#define VIDEOSS_VIDEOIO_DISENG1_SIG1_EVALCONTROL1_ENEVALWIN1_Msk 0x1UL
#define VIDEOSS_VIDEOIO_DISENG1_SIG1_EVALCONTROL1_ENCRC1_Pos 1UL
#define VIDEOSS_VIDEOIO_DISENG1_SIG1_EVALCONTROL1_ENCRC1_Msk 0x2UL
#define VIDEOSS_VIDEOIO_DISENG1_SIG1_EVALCONTROL1_ALPHAMASK1_Pos 8UL
#define VIDEOSS_VIDEOIO_DISENG1_SIG1_EVALCONTROL1_ALPHAMASK1_Msk 0x100UL
#define VIDEOSS_VIDEOIO_DISENG1_SIG1_EVALCONTROL1_ALPHAINV1_Pos 9UL
#define VIDEOSS_VIDEOIO_DISENG1_SIG1_EVALCONTROL1_ALPHAINV1_Msk 0x200UL
#define VIDEOSS_VIDEOIO_DISENG1_SIG1_EVALCONTROL1_ENLOCALPANIC1_Pos 16UL
#define VIDEOSS_VIDEOIO_DISENG1_SIG1_EVALCONTROL1_ENLOCALPANIC1_Msk 0x10000UL
#define VIDEOSS_VIDEOIO_DISENG1_SIG1_EVALCONTROL1_ENGLOBALPANIC1_Pos 17UL
#define VIDEOSS_VIDEOIO_DISENG1_SIG1_EVALCONTROL1_ENGLOBALPANIC1_Msk 0x20000UL
/* VIDEOSS_VIDEOIO_DISENG1_SIG1.EVALUPPERLEFT1 */
#define VIDEOSS_VIDEOIO_DISENG1_SIG1_EVALUPPERLEFT1_XEVALUPPERLEFT1_Pos 0UL
#define VIDEOSS_VIDEOIO_DISENG1_SIG1_EVALUPPERLEFT1_XEVALUPPERLEFT1_Msk 0x3FFFUL
#define VIDEOSS_VIDEOIO_DISENG1_SIG1_EVALUPPERLEFT1_YEVALUPPERLEFT1_Pos 16UL
#define VIDEOSS_VIDEOIO_DISENG1_SIG1_EVALUPPERLEFT1_YEVALUPPERLEFT1_Msk 0x3FFF0000UL
/* VIDEOSS_VIDEOIO_DISENG1_SIG1.EVALLOWERRIGHT1 */
#define VIDEOSS_VIDEOIO_DISENG1_SIG1_EVALLOWERRIGHT1_XEVALLOWERRIGHT1_Pos 0UL
#define VIDEOSS_VIDEOIO_DISENG1_SIG1_EVALLOWERRIGHT1_XEVALLOWERRIGHT1_Msk 0x3FFFUL
#define VIDEOSS_VIDEOIO_DISENG1_SIG1_EVALLOWERRIGHT1_YEVALLOWERRIGHT1_Pos 16UL
#define VIDEOSS_VIDEOIO_DISENG1_SIG1_EVALLOWERRIGHT1_YEVALLOWERRIGHT1_Msk 0x3FFF0000UL
/* VIDEOSS_VIDEOIO_DISENG1_SIG1.SIGCRCREDREF1 */
#define VIDEOSS_VIDEOIO_DISENG1_SIG1_SIGCRCREDREF1_SIGCRCREDREF1_Pos 0UL
#define VIDEOSS_VIDEOIO_DISENG1_SIG1_SIGCRCREDREF1_SIGCRCREDREF1_Msk 0xFFFFFFFFUL
/* VIDEOSS_VIDEOIO_DISENG1_SIG1.SIGCRCGREENREF1 */
#define VIDEOSS_VIDEOIO_DISENG1_SIG1_SIGCRCGREENREF1_SIGCRCGREENREF1_Pos 0UL
#define VIDEOSS_VIDEOIO_DISENG1_SIG1_SIGCRCGREENREF1_SIGCRCGREENREF1_Msk 0xFFFFFFFFUL
/* VIDEOSS_VIDEOIO_DISENG1_SIG1.SIGCRCBLUEREF1 */
#define VIDEOSS_VIDEOIO_DISENG1_SIG1_SIGCRCBLUEREF1_SIGCRCBLUEREF1_Pos 0UL
#define VIDEOSS_VIDEOIO_DISENG1_SIG1_SIGCRCBLUEREF1_SIGCRCBLUEREF1_Msk 0xFFFFFFFFUL
/* VIDEOSS_VIDEOIO_DISENG1_SIG1.SIGCRCRED1 */
#define VIDEOSS_VIDEOIO_DISENG1_SIG1_SIGCRCRED1_SIGCRCRED1_Pos 0UL
#define VIDEOSS_VIDEOIO_DISENG1_SIG1_SIGCRCRED1_SIGCRCRED1_Msk 0xFFFFFFFFUL
/* VIDEOSS_VIDEOIO_DISENG1_SIG1.SIGCRCGREEN1 */
#define VIDEOSS_VIDEOIO_DISENG1_SIG1_SIGCRCGREEN1_SIGCRCGREEN1_Pos 0UL
#define VIDEOSS_VIDEOIO_DISENG1_SIG1_SIGCRCGREEN1_SIGCRCGREEN1_Msk 0xFFFFFFFFUL
/* VIDEOSS_VIDEOIO_DISENG1_SIG1.SIGCRCBLUE1 */
#define VIDEOSS_VIDEOIO_DISENG1_SIG1_SIGCRCBLUE1_SIGCRCBLUE1_Pos 0UL
#define VIDEOSS_VIDEOIO_DISENG1_SIG1_SIGCRCBLUE1_SIGCRCBLUE1_Msk 0xFFFFFFFFUL
/* VIDEOSS_VIDEOIO_DISENG1_SIG1.EVALCONTROL2 */
#define VIDEOSS_VIDEOIO_DISENG1_SIG1_EVALCONTROL2_ENEVALWIN2_Pos 0UL
#define VIDEOSS_VIDEOIO_DISENG1_SIG1_EVALCONTROL2_ENEVALWIN2_Msk 0x1UL
#define VIDEOSS_VIDEOIO_DISENG1_SIG1_EVALCONTROL2_ENCRC2_Pos 1UL
#define VIDEOSS_VIDEOIO_DISENG1_SIG1_EVALCONTROL2_ENCRC2_Msk 0x2UL
#define VIDEOSS_VIDEOIO_DISENG1_SIG1_EVALCONTROL2_ALPHAMASK2_Pos 8UL
#define VIDEOSS_VIDEOIO_DISENG1_SIG1_EVALCONTROL2_ALPHAMASK2_Msk 0x100UL
#define VIDEOSS_VIDEOIO_DISENG1_SIG1_EVALCONTROL2_ALPHAINV2_Pos 9UL
#define VIDEOSS_VIDEOIO_DISENG1_SIG1_EVALCONTROL2_ALPHAINV2_Msk 0x200UL
#define VIDEOSS_VIDEOIO_DISENG1_SIG1_EVALCONTROL2_ENLOCALPANIC2_Pos 16UL
#define VIDEOSS_VIDEOIO_DISENG1_SIG1_EVALCONTROL2_ENLOCALPANIC2_Msk 0x10000UL
#define VIDEOSS_VIDEOIO_DISENG1_SIG1_EVALCONTROL2_ENGLOBALPANIC2_Pos 17UL
#define VIDEOSS_VIDEOIO_DISENG1_SIG1_EVALCONTROL2_ENGLOBALPANIC2_Msk 0x20000UL
/* VIDEOSS_VIDEOIO_DISENG1_SIG1.EVALUPPERLEFT2 */
#define VIDEOSS_VIDEOIO_DISENG1_SIG1_EVALUPPERLEFT2_XEVALUPPERLEFT2_Pos 0UL
#define VIDEOSS_VIDEOIO_DISENG1_SIG1_EVALUPPERLEFT2_XEVALUPPERLEFT2_Msk 0x3FFFUL
#define VIDEOSS_VIDEOIO_DISENG1_SIG1_EVALUPPERLEFT2_YEVALUPPERLEFT2_Pos 16UL
#define VIDEOSS_VIDEOIO_DISENG1_SIG1_EVALUPPERLEFT2_YEVALUPPERLEFT2_Msk 0x3FFF0000UL
/* VIDEOSS_VIDEOIO_DISENG1_SIG1.EVALLOWERRIGHT2 */
#define VIDEOSS_VIDEOIO_DISENG1_SIG1_EVALLOWERRIGHT2_XEVALLOWERRIGHT2_Pos 0UL
#define VIDEOSS_VIDEOIO_DISENG1_SIG1_EVALLOWERRIGHT2_XEVALLOWERRIGHT2_Msk 0x3FFFUL
#define VIDEOSS_VIDEOIO_DISENG1_SIG1_EVALLOWERRIGHT2_YEVALLOWERRIGHT2_Pos 16UL
#define VIDEOSS_VIDEOIO_DISENG1_SIG1_EVALLOWERRIGHT2_YEVALLOWERRIGHT2_Msk 0x3FFF0000UL
/* VIDEOSS_VIDEOIO_DISENG1_SIG1.SIGCRCREDREF2 */
#define VIDEOSS_VIDEOIO_DISENG1_SIG1_SIGCRCREDREF2_SIGCRCREDREF2_Pos 0UL
#define VIDEOSS_VIDEOIO_DISENG1_SIG1_SIGCRCREDREF2_SIGCRCREDREF2_Msk 0xFFFFFFFFUL
/* VIDEOSS_VIDEOIO_DISENG1_SIG1.SIGCRCGREENREF2 */
#define VIDEOSS_VIDEOIO_DISENG1_SIG1_SIGCRCGREENREF2_SIGCRCGREENREF2_Pos 0UL
#define VIDEOSS_VIDEOIO_DISENG1_SIG1_SIGCRCGREENREF2_SIGCRCGREENREF2_Msk 0xFFFFFFFFUL
/* VIDEOSS_VIDEOIO_DISENG1_SIG1.SIGCRCBLUEREF2 */
#define VIDEOSS_VIDEOIO_DISENG1_SIG1_SIGCRCBLUEREF2_SIGCRCBLUEREF2_Pos 0UL
#define VIDEOSS_VIDEOIO_DISENG1_SIG1_SIGCRCBLUEREF2_SIGCRCBLUEREF2_Msk 0xFFFFFFFFUL
/* VIDEOSS_VIDEOIO_DISENG1_SIG1.SIGCRCRED2 */
#define VIDEOSS_VIDEOIO_DISENG1_SIG1_SIGCRCRED2_SIGCRCRED2_Pos 0UL
#define VIDEOSS_VIDEOIO_DISENG1_SIG1_SIGCRCRED2_SIGCRCRED2_Msk 0xFFFFFFFFUL
/* VIDEOSS_VIDEOIO_DISENG1_SIG1.SIGCRCGREEN2 */
#define VIDEOSS_VIDEOIO_DISENG1_SIG1_SIGCRCGREEN2_SIGCRCGREEN2_Pos 0UL
#define VIDEOSS_VIDEOIO_DISENG1_SIG1_SIGCRCGREEN2_SIGCRCGREEN2_Msk 0xFFFFFFFFUL
/* VIDEOSS_VIDEOIO_DISENG1_SIG1.SIGCRCBLUE2 */
#define VIDEOSS_VIDEOIO_DISENG1_SIG1_SIGCRCBLUE2_SIGCRCBLUE2_Pos 0UL
#define VIDEOSS_VIDEOIO_DISENG1_SIG1_SIGCRCBLUE2_SIGCRCBLUE2_Msk 0xFFFFFFFFUL
/* VIDEOSS_VIDEOIO_DISENG1_SIG1.EVALCONTROL3 */
#define VIDEOSS_VIDEOIO_DISENG1_SIG1_EVALCONTROL3_ENEVALWIN3_Pos 0UL
#define VIDEOSS_VIDEOIO_DISENG1_SIG1_EVALCONTROL3_ENEVALWIN3_Msk 0x1UL
#define VIDEOSS_VIDEOIO_DISENG1_SIG1_EVALCONTROL3_ENCRC3_Pos 1UL
#define VIDEOSS_VIDEOIO_DISENG1_SIG1_EVALCONTROL3_ENCRC3_Msk 0x2UL
#define VIDEOSS_VIDEOIO_DISENG1_SIG1_EVALCONTROL3_ALPHAMASK3_Pos 8UL
#define VIDEOSS_VIDEOIO_DISENG1_SIG1_EVALCONTROL3_ALPHAMASK3_Msk 0x100UL
#define VIDEOSS_VIDEOIO_DISENG1_SIG1_EVALCONTROL3_ALPHAINV3_Pos 9UL
#define VIDEOSS_VIDEOIO_DISENG1_SIG1_EVALCONTROL3_ALPHAINV3_Msk 0x200UL
#define VIDEOSS_VIDEOIO_DISENG1_SIG1_EVALCONTROL3_ENLOCALPANIC3_Pos 16UL
#define VIDEOSS_VIDEOIO_DISENG1_SIG1_EVALCONTROL3_ENLOCALPANIC3_Msk 0x10000UL
#define VIDEOSS_VIDEOIO_DISENG1_SIG1_EVALCONTROL3_ENGLOBALPANIC3_Pos 17UL
#define VIDEOSS_VIDEOIO_DISENG1_SIG1_EVALCONTROL3_ENGLOBALPANIC3_Msk 0x20000UL
/* VIDEOSS_VIDEOIO_DISENG1_SIG1.EVALUPPERLEFT3 */
#define VIDEOSS_VIDEOIO_DISENG1_SIG1_EVALUPPERLEFT3_XEVALUPPERLEFT3_Pos 0UL
#define VIDEOSS_VIDEOIO_DISENG1_SIG1_EVALUPPERLEFT3_XEVALUPPERLEFT3_Msk 0x3FFFUL
#define VIDEOSS_VIDEOIO_DISENG1_SIG1_EVALUPPERLEFT3_YEVALUPPERLEFT3_Pos 16UL
#define VIDEOSS_VIDEOIO_DISENG1_SIG1_EVALUPPERLEFT3_YEVALUPPERLEFT3_Msk 0x3FFF0000UL
/* VIDEOSS_VIDEOIO_DISENG1_SIG1.EVALLOWERRIGHT3 */
#define VIDEOSS_VIDEOIO_DISENG1_SIG1_EVALLOWERRIGHT3_XEVALLOWERRIGHT3_Pos 0UL
#define VIDEOSS_VIDEOIO_DISENG1_SIG1_EVALLOWERRIGHT3_XEVALLOWERRIGHT3_Msk 0x3FFFUL
#define VIDEOSS_VIDEOIO_DISENG1_SIG1_EVALLOWERRIGHT3_YEVALLOWERRIGHT3_Pos 16UL
#define VIDEOSS_VIDEOIO_DISENG1_SIG1_EVALLOWERRIGHT3_YEVALLOWERRIGHT3_Msk 0x3FFF0000UL
/* VIDEOSS_VIDEOIO_DISENG1_SIG1.SIGCRCREDREF3 */
#define VIDEOSS_VIDEOIO_DISENG1_SIG1_SIGCRCREDREF3_SIGCRCREDREF3_Pos 0UL
#define VIDEOSS_VIDEOIO_DISENG1_SIG1_SIGCRCREDREF3_SIGCRCREDREF3_Msk 0xFFFFFFFFUL
/* VIDEOSS_VIDEOIO_DISENG1_SIG1.SIGCRCGREENREF3 */
#define VIDEOSS_VIDEOIO_DISENG1_SIG1_SIGCRCGREENREF3_SIGCRCGREENREF3_Pos 0UL
#define VIDEOSS_VIDEOIO_DISENG1_SIG1_SIGCRCGREENREF3_SIGCRCGREENREF3_Msk 0xFFFFFFFFUL
/* VIDEOSS_VIDEOIO_DISENG1_SIG1.SIGCRCBLUEREF3 */
#define VIDEOSS_VIDEOIO_DISENG1_SIG1_SIGCRCBLUEREF3_SIGCRCBLUEREF3_Pos 0UL
#define VIDEOSS_VIDEOIO_DISENG1_SIG1_SIGCRCBLUEREF3_SIGCRCBLUEREF3_Msk 0xFFFFFFFFUL
/* VIDEOSS_VIDEOIO_DISENG1_SIG1.SIGCRCRED3 */
#define VIDEOSS_VIDEOIO_DISENG1_SIG1_SIGCRCRED3_SIGCRCRED3_Pos 0UL
#define VIDEOSS_VIDEOIO_DISENG1_SIG1_SIGCRCRED3_SIGCRCRED3_Msk 0xFFFFFFFFUL
/* VIDEOSS_VIDEOIO_DISENG1_SIG1.SIGCRCGREEN3 */
#define VIDEOSS_VIDEOIO_DISENG1_SIG1_SIGCRCGREEN3_SIGCRCGREEN3_Pos 0UL
#define VIDEOSS_VIDEOIO_DISENG1_SIG1_SIGCRCGREEN3_SIGCRCGREEN3_Msk 0xFFFFFFFFUL
/* VIDEOSS_VIDEOIO_DISENG1_SIG1.SIGCRCBLUE3 */
#define VIDEOSS_VIDEOIO_DISENG1_SIG1_SIGCRCBLUE3_SIGCRCBLUE3_Pos 0UL
#define VIDEOSS_VIDEOIO_DISENG1_SIG1_SIGCRCBLUE3_SIGCRCBLUE3_Msk 0xFFFFFFFFUL
/* VIDEOSS_VIDEOIO_DISENG1_SIG1.EVALCONTROL4 */
#define VIDEOSS_VIDEOIO_DISENG1_SIG1_EVALCONTROL4_ENEVALWIN4_Pos 0UL
#define VIDEOSS_VIDEOIO_DISENG1_SIG1_EVALCONTROL4_ENEVALWIN4_Msk 0x1UL
#define VIDEOSS_VIDEOIO_DISENG1_SIG1_EVALCONTROL4_ENCRC4_Pos 1UL
#define VIDEOSS_VIDEOIO_DISENG1_SIG1_EVALCONTROL4_ENCRC4_Msk 0x2UL
#define VIDEOSS_VIDEOIO_DISENG1_SIG1_EVALCONTROL4_ALPHAMASK4_Pos 8UL
#define VIDEOSS_VIDEOIO_DISENG1_SIG1_EVALCONTROL4_ALPHAMASK4_Msk 0x100UL
#define VIDEOSS_VIDEOIO_DISENG1_SIG1_EVALCONTROL4_ALPHAINV4_Pos 9UL
#define VIDEOSS_VIDEOIO_DISENG1_SIG1_EVALCONTROL4_ALPHAINV4_Msk 0x200UL
#define VIDEOSS_VIDEOIO_DISENG1_SIG1_EVALCONTROL4_ENLOCALPANIC4_Pos 16UL
#define VIDEOSS_VIDEOIO_DISENG1_SIG1_EVALCONTROL4_ENLOCALPANIC4_Msk 0x10000UL
#define VIDEOSS_VIDEOIO_DISENG1_SIG1_EVALCONTROL4_ENGLOBALPANIC4_Pos 17UL
#define VIDEOSS_VIDEOIO_DISENG1_SIG1_EVALCONTROL4_ENGLOBALPANIC4_Msk 0x20000UL
/* VIDEOSS_VIDEOIO_DISENG1_SIG1.EVALUPPERLEFT4 */
#define VIDEOSS_VIDEOIO_DISENG1_SIG1_EVALUPPERLEFT4_XEVALUPPERLEFT4_Pos 0UL
#define VIDEOSS_VIDEOIO_DISENG1_SIG1_EVALUPPERLEFT4_XEVALUPPERLEFT4_Msk 0x3FFFUL
#define VIDEOSS_VIDEOIO_DISENG1_SIG1_EVALUPPERLEFT4_YEVALUPPERLEFT4_Pos 16UL
#define VIDEOSS_VIDEOIO_DISENG1_SIG1_EVALUPPERLEFT4_YEVALUPPERLEFT4_Msk 0x3FFF0000UL
/* VIDEOSS_VIDEOIO_DISENG1_SIG1.EVALLOWERRIGHT4 */
#define VIDEOSS_VIDEOIO_DISENG1_SIG1_EVALLOWERRIGHT4_XEVALLOWERRIGHT4_Pos 0UL
#define VIDEOSS_VIDEOIO_DISENG1_SIG1_EVALLOWERRIGHT4_XEVALLOWERRIGHT4_Msk 0x3FFFUL
#define VIDEOSS_VIDEOIO_DISENG1_SIG1_EVALLOWERRIGHT4_YEVALLOWERRIGHT4_Pos 16UL
#define VIDEOSS_VIDEOIO_DISENG1_SIG1_EVALLOWERRIGHT4_YEVALLOWERRIGHT4_Msk 0x3FFF0000UL
/* VIDEOSS_VIDEOIO_DISENG1_SIG1.SIGCRCREDREF4 */
#define VIDEOSS_VIDEOIO_DISENG1_SIG1_SIGCRCREDREF4_SIGCRCREDREF4_Pos 0UL
#define VIDEOSS_VIDEOIO_DISENG1_SIG1_SIGCRCREDREF4_SIGCRCREDREF4_Msk 0xFFFFFFFFUL
/* VIDEOSS_VIDEOIO_DISENG1_SIG1.SIGCRCGREENREF4 */
#define VIDEOSS_VIDEOIO_DISENG1_SIG1_SIGCRCGREENREF4_SIGCRCGREENREF4_Pos 0UL
#define VIDEOSS_VIDEOIO_DISENG1_SIG1_SIGCRCGREENREF4_SIGCRCGREENREF4_Msk 0xFFFFFFFFUL
/* VIDEOSS_VIDEOIO_DISENG1_SIG1.SIGCRCBLUEREF4 */
#define VIDEOSS_VIDEOIO_DISENG1_SIG1_SIGCRCBLUEREF4_SIGCRCBLUEREF4_Pos 0UL
#define VIDEOSS_VIDEOIO_DISENG1_SIG1_SIGCRCBLUEREF4_SIGCRCBLUEREF4_Msk 0xFFFFFFFFUL
/* VIDEOSS_VIDEOIO_DISENG1_SIG1.SIGCRCRED4 */
#define VIDEOSS_VIDEOIO_DISENG1_SIG1_SIGCRCRED4_SIGCRCRED4_Pos 0UL
#define VIDEOSS_VIDEOIO_DISENG1_SIG1_SIGCRCRED4_SIGCRCRED4_Msk 0xFFFFFFFFUL
/* VIDEOSS_VIDEOIO_DISENG1_SIG1.SIGCRCGREEN4 */
#define VIDEOSS_VIDEOIO_DISENG1_SIG1_SIGCRCGREEN4_SIGCRCGREEN4_Pos 0UL
#define VIDEOSS_VIDEOIO_DISENG1_SIG1_SIGCRCGREEN4_SIGCRCGREEN4_Msk 0xFFFFFFFFUL
/* VIDEOSS_VIDEOIO_DISENG1_SIG1.SIGCRCBLUE4 */
#define VIDEOSS_VIDEOIO_DISENG1_SIG1_SIGCRCBLUE4_SIGCRCBLUE4_Pos 0UL
#define VIDEOSS_VIDEOIO_DISENG1_SIG1_SIGCRCBLUE4_SIGCRCBLUE4_Msk 0xFFFFFFFFUL
/* VIDEOSS_VIDEOIO_DISENG1_SIG1.EVALCONTROL5 */
#define VIDEOSS_VIDEOIO_DISENG1_SIG1_EVALCONTROL5_ENEVALWIN5_Pos 0UL
#define VIDEOSS_VIDEOIO_DISENG1_SIG1_EVALCONTROL5_ENEVALWIN5_Msk 0x1UL
#define VIDEOSS_VIDEOIO_DISENG1_SIG1_EVALCONTROL5_ENCRC5_Pos 1UL
#define VIDEOSS_VIDEOIO_DISENG1_SIG1_EVALCONTROL5_ENCRC5_Msk 0x2UL
#define VIDEOSS_VIDEOIO_DISENG1_SIG1_EVALCONTROL5_ALPHAMASK5_Pos 8UL
#define VIDEOSS_VIDEOIO_DISENG1_SIG1_EVALCONTROL5_ALPHAMASK5_Msk 0x100UL
#define VIDEOSS_VIDEOIO_DISENG1_SIG1_EVALCONTROL5_ALPHAINV5_Pos 9UL
#define VIDEOSS_VIDEOIO_DISENG1_SIG1_EVALCONTROL5_ALPHAINV5_Msk 0x200UL
#define VIDEOSS_VIDEOIO_DISENG1_SIG1_EVALCONTROL5_ENLOCALPANIC5_Pos 16UL
#define VIDEOSS_VIDEOIO_DISENG1_SIG1_EVALCONTROL5_ENLOCALPANIC5_Msk 0x10000UL
#define VIDEOSS_VIDEOIO_DISENG1_SIG1_EVALCONTROL5_ENGLOBALPANIC5_Pos 17UL
#define VIDEOSS_VIDEOIO_DISENG1_SIG1_EVALCONTROL5_ENGLOBALPANIC5_Msk 0x20000UL
/* VIDEOSS_VIDEOIO_DISENG1_SIG1.EVALUPPERLEFT5 */
#define VIDEOSS_VIDEOIO_DISENG1_SIG1_EVALUPPERLEFT5_XEVALUPPERLEFT5_Pos 0UL
#define VIDEOSS_VIDEOIO_DISENG1_SIG1_EVALUPPERLEFT5_XEVALUPPERLEFT5_Msk 0x3FFFUL
#define VIDEOSS_VIDEOIO_DISENG1_SIG1_EVALUPPERLEFT5_YEVALUPPERLEFT5_Pos 16UL
#define VIDEOSS_VIDEOIO_DISENG1_SIG1_EVALUPPERLEFT5_YEVALUPPERLEFT5_Msk 0x3FFF0000UL
/* VIDEOSS_VIDEOIO_DISENG1_SIG1.EVALLOWERRIGHT5 */
#define VIDEOSS_VIDEOIO_DISENG1_SIG1_EVALLOWERRIGHT5_XEVALLOWERRIGHT5_Pos 0UL
#define VIDEOSS_VIDEOIO_DISENG1_SIG1_EVALLOWERRIGHT5_XEVALLOWERRIGHT5_Msk 0x3FFFUL
#define VIDEOSS_VIDEOIO_DISENG1_SIG1_EVALLOWERRIGHT5_YEVALLOWERRIGHT5_Pos 16UL
#define VIDEOSS_VIDEOIO_DISENG1_SIG1_EVALLOWERRIGHT5_YEVALLOWERRIGHT5_Msk 0x3FFF0000UL
/* VIDEOSS_VIDEOIO_DISENG1_SIG1.SIGCRCREDREF5 */
#define VIDEOSS_VIDEOIO_DISENG1_SIG1_SIGCRCREDREF5_SIGCRCREDREF5_Pos 0UL
#define VIDEOSS_VIDEOIO_DISENG1_SIG1_SIGCRCREDREF5_SIGCRCREDREF5_Msk 0xFFFFFFFFUL
/* VIDEOSS_VIDEOIO_DISENG1_SIG1.SIGCRCGREENREF5 */
#define VIDEOSS_VIDEOIO_DISENG1_SIG1_SIGCRCGREENREF5_SIGCRCGREENREF5_Pos 0UL
#define VIDEOSS_VIDEOIO_DISENG1_SIG1_SIGCRCGREENREF5_SIGCRCGREENREF5_Msk 0xFFFFFFFFUL
/* VIDEOSS_VIDEOIO_DISENG1_SIG1.SIGCRCBLUEREF5 */
#define VIDEOSS_VIDEOIO_DISENG1_SIG1_SIGCRCBLUEREF5_SIGCRCBLUEREF5_Pos 0UL
#define VIDEOSS_VIDEOIO_DISENG1_SIG1_SIGCRCBLUEREF5_SIGCRCBLUEREF5_Msk 0xFFFFFFFFUL
/* VIDEOSS_VIDEOIO_DISENG1_SIG1.SIGCRCRED5 */
#define VIDEOSS_VIDEOIO_DISENG1_SIG1_SIGCRCRED5_SIGCRCRED5_Pos 0UL
#define VIDEOSS_VIDEOIO_DISENG1_SIG1_SIGCRCRED5_SIGCRCRED5_Msk 0xFFFFFFFFUL
/* VIDEOSS_VIDEOIO_DISENG1_SIG1.SIGCRCGREEN5 */
#define VIDEOSS_VIDEOIO_DISENG1_SIG1_SIGCRCGREEN5_SIGCRCGREEN5_Pos 0UL
#define VIDEOSS_VIDEOIO_DISENG1_SIG1_SIGCRCGREEN5_SIGCRCGREEN5_Msk 0xFFFFFFFFUL
/* VIDEOSS_VIDEOIO_DISENG1_SIG1.SIGCRCBLUE5 */
#define VIDEOSS_VIDEOIO_DISENG1_SIG1_SIGCRCBLUE5_SIGCRCBLUE5_Pos 0UL
#define VIDEOSS_VIDEOIO_DISENG1_SIG1_SIGCRCBLUE5_SIGCRCBLUE5_Msk 0xFFFFFFFFUL
/* VIDEOSS_VIDEOIO_DISENG1_SIG1.EVALCONTROL6 */
#define VIDEOSS_VIDEOIO_DISENG1_SIG1_EVALCONTROL6_ENEVALWIN6_Pos 0UL
#define VIDEOSS_VIDEOIO_DISENG1_SIG1_EVALCONTROL6_ENEVALWIN6_Msk 0x1UL
#define VIDEOSS_VIDEOIO_DISENG1_SIG1_EVALCONTROL6_ENCRC6_Pos 1UL
#define VIDEOSS_VIDEOIO_DISENG1_SIG1_EVALCONTROL6_ENCRC6_Msk 0x2UL
#define VIDEOSS_VIDEOIO_DISENG1_SIG1_EVALCONTROL6_ALPHAMASK6_Pos 8UL
#define VIDEOSS_VIDEOIO_DISENG1_SIG1_EVALCONTROL6_ALPHAMASK6_Msk 0x100UL
#define VIDEOSS_VIDEOIO_DISENG1_SIG1_EVALCONTROL6_ALPHAINV6_Pos 9UL
#define VIDEOSS_VIDEOIO_DISENG1_SIG1_EVALCONTROL6_ALPHAINV6_Msk 0x200UL
#define VIDEOSS_VIDEOIO_DISENG1_SIG1_EVALCONTROL6_ENLOCALPANIC6_Pos 16UL
#define VIDEOSS_VIDEOIO_DISENG1_SIG1_EVALCONTROL6_ENLOCALPANIC6_Msk 0x10000UL
#define VIDEOSS_VIDEOIO_DISENG1_SIG1_EVALCONTROL6_ENGLOBALPANIC6_Pos 17UL
#define VIDEOSS_VIDEOIO_DISENG1_SIG1_EVALCONTROL6_ENGLOBALPANIC6_Msk 0x20000UL
/* VIDEOSS_VIDEOIO_DISENG1_SIG1.EVALUPPERLEFT6 */
#define VIDEOSS_VIDEOIO_DISENG1_SIG1_EVALUPPERLEFT6_XEVALUPPERLEFT6_Pos 0UL
#define VIDEOSS_VIDEOIO_DISENG1_SIG1_EVALUPPERLEFT6_XEVALUPPERLEFT6_Msk 0x3FFFUL
#define VIDEOSS_VIDEOIO_DISENG1_SIG1_EVALUPPERLEFT6_YEVALUPPERLEFT6_Pos 16UL
#define VIDEOSS_VIDEOIO_DISENG1_SIG1_EVALUPPERLEFT6_YEVALUPPERLEFT6_Msk 0x3FFF0000UL
/* VIDEOSS_VIDEOIO_DISENG1_SIG1.EVALLOWERRIGHT6 */
#define VIDEOSS_VIDEOIO_DISENG1_SIG1_EVALLOWERRIGHT6_XEVALLOWERRIGHT6_Pos 0UL
#define VIDEOSS_VIDEOIO_DISENG1_SIG1_EVALLOWERRIGHT6_XEVALLOWERRIGHT6_Msk 0x3FFFUL
#define VIDEOSS_VIDEOIO_DISENG1_SIG1_EVALLOWERRIGHT6_YEVALLOWERRIGHT6_Pos 16UL
#define VIDEOSS_VIDEOIO_DISENG1_SIG1_EVALLOWERRIGHT6_YEVALLOWERRIGHT6_Msk 0x3FFF0000UL
/* VIDEOSS_VIDEOIO_DISENG1_SIG1.SIGCRCREDREF6 */
#define VIDEOSS_VIDEOIO_DISENG1_SIG1_SIGCRCREDREF6_SIGCRCREDREF6_Pos 0UL
#define VIDEOSS_VIDEOIO_DISENG1_SIG1_SIGCRCREDREF6_SIGCRCREDREF6_Msk 0xFFFFFFFFUL
/* VIDEOSS_VIDEOIO_DISENG1_SIG1.SIGCRCGREENREF6 */
#define VIDEOSS_VIDEOIO_DISENG1_SIG1_SIGCRCGREENREF6_SIGCRCGREENREF6_Pos 0UL
#define VIDEOSS_VIDEOIO_DISENG1_SIG1_SIGCRCGREENREF6_SIGCRCGREENREF6_Msk 0xFFFFFFFFUL
/* VIDEOSS_VIDEOIO_DISENG1_SIG1.SIGCRCBLUEREF6 */
#define VIDEOSS_VIDEOIO_DISENG1_SIG1_SIGCRCBLUEREF6_SIGCRCBLUEREF6_Pos 0UL
#define VIDEOSS_VIDEOIO_DISENG1_SIG1_SIGCRCBLUEREF6_SIGCRCBLUEREF6_Msk 0xFFFFFFFFUL
/* VIDEOSS_VIDEOIO_DISENG1_SIG1.SIGCRCRED6 */
#define VIDEOSS_VIDEOIO_DISENG1_SIG1_SIGCRCRED6_SIGCRCRED6_Pos 0UL
#define VIDEOSS_VIDEOIO_DISENG1_SIG1_SIGCRCRED6_SIGCRCRED6_Msk 0xFFFFFFFFUL
/* VIDEOSS_VIDEOIO_DISENG1_SIG1.SIGCRCGREEN6 */
#define VIDEOSS_VIDEOIO_DISENG1_SIG1_SIGCRCGREEN6_SIGCRCGREEN6_Pos 0UL
#define VIDEOSS_VIDEOIO_DISENG1_SIG1_SIGCRCGREEN6_SIGCRCGREEN6_Msk 0xFFFFFFFFUL
/* VIDEOSS_VIDEOIO_DISENG1_SIG1.SIGCRCBLUE6 */
#define VIDEOSS_VIDEOIO_DISENG1_SIG1_SIGCRCBLUE6_SIGCRCBLUE6_Pos 0UL
#define VIDEOSS_VIDEOIO_DISENG1_SIG1_SIGCRCBLUE6_SIGCRCBLUE6_Msk 0xFFFFFFFFUL
/* VIDEOSS_VIDEOIO_DISENG1_SIG1.EVALCONTROL7 */
#define VIDEOSS_VIDEOIO_DISENG1_SIG1_EVALCONTROL7_ENEVALWIN7_Pos 0UL
#define VIDEOSS_VIDEOIO_DISENG1_SIG1_EVALCONTROL7_ENEVALWIN7_Msk 0x1UL
#define VIDEOSS_VIDEOIO_DISENG1_SIG1_EVALCONTROL7_ENCRC7_Pos 1UL
#define VIDEOSS_VIDEOIO_DISENG1_SIG1_EVALCONTROL7_ENCRC7_Msk 0x2UL
#define VIDEOSS_VIDEOIO_DISENG1_SIG1_EVALCONTROL7_ALPHAMASK7_Pos 8UL
#define VIDEOSS_VIDEOIO_DISENG1_SIG1_EVALCONTROL7_ALPHAMASK7_Msk 0x100UL
#define VIDEOSS_VIDEOIO_DISENG1_SIG1_EVALCONTROL7_ALPHAINV7_Pos 9UL
#define VIDEOSS_VIDEOIO_DISENG1_SIG1_EVALCONTROL7_ALPHAINV7_Msk 0x200UL
#define VIDEOSS_VIDEOIO_DISENG1_SIG1_EVALCONTROL7_ENLOCALPANIC7_Pos 16UL
#define VIDEOSS_VIDEOIO_DISENG1_SIG1_EVALCONTROL7_ENLOCALPANIC7_Msk 0x10000UL
#define VIDEOSS_VIDEOIO_DISENG1_SIG1_EVALCONTROL7_ENGLOBALPANIC7_Pos 17UL
#define VIDEOSS_VIDEOIO_DISENG1_SIG1_EVALCONTROL7_ENGLOBALPANIC7_Msk 0x20000UL
/* VIDEOSS_VIDEOIO_DISENG1_SIG1.EVALUPPERLEFT7 */
#define VIDEOSS_VIDEOIO_DISENG1_SIG1_EVALUPPERLEFT7_XEVALUPPERLEFT7_Pos 0UL
#define VIDEOSS_VIDEOIO_DISENG1_SIG1_EVALUPPERLEFT7_XEVALUPPERLEFT7_Msk 0x3FFFUL
#define VIDEOSS_VIDEOIO_DISENG1_SIG1_EVALUPPERLEFT7_YEVALUPPERLEFT7_Pos 16UL
#define VIDEOSS_VIDEOIO_DISENG1_SIG1_EVALUPPERLEFT7_YEVALUPPERLEFT7_Msk 0x3FFF0000UL
/* VIDEOSS_VIDEOIO_DISENG1_SIG1.EVALLOWERRIGHT7 */
#define VIDEOSS_VIDEOIO_DISENG1_SIG1_EVALLOWERRIGHT7_XEVALLOWERRIGHT7_Pos 0UL
#define VIDEOSS_VIDEOIO_DISENG1_SIG1_EVALLOWERRIGHT7_XEVALLOWERRIGHT7_Msk 0x3FFFUL
#define VIDEOSS_VIDEOIO_DISENG1_SIG1_EVALLOWERRIGHT7_YEVALLOWERRIGHT7_Pos 16UL
#define VIDEOSS_VIDEOIO_DISENG1_SIG1_EVALLOWERRIGHT7_YEVALLOWERRIGHT7_Msk 0x3FFF0000UL
/* VIDEOSS_VIDEOIO_DISENG1_SIG1.SIGCRCREDREF7 */
#define VIDEOSS_VIDEOIO_DISENG1_SIG1_SIGCRCREDREF7_SIGCRCREDREF7_Pos 0UL
#define VIDEOSS_VIDEOIO_DISENG1_SIG1_SIGCRCREDREF7_SIGCRCREDREF7_Msk 0xFFFFFFFFUL
/* VIDEOSS_VIDEOIO_DISENG1_SIG1.SIGCRCGREENREF7 */
#define VIDEOSS_VIDEOIO_DISENG1_SIG1_SIGCRCGREENREF7_SIGCRCGREENREF7_Pos 0UL
#define VIDEOSS_VIDEOIO_DISENG1_SIG1_SIGCRCGREENREF7_SIGCRCGREENREF7_Msk 0xFFFFFFFFUL
/* VIDEOSS_VIDEOIO_DISENG1_SIG1.SIGCRCBLUEREF7 */
#define VIDEOSS_VIDEOIO_DISENG1_SIG1_SIGCRCBLUEREF7_SIGCRCBLUEREF7_Pos 0UL
#define VIDEOSS_VIDEOIO_DISENG1_SIG1_SIGCRCBLUEREF7_SIGCRCBLUEREF7_Msk 0xFFFFFFFFUL
/* VIDEOSS_VIDEOIO_DISENG1_SIG1.SIGCRCRED7 */
#define VIDEOSS_VIDEOIO_DISENG1_SIG1_SIGCRCRED7_SIGCRCRED7_Pos 0UL
#define VIDEOSS_VIDEOIO_DISENG1_SIG1_SIGCRCRED7_SIGCRCRED7_Msk 0xFFFFFFFFUL
/* VIDEOSS_VIDEOIO_DISENG1_SIG1.SIGCRCGREEN7 */
#define VIDEOSS_VIDEOIO_DISENG1_SIG1_SIGCRCGREEN7_SIGCRCGREEN7_Pos 0UL
#define VIDEOSS_VIDEOIO_DISENG1_SIG1_SIGCRCGREEN7_SIGCRCGREEN7_Msk 0xFFFFFFFFUL
/* VIDEOSS_VIDEOIO_DISENG1_SIG1.SIGCRCBLUE7 */
#define VIDEOSS_VIDEOIO_DISENG1_SIG1_SIGCRCBLUE7_SIGCRCBLUE7_Pos 0UL
#define VIDEOSS_VIDEOIO_DISENG1_SIG1_SIGCRCBLUE7_SIGCRCBLUE7_Msk 0xFFFFFFFFUL
/* VIDEOSS_VIDEOIO_DISENG1_SIG1.SHADOWLOAD */
#define VIDEOSS_VIDEOIO_DISENG1_SIG1_SHADOWLOAD_SHDLDREQ_Pos 0UL
#define VIDEOSS_VIDEOIO_DISENG1_SIG1_SHADOWLOAD_SHDLDREQ_Msk 0xFFUL
/* VIDEOSS_VIDEOIO_DISENG1_SIG1.CONTINUOUSMODE */
#define VIDEOSS_VIDEOIO_DISENG1_SIG1_CONTINUOUSMODE_ENCONT_Pos 0UL
#define VIDEOSS_VIDEOIO_DISENG1_SIG1_CONTINUOUSMODE_ENCONT_Msk 0x1UL
/* VIDEOSS_VIDEOIO_DISENG1_SIG1.SOFTWAREKICK */
#define VIDEOSS_VIDEOIO_DISENG1_SIG1_SOFTWAREKICK_KICK_Pos 0UL
#define VIDEOSS_VIDEOIO_DISENG1_SIG1_SOFTWAREKICK_KICK_Msk 0x1UL
/* VIDEOSS_VIDEOIO_DISENG1_SIG1.STATUS */
#define VIDEOSS_VIDEOIO_DISENG1_SIG1_STATUS_STSSIGERROR_Pos 0UL
#define VIDEOSS_VIDEOIO_DISENG1_SIG1_STATUS_STSSIGERROR_Msk 0xFFUL
#define VIDEOSS_VIDEOIO_DISENG1_SIG1_STATUS_STSSIGVALID_Pos 16UL
#define VIDEOSS_VIDEOIO_DISENG1_SIG1_STATUS_STSSIGVALID_Msk 0x10000UL
#define VIDEOSS_VIDEOIO_DISENG1_SIG1_STATUS_STSSIGIDLE_Pos 20UL
#define VIDEOSS_VIDEOIO_DISENG1_SIG1_STATUS_STSSIGIDLE_Msk 0x100000UL


/* VIDEOSS_VIDEOIO_DISENG1_FRAMEGEN1.FGSTCTRL */
#define VIDEOSS_VIDEOIO_DISENG1_FRAMEGEN1_FGSTCTRL_SHDEN_Pos 0UL
#define VIDEOSS_VIDEOIO_DISENG1_FRAMEGEN1_FGSTCTRL_SHDEN_Msk 0x1UL
#define VIDEOSS_VIDEOIO_DISENG1_FRAMEGEN1_FGSTCTRL_FGSYNCMODE_Pos 1UL
#define VIDEOSS_VIDEOIO_DISENG1_FRAMEGEN1_FGSTCTRL_FGSYNCMODE_Msk 0x6UL
/* VIDEOSS_VIDEOIO_DISENG1_FRAMEGEN1.HTCFG1 */
#define VIDEOSS_VIDEOIO_DISENG1_FRAMEGEN1_HTCFG1_HACT_Pos 0UL
#define VIDEOSS_VIDEOIO_DISENG1_FRAMEGEN1_HTCFG1_HACT_Msk 0x3FFFUL
#define VIDEOSS_VIDEOIO_DISENG1_FRAMEGEN1_HTCFG1_HTOTAL_Pos 16UL
#define VIDEOSS_VIDEOIO_DISENG1_FRAMEGEN1_HTCFG1_HTOTAL_Msk 0x3FFF0000UL
/* VIDEOSS_VIDEOIO_DISENG1_FRAMEGEN1.HTCFG2 */
#define VIDEOSS_VIDEOIO_DISENG1_FRAMEGEN1_HTCFG2_HSYNC_Pos 0UL
#define VIDEOSS_VIDEOIO_DISENG1_FRAMEGEN1_HTCFG2_HSYNC_Msk 0x3FFFUL
#define VIDEOSS_VIDEOIO_DISENG1_FRAMEGEN1_HTCFG2_HSBP_Pos 16UL
#define VIDEOSS_VIDEOIO_DISENG1_FRAMEGEN1_HTCFG2_HSBP_Msk 0x3FFF0000UL
#define VIDEOSS_VIDEOIO_DISENG1_FRAMEGEN1_HTCFG2_HSEN_Pos 31UL
#define VIDEOSS_VIDEOIO_DISENG1_FRAMEGEN1_HTCFG2_HSEN_Msk 0x80000000UL
/* VIDEOSS_VIDEOIO_DISENG1_FRAMEGEN1.VTCFG1 */
#define VIDEOSS_VIDEOIO_DISENG1_FRAMEGEN1_VTCFG1_VACT_Pos 0UL
#define VIDEOSS_VIDEOIO_DISENG1_FRAMEGEN1_VTCFG1_VACT_Msk 0x3FFFUL
#define VIDEOSS_VIDEOIO_DISENG1_FRAMEGEN1_VTCFG1_VTOTAL_Pos 16UL
#define VIDEOSS_VIDEOIO_DISENG1_FRAMEGEN1_VTCFG1_VTOTAL_Msk 0x3FFF0000UL
/* VIDEOSS_VIDEOIO_DISENG1_FRAMEGEN1.VTCFG2 */
#define VIDEOSS_VIDEOIO_DISENG1_FRAMEGEN1_VTCFG2_VSYNC_Pos 0UL
#define VIDEOSS_VIDEOIO_DISENG1_FRAMEGEN1_VTCFG2_VSYNC_Msk 0x3FFFUL
#define VIDEOSS_VIDEOIO_DISENG1_FRAMEGEN1_VTCFG2_VSBP_Pos 16UL
#define VIDEOSS_VIDEOIO_DISENG1_FRAMEGEN1_VTCFG2_VSBP_Msk 0x3FFF0000UL
#define VIDEOSS_VIDEOIO_DISENG1_FRAMEGEN1_VTCFG2_VSEN_Pos 31UL
#define VIDEOSS_VIDEOIO_DISENG1_FRAMEGEN1_VTCFG2_VSEN_Msk 0x80000000UL
/* VIDEOSS_VIDEOIO_DISENG1_FRAMEGEN1.INT0CONFIG */
#define VIDEOSS_VIDEOIO_DISENG1_FRAMEGEN1_INT0CONFIG_INT0COL_Pos 0UL
#define VIDEOSS_VIDEOIO_DISENG1_FRAMEGEN1_INT0CONFIG_INT0COL_Msk 0x3FFFUL
#define VIDEOSS_VIDEOIO_DISENG1_FRAMEGEN1_INT0CONFIG_INT0HSEN_Pos 15UL
#define VIDEOSS_VIDEOIO_DISENG1_FRAMEGEN1_INT0CONFIG_INT0HSEN_Msk 0x8000UL
#define VIDEOSS_VIDEOIO_DISENG1_FRAMEGEN1_INT0CONFIG_INT0ROW_Pos 16UL
#define VIDEOSS_VIDEOIO_DISENG1_FRAMEGEN1_INT0CONFIG_INT0ROW_Msk 0x3FFF0000UL
#define VIDEOSS_VIDEOIO_DISENG1_FRAMEGEN1_INT0CONFIG_INT0EN_Pos 31UL
#define VIDEOSS_VIDEOIO_DISENG1_FRAMEGEN1_INT0CONFIG_INT0EN_Msk 0x80000000UL
/* VIDEOSS_VIDEOIO_DISENG1_FRAMEGEN1.INT1CONFIG */
#define VIDEOSS_VIDEOIO_DISENG1_FRAMEGEN1_INT1CONFIG_INT1COL_Pos 0UL
#define VIDEOSS_VIDEOIO_DISENG1_FRAMEGEN1_INT1CONFIG_INT1COL_Msk 0x3FFFUL
#define VIDEOSS_VIDEOIO_DISENG1_FRAMEGEN1_INT1CONFIG_INT1HSEN_Pos 15UL
#define VIDEOSS_VIDEOIO_DISENG1_FRAMEGEN1_INT1CONFIG_INT1HSEN_Msk 0x8000UL
#define VIDEOSS_VIDEOIO_DISENG1_FRAMEGEN1_INT1CONFIG_INT1ROW_Pos 16UL
#define VIDEOSS_VIDEOIO_DISENG1_FRAMEGEN1_INT1CONFIG_INT1ROW_Msk 0x3FFF0000UL
#define VIDEOSS_VIDEOIO_DISENG1_FRAMEGEN1_INT1CONFIG_INT1EN_Pos 31UL
#define VIDEOSS_VIDEOIO_DISENG1_FRAMEGEN1_INT1CONFIG_INT1EN_Msk 0x80000000UL
/* VIDEOSS_VIDEOIO_DISENG1_FRAMEGEN1.INT2CONFIG */
#define VIDEOSS_VIDEOIO_DISENG1_FRAMEGEN1_INT2CONFIG_INT2COL_Pos 0UL
#define VIDEOSS_VIDEOIO_DISENG1_FRAMEGEN1_INT2CONFIG_INT2COL_Msk 0x3FFFUL
#define VIDEOSS_VIDEOIO_DISENG1_FRAMEGEN1_INT2CONFIG_INT2HSEN_Pos 15UL
#define VIDEOSS_VIDEOIO_DISENG1_FRAMEGEN1_INT2CONFIG_INT2HSEN_Msk 0x8000UL
#define VIDEOSS_VIDEOIO_DISENG1_FRAMEGEN1_INT2CONFIG_INT2ROW_Pos 16UL
#define VIDEOSS_VIDEOIO_DISENG1_FRAMEGEN1_INT2CONFIG_INT2ROW_Msk 0x3FFF0000UL
#define VIDEOSS_VIDEOIO_DISENG1_FRAMEGEN1_INT2CONFIG_INT2EN_Pos 31UL
#define VIDEOSS_VIDEOIO_DISENG1_FRAMEGEN1_INT2CONFIG_INT2EN_Msk 0x80000000UL
/* VIDEOSS_VIDEOIO_DISENG1_FRAMEGEN1.INT3CONFIG */
#define VIDEOSS_VIDEOIO_DISENG1_FRAMEGEN1_INT3CONFIG_INT3COL_Pos 0UL
#define VIDEOSS_VIDEOIO_DISENG1_FRAMEGEN1_INT3CONFIG_INT3COL_Msk 0x3FFFUL
#define VIDEOSS_VIDEOIO_DISENG1_FRAMEGEN1_INT3CONFIG_INT3HSEN_Pos 15UL
#define VIDEOSS_VIDEOIO_DISENG1_FRAMEGEN1_INT3CONFIG_INT3HSEN_Msk 0x8000UL
#define VIDEOSS_VIDEOIO_DISENG1_FRAMEGEN1_INT3CONFIG_INT3ROW_Pos 16UL
#define VIDEOSS_VIDEOIO_DISENG1_FRAMEGEN1_INT3CONFIG_INT3ROW_Msk 0x3FFF0000UL
#define VIDEOSS_VIDEOIO_DISENG1_FRAMEGEN1_INT3CONFIG_INT3EN_Pos 31UL
#define VIDEOSS_VIDEOIO_DISENG1_FRAMEGEN1_INT3CONFIG_INT3EN_Msk 0x80000000UL
/* VIDEOSS_VIDEOIO_DISENG1_FRAMEGEN1.PKICKCONFIG */
#define VIDEOSS_VIDEOIO_DISENG1_FRAMEGEN1_PKICKCONFIG_PKICKCOL_Pos 0UL
#define VIDEOSS_VIDEOIO_DISENG1_FRAMEGEN1_PKICKCONFIG_PKICKCOL_Msk 0x3FFFUL
#define VIDEOSS_VIDEOIO_DISENG1_FRAMEGEN1_PKICKCONFIG_PKICKINT0EN_Pos 15UL
#define VIDEOSS_VIDEOIO_DISENG1_FRAMEGEN1_PKICKCONFIG_PKICKINT0EN_Msk 0x8000UL
#define VIDEOSS_VIDEOIO_DISENG1_FRAMEGEN1_PKICKCONFIG_PKICKROW_Pos 16UL
#define VIDEOSS_VIDEOIO_DISENG1_FRAMEGEN1_PKICKCONFIG_PKICKROW_Msk 0x3FFF0000UL
#define VIDEOSS_VIDEOIO_DISENG1_FRAMEGEN1_PKICKCONFIG_PKICKEN_Pos 31UL
#define VIDEOSS_VIDEOIO_DISENG1_FRAMEGEN1_PKICKCONFIG_PKICKEN_Msk 0x80000000UL
/* VIDEOSS_VIDEOIO_DISENG1_FRAMEGEN1.SKICKCONFIG */
#define VIDEOSS_VIDEOIO_DISENG1_FRAMEGEN1_SKICKCONFIG_SKICKCOL_Pos 0UL
#define VIDEOSS_VIDEOIO_DISENG1_FRAMEGEN1_SKICKCONFIG_SKICKCOL_Msk 0x3FFFUL
#define VIDEOSS_VIDEOIO_DISENG1_FRAMEGEN1_SKICKCONFIG_SKICKINT1EN_Pos 15UL
#define VIDEOSS_VIDEOIO_DISENG1_FRAMEGEN1_SKICKCONFIG_SKICKINT1EN_Msk 0x8000UL
#define VIDEOSS_VIDEOIO_DISENG1_FRAMEGEN1_SKICKCONFIG_SKICKROW_Pos 16UL
#define VIDEOSS_VIDEOIO_DISENG1_FRAMEGEN1_SKICKCONFIG_SKICKROW_Msk 0x3FFF0000UL
#define VIDEOSS_VIDEOIO_DISENG1_FRAMEGEN1_SKICKCONFIG_SKICKTRIG_Pos 30UL
#define VIDEOSS_VIDEOIO_DISENG1_FRAMEGEN1_SKICKCONFIG_SKICKTRIG_Msk 0x40000000UL
#define VIDEOSS_VIDEOIO_DISENG1_FRAMEGEN1_SKICKCONFIG_SKICKEN_Pos 31UL
#define VIDEOSS_VIDEOIO_DISENG1_FRAMEGEN1_SKICKCONFIG_SKICKEN_Msk 0x80000000UL
/* VIDEOSS_VIDEOIO_DISENG1_FRAMEGEN1.SECSTATCONFIG */
#define VIDEOSS_VIDEOIO_DISENG1_FRAMEGEN1_SECSTATCONFIG_LEVGOODFRAMES_Pos 0UL
#define VIDEOSS_VIDEOIO_DISENG1_FRAMEGEN1_SECSTATCONFIG_LEVGOODFRAMES_Msk 0xFUL
#define VIDEOSS_VIDEOIO_DISENG1_FRAMEGEN1_SECSTATCONFIG_LEVBADFRAMES_Pos 4UL
#define VIDEOSS_VIDEOIO_DISENG1_FRAMEGEN1_SECSTATCONFIG_LEVBADFRAMES_Msk 0xF0UL
#define VIDEOSS_VIDEOIO_DISENG1_FRAMEGEN1_SECSTATCONFIG_LEVSKEWINRANGE_Pos 8UL
#define VIDEOSS_VIDEOIO_DISENG1_FRAMEGEN1_SECSTATCONFIG_LEVSKEWINRANGE_Msk 0xF00UL
/* VIDEOSS_VIDEOIO_DISENG1_FRAMEGEN1.FGSRCR1 */
#define VIDEOSS_VIDEOIO_DISENG1_FRAMEGEN1_FGSRCR1_SREN_Pos 0UL
#define VIDEOSS_VIDEOIO_DISENG1_FRAMEGEN1_FGSRCR1_SREN_Msk 0x1UL
#define VIDEOSS_VIDEOIO_DISENG1_FRAMEGEN1_FGSRCR1_SRMODE_Pos 1UL
#define VIDEOSS_VIDEOIO_DISENG1_FRAMEGEN1_FGSRCR1_SRMODE_Msk 0x6UL
#define VIDEOSS_VIDEOIO_DISENG1_FRAMEGEN1_FGSRCR1_SRADJ_Pos 3UL
#define VIDEOSS_VIDEOIO_DISENG1_FRAMEGEN1_FGSRCR1_SRADJ_Msk 0x8UL
#define VIDEOSS_VIDEOIO_DISENG1_FRAMEGEN1_FGSRCR1_SREVEN_Pos 4UL
#define VIDEOSS_VIDEOIO_DISENG1_FRAMEGEN1_FGSRCR1_SREVEN_Msk 0x10UL
#define VIDEOSS_VIDEOIO_DISENG1_FRAMEGEN1_FGSRCR1_SRFASTSYNC_Pos 5UL
#define VIDEOSS_VIDEOIO_DISENG1_FRAMEGEN1_FGSRCR1_SRFASTSYNC_Msk 0x20UL
#define VIDEOSS_VIDEOIO_DISENG1_FRAMEGEN1_FGSRCR1_SRQALIGN_Pos 6UL
#define VIDEOSS_VIDEOIO_DISENG1_FRAMEGEN1_FGSRCR1_SRQALIGN_Msk 0x40UL
#define VIDEOSS_VIDEOIO_DISENG1_FRAMEGEN1_FGSRCR1_SRQVAL_Pos 7UL
#define VIDEOSS_VIDEOIO_DISENG1_FRAMEGEN1_FGSRCR1_SRQVAL_Msk 0x180UL
#define VIDEOSS_VIDEOIO_DISENG1_FRAMEGEN1_FGSRCR1_SRDBGDISP_Pos 16UL
#define VIDEOSS_VIDEOIO_DISENG1_FRAMEGEN1_FGSRCR1_SRDBGDISP_Msk 0x10000UL
#define VIDEOSS_VIDEOIO_DISENG1_FRAMEGEN1_FGSRCR1_SREPOFF_Pos 17UL
#define VIDEOSS_VIDEOIO_DISENG1_FRAMEGEN1_FGSRCR1_SREPOFF_Msk 0x20000UL
/* VIDEOSS_VIDEOIO_DISENG1_FRAMEGEN1.FGSRCR2 */
#define VIDEOSS_VIDEOIO_DISENG1_FRAMEGEN1_FGSRCR2_HTOTALMIN_Pos 0UL
#define VIDEOSS_VIDEOIO_DISENG1_FRAMEGEN1_FGSRCR2_HTOTALMIN_Msk 0x3FFFUL
#define VIDEOSS_VIDEOIO_DISENG1_FRAMEGEN1_FGSRCR2_HTOTALMAX_Pos 16UL
#define VIDEOSS_VIDEOIO_DISENG1_FRAMEGEN1_FGSRCR2_HTOTALMAX_Msk 0x3FFF0000UL
/* VIDEOSS_VIDEOIO_DISENG1_FRAMEGEN1.FGSRCR3 */
#define VIDEOSS_VIDEOIO_DISENG1_FRAMEGEN1_FGSRCR3_VTOTALMIN_Pos 0UL
#define VIDEOSS_VIDEOIO_DISENG1_FRAMEGEN1_FGSRCR3_VTOTALMIN_Msk 0x3FFFUL
#define VIDEOSS_VIDEOIO_DISENG1_FRAMEGEN1_FGSRCR3_VTOTALMAX_Pos 16UL
#define VIDEOSS_VIDEOIO_DISENG1_FRAMEGEN1_FGSRCR3_VTOTALMAX_Msk 0x3FFF0000UL
/* VIDEOSS_VIDEOIO_DISENG1_FRAMEGEN1.FGSRCR4 */
#define VIDEOSS_VIDEOIO_DISENG1_FRAMEGEN1_FGSRCR4_TARGETSKEW_Pos 0UL
#define VIDEOSS_VIDEOIO_DISENG1_FRAMEGEN1_FGSRCR4_TARGETSKEW_Msk 0x1FFFFFFFUL
/* VIDEOSS_VIDEOIO_DISENG1_FRAMEGEN1.FGSRCR5 */
#define VIDEOSS_VIDEOIO_DISENG1_FRAMEGEN1_FGSRCR5_SYNCRANGELOW_Pos 0UL
#define VIDEOSS_VIDEOIO_DISENG1_FRAMEGEN1_FGSRCR5_SYNCRANGELOW_Msk 0x1FFFFFFFUL
/* VIDEOSS_VIDEOIO_DISENG1_FRAMEGEN1.FGSRCR6 */
#define VIDEOSS_VIDEOIO_DISENG1_FRAMEGEN1_FGSRCR6_SYNCRANGEHIGH_Pos 0UL
#define VIDEOSS_VIDEOIO_DISENG1_FRAMEGEN1_FGSRCR6_SYNCRANGEHIGH_Msk 0x1FFFFFFFUL
/* VIDEOSS_VIDEOIO_DISENG1_FRAMEGEN1.FGKSDR */
#define VIDEOSS_VIDEOIO_DISENG1_FRAMEGEN1_FGKSDR_PCNTCPLMAX_Pos 0UL
#define VIDEOSS_VIDEOIO_DISENG1_FRAMEGEN1_FGKSDR_PCNTCPLMAX_Msk 0x7UL
#define VIDEOSS_VIDEOIO_DISENG1_FRAMEGEN1_FGKSDR_SCNTCPLMAX_Pos 16UL
#define VIDEOSS_VIDEOIO_DISENG1_FRAMEGEN1_FGKSDR_SCNTCPLMAX_Msk 0x70000UL
/* VIDEOSS_VIDEOIO_DISENG1_FRAMEGEN1.PACFG */
#define VIDEOSS_VIDEOIO_DISENG1_FRAMEGEN1_PACFG_PSTARTX_Pos 0UL
#define VIDEOSS_VIDEOIO_DISENG1_FRAMEGEN1_PACFG_PSTARTX_Msk 0x3FFFUL
#define VIDEOSS_VIDEOIO_DISENG1_FRAMEGEN1_PACFG_PSTARTY_Pos 16UL
#define VIDEOSS_VIDEOIO_DISENG1_FRAMEGEN1_PACFG_PSTARTY_Msk 0x3FFF0000UL
/* VIDEOSS_VIDEOIO_DISENG1_FRAMEGEN1.SACFG */
#define VIDEOSS_VIDEOIO_DISENG1_FRAMEGEN1_SACFG_SSTARTX_Pos 0UL
#define VIDEOSS_VIDEOIO_DISENG1_FRAMEGEN1_SACFG_SSTARTX_Msk 0x3FFFUL
#define VIDEOSS_VIDEOIO_DISENG1_FRAMEGEN1_SACFG_SSTARTY_Pos 16UL
#define VIDEOSS_VIDEOIO_DISENG1_FRAMEGEN1_SACFG_SSTARTY_Msk 0x3FFF0000UL
/* VIDEOSS_VIDEOIO_DISENG1_FRAMEGEN1.FGINCTRL */
#define VIDEOSS_VIDEOIO_DISENG1_FRAMEGEN1_FGINCTRL_FGDM_Pos 0UL
#define VIDEOSS_VIDEOIO_DISENG1_FRAMEGEN1_FGINCTRL_FGDM_Msk 0x7UL
#define VIDEOSS_VIDEOIO_DISENG1_FRAMEGEN1_FGINCTRL_ENPRIMALPHA_Pos 3UL
#define VIDEOSS_VIDEOIO_DISENG1_FRAMEGEN1_FGINCTRL_ENPRIMALPHA_Msk 0x8UL
#define VIDEOSS_VIDEOIO_DISENG1_FRAMEGEN1_FGINCTRL_ENSECALPHA_Pos 4UL
#define VIDEOSS_VIDEOIO_DISENG1_FRAMEGEN1_FGINCTRL_ENSECALPHA_Msk 0x10UL
/* VIDEOSS_VIDEOIO_DISENG1_FRAMEGEN1.FGINCTRLPANIC */
#define VIDEOSS_VIDEOIO_DISENG1_FRAMEGEN1_FGINCTRLPANIC_FGDMPANIC_Pos 0UL
#define VIDEOSS_VIDEOIO_DISENG1_FRAMEGEN1_FGINCTRLPANIC_FGDMPANIC_Msk 0x7UL
#define VIDEOSS_VIDEOIO_DISENG1_FRAMEGEN1_FGINCTRLPANIC_ENPRIMALPHAPANIC_Pos 3UL
#define VIDEOSS_VIDEOIO_DISENG1_FRAMEGEN1_FGINCTRLPANIC_ENPRIMALPHAPANIC_Msk 0x8UL
#define VIDEOSS_VIDEOIO_DISENG1_FRAMEGEN1_FGINCTRLPANIC_ENSECALPHAPANIC_Pos 4UL
#define VIDEOSS_VIDEOIO_DISENG1_FRAMEGEN1_FGINCTRLPANIC_ENSECALPHAPANIC_Msk 0x10UL
/* VIDEOSS_VIDEOIO_DISENG1_FRAMEGEN1.FGCCR */
#define VIDEOSS_VIDEOIO_DISENG1_FRAMEGEN1_FGCCR_CCBLUE_Pos 0UL
#define VIDEOSS_VIDEOIO_DISENG1_FRAMEGEN1_FGCCR_CCBLUE_Msk 0xFFUL
#define VIDEOSS_VIDEOIO_DISENG1_FRAMEGEN1_FGCCR_CCGREEN_Pos 8UL
#define VIDEOSS_VIDEOIO_DISENG1_FRAMEGEN1_FGCCR_CCGREEN_Msk 0xFF00UL
#define VIDEOSS_VIDEOIO_DISENG1_FRAMEGEN1_FGCCR_CCRED_Pos 16UL
#define VIDEOSS_VIDEOIO_DISENG1_FRAMEGEN1_FGCCR_CCRED_Msk 0xFF0000UL
#define VIDEOSS_VIDEOIO_DISENG1_FRAMEGEN1_FGCCR_CCALPHA_Pos 24UL
#define VIDEOSS_VIDEOIO_DISENG1_FRAMEGEN1_FGCCR_CCALPHA_Msk 0x1000000UL
/* VIDEOSS_VIDEOIO_DISENG1_FRAMEGEN1.BLENDCONTROL */
#define VIDEOSS_VIDEOIO_DISENG1_FRAMEGEN1_BLENDCONTROL_PRIM_C_BLD_FUNC_Pos 0UL
#define VIDEOSS_VIDEOIO_DISENG1_FRAMEGEN1_BLENDCONTROL_PRIM_C_BLD_FUNC_Msk 0x7UL
#define VIDEOSS_VIDEOIO_DISENG1_FRAMEGEN1_BLENDCONTROL_SEC_C_BLD_FUNC_Pos 4UL
#define VIDEOSS_VIDEOIO_DISENG1_FRAMEGEN1_BLENDCONTROL_SEC_C_BLD_FUNC_Msk 0x70UL
#define VIDEOSS_VIDEOIO_DISENG1_FRAMEGEN1_BLENDCONTROL_PRIM_A_BLD_FUNC_Pos 8UL
#define VIDEOSS_VIDEOIO_DISENG1_FRAMEGEN1_BLENDCONTROL_PRIM_A_BLD_FUNC_Msk 0x700UL
#define VIDEOSS_VIDEOIO_DISENG1_FRAMEGEN1_BLENDCONTROL_SEC_A_BLD_FUNC_Pos 12UL
#define VIDEOSS_VIDEOIO_DISENG1_FRAMEGEN1_BLENDCONTROL_SEC_A_BLD_FUNC_Msk 0x7000UL
#define VIDEOSS_VIDEOIO_DISENG1_FRAMEGEN1_BLENDCONTROL_BLENDALPHA_Pos 16UL
#define VIDEOSS_VIDEOIO_DISENG1_FRAMEGEN1_BLENDCONTROL_BLENDALPHA_Msk 0xFF0000UL
/* VIDEOSS_VIDEOIO_DISENG1_FRAMEGEN1.FGENABLE */
#define VIDEOSS_VIDEOIO_DISENG1_FRAMEGEN1_FGENABLE_FGEN_Pos 0UL
#define VIDEOSS_VIDEOIO_DISENG1_FRAMEGEN1_FGENABLE_FGEN_Msk 0x1UL
/* VIDEOSS_VIDEOIO_DISENG1_FRAMEGEN1.FGSLR */
#define VIDEOSS_VIDEOIO_DISENG1_FRAMEGEN1_FGSLR_SHDTOKGEN_Pos 0UL
#define VIDEOSS_VIDEOIO_DISENG1_FRAMEGEN1_FGSLR_SHDTOKGEN_Msk 0x1UL
/* VIDEOSS_VIDEOIO_DISENG1_FRAMEGEN1.FGENSTS */
#define VIDEOSS_VIDEOIO_DISENG1_FRAMEGEN1_FGENSTS_ENSTS_Pos 0UL
#define VIDEOSS_VIDEOIO_DISENG1_FRAMEGEN1_FGENSTS_ENSTS_Msk 0x1UL
#define VIDEOSS_VIDEOIO_DISENG1_FRAMEGEN1_FGENSTS_PANICSTAT_Pos 1UL
#define VIDEOSS_VIDEOIO_DISENG1_FRAMEGEN1_FGENSTS_PANICSTAT_Msk 0x2UL
/* VIDEOSS_VIDEOIO_DISENG1_FRAMEGEN1.FGTIMESTAMP */
#define VIDEOSS_VIDEOIO_DISENG1_FRAMEGEN1_FGTIMESTAMP_LINEINDEX_Pos 0UL
#define VIDEOSS_VIDEOIO_DISENG1_FRAMEGEN1_FGTIMESTAMP_LINEINDEX_Msk 0x3FFFUL
#define VIDEOSS_VIDEOIO_DISENG1_FRAMEGEN1_FGTIMESTAMP_FRAMEINDEX_Pos 14UL
#define VIDEOSS_VIDEOIO_DISENG1_FRAMEGEN1_FGTIMESTAMP_FRAMEINDEX_Msk 0xFFFFC000UL
/* VIDEOSS_VIDEOIO_DISENG1_FRAMEGEN1.FGCHSTAT */
#define VIDEOSS_VIDEOIO_DISENG1_FRAMEGEN1_FGCHSTAT_PFIFOEMPTY_Pos 0UL
#define VIDEOSS_VIDEOIO_DISENG1_FRAMEGEN1_FGCHSTAT_PFIFOEMPTY_Msk 0x1UL
#define VIDEOSS_VIDEOIO_DISENG1_FRAMEGEN1_FGCHSTAT_PRIMSYNCSTAT_Pos 8UL
#define VIDEOSS_VIDEOIO_DISENG1_FRAMEGEN1_FGCHSTAT_PRIMSYNCSTAT_Msk 0x100UL
#define VIDEOSS_VIDEOIO_DISENG1_FRAMEGEN1_FGCHSTAT_SFIFOEMPTY_Pos 16UL
#define VIDEOSS_VIDEOIO_DISENG1_FRAMEGEN1_FGCHSTAT_SFIFOEMPTY_Msk 0x10000UL
#define VIDEOSS_VIDEOIO_DISENG1_FRAMEGEN1_FGCHSTAT_SKEWRANGEERR_Pos 17UL
#define VIDEOSS_VIDEOIO_DISENG1_FRAMEGEN1_FGCHSTAT_SKEWRANGEERR_Msk 0x20000UL
#define VIDEOSS_VIDEOIO_DISENG1_FRAMEGEN1_FGCHSTAT_SECSYNCSTAT_Pos 24UL
#define VIDEOSS_VIDEOIO_DISENG1_FRAMEGEN1_FGCHSTAT_SECSYNCSTAT_Msk 0x1000000UL
/* VIDEOSS_VIDEOIO_DISENG1_FRAMEGEN1.FGCHSTATCLR */
#define VIDEOSS_VIDEOIO_DISENG1_FRAMEGEN1_FGCHSTATCLR_CLRPRIMSTAT_Pos 0UL
#define VIDEOSS_VIDEOIO_DISENG1_FRAMEGEN1_FGCHSTATCLR_CLRPRIMSTAT_Msk 0x1UL
#define VIDEOSS_VIDEOIO_DISENG1_FRAMEGEN1_FGCHSTATCLR_CLRSECSTAT_Pos 16UL
#define VIDEOSS_VIDEOIO_DISENG1_FRAMEGEN1_FGCHSTATCLR_CLRSECSTAT_Msk 0x10000UL
/* VIDEOSS_VIDEOIO_DISENG1_FRAMEGEN1.FGSKEWMON */
#define VIDEOSS_VIDEOIO_DISENG1_FRAMEGEN1_FGSKEWMON_SKEWMON_Pos 0UL
#define VIDEOSS_VIDEOIO_DISENG1_FRAMEGEN1_FGSKEWMON_SKEWMON_Msk 0x1FFFFFFFUL
/* VIDEOSS_VIDEOIO_DISENG1_FRAMEGEN1.FGSFIFOMIN */
#define VIDEOSS_VIDEOIO_DISENG1_FRAMEGEN1_FGSFIFOMIN_SFIFOMIN_Pos 0UL
#define VIDEOSS_VIDEOIO_DISENG1_FRAMEGEN1_FGSFIFOMIN_SFIFOMIN_Msk 0x7FFUL
/* VIDEOSS_VIDEOIO_DISENG1_FRAMEGEN1.FGSFIFOMAX */
#define VIDEOSS_VIDEOIO_DISENG1_FRAMEGEN1_FGSFIFOMAX_SFIFOMAX_Pos 0UL
#define VIDEOSS_VIDEOIO_DISENG1_FRAMEGEN1_FGSFIFOMAX_SFIFOMAX_Msk 0x7FFUL
/* VIDEOSS_VIDEOIO_DISENG1_FRAMEGEN1.FGSFIFOFILLCLR */
#define VIDEOSS_VIDEOIO_DISENG1_FRAMEGEN1_FGSFIFOFILLCLR_SFIFOFILLCLR_Pos 0UL
#define VIDEOSS_VIDEOIO_DISENG1_FRAMEGEN1_FGSFIFOFILLCLR_SFIFOFILLCLR_Msk 0x1UL
/* VIDEOSS_VIDEOIO_DISENG1_FRAMEGEN1.FGSREPD */
#define VIDEOSS_VIDEOIO_DISENG1_FRAMEGEN1_FGSREPD_EPVAL_Pos 0UL
#define VIDEOSS_VIDEOIO_DISENG1_FRAMEGEN1_FGSREPD_EPVAL_Msk 0x1FFFFFFFUL
/* VIDEOSS_VIDEOIO_DISENG1_FRAMEGEN1.FGSRFTD */
#define VIDEOSS_VIDEOIO_DISENG1_FRAMEGEN1_FGSRFTD_FRTOT_Pos 0UL
#define VIDEOSS_VIDEOIO_DISENG1_FRAMEGEN1_FGSRFTD_FRTOT_Msk 0xFFFFFFFUL
/* VIDEOSS_VIDEOIO_DISENG1_FRAMEGEN1.FGTGPOSITION */
#define VIDEOSS_VIDEOIO_DISENG1_FRAMEGEN1_FGTGPOSITION_FRTGX_Pos 0UL
#define VIDEOSS_VIDEOIO_DISENG1_FRAMEGEN1_FGTGPOSITION_FRTGX_Msk 0x3FFFUL
#define VIDEOSS_VIDEOIO_DISENG1_FRAMEGEN1_FGTGPOSITION_FRTGY_Pos 14UL
#define VIDEOSS_VIDEOIO_DISENG1_FRAMEGEN1_FGTGPOSITION_FRTGY_Msk 0xFFFC000UL


/* VIDEOSS_VIDEOIO_DISENG1_GAMMACOR1.STATICCONTROL */
#define VIDEOSS_VIDEOIO_DISENG1_GAMMACOR1_STATICCONTROL_SHDEN_Pos 0UL
#define VIDEOSS_VIDEOIO_DISENG1_GAMMACOR1_STATICCONTROL_SHDEN_Msk 0x1UL
#define VIDEOSS_VIDEOIO_DISENG1_GAMMACOR1_STATICCONTROL_BLUEWRITEENABLE_Pos 1UL
#define VIDEOSS_VIDEOIO_DISENG1_GAMMACOR1_STATICCONTROL_BLUEWRITEENABLE_Msk 0x2UL
#define VIDEOSS_VIDEOIO_DISENG1_GAMMACOR1_STATICCONTROL_GREENWRITEENABLE_Pos 2UL
#define VIDEOSS_VIDEOIO_DISENG1_GAMMACOR1_STATICCONTROL_GREENWRITEENABLE_Msk 0x4UL
#define VIDEOSS_VIDEOIO_DISENG1_GAMMACOR1_STATICCONTROL_REDWRITEENABLE_Pos 3UL
#define VIDEOSS_VIDEOIO_DISENG1_GAMMACOR1_STATICCONTROL_REDWRITEENABLE_Msk 0x8UL
/* VIDEOSS_VIDEOIO_DISENG1_GAMMACOR1.LUTSTART */
#define VIDEOSS_VIDEOIO_DISENG1_GAMMACOR1_LUTSTART_STARTBLUE_Pos 0UL
#define VIDEOSS_VIDEOIO_DISENG1_GAMMACOR1_LUTSTART_STARTBLUE_Msk 0x3FFUL
#define VIDEOSS_VIDEOIO_DISENG1_GAMMACOR1_LUTSTART_STARTGREEN_Pos 10UL
#define VIDEOSS_VIDEOIO_DISENG1_GAMMACOR1_LUTSTART_STARTGREEN_Msk 0xFFC00UL
#define VIDEOSS_VIDEOIO_DISENG1_GAMMACOR1_LUTSTART_STARTRED_Pos 20UL
#define VIDEOSS_VIDEOIO_DISENG1_GAMMACOR1_LUTSTART_STARTRED_Msk 0x3FF00000UL
/* VIDEOSS_VIDEOIO_DISENG1_GAMMACOR1.LUTDELTAS */
#define VIDEOSS_VIDEOIO_DISENG1_GAMMACOR1_LUTDELTAS_DELTABLUE_Pos 0UL
#define VIDEOSS_VIDEOIO_DISENG1_GAMMACOR1_LUTDELTAS_DELTABLUE_Msk 0x3FFUL
#define VIDEOSS_VIDEOIO_DISENG1_GAMMACOR1_LUTDELTAS_DELTAGREEN_Pos 10UL
#define VIDEOSS_VIDEOIO_DISENG1_GAMMACOR1_LUTDELTAS_DELTAGREEN_Msk 0xFFC00UL
#define VIDEOSS_VIDEOIO_DISENG1_GAMMACOR1_LUTDELTAS_DELTARED_Pos 20UL
#define VIDEOSS_VIDEOIO_DISENG1_GAMMACOR1_LUTDELTAS_DELTARED_Msk 0x3FF00000UL
/* VIDEOSS_VIDEOIO_DISENG1_GAMMACOR1.CONTROL */
#define VIDEOSS_VIDEOIO_DISENG1_GAMMACOR1_CONTROL_MODE_Pos 0UL
#define VIDEOSS_VIDEOIO_DISENG1_GAMMACOR1_CONTROL_MODE_Msk 0x1UL
#define VIDEOSS_VIDEOIO_DISENG1_GAMMACOR1_CONTROL_ALPHAMASK_Pos 4UL
#define VIDEOSS_VIDEOIO_DISENG1_GAMMACOR1_CONTROL_ALPHAMASK_Msk 0x10UL
#define VIDEOSS_VIDEOIO_DISENG1_GAMMACOR1_CONTROL_ALPHAINVERT_Pos 5UL
#define VIDEOSS_VIDEOIO_DISENG1_GAMMACOR1_CONTROL_ALPHAINVERT_Msk 0x20UL


/* VIDEOSS_VIDEOIO_DISENG1_DITHER1.CONTROL */
#define VIDEOSS_VIDEOIO_DISENG1_DITHER1_CONTROL_MODE_Pos 0UL
#define VIDEOSS_VIDEOIO_DISENG1_DITHER1_CONTROL_MODE_Msk 0x1UL
/* VIDEOSS_VIDEOIO_DISENG1_DITHER1.DITHERCONTROL */
#define VIDEOSS_VIDEOIO_DISENG1_DITHER1_DITHERCONTROL_BLUE_RANGE_SELECT_Pos 0UL
#define VIDEOSS_VIDEOIO_DISENG1_DITHER1_DITHERCONTROL_BLUE_RANGE_SELECT_Msk 0x7UL
#define VIDEOSS_VIDEOIO_DISENG1_DITHER1_DITHERCONTROL_GREEN_RANGE_SELECT_Pos 4UL
#define VIDEOSS_VIDEOIO_DISENG1_DITHER1_DITHERCONTROL_GREEN_RANGE_SELECT_Msk 0x70UL
#define VIDEOSS_VIDEOIO_DISENG1_DITHER1_DITHERCONTROL_RED_RANGE_SELECT_Pos 8UL
#define VIDEOSS_VIDEOIO_DISENG1_DITHER1_DITHERCONTROL_RED_RANGE_SELECT_Msk 0x700UL
#define VIDEOSS_VIDEOIO_DISENG1_DITHER1_DITHERCONTROL_OFFSET_SELECT_Pos 16UL
#define VIDEOSS_VIDEOIO_DISENG1_DITHER1_DITHERCONTROL_OFFSET_SELECT_Msk 0x10000UL
#define VIDEOSS_VIDEOIO_DISENG1_DITHER1_DITHERCONTROL_ALGO_SELECT_Pos 20UL
#define VIDEOSS_VIDEOIO_DISENG1_DITHER1_DITHERCONTROL_ALGO_SELECT_Msk 0x300000UL
#define VIDEOSS_VIDEOIO_DISENG1_DITHER1_DITHERCONTROL_ALPHA_MODE_Pos 24UL
#define VIDEOSS_VIDEOIO_DISENG1_DITHER1_DITHERCONTROL_ALPHA_MODE_Msk 0x3000000UL
/* VIDEOSS_VIDEOIO_DISENG1_DITHER1.RELEASE */
#define VIDEOSS_VIDEOIO_DISENG1_DITHER1_RELEASE_SUBVERSION_Pos 0UL
#define VIDEOSS_VIDEOIO_DISENG1_DITHER1_RELEASE_SUBVERSION_Msk 0xFFUL
#define VIDEOSS_VIDEOIO_DISENG1_DITHER1_RELEASE_VERSION_Pos 8UL
#define VIDEOSS_VIDEOIO_DISENG1_DITHER1_RELEASE_VERSION_Msk 0xFF00UL


/* VIDEOSS_VIDEOIO_DISENG1_TCON1.SSQCNTS */
#define VIDEOSS_VIDEOIO_DISENG1_TCON1_SSQCNTS_SSQCNTS_SEQY_Pos 0UL
#define VIDEOSS_VIDEOIO_DISENG1_TCON1_SSQCNTS_SSQCNTS_SEQY_Msk 0x7FFFUL
#define VIDEOSS_VIDEOIO_DISENG1_TCON1_SSQCNTS_SSQCNTS_FIELD_Pos 15UL
#define VIDEOSS_VIDEOIO_DISENG1_TCON1_SSQCNTS_SSQCNTS_FIELD_Msk 0x8000UL
#define VIDEOSS_VIDEOIO_DISENG1_TCON1_SSQCNTS_SSQCNTS_SEQX_Pos 16UL
#define VIDEOSS_VIDEOIO_DISENG1_TCON1_SSQCNTS_SSQCNTS_SEQX_Msk 0x7FFF0000UL
#define VIDEOSS_VIDEOIO_DISENG1_TCON1_SSQCNTS_SSQCNTS_OUT_Pos 31UL
#define VIDEOSS_VIDEOIO_DISENG1_TCON1_SSQCNTS_SSQCNTS_OUT_Msk 0x80000000UL
/* VIDEOSS_VIDEOIO_DISENG1_TCON1.SSQCYCLE */
#define VIDEOSS_VIDEOIO_DISENG1_TCON1_SSQCYCLE_SSQCYCLE_Pos 0UL
#define VIDEOSS_VIDEOIO_DISENG1_TCON1_SSQCYCLE_SSQCYCLE_Msk 0x3FUL
/* VIDEOSS_VIDEOIO_DISENG1_TCON1.SWRESET */
#define VIDEOSS_VIDEOIO_DISENG1_TCON1_SWRESET_SWRESET_Pos 0UL
#define VIDEOSS_VIDEOIO_DISENG1_TCON1_SWRESET_SWRESET_Msk 0x1UL
#define VIDEOSS_VIDEOIO_DISENG1_TCON1_SWRESET_ENRESETWORD_Pos 4UL
#define VIDEOSS_VIDEOIO_DISENG1_TCON1_SWRESET_ENRESETWORD_Msk 0xFFF0UL
#define VIDEOSS_VIDEOIO_DISENG1_TCON1_SWRESET_RESETWORDEND_Pos 16UL
#define VIDEOSS_VIDEOIO_DISENG1_TCON1_SWRESET_RESETWORDEND_Msk 0xFF0000UL
#define VIDEOSS_VIDEOIO_DISENG1_TCON1_SWRESET_RESETWORDSTART_Pos 24UL
#define VIDEOSS_VIDEOIO_DISENG1_TCON1_SWRESET_RESETWORDSTART_Msk 0xFF000000UL
/* VIDEOSS_VIDEOIO_DISENG1_TCON1.TCON_CTRL */
#define VIDEOSS_VIDEOIO_DISENG1_TCON1_TCON_CTRL_CHANNELMODE_Pos 0UL
#define VIDEOSS_VIDEOIO_DISENG1_TCON1_TCON_CTRL_CHANNELMODE_Msk 0x3UL
#define VIDEOSS_VIDEOIO_DISENG1_TCON1_TCON_CTRL_TCON_SYNC_Pos 2UL
#define VIDEOSS_VIDEOIO_DISENG1_TCON1_TCON_CTRL_TCON_SYNC_Msk 0x4UL
#define VIDEOSS_VIDEOIO_DISENG1_TCON1_TCON_CTRL_BYPASS_Pos 3UL
#define VIDEOSS_VIDEOIO_DISENG1_TCON1_TCON_CTRL_BYPASS_Msk 0x8UL
#define VIDEOSS_VIDEOIO_DISENG1_TCON1_TCON_CTRL_INV_CTRL_Pos 4UL
#define VIDEOSS_VIDEOIO_DISENG1_TCON1_TCON_CTRL_INV_CTRL_Msk 0xF0UL
#define VIDEOSS_VIDEOIO_DISENG1_TCON1_TCON_CTRL_ENLVDS_Pos 8UL
#define VIDEOSS_VIDEOIO_DISENG1_TCON1_TCON_CTRL_ENLVDS_Msk 0x100UL
#define VIDEOSS_VIDEOIO_DISENG1_TCON1_TCON_CTRL_LVDSMODE_Pos 9UL
#define VIDEOSS_VIDEOIO_DISENG1_TCON1_TCON_CTRL_LVDSMODE_Msk 0x200UL
#define VIDEOSS_VIDEOIO_DISENG1_TCON1_TCON_CTRL_LVDS_BALANCE_Pos 10UL
#define VIDEOSS_VIDEOIO_DISENG1_TCON1_TCON_CTRL_LVDS_BALANCE_Msk 0x400UL
#define VIDEOSS_VIDEOIO_DISENG1_TCON1_TCON_CTRL_LVDS_CLOCK_INV_Pos 11UL
#define VIDEOSS_VIDEOIO_DISENG1_TCON1_TCON_CTRL_LVDS_CLOCK_INV_Msk 0x800UL
#define VIDEOSS_VIDEOIO_DISENG1_TCON1_TCON_CTRL_MINILVDS_OPCODE_Pos 12UL
#define VIDEOSS_VIDEOIO_DISENG1_TCON1_TCON_CTRL_MINILVDS_OPCODE_Msk 0x7000UL
#define VIDEOSS_VIDEOIO_DISENG1_TCON1_TCON_CTRL_DUAL_SWAP_Pos 15UL
#define VIDEOSS_VIDEOIO_DISENG1_TCON1_TCON_CTRL_DUAL_SWAP_Msk 0x8000UL
#define VIDEOSS_VIDEOIO_DISENG1_TCON1_TCON_CTRL_SPLITPOSITION_Pos 16UL
#define VIDEOSS_VIDEOIO_DISENG1_TCON1_TCON_CTRL_SPLITPOSITION_Msk 0x3FFF0000UL
/* VIDEOSS_VIDEOIO_DISENG1_TCON1.RSDSINVCTRL */
#define VIDEOSS_VIDEOIO_DISENG1_TCON1_RSDSINVCTRL_RSDS_INV_Pos 0UL
#define VIDEOSS_VIDEOIO_DISENG1_TCON1_RSDSINVCTRL_RSDS_INV_Msk 0xFFFUL
#define VIDEOSS_VIDEOIO_DISENG1_TCON1_RSDSINVCTRL_RSDS_INV_DUAL_Pos 16UL
#define VIDEOSS_VIDEOIO_DISENG1_TCON1_RSDSINVCTRL_RSDS_INV_DUAL_Msk 0xFFF0000UL
/* VIDEOSS_VIDEOIO_DISENG1_TCON1.MAPBIT3_0 */
#define VIDEOSS_VIDEOIO_DISENG1_TCON1_MAPBIT3_0_MAPBIT0_Pos 0UL
#define VIDEOSS_VIDEOIO_DISENG1_TCON1_MAPBIT3_0_MAPBIT0_Msk 0x1FUL
#define VIDEOSS_VIDEOIO_DISENG1_TCON1_MAPBIT3_0_MAPBIT1_Pos 8UL
#define VIDEOSS_VIDEOIO_DISENG1_TCON1_MAPBIT3_0_MAPBIT1_Msk 0x1F00UL
#define VIDEOSS_VIDEOIO_DISENG1_TCON1_MAPBIT3_0_MAPBIT2_Pos 16UL
#define VIDEOSS_VIDEOIO_DISENG1_TCON1_MAPBIT3_0_MAPBIT2_Msk 0x1F0000UL
#define VIDEOSS_VIDEOIO_DISENG1_TCON1_MAPBIT3_0_MAPBIT3_Pos 24UL
#define VIDEOSS_VIDEOIO_DISENG1_TCON1_MAPBIT3_0_MAPBIT3_Msk 0x1F000000UL
/* VIDEOSS_VIDEOIO_DISENG1_TCON1.MAPBIT7_4 */
#define VIDEOSS_VIDEOIO_DISENG1_TCON1_MAPBIT7_4_MAPBIT4_Pos 0UL
#define VIDEOSS_VIDEOIO_DISENG1_TCON1_MAPBIT7_4_MAPBIT4_Msk 0x1FUL
#define VIDEOSS_VIDEOIO_DISENG1_TCON1_MAPBIT7_4_MAPBIT5_Pos 8UL
#define VIDEOSS_VIDEOIO_DISENG1_TCON1_MAPBIT7_4_MAPBIT5_Msk 0x1F00UL
#define VIDEOSS_VIDEOIO_DISENG1_TCON1_MAPBIT7_4_MAPBIT6_Pos 16UL
#define VIDEOSS_VIDEOIO_DISENG1_TCON1_MAPBIT7_4_MAPBIT6_Msk 0x1F0000UL
#define VIDEOSS_VIDEOIO_DISENG1_TCON1_MAPBIT7_4_MAPBIT7_Pos 24UL
#define VIDEOSS_VIDEOIO_DISENG1_TCON1_MAPBIT7_4_MAPBIT7_Msk 0x1F000000UL
/* VIDEOSS_VIDEOIO_DISENG1_TCON1.MAPBIT11_8 */
#define VIDEOSS_VIDEOIO_DISENG1_TCON1_MAPBIT11_8_MAPBIT8_Pos 0UL
#define VIDEOSS_VIDEOIO_DISENG1_TCON1_MAPBIT11_8_MAPBIT8_Msk 0x1FUL
#define VIDEOSS_VIDEOIO_DISENG1_TCON1_MAPBIT11_8_MAPBIT9_Pos 8UL
#define VIDEOSS_VIDEOIO_DISENG1_TCON1_MAPBIT11_8_MAPBIT9_Msk 0x1F00UL
#define VIDEOSS_VIDEOIO_DISENG1_TCON1_MAPBIT11_8_MAPBIT10_Pos 16UL
#define VIDEOSS_VIDEOIO_DISENG1_TCON1_MAPBIT11_8_MAPBIT10_Msk 0x1F0000UL
#define VIDEOSS_VIDEOIO_DISENG1_TCON1_MAPBIT11_8_MAPBIT11_Pos 24UL
#define VIDEOSS_VIDEOIO_DISENG1_TCON1_MAPBIT11_8_MAPBIT11_Msk 0x1F000000UL
/* VIDEOSS_VIDEOIO_DISENG1_TCON1.MAPBIT15_12 */
#define VIDEOSS_VIDEOIO_DISENG1_TCON1_MAPBIT15_12_MAPBIT12_Pos 0UL
#define VIDEOSS_VIDEOIO_DISENG1_TCON1_MAPBIT15_12_MAPBIT12_Msk 0x1FUL
#define VIDEOSS_VIDEOIO_DISENG1_TCON1_MAPBIT15_12_MAPBIT13_Pos 8UL
#define VIDEOSS_VIDEOIO_DISENG1_TCON1_MAPBIT15_12_MAPBIT13_Msk 0x1F00UL
#define VIDEOSS_VIDEOIO_DISENG1_TCON1_MAPBIT15_12_MAPBIT14_Pos 16UL
#define VIDEOSS_VIDEOIO_DISENG1_TCON1_MAPBIT15_12_MAPBIT14_Msk 0x1F0000UL
#define VIDEOSS_VIDEOIO_DISENG1_TCON1_MAPBIT15_12_MAPBIT15_Pos 24UL
#define VIDEOSS_VIDEOIO_DISENG1_TCON1_MAPBIT15_12_MAPBIT15_Msk 0x1F000000UL
/* VIDEOSS_VIDEOIO_DISENG1_TCON1.MAPBIT19_16 */
#define VIDEOSS_VIDEOIO_DISENG1_TCON1_MAPBIT19_16_MAPBIT16_Pos 0UL
#define VIDEOSS_VIDEOIO_DISENG1_TCON1_MAPBIT19_16_MAPBIT16_Msk 0x1FUL
#define VIDEOSS_VIDEOIO_DISENG1_TCON1_MAPBIT19_16_MAPBIT17_Pos 8UL
#define VIDEOSS_VIDEOIO_DISENG1_TCON1_MAPBIT19_16_MAPBIT17_Msk 0x1F00UL
#define VIDEOSS_VIDEOIO_DISENG1_TCON1_MAPBIT19_16_MAPBIT18_Pos 16UL
#define VIDEOSS_VIDEOIO_DISENG1_TCON1_MAPBIT19_16_MAPBIT18_Msk 0x1F0000UL
#define VIDEOSS_VIDEOIO_DISENG1_TCON1_MAPBIT19_16_MAPBIT19_Pos 24UL
#define VIDEOSS_VIDEOIO_DISENG1_TCON1_MAPBIT19_16_MAPBIT19_Msk 0x1F000000UL
/* VIDEOSS_VIDEOIO_DISENG1_TCON1.MAPBIT23_20 */
#define VIDEOSS_VIDEOIO_DISENG1_TCON1_MAPBIT23_20_MAPBIT20_Pos 0UL
#define VIDEOSS_VIDEOIO_DISENG1_TCON1_MAPBIT23_20_MAPBIT20_Msk 0x1FUL
#define VIDEOSS_VIDEOIO_DISENG1_TCON1_MAPBIT23_20_MAPBIT21_Pos 8UL
#define VIDEOSS_VIDEOIO_DISENG1_TCON1_MAPBIT23_20_MAPBIT21_Msk 0x1F00UL
#define VIDEOSS_VIDEOIO_DISENG1_TCON1_MAPBIT23_20_MAPBIT22_Pos 16UL
#define VIDEOSS_VIDEOIO_DISENG1_TCON1_MAPBIT23_20_MAPBIT22_Msk 0x1F0000UL
#define VIDEOSS_VIDEOIO_DISENG1_TCON1_MAPBIT23_20_MAPBIT23_Pos 24UL
#define VIDEOSS_VIDEOIO_DISENG1_TCON1_MAPBIT23_20_MAPBIT23_Msk 0x1F000000UL
/* VIDEOSS_VIDEOIO_DISENG1_TCON1.MAPBIT27_24 */
#define VIDEOSS_VIDEOIO_DISENG1_TCON1_MAPBIT27_24_MAPBIT24_Pos 0UL
#define VIDEOSS_VIDEOIO_DISENG1_TCON1_MAPBIT27_24_MAPBIT24_Msk 0x1FUL
#define VIDEOSS_VIDEOIO_DISENG1_TCON1_MAPBIT27_24_MAPBIT25_Pos 8UL
#define VIDEOSS_VIDEOIO_DISENG1_TCON1_MAPBIT27_24_MAPBIT25_Msk 0x1F00UL
#define VIDEOSS_VIDEOIO_DISENG1_TCON1_MAPBIT27_24_MAPBIT26_Pos 16UL
#define VIDEOSS_VIDEOIO_DISENG1_TCON1_MAPBIT27_24_MAPBIT26_Msk 0x1F0000UL
#define VIDEOSS_VIDEOIO_DISENG1_TCON1_MAPBIT27_24_MAPBIT27_Pos 24UL
#define VIDEOSS_VIDEOIO_DISENG1_TCON1_MAPBIT27_24_MAPBIT27_Msk 0x1F000000UL
/* VIDEOSS_VIDEOIO_DISENG1_TCON1.MAPBIT3_0_DUAL */
#define VIDEOSS_VIDEOIO_DISENG1_TCON1_MAPBIT3_0_DUAL_MAPBIT0_DUAL_Pos 0UL
#define VIDEOSS_VIDEOIO_DISENG1_TCON1_MAPBIT3_0_DUAL_MAPBIT0_DUAL_Msk 0x1FUL
#define VIDEOSS_VIDEOIO_DISENG1_TCON1_MAPBIT3_0_DUAL_MAPBIT1_DUAL_Pos 8UL
#define VIDEOSS_VIDEOIO_DISENG1_TCON1_MAPBIT3_0_DUAL_MAPBIT1_DUAL_Msk 0x1F00UL
#define VIDEOSS_VIDEOIO_DISENG1_TCON1_MAPBIT3_0_DUAL_MAPBIT2_DUAL_Pos 16UL
#define VIDEOSS_VIDEOIO_DISENG1_TCON1_MAPBIT3_0_DUAL_MAPBIT2_DUAL_Msk 0x1F0000UL
#define VIDEOSS_VIDEOIO_DISENG1_TCON1_MAPBIT3_0_DUAL_MAPBIT3_DUAL_Pos 24UL
#define VIDEOSS_VIDEOIO_DISENG1_TCON1_MAPBIT3_0_DUAL_MAPBIT3_DUAL_Msk 0x1F000000UL
/* VIDEOSS_VIDEOIO_DISENG1_TCON1.MAPBIT7_4_DUAL */
#define VIDEOSS_VIDEOIO_DISENG1_TCON1_MAPBIT7_4_DUAL_MAPBIT4_DUAL_Pos 0UL
#define VIDEOSS_VIDEOIO_DISENG1_TCON1_MAPBIT7_4_DUAL_MAPBIT4_DUAL_Msk 0x1FUL
#define VIDEOSS_VIDEOIO_DISENG1_TCON1_MAPBIT7_4_DUAL_MAPBIT5_DUAL_Pos 8UL
#define VIDEOSS_VIDEOIO_DISENG1_TCON1_MAPBIT7_4_DUAL_MAPBIT5_DUAL_Msk 0x1F00UL
#define VIDEOSS_VIDEOIO_DISENG1_TCON1_MAPBIT7_4_DUAL_MAPBIT6_DUAL_Pos 16UL
#define VIDEOSS_VIDEOIO_DISENG1_TCON1_MAPBIT7_4_DUAL_MAPBIT6_DUAL_Msk 0x1F0000UL
#define VIDEOSS_VIDEOIO_DISENG1_TCON1_MAPBIT7_4_DUAL_MAPBIT7_DUAL_Pos 24UL
#define VIDEOSS_VIDEOIO_DISENG1_TCON1_MAPBIT7_4_DUAL_MAPBIT7_DUAL_Msk 0x1F000000UL
/* VIDEOSS_VIDEOIO_DISENG1_TCON1.MAPBIT11_8_DUAL */
#define VIDEOSS_VIDEOIO_DISENG1_TCON1_MAPBIT11_8_DUAL_MAPBIT8_DUAL_Pos 0UL
#define VIDEOSS_VIDEOIO_DISENG1_TCON1_MAPBIT11_8_DUAL_MAPBIT8_DUAL_Msk 0x1FUL
#define VIDEOSS_VIDEOIO_DISENG1_TCON1_MAPBIT11_8_DUAL_MAPBIT9_DUAL_Pos 8UL
#define VIDEOSS_VIDEOIO_DISENG1_TCON1_MAPBIT11_8_DUAL_MAPBIT9_DUAL_Msk 0x1F00UL
#define VIDEOSS_VIDEOIO_DISENG1_TCON1_MAPBIT11_8_DUAL_MAPBIT10_DUAL_Pos 16UL
#define VIDEOSS_VIDEOIO_DISENG1_TCON1_MAPBIT11_8_DUAL_MAPBIT10_DUAL_Msk 0x1F0000UL
#define VIDEOSS_VIDEOIO_DISENG1_TCON1_MAPBIT11_8_DUAL_MAPBIT11_DUAL_Pos 24UL
#define VIDEOSS_VIDEOIO_DISENG1_TCON1_MAPBIT11_8_DUAL_MAPBIT11_DUAL_Msk 0x1F000000UL
/* VIDEOSS_VIDEOIO_DISENG1_TCON1.MAPBIT15_12_DUAL */
#define VIDEOSS_VIDEOIO_DISENG1_TCON1_MAPBIT15_12_DUAL_MAPBIT12_DUAL_Pos 0UL
#define VIDEOSS_VIDEOIO_DISENG1_TCON1_MAPBIT15_12_DUAL_MAPBIT12_DUAL_Msk 0x1FUL
#define VIDEOSS_VIDEOIO_DISENG1_TCON1_MAPBIT15_12_DUAL_MAPBIT13_DUAL_Pos 8UL
#define VIDEOSS_VIDEOIO_DISENG1_TCON1_MAPBIT15_12_DUAL_MAPBIT13_DUAL_Msk 0x1F00UL
#define VIDEOSS_VIDEOIO_DISENG1_TCON1_MAPBIT15_12_DUAL_MAPBIT14_DUAL_Pos 16UL
#define VIDEOSS_VIDEOIO_DISENG1_TCON1_MAPBIT15_12_DUAL_MAPBIT14_DUAL_Msk 0x1F0000UL
#define VIDEOSS_VIDEOIO_DISENG1_TCON1_MAPBIT15_12_DUAL_MAPBIT15_DUAL_Pos 24UL
#define VIDEOSS_VIDEOIO_DISENG1_TCON1_MAPBIT15_12_DUAL_MAPBIT15_DUAL_Msk 0x1F000000UL
/* VIDEOSS_VIDEOIO_DISENG1_TCON1.MAPBIT19_16_DUAL */
#define VIDEOSS_VIDEOIO_DISENG1_TCON1_MAPBIT19_16_DUAL_MAPBIT16_DUAL_Pos 0UL
#define VIDEOSS_VIDEOIO_DISENG1_TCON1_MAPBIT19_16_DUAL_MAPBIT16_DUAL_Msk 0x1FUL
#define VIDEOSS_VIDEOIO_DISENG1_TCON1_MAPBIT19_16_DUAL_MAPBIT17_DUAL_Pos 8UL
#define VIDEOSS_VIDEOIO_DISENG1_TCON1_MAPBIT19_16_DUAL_MAPBIT17_DUAL_Msk 0x1F00UL
#define VIDEOSS_VIDEOIO_DISENG1_TCON1_MAPBIT19_16_DUAL_MAPBIT18_DUAL_Pos 16UL
#define VIDEOSS_VIDEOIO_DISENG1_TCON1_MAPBIT19_16_DUAL_MAPBIT18_DUAL_Msk 0x1F0000UL
#define VIDEOSS_VIDEOIO_DISENG1_TCON1_MAPBIT19_16_DUAL_MAPBIT19_DUAL_Pos 24UL
#define VIDEOSS_VIDEOIO_DISENG1_TCON1_MAPBIT19_16_DUAL_MAPBIT19_DUAL_Msk 0x1F000000UL
/* VIDEOSS_VIDEOIO_DISENG1_TCON1.MAPBIT23_20_DUAL */
#define VIDEOSS_VIDEOIO_DISENG1_TCON1_MAPBIT23_20_DUAL_MAPBIT20_DUAL_Pos 0UL
#define VIDEOSS_VIDEOIO_DISENG1_TCON1_MAPBIT23_20_DUAL_MAPBIT20_DUAL_Msk 0x1FUL
#define VIDEOSS_VIDEOIO_DISENG1_TCON1_MAPBIT23_20_DUAL_MAPBIT21_DUAL_Pos 8UL
#define VIDEOSS_VIDEOIO_DISENG1_TCON1_MAPBIT23_20_DUAL_MAPBIT21_DUAL_Msk 0x1F00UL
#define VIDEOSS_VIDEOIO_DISENG1_TCON1_MAPBIT23_20_DUAL_MAPBIT22_DUAL_Pos 16UL
#define VIDEOSS_VIDEOIO_DISENG1_TCON1_MAPBIT23_20_DUAL_MAPBIT22_DUAL_Msk 0x1F0000UL
#define VIDEOSS_VIDEOIO_DISENG1_TCON1_MAPBIT23_20_DUAL_MAPBIT23_DUAL_Pos 24UL
#define VIDEOSS_VIDEOIO_DISENG1_TCON1_MAPBIT23_20_DUAL_MAPBIT23_DUAL_Msk 0x1F000000UL
/* VIDEOSS_VIDEOIO_DISENG1_TCON1.MAPBIT27_24_DUAL */
#define VIDEOSS_VIDEOIO_DISENG1_TCON1_MAPBIT27_24_DUAL_MAPBIT24_DUAL_Pos 0UL
#define VIDEOSS_VIDEOIO_DISENG1_TCON1_MAPBIT27_24_DUAL_MAPBIT24_DUAL_Msk 0x1FUL
#define VIDEOSS_VIDEOIO_DISENG1_TCON1_MAPBIT27_24_DUAL_MAPBIT25_DUAL_Pos 8UL
#define VIDEOSS_VIDEOIO_DISENG1_TCON1_MAPBIT27_24_DUAL_MAPBIT25_DUAL_Msk 0x1F00UL
#define VIDEOSS_VIDEOIO_DISENG1_TCON1_MAPBIT27_24_DUAL_MAPBIT26_DUAL_Pos 16UL
#define VIDEOSS_VIDEOIO_DISENG1_TCON1_MAPBIT27_24_DUAL_MAPBIT26_DUAL_Msk 0x1F0000UL
#define VIDEOSS_VIDEOIO_DISENG1_TCON1_MAPBIT27_24_DUAL_MAPBIT27_DUAL_Pos 24UL
#define VIDEOSS_VIDEOIO_DISENG1_TCON1_MAPBIT27_24_DUAL_MAPBIT27_DUAL_Msk 0x1F000000UL
/* VIDEOSS_VIDEOIO_DISENG1_TCON1.SPG0POSON */
#define VIDEOSS_VIDEOIO_DISENG1_TCON1_SPG0POSON_SPGPSON_Y0_Pos 0UL
#define VIDEOSS_VIDEOIO_DISENG1_TCON1_SPG0POSON_SPGPSON_Y0_Msk 0x7FFFUL
#define VIDEOSS_VIDEOIO_DISENG1_TCON1_SPG0POSON_SPGPSON_FIELD0_Pos 15UL
#define VIDEOSS_VIDEOIO_DISENG1_TCON1_SPG0POSON_SPGPSON_FIELD0_Msk 0x8000UL
#define VIDEOSS_VIDEOIO_DISENG1_TCON1_SPG0POSON_SPGPSON_X0_Pos 16UL
#define VIDEOSS_VIDEOIO_DISENG1_TCON1_SPG0POSON_SPGPSON_X0_Msk 0x7FFF0000UL
#define VIDEOSS_VIDEOIO_DISENG1_TCON1_SPG0POSON_SPGPSON_TOGGLE0_Pos 31UL
#define VIDEOSS_VIDEOIO_DISENG1_TCON1_SPG0POSON_SPGPSON_TOGGLE0_Msk 0x80000000UL
/* VIDEOSS_VIDEOIO_DISENG1_TCON1.SPG0MASKON */
#define VIDEOSS_VIDEOIO_DISENG1_TCON1_SPG0MASKON_SPGMKON0_Pos 0UL
#define VIDEOSS_VIDEOIO_DISENG1_TCON1_SPG0MASKON_SPGMKON0_Msk 0x7FFFFFFFUL
/* VIDEOSS_VIDEOIO_DISENG1_TCON1.SPG0POSOFF */
#define VIDEOSS_VIDEOIO_DISENG1_TCON1_SPG0POSOFF_SPGPSOFF_Y0_Pos 0UL
#define VIDEOSS_VIDEOIO_DISENG1_TCON1_SPG0POSOFF_SPGPSOFF_Y0_Msk 0x7FFFUL
#define VIDEOSS_VIDEOIO_DISENG1_TCON1_SPG0POSOFF_SPGPSOFF_FIELD0_Pos 15UL
#define VIDEOSS_VIDEOIO_DISENG1_TCON1_SPG0POSOFF_SPGPSOFF_FIELD0_Msk 0x8000UL
#define VIDEOSS_VIDEOIO_DISENG1_TCON1_SPG0POSOFF_SPGPSOFF_X0_Pos 16UL
#define VIDEOSS_VIDEOIO_DISENG1_TCON1_SPG0POSOFF_SPGPSOFF_X0_Msk 0x7FFF0000UL
#define VIDEOSS_VIDEOIO_DISENG1_TCON1_SPG0POSOFF_SPGPSOFF_TOGGLE0_Pos 31UL
#define VIDEOSS_VIDEOIO_DISENG1_TCON1_SPG0POSOFF_SPGPSOFF_TOGGLE0_Msk 0x80000000UL
/* VIDEOSS_VIDEOIO_DISENG1_TCON1.SPG0MASKOFF */
#define VIDEOSS_VIDEOIO_DISENG1_TCON1_SPG0MASKOFF_SPGMKOFF0_Pos 0UL
#define VIDEOSS_VIDEOIO_DISENG1_TCON1_SPG0MASKOFF_SPGMKOFF0_Msk 0x7FFFFFFFUL
/* VIDEOSS_VIDEOIO_DISENG1_TCON1.SPG1POSON */
#define VIDEOSS_VIDEOIO_DISENG1_TCON1_SPG1POSON_SPGPSON_Y1_Pos 0UL
#define VIDEOSS_VIDEOIO_DISENG1_TCON1_SPG1POSON_SPGPSON_Y1_Msk 0x7FFFUL
#define VIDEOSS_VIDEOIO_DISENG1_TCON1_SPG1POSON_SPGPSON_FIELD1_Pos 15UL
#define VIDEOSS_VIDEOIO_DISENG1_TCON1_SPG1POSON_SPGPSON_FIELD1_Msk 0x8000UL
#define VIDEOSS_VIDEOIO_DISENG1_TCON1_SPG1POSON_SPGPSON_X1_Pos 16UL
#define VIDEOSS_VIDEOIO_DISENG1_TCON1_SPG1POSON_SPGPSON_X1_Msk 0x7FFF0000UL
#define VIDEOSS_VIDEOIO_DISENG1_TCON1_SPG1POSON_SPGPSON_TOGGLE1_Pos 31UL
#define VIDEOSS_VIDEOIO_DISENG1_TCON1_SPG1POSON_SPGPSON_TOGGLE1_Msk 0x80000000UL
/* VIDEOSS_VIDEOIO_DISENG1_TCON1.SPG1MASKON */
#define VIDEOSS_VIDEOIO_DISENG1_TCON1_SPG1MASKON_SPGMKON1_Pos 0UL
#define VIDEOSS_VIDEOIO_DISENG1_TCON1_SPG1MASKON_SPGMKON1_Msk 0x7FFFFFFFUL
/* VIDEOSS_VIDEOIO_DISENG1_TCON1.SPG1POSOFF */
#define VIDEOSS_VIDEOIO_DISENG1_TCON1_SPG1POSOFF_SPGPSOFF_Y1_Pos 0UL
#define VIDEOSS_VIDEOIO_DISENG1_TCON1_SPG1POSOFF_SPGPSOFF_Y1_Msk 0x7FFFUL
#define VIDEOSS_VIDEOIO_DISENG1_TCON1_SPG1POSOFF_SPGPSOFF_FIELD1_Pos 15UL
#define VIDEOSS_VIDEOIO_DISENG1_TCON1_SPG1POSOFF_SPGPSOFF_FIELD1_Msk 0x8000UL
#define VIDEOSS_VIDEOIO_DISENG1_TCON1_SPG1POSOFF_SPGPSOFF_X1_Pos 16UL
#define VIDEOSS_VIDEOIO_DISENG1_TCON1_SPG1POSOFF_SPGPSOFF_X1_Msk 0x7FFF0000UL
#define VIDEOSS_VIDEOIO_DISENG1_TCON1_SPG1POSOFF_SPGPSOFF_TOGGLE1_Pos 31UL
#define VIDEOSS_VIDEOIO_DISENG1_TCON1_SPG1POSOFF_SPGPSOFF_TOGGLE1_Msk 0x80000000UL
/* VIDEOSS_VIDEOIO_DISENG1_TCON1.SPG1MASKOFF */
#define VIDEOSS_VIDEOIO_DISENG1_TCON1_SPG1MASKOFF_SPGMKOFF1_Pos 0UL
#define VIDEOSS_VIDEOIO_DISENG1_TCON1_SPG1MASKOFF_SPGMKOFF1_Msk 0x7FFFFFFFUL
/* VIDEOSS_VIDEOIO_DISENG1_TCON1.SPG2POSON */
#define VIDEOSS_VIDEOIO_DISENG1_TCON1_SPG2POSON_SPGPSON_Y2_Pos 0UL
#define VIDEOSS_VIDEOIO_DISENG1_TCON1_SPG2POSON_SPGPSON_Y2_Msk 0x7FFFUL
#define VIDEOSS_VIDEOIO_DISENG1_TCON1_SPG2POSON_SPGPSON_FIELD2_Pos 15UL
#define VIDEOSS_VIDEOIO_DISENG1_TCON1_SPG2POSON_SPGPSON_FIELD2_Msk 0x8000UL
#define VIDEOSS_VIDEOIO_DISENG1_TCON1_SPG2POSON_SPGPSON_X2_Pos 16UL
#define VIDEOSS_VIDEOIO_DISENG1_TCON1_SPG2POSON_SPGPSON_X2_Msk 0x7FFF0000UL
#define VIDEOSS_VIDEOIO_DISENG1_TCON1_SPG2POSON_SPGPSON_TOGGLE2_Pos 31UL
#define VIDEOSS_VIDEOIO_DISENG1_TCON1_SPG2POSON_SPGPSON_TOGGLE2_Msk 0x80000000UL
/* VIDEOSS_VIDEOIO_DISENG1_TCON1.SPG2MASKON */
#define VIDEOSS_VIDEOIO_DISENG1_TCON1_SPG2MASKON_SPGMKON2_Pos 0UL
#define VIDEOSS_VIDEOIO_DISENG1_TCON1_SPG2MASKON_SPGMKON2_Msk 0x7FFFFFFFUL
/* VIDEOSS_VIDEOIO_DISENG1_TCON1.SPG2POSOFF */
#define VIDEOSS_VIDEOIO_DISENG1_TCON1_SPG2POSOFF_SPGPSOFF_Y2_Pos 0UL
#define VIDEOSS_VIDEOIO_DISENG1_TCON1_SPG2POSOFF_SPGPSOFF_Y2_Msk 0x7FFFUL
#define VIDEOSS_VIDEOIO_DISENG1_TCON1_SPG2POSOFF_SPGPSOFF_FIELD2_Pos 15UL
#define VIDEOSS_VIDEOIO_DISENG1_TCON1_SPG2POSOFF_SPGPSOFF_FIELD2_Msk 0x8000UL
#define VIDEOSS_VIDEOIO_DISENG1_TCON1_SPG2POSOFF_SPGPSOFF_X2_Pos 16UL
#define VIDEOSS_VIDEOIO_DISENG1_TCON1_SPG2POSOFF_SPGPSOFF_X2_Msk 0x7FFF0000UL
#define VIDEOSS_VIDEOIO_DISENG1_TCON1_SPG2POSOFF_SPGPSOFF_TOGGLE2_Pos 31UL
#define VIDEOSS_VIDEOIO_DISENG1_TCON1_SPG2POSOFF_SPGPSOFF_TOGGLE2_Msk 0x80000000UL
/* VIDEOSS_VIDEOIO_DISENG1_TCON1.SPG2MASKOFF */
#define VIDEOSS_VIDEOIO_DISENG1_TCON1_SPG2MASKOFF_SPGMKOFF2_Pos 0UL
#define VIDEOSS_VIDEOIO_DISENG1_TCON1_SPG2MASKOFF_SPGMKOFF2_Msk 0x7FFFFFFFUL
/* VIDEOSS_VIDEOIO_DISENG1_TCON1.SPG3POSON */
#define VIDEOSS_VIDEOIO_DISENG1_TCON1_SPG3POSON_SPGPSON_Y3_Pos 0UL
#define VIDEOSS_VIDEOIO_DISENG1_TCON1_SPG3POSON_SPGPSON_Y3_Msk 0x7FFFUL
#define VIDEOSS_VIDEOIO_DISENG1_TCON1_SPG3POSON_SPGPSON_FIELD3_Pos 15UL
#define VIDEOSS_VIDEOIO_DISENG1_TCON1_SPG3POSON_SPGPSON_FIELD3_Msk 0x8000UL
#define VIDEOSS_VIDEOIO_DISENG1_TCON1_SPG3POSON_SPGPSON_X3_Pos 16UL
#define VIDEOSS_VIDEOIO_DISENG1_TCON1_SPG3POSON_SPGPSON_X3_Msk 0x7FFF0000UL
#define VIDEOSS_VIDEOIO_DISENG1_TCON1_SPG3POSON_SPGPSON_TOGGLE3_Pos 31UL
#define VIDEOSS_VIDEOIO_DISENG1_TCON1_SPG3POSON_SPGPSON_TOGGLE3_Msk 0x80000000UL
/* VIDEOSS_VIDEOIO_DISENG1_TCON1.SPG3MASKON */
#define VIDEOSS_VIDEOIO_DISENG1_TCON1_SPG3MASKON_SPGMKON3_Pos 0UL
#define VIDEOSS_VIDEOIO_DISENG1_TCON1_SPG3MASKON_SPGMKON3_Msk 0x7FFFFFFFUL
/* VIDEOSS_VIDEOIO_DISENG1_TCON1.SPG3POSOFF */
#define VIDEOSS_VIDEOIO_DISENG1_TCON1_SPG3POSOFF_SPGPSOFF_Y3_Pos 0UL
#define VIDEOSS_VIDEOIO_DISENG1_TCON1_SPG3POSOFF_SPGPSOFF_Y3_Msk 0x7FFFUL
#define VIDEOSS_VIDEOIO_DISENG1_TCON1_SPG3POSOFF_SPGPSOFF_FIELD3_Pos 15UL
#define VIDEOSS_VIDEOIO_DISENG1_TCON1_SPG3POSOFF_SPGPSOFF_FIELD3_Msk 0x8000UL
#define VIDEOSS_VIDEOIO_DISENG1_TCON1_SPG3POSOFF_SPGPSOFF_X3_Pos 16UL
#define VIDEOSS_VIDEOIO_DISENG1_TCON1_SPG3POSOFF_SPGPSOFF_X3_Msk 0x7FFF0000UL
#define VIDEOSS_VIDEOIO_DISENG1_TCON1_SPG3POSOFF_SPGPSOFF_TOGGLE3_Pos 31UL
#define VIDEOSS_VIDEOIO_DISENG1_TCON1_SPG3POSOFF_SPGPSOFF_TOGGLE3_Msk 0x80000000UL
/* VIDEOSS_VIDEOIO_DISENG1_TCON1.SPG3MASKOFF */
#define VIDEOSS_VIDEOIO_DISENG1_TCON1_SPG3MASKOFF_SPGMKOFF3_Pos 0UL
#define VIDEOSS_VIDEOIO_DISENG1_TCON1_SPG3MASKOFF_SPGMKOFF3_Msk 0x7FFFFFFFUL
/* VIDEOSS_VIDEOIO_DISENG1_TCON1.SPG4POSON */
#define VIDEOSS_VIDEOIO_DISENG1_TCON1_SPG4POSON_SPGPSON_Y4_Pos 0UL
#define VIDEOSS_VIDEOIO_DISENG1_TCON1_SPG4POSON_SPGPSON_Y4_Msk 0x7FFFUL
#define VIDEOSS_VIDEOIO_DISENG1_TCON1_SPG4POSON_SPGPSON_FIELD4_Pos 15UL
#define VIDEOSS_VIDEOIO_DISENG1_TCON1_SPG4POSON_SPGPSON_FIELD4_Msk 0x8000UL
#define VIDEOSS_VIDEOIO_DISENG1_TCON1_SPG4POSON_SPGPSON_X4_Pos 16UL
#define VIDEOSS_VIDEOIO_DISENG1_TCON1_SPG4POSON_SPGPSON_X4_Msk 0x7FFF0000UL
#define VIDEOSS_VIDEOIO_DISENG1_TCON1_SPG4POSON_SPGPSON_TOGGLE4_Pos 31UL
#define VIDEOSS_VIDEOIO_DISENG1_TCON1_SPG4POSON_SPGPSON_TOGGLE4_Msk 0x80000000UL
/* VIDEOSS_VIDEOIO_DISENG1_TCON1.SPG4MASKON */
#define VIDEOSS_VIDEOIO_DISENG1_TCON1_SPG4MASKON_SPGMKON4_Pos 0UL
#define VIDEOSS_VIDEOIO_DISENG1_TCON1_SPG4MASKON_SPGMKON4_Msk 0x7FFFFFFFUL
/* VIDEOSS_VIDEOIO_DISENG1_TCON1.SPG4POSOFF */
#define VIDEOSS_VIDEOIO_DISENG1_TCON1_SPG4POSOFF_SPGPSOFF_Y4_Pos 0UL
#define VIDEOSS_VIDEOIO_DISENG1_TCON1_SPG4POSOFF_SPGPSOFF_Y4_Msk 0x7FFFUL
#define VIDEOSS_VIDEOIO_DISENG1_TCON1_SPG4POSOFF_SPGPSOFF_FIELD4_Pos 15UL
#define VIDEOSS_VIDEOIO_DISENG1_TCON1_SPG4POSOFF_SPGPSOFF_FIELD4_Msk 0x8000UL
#define VIDEOSS_VIDEOIO_DISENG1_TCON1_SPG4POSOFF_SPGPSOFF_X4_Pos 16UL
#define VIDEOSS_VIDEOIO_DISENG1_TCON1_SPG4POSOFF_SPGPSOFF_X4_Msk 0x7FFF0000UL
#define VIDEOSS_VIDEOIO_DISENG1_TCON1_SPG4POSOFF_SPGPSOFF_TOGGLE4_Pos 31UL
#define VIDEOSS_VIDEOIO_DISENG1_TCON1_SPG4POSOFF_SPGPSOFF_TOGGLE4_Msk 0x80000000UL
/* VIDEOSS_VIDEOIO_DISENG1_TCON1.SPG4MASKOFF */
#define VIDEOSS_VIDEOIO_DISENG1_TCON1_SPG4MASKOFF_SPGMKOFF4_Pos 0UL
#define VIDEOSS_VIDEOIO_DISENG1_TCON1_SPG4MASKOFF_SPGMKOFF4_Msk 0x7FFFFFFFUL
/* VIDEOSS_VIDEOIO_DISENG1_TCON1.SPG5POSON */
#define VIDEOSS_VIDEOIO_DISENG1_TCON1_SPG5POSON_SPGPSON_Y5_Pos 0UL
#define VIDEOSS_VIDEOIO_DISENG1_TCON1_SPG5POSON_SPGPSON_Y5_Msk 0x7FFFUL
#define VIDEOSS_VIDEOIO_DISENG1_TCON1_SPG5POSON_SPGPSON_FIELD5_Pos 15UL
#define VIDEOSS_VIDEOIO_DISENG1_TCON1_SPG5POSON_SPGPSON_FIELD5_Msk 0x8000UL
#define VIDEOSS_VIDEOIO_DISENG1_TCON1_SPG5POSON_SPGPSON_X5_Pos 16UL
#define VIDEOSS_VIDEOIO_DISENG1_TCON1_SPG5POSON_SPGPSON_X5_Msk 0x7FFF0000UL
#define VIDEOSS_VIDEOIO_DISENG1_TCON1_SPG5POSON_SPGPSON_TOGGLE5_Pos 31UL
#define VIDEOSS_VIDEOIO_DISENG1_TCON1_SPG5POSON_SPGPSON_TOGGLE5_Msk 0x80000000UL
/* VIDEOSS_VIDEOIO_DISENG1_TCON1.SPG5MASKON */
#define VIDEOSS_VIDEOIO_DISENG1_TCON1_SPG5MASKON_SPGMKON5_Pos 0UL
#define VIDEOSS_VIDEOIO_DISENG1_TCON1_SPG5MASKON_SPGMKON5_Msk 0x7FFFFFFFUL
/* VIDEOSS_VIDEOIO_DISENG1_TCON1.SPG5POSOFF */
#define VIDEOSS_VIDEOIO_DISENG1_TCON1_SPG5POSOFF_SPGPSOFF_Y5_Pos 0UL
#define VIDEOSS_VIDEOIO_DISENG1_TCON1_SPG5POSOFF_SPGPSOFF_Y5_Msk 0x7FFFUL
#define VIDEOSS_VIDEOIO_DISENG1_TCON1_SPG5POSOFF_SPGPSOFF_FIELD5_Pos 15UL
#define VIDEOSS_VIDEOIO_DISENG1_TCON1_SPG5POSOFF_SPGPSOFF_FIELD5_Msk 0x8000UL
#define VIDEOSS_VIDEOIO_DISENG1_TCON1_SPG5POSOFF_SPGPSOFF_X5_Pos 16UL
#define VIDEOSS_VIDEOIO_DISENG1_TCON1_SPG5POSOFF_SPGPSOFF_X5_Msk 0x7FFF0000UL
#define VIDEOSS_VIDEOIO_DISENG1_TCON1_SPG5POSOFF_SPGPSOFF_TOGGLE5_Pos 31UL
#define VIDEOSS_VIDEOIO_DISENG1_TCON1_SPG5POSOFF_SPGPSOFF_TOGGLE5_Msk 0x80000000UL
/* VIDEOSS_VIDEOIO_DISENG1_TCON1.SPG5MASKOFF */
#define VIDEOSS_VIDEOIO_DISENG1_TCON1_SPG5MASKOFF_SPGMKOFF5_Pos 0UL
#define VIDEOSS_VIDEOIO_DISENG1_TCON1_SPG5MASKOFF_SPGMKOFF5_Msk 0x7FFFFFFFUL
/* VIDEOSS_VIDEOIO_DISENG1_TCON1.SPG6POSON */
#define VIDEOSS_VIDEOIO_DISENG1_TCON1_SPG6POSON_SPGPSON_Y6_Pos 0UL
#define VIDEOSS_VIDEOIO_DISENG1_TCON1_SPG6POSON_SPGPSON_Y6_Msk 0x7FFFUL
#define VIDEOSS_VIDEOIO_DISENG1_TCON1_SPG6POSON_SPGPSON_FIELD6_Pos 15UL
#define VIDEOSS_VIDEOIO_DISENG1_TCON1_SPG6POSON_SPGPSON_FIELD6_Msk 0x8000UL
#define VIDEOSS_VIDEOIO_DISENG1_TCON1_SPG6POSON_SPGPSON_X6_Pos 16UL
#define VIDEOSS_VIDEOIO_DISENG1_TCON1_SPG6POSON_SPGPSON_X6_Msk 0x7FFF0000UL
#define VIDEOSS_VIDEOIO_DISENG1_TCON1_SPG6POSON_SPGPSON_TOGGLE6_Pos 31UL
#define VIDEOSS_VIDEOIO_DISENG1_TCON1_SPG6POSON_SPGPSON_TOGGLE6_Msk 0x80000000UL
/* VIDEOSS_VIDEOIO_DISENG1_TCON1.SPG6MASKON */
#define VIDEOSS_VIDEOIO_DISENG1_TCON1_SPG6MASKON_SPGMKON6_Pos 0UL
#define VIDEOSS_VIDEOIO_DISENG1_TCON1_SPG6MASKON_SPGMKON6_Msk 0x7FFFFFFFUL
/* VIDEOSS_VIDEOIO_DISENG1_TCON1.SPG6POSOFF */
#define VIDEOSS_VIDEOIO_DISENG1_TCON1_SPG6POSOFF_SPGPSOFF_Y6_Pos 0UL
#define VIDEOSS_VIDEOIO_DISENG1_TCON1_SPG6POSOFF_SPGPSOFF_Y6_Msk 0x7FFFUL
#define VIDEOSS_VIDEOIO_DISENG1_TCON1_SPG6POSOFF_SPGPSOFF_FIELD6_Pos 15UL
#define VIDEOSS_VIDEOIO_DISENG1_TCON1_SPG6POSOFF_SPGPSOFF_FIELD6_Msk 0x8000UL
#define VIDEOSS_VIDEOIO_DISENG1_TCON1_SPG6POSOFF_SPGPSOFF_X6_Pos 16UL
#define VIDEOSS_VIDEOIO_DISENG1_TCON1_SPG6POSOFF_SPGPSOFF_X6_Msk 0x7FFF0000UL
#define VIDEOSS_VIDEOIO_DISENG1_TCON1_SPG6POSOFF_SPGPSOFF_TOGGLE6_Pos 31UL
#define VIDEOSS_VIDEOIO_DISENG1_TCON1_SPG6POSOFF_SPGPSOFF_TOGGLE6_Msk 0x80000000UL
/* VIDEOSS_VIDEOIO_DISENG1_TCON1.SPG6MASKOFF */
#define VIDEOSS_VIDEOIO_DISENG1_TCON1_SPG6MASKOFF_SPGMKOFF6_Pos 0UL
#define VIDEOSS_VIDEOIO_DISENG1_TCON1_SPG6MASKOFF_SPGMKOFF6_Msk 0x7FFFFFFFUL
/* VIDEOSS_VIDEOIO_DISENG1_TCON1.SPG7POSON */
#define VIDEOSS_VIDEOIO_DISENG1_TCON1_SPG7POSON_SPGPSON_Y7_Pos 0UL
#define VIDEOSS_VIDEOIO_DISENG1_TCON1_SPG7POSON_SPGPSON_Y7_Msk 0x7FFFUL
#define VIDEOSS_VIDEOIO_DISENG1_TCON1_SPG7POSON_SPGPSON_FIELD7_Pos 15UL
#define VIDEOSS_VIDEOIO_DISENG1_TCON1_SPG7POSON_SPGPSON_FIELD7_Msk 0x8000UL
#define VIDEOSS_VIDEOIO_DISENG1_TCON1_SPG7POSON_SPGPSON_X7_Pos 16UL
#define VIDEOSS_VIDEOIO_DISENG1_TCON1_SPG7POSON_SPGPSON_X7_Msk 0x7FFF0000UL
#define VIDEOSS_VIDEOIO_DISENG1_TCON1_SPG7POSON_SPGPSON_TOGGLE7_Pos 31UL
#define VIDEOSS_VIDEOIO_DISENG1_TCON1_SPG7POSON_SPGPSON_TOGGLE7_Msk 0x80000000UL
/* VIDEOSS_VIDEOIO_DISENG1_TCON1.SPG7MASKON */
#define VIDEOSS_VIDEOIO_DISENG1_TCON1_SPG7MASKON_SPGMKON7_Pos 0UL
#define VIDEOSS_VIDEOIO_DISENG1_TCON1_SPG7MASKON_SPGMKON7_Msk 0x7FFFFFFFUL
/* VIDEOSS_VIDEOIO_DISENG1_TCON1.SPG7POSOFF */
#define VIDEOSS_VIDEOIO_DISENG1_TCON1_SPG7POSOFF_SPGPSOFF_Y7_Pos 0UL
#define VIDEOSS_VIDEOIO_DISENG1_TCON1_SPG7POSOFF_SPGPSOFF_Y7_Msk 0x7FFFUL
#define VIDEOSS_VIDEOIO_DISENG1_TCON1_SPG7POSOFF_SPGPSOFF_FIELD7_Pos 15UL
#define VIDEOSS_VIDEOIO_DISENG1_TCON1_SPG7POSOFF_SPGPSOFF_FIELD7_Msk 0x8000UL
#define VIDEOSS_VIDEOIO_DISENG1_TCON1_SPG7POSOFF_SPGPSOFF_X7_Pos 16UL
#define VIDEOSS_VIDEOIO_DISENG1_TCON1_SPG7POSOFF_SPGPSOFF_X7_Msk 0x7FFF0000UL
#define VIDEOSS_VIDEOIO_DISENG1_TCON1_SPG7POSOFF_SPGPSOFF_TOGGLE7_Pos 31UL
#define VIDEOSS_VIDEOIO_DISENG1_TCON1_SPG7POSOFF_SPGPSOFF_TOGGLE7_Msk 0x80000000UL
/* VIDEOSS_VIDEOIO_DISENG1_TCON1.SPG7MASKOFF */
#define VIDEOSS_VIDEOIO_DISENG1_TCON1_SPG7MASKOFF_SPGMKOFF7_Pos 0UL
#define VIDEOSS_VIDEOIO_DISENG1_TCON1_SPG7MASKOFF_SPGMKOFF7_Msk 0x7FFFFFFFUL
/* VIDEOSS_VIDEOIO_DISENG1_TCON1.SPG8POSON */
#define VIDEOSS_VIDEOIO_DISENG1_TCON1_SPG8POSON_SPGPSON_Y8_Pos 0UL
#define VIDEOSS_VIDEOIO_DISENG1_TCON1_SPG8POSON_SPGPSON_Y8_Msk 0x7FFFUL
#define VIDEOSS_VIDEOIO_DISENG1_TCON1_SPG8POSON_SPGPSON_FIELD8_Pos 15UL
#define VIDEOSS_VIDEOIO_DISENG1_TCON1_SPG8POSON_SPGPSON_FIELD8_Msk 0x8000UL
#define VIDEOSS_VIDEOIO_DISENG1_TCON1_SPG8POSON_SPGPSON_X8_Pos 16UL
#define VIDEOSS_VIDEOIO_DISENG1_TCON1_SPG8POSON_SPGPSON_X8_Msk 0x7FFF0000UL
#define VIDEOSS_VIDEOIO_DISENG1_TCON1_SPG8POSON_SPGPSON_TOGGLE8_Pos 31UL
#define VIDEOSS_VIDEOIO_DISENG1_TCON1_SPG8POSON_SPGPSON_TOGGLE8_Msk 0x80000000UL
/* VIDEOSS_VIDEOIO_DISENG1_TCON1.SPG8MASKON */
#define VIDEOSS_VIDEOIO_DISENG1_TCON1_SPG8MASKON_SPGMKON8_Pos 0UL
#define VIDEOSS_VIDEOIO_DISENG1_TCON1_SPG8MASKON_SPGMKON8_Msk 0x7FFFFFFFUL
/* VIDEOSS_VIDEOIO_DISENG1_TCON1.SPG8POSOFF */
#define VIDEOSS_VIDEOIO_DISENG1_TCON1_SPG8POSOFF_SPGPSOFF_Y8_Pos 0UL
#define VIDEOSS_VIDEOIO_DISENG1_TCON1_SPG8POSOFF_SPGPSOFF_Y8_Msk 0x7FFFUL
#define VIDEOSS_VIDEOIO_DISENG1_TCON1_SPG8POSOFF_SPGPSOFF_FIELD8_Pos 15UL
#define VIDEOSS_VIDEOIO_DISENG1_TCON1_SPG8POSOFF_SPGPSOFF_FIELD8_Msk 0x8000UL
#define VIDEOSS_VIDEOIO_DISENG1_TCON1_SPG8POSOFF_SPGPSOFF_X8_Pos 16UL
#define VIDEOSS_VIDEOIO_DISENG1_TCON1_SPG8POSOFF_SPGPSOFF_X8_Msk 0x7FFF0000UL
#define VIDEOSS_VIDEOIO_DISENG1_TCON1_SPG8POSOFF_SPGPSOFF_TOGGLE8_Pos 31UL
#define VIDEOSS_VIDEOIO_DISENG1_TCON1_SPG8POSOFF_SPGPSOFF_TOGGLE8_Msk 0x80000000UL
/* VIDEOSS_VIDEOIO_DISENG1_TCON1.SPG8MASKOFF */
#define VIDEOSS_VIDEOIO_DISENG1_TCON1_SPG8MASKOFF_SPGMKOFF8_Pos 0UL
#define VIDEOSS_VIDEOIO_DISENG1_TCON1_SPG8MASKOFF_SPGMKOFF8_Msk 0x7FFFFFFFUL
/* VIDEOSS_VIDEOIO_DISENG1_TCON1.SPG9POSON */
#define VIDEOSS_VIDEOIO_DISENG1_TCON1_SPG9POSON_SPGPSON_Y9_Pos 0UL
#define VIDEOSS_VIDEOIO_DISENG1_TCON1_SPG9POSON_SPGPSON_Y9_Msk 0x7FFFUL
#define VIDEOSS_VIDEOIO_DISENG1_TCON1_SPG9POSON_SPGPSON_FIELD9_Pos 15UL
#define VIDEOSS_VIDEOIO_DISENG1_TCON1_SPG9POSON_SPGPSON_FIELD9_Msk 0x8000UL
#define VIDEOSS_VIDEOIO_DISENG1_TCON1_SPG9POSON_SPGPSON_X9_Pos 16UL
#define VIDEOSS_VIDEOIO_DISENG1_TCON1_SPG9POSON_SPGPSON_X9_Msk 0x7FFF0000UL
#define VIDEOSS_VIDEOIO_DISENG1_TCON1_SPG9POSON_SPGPSON_TOGGLE9_Pos 31UL
#define VIDEOSS_VIDEOIO_DISENG1_TCON1_SPG9POSON_SPGPSON_TOGGLE9_Msk 0x80000000UL
/* VIDEOSS_VIDEOIO_DISENG1_TCON1.SPG9MASKON */
#define VIDEOSS_VIDEOIO_DISENG1_TCON1_SPG9MASKON_SPGMKON9_Pos 0UL
#define VIDEOSS_VIDEOIO_DISENG1_TCON1_SPG9MASKON_SPGMKON9_Msk 0x7FFFFFFFUL
/* VIDEOSS_VIDEOIO_DISENG1_TCON1.SPG9POSOFF */
#define VIDEOSS_VIDEOIO_DISENG1_TCON1_SPG9POSOFF_SPGPSOFF_Y9_Pos 0UL
#define VIDEOSS_VIDEOIO_DISENG1_TCON1_SPG9POSOFF_SPGPSOFF_Y9_Msk 0x7FFFUL
#define VIDEOSS_VIDEOIO_DISENG1_TCON1_SPG9POSOFF_SPGPSOFF_FIELD9_Pos 15UL
#define VIDEOSS_VIDEOIO_DISENG1_TCON1_SPG9POSOFF_SPGPSOFF_FIELD9_Msk 0x8000UL
#define VIDEOSS_VIDEOIO_DISENG1_TCON1_SPG9POSOFF_SPGPSOFF_X9_Pos 16UL
#define VIDEOSS_VIDEOIO_DISENG1_TCON1_SPG9POSOFF_SPGPSOFF_X9_Msk 0x7FFF0000UL
#define VIDEOSS_VIDEOIO_DISENG1_TCON1_SPG9POSOFF_SPGPSOFF_TOGGLE9_Pos 31UL
#define VIDEOSS_VIDEOIO_DISENG1_TCON1_SPG9POSOFF_SPGPSOFF_TOGGLE9_Msk 0x80000000UL
/* VIDEOSS_VIDEOIO_DISENG1_TCON1.SPG9MASKOFF */
#define VIDEOSS_VIDEOIO_DISENG1_TCON1_SPG9MASKOFF_SPGMKOFF9_Pos 0UL
#define VIDEOSS_VIDEOIO_DISENG1_TCON1_SPG9MASKOFF_SPGMKOFF9_Msk 0x7FFFFFFFUL
/* VIDEOSS_VIDEOIO_DISENG1_TCON1.SPG10POSON */
#define VIDEOSS_VIDEOIO_DISENG1_TCON1_SPG10POSON_SPGPSON_Y10_Pos 0UL
#define VIDEOSS_VIDEOIO_DISENG1_TCON1_SPG10POSON_SPGPSON_Y10_Msk 0x7FFFUL
#define VIDEOSS_VIDEOIO_DISENG1_TCON1_SPG10POSON_SPGPSON_FIELD10_Pos 15UL
#define VIDEOSS_VIDEOIO_DISENG1_TCON1_SPG10POSON_SPGPSON_FIELD10_Msk 0x8000UL
#define VIDEOSS_VIDEOIO_DISENG1_TCON1_SPG10POSON_SPGPSON_X10_Pos 16UL
#define VIDEOSS_VIDEOIO_DISENG1_TCON1_SPG10POSON_SPGPSON_X10_Msk 0x7FFF0000UL
#define VIDEOSS_VIDEOIO_DISENG1_TCON1_SPG10POSON_SPGPSON_TOGGLE10_Pos 31UL
#define VIDEOSS_VIDEOIO_DISENG1_TCON1_SPG10POSON_SPGPSON_TOGGLE10_Msk 0x80000000UL
/* VIDEOSS_VIDEOIO_DISENG1_TCON1.SPG10MASKON */
#define VIDEOSS_VIDEOIO_DISENG1_TCON1_SPG10MASKON_SPGMKON10_Pos 0UL
#define VIDEOSS_VIDEOIO_DISENG1_TCON1_SPG10MASKON_SPGMKON10_Msk 0x7FFFFFFFUL
/* VIDEOSS_VIDEOIO_DISENG1_TCON1.SPG10POSOFF */
#define VIDEOSS_VIDEOIO_DISENG1_TCON1_SPG10POSOFF_SPGPSOFF_Y10_Pos 0UL
#define VIDEOSS_VIDEOIO_DISENG1_TCON1_SPG10POSOFF_SPGPSOFF_Y10_Msk 0x7FFFUL
#define VIDEOSS_VIDEOIO_DISENG1_TCON1_SPG10POSOFF_SPGPSOFF_FIELD10_Pos 15UL
#define VIDEOSS_VIDEOIO_DISENG1_TCON1_SPG10POSOFF_SPGPSOFF_FIELD10_Msk 0x8000UL
#define VIDEOSS_VIDEOIO_DISENG1_TCON1_SPG10POSOFF_SPGPSOFF_X10_Pos 16UL
#define VIDEOSS_VIDEOIO_DISENG1_TCON1_SPG10POSOFF_SPGPSOFF_X10_Msk 0x7FFF0000UL
#define VIDEOSS_VIDEOIO_DISENG1_TCON1_SPG10POSOFF_SPGPSOFF_TOGGLE10_Pos 31UL
#define VIDEOSS_VIDEOIO_DISENG1_TCON1_SPG10POSOFF_SPGPSOFF_TOGGLE10_Msk 0x80000000UL
/* VIDEOSS_VIDEOIO_DISENG1_TCON1.SPG10MASKOFF */
#define VIDEOSS_VIDEOIO_DISENG1_TCON1_SPG10MASKOFF_SPGMKOFF10_Pos 0UL
#define VIDEOSS_VIDEOIO_DISENG1_TCON1_SPG10MASKOFF_SPGMKOFF10_Msk 0x7FFFFFFFUL
/* VIDEOSS_VIDEOIO_DISENG1_TCON1.SPG11POSON */
#define VIDEOSS_VIDEOIO_DISENG1_TCON1_SPG11POSON_SPGPSON_Y11_Pos 0UL
#define VIDEOSS_VIDEOIO_DISENG1_TCON1_SPG11POSON_SPGPSON_Y11_Msk 0x7FFFUL
#define VIDEOSS_VIDEOIO_DISENG1_TCON1_SPG11POSON_SPGPSON_FIELD11_Pos 15UL
#define VIDEOSS_VIDEOIO_DISENG1_TCON1_SPG11POSON_SPGPSON_FIELD11_Msk 0x8000UL
#define VIDEOSS_VIDEOIO_DISENG1_TCON1_SPG11POSON_SPGPSON_X11_Pos 16UL
#define VIDEOSS_VIDEOIO_DISENG1_TCON1_SPG11POSON_SPGPSON_X11_Msk 0x7FFF0000UL
#define VIDEOSS_VIDEOIO_DISENG1_TCON1_SPG11POSON_SPGPSON_TOGGLE11_Pos 31UL
#define VIDEOSS_VIDEOIO_DISENG1_TCON1_SPG11POSON_SPGPSON_TOGGLE11_Msk 0x80000000UL
/* VIDEOSS_VIDEOIO_DISENG1_TCON1.SPG11MASKON */
#define VIDEOSS_VIDEOIO_DISENG1_TCON1_SPG11MASKON_SPGMKON11_Pos 0UL
#define VIDEOSS_VIDEOIO_DISENG1_TCON1_SPG11MASKON_SPGMKON11_Msk 0x7FFFFFFFUL
/* VIDEOSS_VIDEOIO_DISENG1_TCON1.SPG11POSOFF */
#define VIDEOSS_VIDEOIO_DISENG1_TCON1_SPG11POSOFF_SPGPSOFF_Y11_Pos 0UL
#define VIDEOSS_VIDEOIO_DISENG1_TCON1_SPG11POSOFF_SPGPSOFF_Y11_Msk 0x7FFFUL
#define VIDEOSS_VIDEOIO_DISENG1_TCON1_SPG11POSOFF_SPGPSOFF_FIELD11_Pos 15UL
#define VIDEOSS_VIDEOIO_DISENG1_TCON1_SPG11POSOFF_SPGPSOFF_FIELD11_Msk 0x8000UL
#define VIDEOSS_VIDEOIO_DISENG1_TCON1_SPG11POSOFF_SPGPSOFF_X11_Pos 16UL
#define VIDEOSS_VIDEOIO_DISENG1_TCON1_SPG11POSOFF_SPGPSOFF_X11_Msk 0x7FFF0000UL
#define VIDEOSS_VIDEOIO_DISENG1_TCON1_SPG11POSOFF_SPGPSOFF_TOGGLE11_Pos 31UL
#define VIDEOSS_VIDEOIO_DISENG1_TCON1_SPG11POSOFF_SPGPSOFF_TOGGLE11_Msk 0x80000000UL
/* VIDEOSS_VIDEOIO_DISENG1_TCON1.SPG11MASKOFF */
#define VIDEOSS_VIDEOIO_DISENG1_TCON1_SPG11MASKOFF_SPGMKOFF11_Pos 0UL
#define VIDEOSS_VIDEOIO_DISENG1_TCON1_SPG11MASKOFF_SPGMKOFF11_Msk 0x7FFFFFFFUL
/* VIDEOSS_VIDEOIO_DISENG1_TCON1.SMX0SIGS */
#define VIDEOSS_VIDEOIO_DISENG1_TCON1_SMX0SIGS_SMX0SIGS_S0_Pos 0UL
#define VIDEOSS_VIDEOIO_DISENG1_TCON1_SMX0SIGS_SMX0SIGS_S0_Msk 0x7UL
#define VIDEOSS_VIDEOIO_DISENG1_TCON1_SMX0SIGS_SMX0SIGS_S1_Pos 3UL
#define VIDEOSS_VIDEOIO_DISENG1_TCON1_SMX0SIGS_SMX0SIGS_S1_Msk 0x38UL
#define VIDEOSS_VIDEOIO_DISENG1_TCON1_SMX0SIGS_SMX0SIGS_S2_Pos 6UL
#define VIDEOSS_VIDEOIO_DISENG1_TCON1_SMX0SIGS_SMX0SIGS_S2_Msk 0x1C0UL
#define VIDEOSS_VIDEOIO_DISENG1_TCON1_SMX0SIGS_SMX0SIGS_S3_Pos 9UL
#define VIDEOSS_VIDEOIO_DISENG1_TCON1_SMX0SIGS_SMX0SIGS_S3_Msk 0xE00UL
#define VIDEOSS_VIDEOIO_DISENG1_TCON1_SMX0SIGS_SMX0SIGS_S4_Pos 12UL
#define VIDEOSS_VIDEOIO_DISENG1_TCON1_SMX0SIGS_SMX0SIGS_S4_Msk 0x7000UL
/* VIDEOSS_VIDEOIO_DISENG1_TCON1.SMX0FCTTABLE */
#define VIDEOSS_VIDEOIO_DISENG1_TCON1_SMX0FCTTABLE_SMXFCT0_Pos 0UL
#define VIDEOSS_VIDEOIO_DISENG1_TCON1_SMX0FCTTABLE_SMXFCT0_Msk 0xFFFFFFFFUL
/* VIDEOSS_VIDEOIO_DISENG1_TCON1.SMX1SIGS */
#define VIDEOSS_VIDEOIO_DISENG1_TCON1_SMX1SIGS_SMX1SIGS_S0_Pos 0UL
#define VIDEOSS_VIDEOIO_DISENG1_TCON1_SMX1SIGS_SMX1SIGS_S0_Msk 0x7UL
#define VIDEOSS_VIDEOIO_DISENG1_TCON1_SMX1SIGS_SMX1SIGS_S1_Pos 3UL
#define VIDEOSS_VIDEOIO_DISENG1_TCON1_SMX1SIGS_SMX1SIGS_S1_Msk 0x38UL
#define VIDEOSS_VIDEOIO_DISENG1_TCON1_SMX1SIGS_SMX1SIGS_S2_Pos 6UL
#define VIDEOSS_VIDEOIO_DISENG1_TCON1_SMX1SIGS_SMX1SIGS_S2_Msk 0x1C0UL
#define VIDEOSS_VIDEOIO_DISENG1_TCON1_SMX1SIGS_SMX1SIGS_S3_Pos 9UL
#define VIDEOSS_VIDEOIO_DISENG1_TCON1_SMX1SIGS_SMX1SIGS_S3_Msk 0xE00UL
#define VIDEOSS_VIDEOIO_DISENG1_TCON1_SMX1SIGS_SMX1SIGS_S4_Pos 12UL
#define VIDEOSS_VIDEOIO_DISENG1_TCON1_SMX1SIGS_SMX1SIGS_S4_Msk 0x7000UL
/* VIDEOSS_VIDEOIO_DISENG1_TCON1.SMX1FCTTABLE */
#define VIDEOSS_VIDEOIO_DISENG1_TCON1_SMX1FCTTABLE_SMXFCT1_Pos 0UL
#define VIDEOSS_VIDEOIO_DISENG1_TCON1_SMX1FCTTABLE_SMXFCT1_Msk 0xFFFFFFFFUL
/* VIDEOSS_VIDEOIO_DISENG1_TCON1.SMX2SIGS */
#define VIDEOSS_VIDEOIO_DISENG1_TCON1_SMX2SIGS_SMX2SIGS_S0_Pos 0UL
#define VIDEOSS_VIDEOIO_DISENG1_TCON1_SMX2SIGS_SMX2SIGS_S0_Msk 0x7UL
#define VIDEOSS_VIDEOIO_DISENG1_TCON1_SMX2SIGS_SMX2SIGS_S1_Pos 3UL
#define VIDEOSS_VIDEOIO_DISENG1_TCON1_SMX2SIGS_SMX2SIGS_S1_Msk 0x38UL
#define VIDEOSS_VIDEOIO_DISENG1_TCON1_SMX2SIGS_SMX2SIGS_S2_Pos 6UL
#define VIDEOSS_VIDEOIO_DISENG1_TCON1_SMX2SIGS_SMX2SIGS_S2_Msk 0x1C0UL
#define VIDEOSS_VIDEOIO_DISENG1_TCON1_SMX2SIGS_SMX2SIGS_S3_Pos 9UL
#define VIDEOSS_VIDEOIO_DISENG1_TCON1_SMX2SIGS_SMX2SIGS_S3_Msk 0xE00UL
#define VIDEOSS_VIDEOIO_DISENG1_TCON1_SMX2SIGS_SMX2SIGS_S4_Pos 12UL
#define VIDEOSS_VIDEOIO_DISENG1_TCON1_SMX2SIGS_SMX2SIGS_S4_Msk 0x7000UL
/* VIDEOSS_VIDEOIO_DISENG1_TCON1.SMX2FCTTABLE */
#define VIDEOSS_VIDEOIO_DISENG1_TCON1_SMX2FCTTABLE_SMXFCT2_Pos 0UL
#define VIDEOSS_VIDEOIO_DISENG1_TCON1_SMX2FCTTABLE_SMXFCT2_Msk 0xFFFFFFFFUL
/* VIDEOSS_VIDEOIO_DISENG1_TCON1.SMX3SIGS */
#define VIDEOSS_VIDEOIO_DISENG1_TCON1_SMX3SIGS_SMX3SIGS_S0_Pos 0UL
#define VIDEOSS_VIDEOIO_DISENG1_TCON1_SMX3SIGS_SMX3SIGS_S0_Msk 0x7UL
#define VIDEOSS_VIDEOIO_DISENG1_TCON1_SMX3SIGS_SMX3SIGS_S1_Pos 3UL
#define VIDEOSS_VIDEOIO_DISENG1_TCON1_SMX3SIGS_SMX3SIGS_S1_Msk 0x38UL
#define VIDEOSS_VIDEOIO_DISENG1_TCON1_SMX3SIGS_SMX3SIGS_S2_Pos 6UL
#define VIDEOSS_VIDEOIO_DISENG1_TCON1_SMX3SIGS_SMX3SIGS_S2_Msk 0x1C0UL
#define VIDEOSS_VIDEOIO_DISENG1_TCON1_SMX3SIGS_SMX3SIGS_S3_Pos 9UL
#define VIDEOSS_VIDEOIO_DISENG1_TCON1_SMX3SIGS_SMX3SIGS_S3_Msk 0xE00UL
#define VIDEOSS_VIDEOIO_DISENG1_TCON1_SMX3SIGS_SMX3SIGS_S4_Pos 12UL
#define VIDEOSS_VIDEOIO_DISENG1_TCON1_SMX3SIGS_SMX3SIGS_S4_Msk 0x7000UL
/* VIDEOSS_VIDEOIO_DISENG1_TCON1.SMX3FCTTABLE */
#define VIDEOSS_VIDEOIO_DISENG1_TCON1_SMX3FCTTABLE_SMXFCT3_Pos 0UL
#define VIDEOSS_VIDEOIO_DISENG1_TCON1_SMX3FCTTABLE_SMXFCT3_Msk 0xFFFFFFFFUL
/* VIDEOSS_VIDEOIO_DISENG1_TCON1.SMX4SIGS */
#define VIDEOSS_VIDEOIO_DISENG1_TCON1_SMX4SIGS_SMX4SIGS_S0_Pos 0UL
#define VIDEOSS_VIDEOIO_DISENG1_TCON1_SMX4SIGS_SMX4SIGS_S0_Msk 0x7UL
#define VIDEOSS_VIDEOIO_DISENG1_TCON1_SMX4SIGS_SMX4SIGS_S1_Pos 3UL
#define VIDEOSS_VIDEOIO_DISENG1_TCON1_SMX4SIGS_SMX4SIGS_S1_Msk 0x38UL
#define VIDEOSS_VIDEOIO_DISENG1_TCON1_SMX4SIGS_SMX4SIGS_S2_Pos 6UL
#define VIDEOSS_VIDEOIO_DISENG1_TCON1_SMX4SIGS_SMX4SIGS_S2_Msk 0x1C0UL
#define VIDEOSS_VIDEOIO_DISENG1_TCON1_SMX4SIGS_SMX4SIGS_S3_Pos 9UL
#define VIDEOSS_VIDEOIO_DISENG1_TCON1_SMX4SIGS_SMX4SIGS_S3_Msk 0xE00UL
#define VIDEOSS_VIDEOIO_DISENG1_TCON1_SMX4SIGS_SMX4SIGS_S4_Pos 12UL
#define VIDEOSS_VIDEOIO_DISENG1_TCON1_SMX4SIGS_SMX4SIGS_S4_Msk 0x7000UL
/* VIDEOSS_VIDEOIO_DISENG1_TCON1.SMX4FCTTABLE */
#define VIDEOSS_VIDEOIO_DISENG1_TCON1_SMX4FCTTABLE_SMXFCT4_Pos 0UL
#define VIDEOSS_VIDEOIO_DISENG1_TCON1_SMX4FCTTABLE_SMXFCT4_Msk 0xFFFFFFFFUL
/* VIDEOSS_VIDEOIO_DISENG1_TCON1.SMX5SIGS */
#define VIDEOSS_VIDEOIO_DISENG1_TCON1_SMX5SIGS_SMX5SIGS_S0_Pos 0UL
#define VIDEOSS_VIDEOIO_DISENG1_TCON1_SMX5SIGS_SMX5SIGS_S0_Msk 0x7UL
#define VIDEOSS_VIDEOIO_DISENG1_TCON1_SMX5SIGS_SMX5SIGS_S1_Pos 3UL
#define VIDEOSS_VIDEOIO_DISENG1_TCON1_SMX5SIGS_SMX5SIGS_S1_Msk 0x38UL
#define VIDEOSS_VIDEOIO_DISENG1_TCON1_SMX5SIGS_SMX5SIGS_S2_Pos 6UL
#define VIDEOSS_VIDEOIO_DISENG1_TCON1_SMX5SIGS_SMX5SIGS_S2_Msk 0x1C0UL
#define VIDEOSS_VIDEOIO_DISENG1_TCON1_SMX5SIGS_SMX5SIGS_S3_Pos 9UL
#define VIDEOSS_VIDEOIO_DISENG1_TCON1_SMX5SIGS_SMX5SIGS_S3_Msk 0xE00UL
#define VIDEOSS_VIDEOIO_DISENG1_TCON1_SMX5SIGS_SMX5SIGS_S4_Pos 12UL
#define VIDEOSS_VIDEOIO_DISENG1_TCON1_SMX5SIGS_SMX5SIGS_S4_Msk 0x7000UL
/* VIDEOSS_VIDEOIO_DISENG1_TCON1.SMX5FCTTABLE */
#define VIDEOSS_VIDEOIO_DISENG1_TCON1_SMX5FCTTABLE_SMXFCT5_Pos 0UL
#define VIDEOSS_VIDEOIO_DISENG1_TCON1_SMX5FCTTABLE_SMXFCT5_Msk 0xFFFFFFFFUL
/* VIDEOSS_VIDEOIO_DISENG1_TCON1.SMX6SIGS */
#define VIDEOSS_VIDEOIO_DISENG1_TCON1_SMX6SIGS_SMX6SIGS_S0_Pos 0UL
#define VIDEOSS_VIDEOIO_DISENG1_TCON1_SMX6SIGS_SMX6SIGS_S0_Msk 0x7UL
#define VIDEOSS_VIDEOIO_DISENG1_TCON1_SMX6SIGS_SMX6SIGS_S1_Pos 3UL
#define VIDEOSS_VIDEOIO_DISENG1_TCON1_SMX6SIGS_SMX6SIGS_S1_Msk 0x38UL
#define VIDEOSS_VIDEOIO_DISENG1_TCON1_SMX6SIGS_SMX6SIGS_S2_Pos 6UL
#define VIDEOSS_VIDEOIO_DISENG1_TCON1_SMX6SIGS_SMX6SIGS_S2_Msk 0x1C0UL
#define VIDEOSS_VIDEOIO_DISENG1_TCON1_SMX6SIGS_SMX6SIGS_S3_Pos 9UL
#define VIDEOSS_VIDEOIO_DISENG1_TCON1_SMX6SIGS_SMX6SIGS_S3_Msk 0xE00UL
#define VIDEOSS_VIDEOIO_DISENG1_TCON1_SMX6SIGS_SMX6SIGS_S4_Pos 12UL
#define VIDEOSS_VIDEOIO_DISENG1_TCON1_SMX6SIGS_SMX6SIGS_S4_Msk 0x7000UL
/* VIDEOSS_VIDEOIO_DISENG1_TCON1.SMX6FCTTABLE */
#define VIDEOSS_VIDEOIO_DISENG1_TCON1_SMX6FCTTABLE_SMXFCT6_Pos 0UL
#define VIDEOSS_VIDEOIO_DISENG1_TCON1_SMX6FCTTABLE_SMXFCT6_Msk 0xFFFFFFFFUL
/* VIDEOSS_VIDEOIO_DISENG1_TCON1.SMX7SIGS */
#define VIDEOSS_VIDEOIO_DISENG1_TCON1_SMX7SIGS_SMX7SIGS_S0_Pos 0UL
#define VIDEOSS_VIDEOIO_DISENG1_TCON1_SMX7SIGS_SMX7SIGS_S0_Msk 0x7UL
#define VIDEOSS_VIDEOIO_DISENG1_TCON1_SMX7SIGS_SMX7SIGS_S1_Pos 3UL
#define VIDEOSS_VIDEOIO_DISENG1_TCON1_SMX7SIGS_SMX7SIGS_S1_Msk 0x38UL
#define VIDEOSS_VIDEOIO_DISENG1_TCON1_SMX7SIGS_SMX7SIGS_S2_Pos 6UL
#define VIDEOSS_VIDEOIO_DISENG1_TCON1_SMX7SIGS_SMX7SIGS_S2_Msk 0x1C0UL
#define VIDEOSS_VIDEOIO_DISENG1_TCON1_SMX7SIGS_SMX7SIGS_S3_Pos 9UL
#define VIDEOSS_VIDEOIO_DISENG1_TCON1_SMX7SIGS_SMX7SIGS_S3_Msk 0xE00UL
#define VIDEOSS_VIDEOIO_DISENG1_TCON1_SMX7SIGS_SMX7SIGS_S4_Pos 12UL
#define VIDEOSS_VIDEOIO_DISENG1_TCON1_SMX7SIGS_SMX7SIGS_S4_Msk 0x7000UL
/* VIDEOSS_VIDEOIO_DISENG1_TCON1.SMX7FCTTABLE */
#define VIDEOSS_VIDEOIO_DISENG1_TCON1_SMX7FCTTABLE_SMXFCT7_Pos 0UL
#define VIDEOSS_VIDEOIO_DISENG1_TCON1_SMX7FCTTABLE_SMXFCT7_Msk 0xFFFFFFFFUL
/* VIDEOSS_VIDEOIO_DISENG1_TCON1.SMX8SIGS */
#define VIDEOSS_VIDEOIO_DISENG1_TCON1_SMX8SIGS_SMX8SIGS_S0_Pos 0UL
#define VIDEOSS_VIDEOIO_DISENG1_TCON1_SMX8SIGS_SMX8SIGS_S0_Msk 0x7UL
#define VIDEOSS_VIDEOIO_DISENG1_TCON1_SMX8SIGS_SMX8SIGS_S1_Pos 3UL
#define VIDEOSS_VIDEOIO_DISENG1_TCON1_SMX8SIGS_SMX8SIGS_S1_Msk 0x38UL
#define VIDEOSS_VIDEOIO_DISENG1_TCON1_SMX8SIGS_SMX8SIGS_S2_Pos 6UL
#define VIDEOSS_VIDEOIO_DISENG1_TCON1_SMX8SIGS_SMX8SIGS_S2_Msk 0x1C0UL
#define VIDEOSS_VIDEOIO_DISENG1_TCON1_SMX8SIGS_SMX8SIGS_S3_Pos 9UL
#define VIDEOSS_VIDEOIO_DISENG1_TCON1_SMX8SIGS_SMX8SIGS_S3_Msk 0xE00UL
#define VIDEOSS_VIDEOIO_DISENG1_TCON1_SMX8SIGS_SMX8SIGS_S4_Pos 12UL
#define VIDEOSS_VIDEOIO_DISENG1_TCON1_SMX8SIGS_SMX8SIGS_S4_Msk 0x7000UL
/* VIDEOSS_VIDEOIO_DISENG1_TCON1.SMX8FCTTABLE */
#define VIDEOSS_VIDEOIO_DISENG1_TCON1_SMX8FCTTABLE_SMXFCT8_Pos 0UL
#define VIDEOSS_VIDEOIO_DISENG1_TCON1_SMX8FCTTABLE_SMXFCT8_Msk 0xFFFFFFFFUL
/* VIDEOSS_VIDEOIO_DISENG1_TCON1.SMX9SIGS */
#define VIDEOSS_VIDEOIO_DISENG1_TCON1_SMX9SIGS_SMX9SIGS_S0_Pos 0UL
#define VIDEOSS_VIDEOIO_DISENG1_TCON1_SMX9SIGS_SMX9SIGS_S0_Msk 0x7UL
#define VIDEOSS_VIDEOIO_DISENG1_TCON1_SMX9SIGS_SMX9SIGS_S1_Pos 3UL
#define VIDEOSS_VIDEOIO_DISENG1_TCON1_SMX9SIGS_SMX9SIGS_S1_Msk 0x38UL
#define VIDEOSS_VIDEOIO_DISENG1_TCON1_SMX9SIGS_SMX9SIGS_S2_Pos 6UL
#define VIDEOSS_VIDEOIO_DISENG1_TCON1_SMX9SIGS_SMX9SIGS_S2_Msk 0x1C0UL
#define VIDEOSS_VIDEOIO_DISENG1_TCON1_SMX9SIGS_SMX9SIGS_S3_Pos 9UL
#define VIDEOSS_VIDEOIO_DISENG1_TCON1_SMX9SIGS_SMX9SIGS_S3_Msk 0xE00UL
#define VIDEOSS_VIDEOIO_DISENG1_TCON1_SMX9SIGS_SMX9SIGS_S4_Pos 12UL
#define VIDEOSS_VIDEOIO_DISENG1_TCON1_SMX9SIGS_SMX9SIGS_S4_Msk 0x7000UL
/* VIDEOSS_VIDEOIO_DISENG1_TCON1.SMX9FCTTABLE */
#define VIDEOSS_VIDEOIO_DISENG1_TCON1_SMX9FCTTABLE_SMXFCT9_Pos 0UL
#define VIDEOSS_VIDEOIO_DISENG1_TCON1_SMX9FCTTABLE_SMXFCT9_Msk 0xFFFFFFFFUL
/* VIDEOSS_VIDEOIO_DISENG1_TCON1.SMX10SIGS */
#define VIDEOSS_VIDEOIO_DISENG1_TCON1_SMX10SIGS_SMX10SIGS_S0_Pos 0UL
#define VIDEOSS_VIDEOIO_DISENG1_TCON1_SMX10SIGS_SMX10SIGS_S0_Msk 0x7UL
#define VIDEOSS_VIDEOIO_DISENG1_TCON1_SMX10SIGS_SMX10SIGS_S1_Pos 3UL
#define VIDEOSS_VIDEOIO_DISENG1_TCON1_SMX10SIGS_SMX10SIGS_S1_Msk 0x38UL
#define VIDEOSS_VIDEOIO_DISENG1_TCON1_SMX10SIGS_SMX10SIGS_S2_Pos 6UL
#define VIDEOSS_VIDEOIO_DISENG1_TCON1_SMX10SIGS_SMX10SIGS_S2_Msk 0x1C0UL
#define VIDEOSS_VIDEOIO_DISENG1_TCON1_SMX10SIGS_SMX10SIGS_S3_Pos 9UL
#define VIDEOSS_VIDEOIO_DISENG1_TCON1_SMX10SIGS_SMX10SIGS_S3_Msk 0xE00UL
#define VIDEOSS_VIDEOIO_DISENG1_TCON1_SMX10SIGS_SMX10SIGS_S4_Pos 12UL
#define VIDEOSS_VIDEOIO_DISENG1_TCON1_SMX10SIGS_SMX10SIGS_S4_Msk 0x7000UL
/* VIDEOSS_VIDEOIO_DISENG1_TCON1.SMX10FCTTABLE */
#define VIDEOSS_VIDEOIO_DISENG1_TCON1_SMX10FCTTABLE_SMXFCT10_Pos 0UL
#define VIDEOSS_VIDEOIO_DISENG1_TCON1_SMX10FCTTABLE_SMXFCT10_Msk 0xFFFFFFFFUL
/* VIDEOSS_VIDEOIO_DISENG1_TCON1.SMX11SIGS */
#define VIDEOSS_VIDEOIO_DISENG1_TCON1_SMX11SIGS_SMX11SIGS_S0_Pos 0UL
#define VIDEOSS_VIDEOIO_DISENG1_TCON1_SMX11SIGS_SMX11SIGS_S0_Msk 0x7UL
#define VIDEOSS_VIDEOIO_DISENG1_TCON1_SMX11SIGS_SMX11SIGS_S1_Pos 3UL
#define VIDEOSS_VIDEOIO_DISENG1_TCON1_SMX11SIGS_SMX11SIGS_S1_Msk 0x38UL
#define VIDEOSS_VIDEOIO_DISENG1_TCON1_SMX11SIGS_SMX11SIGS_S2_Pos 6UL
#define VIDEOSS_VIDEOIO_DISENG1_TCON1_SMX11SIGS_SMX11SIGS_S2_Msk 0x1C0UL
#define VIDEOSS_VIDEOIO_DISENG1_TCON1_SMX11SIGS_SMX11SIGS_S3_Pos 9UL
#define VIDEOSS_VIDEOIO_DISENG1_TCON1_SMX11SIGS_SMX11SIGS_S3_Msk 0xE00UL
#define VIDEOSS_VIDEOIO_DISENG1_TCON1_SMX11SIGS_SMX11SIGS_S4_Pos 12UL
#define VIDEOSS_VIDEOIO_DISENG1_TCON1_SMX11SIGS_SMX11SIGS_S4_Msk 0x7000UL
/* VIDEOSS_VIDEOIO_DISENG1_TCON1.SMX11FCTTABLE */
#define VIDEOSS_VIDEOIO_DISENG1_TCON1_SMX11FCTTABLE_SMXFCT11_Pos 0UL
#define VIDEOSS_VIDEOIO_DISENG1_TCON1_SMX11FCTTABLE_SMXFCT11_Msk 0xFFFFFFFFUL


/* VIDEOSS_FPDLINK0.CTL */
#define VIDEOSS_FPDLINK0_CTL_PD_TX_Pos          0UL
#define VIDEOSS_FPDLINK0_CTL_PD_TX_Msk          0x1UL
#define VIDEOSS_FPDLINK0_CTL_ENABLED_Pos        31UL
#define VIDEOSS_FPDLINK0_CTL_ENABLED_Msk        0x80000000UL
/* VIDEOSS_FPDLINK0.CMD */
#define VIDEOSS_FPDLINK0_CMD_LVDS_TX_EN_Pos     0UL
#define VIDEOSS_FPDLINK0_CMD_LVDS_TX_EN_Msk     0x1UL
/* VIDEOSS_FPDLINK0.CLK_GEN_CMD */
#define VIDEOSS_FPDLINK0_CLK_GEN_CMD_MODE8_Pos  0UL
#define VIDEOSS_FPDLINK0_CLK_GEN_CMD_MODE8_Msk  0x1UL
/* VIDEOSS_FPDLINK0.CLK_GEN_CTL */
#define VIDEOSS_FPDLINK0_CLK_GEN_CTL_FRANGE_Pos 0UL
#define VIDEOSS_FPDLINK0_CLK_GEN_CTL_FRANGE_Msk 0x3UL
#define VIDEOSS_FPDLINK0_CLK_GEN_CTL_LFCTRL_Pos 4UL
#define VIDEOSS_FPDLINK0_CLK_GEN_CTL_LFCTRL_Msk 0x30UL
#define VIDEOSS_FPDLINK0_CLK_GEN_CTL_CA_Pos     8UL
#define VIDEOSS_FPDLINK0_CLK_GEN_CTL_CA_Msk     0x700UL
#define VIDEOSS_FPDLINK0_CLK_GEN_CTL_CCM_Pos    12UL
#define VIDEOSS_FPDLINK0_CLK_GEN_CTL_CCM_Msk    0x7000UL
#define VIDEOSS_FPDLINK0_CLK_GEN_CTL_CN_Pos     16UL
#define VIDEOSS_FPDLINK0_CLK_GEN_CTL_CN_Msk     0x30000UL
#define VIDEOSS_FPDLINK0_CLK_GEN_CTL_LOCK_SEL_Pos 20UL
#define VIDEOSS_FPDLINK0_CLK_GEN_CTL_LOCK_SEL_Msk 0x100000UL
#define VIDEOSS_FPDLINK0_CLK_GEN_CTL_MSB_FIRST_Pos 24UL
#define VIDEOSS_FPDLINK0_CLK_GEN_CTL_MSB_FIRST_Msk 0x1000000UL
/* VIDEOSS_FPDLINK0.CLK_GEN_STATUS */
#define VIDEOSS_FPDLINK0_CLK_GEN_STATUS_PLL_LOCK_Pos 0UL
#define VIDEOSS_FPDLINK0_CLK_GEN_STATUS_PLL_LOCK_Msk 0x1UL


/* VIDEOSS_FPDLINK1.CTL */
#define VIDEOSS_FPDLINK1_CTL_PD_TX_Pos          0UL
#define VIDEOSS_FPDLINK1_CTL_PD_TX_Msk          0x1UL
#define VIDEOSS_FPDLINK1_CTL_ENABLED_Pos        31UL
#define VIDEOSS_FPDLINK1_CTL_ENABLED_Msk        0x80000000UL
/* VIDEOSS_FPDLINK1.CMD */
#define VIDEOSS_FPDLINK1_CMD_LVDS_TX_EN_Pos     0UL
#define VIDEOSS_FPDLINK1_CMD_LVDS_TX_EN_Msk     0x1UL
/* VIDEOSS_FPDLINK1.CLK_GEN_CMD */
#define VIDEOSS_FPDLINK1_CLK_GEN_CMD_MODE8_Pos  0UL
#define VIDEOSS_FPDLINK1_CLK_GEN_CMD_MODE8_Msk  0x1UL
/* VIDEOSS_FPDLINK1.CLK_GEN_CTL */
#define VIDEOSS_FPDLINK1_CLK_GEN_CTL_FRANGE_Pos 0UL
#define VIDEOSS_FPDLINK1_CLK_GEN_CTL_FRANGE_Msk 0x3UL
#define VIDEOSS_FPDLINK1_CLK_GEN_CTL_LFCTRL_Pos 4UL
#define VIDEOSS_FPDLINK1_CLK_GEN_CTL_LFCTRL_Msk 0x30UL
#define VIDEOSS_FPDLINK1_CLK_GEN_CTL_CA_Pos     8UL
#define VIDEOSS_FPDLINK1_CLK_GEN_CTL_CA_Msk     0x700UL
#define VIDEOSS_FPDLINK1_CLK_GEN_CTL_CCM_Pos    12UL
#define VIDEOSS_FPDLINK1_CLK_GEN_CTL_CCM_Msk    0x7000UL
#define VIDEOSS_FPDLINK1_CLK_GEN_CTL_CN_Pos     16UL
#define VIDEOSS_FPDLINK1_CLK_GEN_CTL_CN_Msk     0x30000UL
#define VIDEOSS_FPDLINK1_CLK_GEN_CTL_LOCK_SEL_Pos 20UL
#define VIDEOSS_FPDLINK1_CLK_GEN_CTL_LOCK_SEL_Msk 0x100000UL
#define VIDEOSS_FPDLINK1_CLK_GEN_CTL_MSB_FIRST_Pos 24UL
#define VIDEOSS_FPDLINK1_CLK_GEN_CTL_MSB_FIRST_Msk 0x1000000UL
/* VIDEOSS_FPDLINK1.CLK_GEN_STATUS */
#define VIDEOSS_FPDLINK1_CLK_GEN_STATUS_PLL_LOCK_Pos 0UL
#define VIDEOSS_FPDLINK1_CLK_GEN_STATUS_PLL_LOCK_Msk 0x1UL


/* VIDEOSS_MIPICSI_MIPICSI_STRUCT_MIPICSI_WRAP.CTL */
#define VIDEOSS_MIPICSI_MIPICSI_STRUCT_MIPICSI_WRAP_CTL_ENABLED_Pos 31UL
#define VIDEOSS_MIPICSI_MIPICSI_STRUCT_MIPICSI_WRAP_CTL_ENABLED_Msk 0x80000000UL
/* VIDEOSS_MIPICSI_MIPICSI_STRUCT_MIPICSI_WRAP.DPHY_CTL */
#define VIDEOSS_MIPICSI_MIPICSI_STRUCT_MIPICSI_WRAP_DPHY_CTL_PD_DPHY_Pos 0UL
#define VIDEOSS_MIPICSI_MIPICSI_STRUCT_MIPICSI_WRAP_DPHY_CTL_PD_DPHY_Msk 0x1UL
#define VIDEOSS_MIPICSI_MIPICSI_STRUCT_MIPICSI_WRAP_DPHY_CTL_AUTO_PD_EN_Pos 8UL
#define VIDEOSS_MIPICSI_MIPICSI_STRUCT_MIPICSI_WRAP_DPHY_CTL_AUTO_PD_EN_Msk 0x100UL
#define VIDEOSS_MIPICSI_MIPICSI_STRUCT_MIPICSI_WRAP_DPHY_CTL_CONT_CLK_MODE_Pos 16UL
#define VIDEOSS_MIPICSI_MIPICSI_STRUCT_MIPICSI_WRAP_DPHY_CTL_CONT_CLK_MODE_Msk 0x10000UL
#define VIDEOSS_MIPICSI_MIPICSI_STRUCT_MIPICSI_WRAP_DPHY_CTL_HSEL_Pos 17UL
#define VIDEOSS_MIPICSI_MIPICSI_STRUCT_MIPICSI_WRAP_DPHY_CTL_HSEL_Msk 0x20000UL
#define VIDEOSS_MIPICSI_MIPICSI_STRUCT_MIPICSI_WRAP_DPHY_CTL_ENP_DESER_Pos 18UL
#define VIDEOSS_MIPICSI_MIPICSI_STRUCT_MIPICSI_WRAP_DPHY_CTL_ENP_DESER_Msk 0x40000UL
/* VIDEOSS_MIPICSI_MIPICSI_STRUCT_MIPICSI_WRAP.CLOCK_CTL */
#define VIDEOSS_MIPICSI_MIPICSI_STRUCT_MIPICSI_WRAP_CLOCK_CTL_ESC_SEL_Pos 0UL
#define VIDEOSS_MIPICSI_MIPICSI_STRUCT_MIPICSI_WRAP_CLOCK_CTL_ESC_SEL_Msk 0x1UL
#define VIDEOSS_MIPICSI_MIPICSI_STRUCT_MIPICSI_WRAP_CLOCK_CTL_ESC_DIV_Pos 8UL
#define VIDEOSS_MIPICSI_MIPICSI_STRUCT_MIPICSI_WRAP_CLOCK_CTL_ESC_DIV_Msk 0x300UL
/* VIDEOSS_MIPICSI_MIPICSI_STRUCT_MIPICSI_WRAP.CAL_CTL */
#define VIDEOSS_MIPICSI_MIPICSI_STRUCT_MIPICSI_WRAP_CAL_CTL_RX_RCAL_Pos 0UL
#define VIDEOSS_MIPICSI_MIPICSI_STRUCT_MIPICSI_WRAP_CAL_CTL_RX_RCAL_Msk 0x3UL
#define VIDEOSS_MIPICSI_MIPICSI_STRUCT_MIPICSI_WRAP_CAL_CTL_NOCAL_Pos 8UL
#define VIDEOSS_MIPICSI_MIPICSI_STRUCT_MIPICSI_WRAP_CAL_CTL_NOCAL_Msk 0x100UL
/* VIDEOSS_MIPICSI_MIPICSI_STRUCT_MIPICSI_WRAP.CAL_STAT */
#define VIDEOSS_MIPICSI_MIPICSI_STRUCT_MIPICSI_WRAP_CAL_STAT_CALOUT_Pos 0UL
#define VIDEOSS_MIPICSI_MIPICSI_STRUCT_MIPICSI_WRAP_CAL_STAT_CALOUT_Msk 0x3UL
/* VIDEOSS_MIPICSI_MIPICSI_STRUCT_MIPICSI_WRAP.TMG_DATA_CTL */
#define VIDEOSS_MIPICSI_MIPICSI_STRUCT_MIPICSI_WRAP_TMG_DATA_CTL_S_PRG_RXHS_SETTLE_Pos 0UL
#define VIDEOSS_MIPICSI_MIPICSI_STRUCT_MIPICSI_WRAP_TMG_DATA_CTL_S_PRG_RXHS_SETTLE_Msk 0x3FUL
#define VIDEOSS_MIPICSI_MIPICSI_STRUCT_MIPICSI_WRAP_TMG_DATA_CTL_S_PRG_HS_PREPARE_Pos 8UL
#define VIDEOSS_MIPICSI_MIPICSI_STRUCT_MIPICSI_WRAP_TMG_DATA_CTL_S_PRG_HS_PREPARE_Msk 0x300UL
#define VIDEOSS_MIPICSI_MIPICSI_STRUCT_MIPICSI_WRAP_TMG_DATA_CTL_S_PRG_HS_ZERO_Pos 16UL
#define VIDEOSS_MIPICSI_MIPICSI_STRUCT_MIPICSI_WRAP_TMG_DATA_CTL_S_PRG_HS_ZERO_Msk 0x1F0000UL
#define VIDEOSS_MIPICSI_MIPICSI_STRUCT_MIPICSI_WRAP_TMG_DATA_CTL_S_PRG_HS_TRAIL_Pos 24UL
#define VIDEOSS_MIPICSI_MIPICSI_STRUCT_MIPICSI_WRAP_TMG_DATA_CTL_S_PRG_HS_TRAIL_Msk 0x1F000000UL
/* VIDEOSS_MIPICSI_MIPICSI_STRUCT_MIPICSI_WRAP.TMG_CLOCK_CTL */
#define VIDEOSS_MIPICSI_MIPICSI_STRUCT_MIPICSI_WRAP_TMG_CLOCK_CTL_SC_PRG_RXHS_SETTLE_Pos 0UL
#define VIDEOSS_MIPICSI_MIPICSI_STRUCT_MIPICSI_WRAP_TMG_CLOCK_CTL_SC_PRG_RXHS_SETTLE_Msk 0x3FUL
#define VIDEOSS_MIPICSI_MIPICSI_STRUCT_MIPICSI_WRAP_TMG_CLOCK_CTL_SC_PRG_HS_PREPARE_Pos 8UL
#define VIDEOSS_MIPICSI_MIPICSI_STRUCT_MIPICSI_WRAP_TMG_CLOCK_CTL_SC_PRG_HS_PREPARE_Msk 0x100UL
#define VIDEOSS_MIPICSI_MIPICSI_STRUCT_MIPICSI_WRAP_TMG_CLOCK_CTL_SC_PRG_HS_ZERO_Pos 16UL
#define VIDEOSS_MIPICSI_MIPICSI_STRUCT_MIPICSI_WRAP_TMG_CLOCK_CTL_SC_PRG_HS_ZERO_Msk 0x3F0000UL


/* VIDEOSS_MIPICSI_MIPICSI_STRUCT_MIPICSI_CORE.CFG_NUM_LANES */
#define VIDEOSS_MIPICSI_MIPICSI_STRUCT_MIPICSI_CORE_CFG_NUM_LANES_CFG_NUM_LANES_Pos 0UL
#define VIDEOSS_MIPICSI_MIPICSI_STRUCT_MIPICSI_CORE_CFG_NUM_LANES_CFG_NUM_LANES_Msk 0xFUL
/* VIDEOSS_MIPICSI_MIPICSI_STRUCT_MIPICSI_CORE.CFG_CLK_LANE_EN */
#define VIDEOSS_MIPICSI_MIPICSI_STRUCT_MIPICSI_CORE_CFG_CLK_LANE_EN_CFG_CLK_LANE_EN_Pos 0UL
#define VIDEOSS_MIPICSI_MIPICSI_STRUCT_MIPICSI_CORE_CFG_CLK_LANE_EN_CFG_CLK_LANE_EN_Msk 0x1UL
/* VIDEOSS_MIPICSI_MIPICSI_STRUCT_MIPICSI_CORE.CFG_DATA_LANE_EN */
#define VIDEOSS_MIPICSI_MIPICSI_STRUCT_MIPICSI_CORE_CFG_DATA_LANE_EN_CFG_DATA_LANE_EN_Pos 0UL
#define VIDEOSS_MIPICSI_MIPICSI_STRUCT_MIPICSI_CORE_CFG_DATA_LANE_EN_CFG_DATA_LANE_EN_Msk 0xFUL
/* VIDEOSS_MIPICSI_MIPICSI_STRUCT_MIPICSI_CORE.CFG_FLUSH_COUNT */
#define VIDEOSS_MIPICSI_MIPICSI_STRUCT_MIPICSI_CORE_CFG_FLUSH_COUNT_CFG_FLUSH_COUNT_Pos 0UL
#define VIDEOSS_MIPICSI_MIPICSI_STRUCT_MIPICSI_CORE_CFG_FLUSH_COUNT_CFG_FLUSH_COUNT_Msk 0xFUL
/* VIDEOSS_MIPICSI_MIPICSI_STRUCT_MIPICSI_CORE.CFG_BIT_ERR */
#define VIDEOSS_MIPICSI_MIPICSI_STRUCT_MIPICSI_CORE_CFG_BIT_ERR_BIT_ERR_Pos 0UL
#define VIDEOSS_MIPICSI_MIPICSI_STRUCT_MIPICSI_CORE_CFG_BIT_ERR_BIT_ERR_Msk 0x3FFUL
/* VIDEOSS_MIPICSI_MIPICSI_STRUCT_MIPICSI_CORE.IRQ_STATUS */
#define VIDEOSS_MIPICSI_MIPICSI_STRUCT_MIPICSI_CORE_IRQ_STATUS_IRQ_STATUS_Pos 0UL
#define VIDEOSS_MIPICSI_MIPICSI_STRUCT_MIPICSI_CORE_IRQ_STATUS_IRQ_STATUS_Msk 0xFFUL
/* VIDEOSS_MIPICSI_MIPICSI_STRUCT_MIPICSI_CORE.IRQ_ENABLE */
#define VIDEOSS_MIPICSI_MIPICSI_STRUCT_MIPICSI_CORE_IRQ_ENABLE_IRQ_ENABLE_Pos 0UL
#define VIDEOSS_MIPICSI_MIPICSI_STRUCT_MIPICSI_CORE_IRQ_ENABLE_IRQ_ENABLE_Msk 0xFFUL
/* VIDEOSS_MIPICSI_MIPICSI_STRUCT_MIPICSI_CORE.IRQ_CLR */
#define VIDEOSS_MIPICSI_MIPICSI_STRUCT_MIPICSI_CORE_IRQ_CLR_IRQ_CLR_Pos 0UL
#define VIDEOSS_MIPICSI_MIPICSI_STRUCT_MIPICSI_CORE_IRQ_CLR_IRQ_CLR_Msk 0xFFUL
/* VIDEOSS_MIPICSI_MIPICSI_STRUCT_MIPICSI_CORE.ULPS_CLK_STATUS */
#define VIDEOSS_MIPICSI_MIPICSI_STRUCT_MIPICSI_CORE_ULPS_CLK_STATUS_ULPS_CLK_STATUS_Pos 0UL
#define VIDEOSS_MIPICSI_MIPICSI_STRUCT_MIPICSI_CORE_ULPS_CLK_STATUS_ULPS_CLK_STATUS_Msk 0x1UL
/* VIDEOSS_MIPICSI_MIPICSI_STRUCT_MIPICSI_CORE.ULPS_STATUS */
#define VIDEOSS_MIPICSI_MIPICSI_STRUCT_MIPICSI_CORE_ULPS_STATUS_ULPS_STATUS_Pos 0UL
#define VIDEOSS_MIPICSI_MIPICSI_STRUCT_MIPICSI_CORE_ULPS_STATUS_ULPS_STATUS_Msk 0xFUL
/* VIDEOSS_MIPICSI_MIPICSI_STRUCT_MIPICSI_CORE.ULPS_CLK_MARK_STATUS */
#define VIDEOSS_MIPICSI_MIPICSI_STRUCT_MIPICSI_CORE_ULPS_CLK_MARK_STATUS_ULPS_CLK_MARK_STATUS_Pos 0UL
#define VIDEOSS_MIPICSI_MIPICSI_STRUCT_MIPICSI_CORE_ULPS_CLK_MARK_STATUS_ULPS_CLK_MARK_STATUS_Msk 0x1UL
/* VIDEOSS_MIPICSI_MIPICSI_STRUCT_MIPICSI_CORE.ULPS_MARK_STATUS */
#define VIDEOSS_MIPICSI_MIPICSI_STRUCT_MIPICSI_CORE_ULPS_MARK_STATUS_ULPS_MARK_STATUS_Pos 0UL
#define VIDEOSS_MIPICSI_MIPICSI_STRUCT_MIPICSI_CORE_ULPS_MARK_STATUS_ULPS_MARK_STATUS_Msk 0xFUL
/* VIDEOSS_MIPICSI_MIPICSI_STRUCT_MIPICSI_CORE.CFG_DISABLE_PAYLOAD_0 */
#define VIDEOSS_MIPICSI_MIPICSI_STRUCT_MIPICSI_CORE_CFG_DISABLE_PAYLOAD_0_CFG_DISABLE_PAYLOAD_0_Pos 0UL
#define VIDEOSS_MIPICSI_MIPICSI_STRUCT_MIPICSI_CORE_CFG_DISABLE_PAYLOAD_0_CFG_DISABLE_PAYLOAD_0_Msk 0xFFFFFFFFUL
/* VIDEOSS_MIPICSI_MIPICSI_STRUCT_MIPICSI_CORE.CFG_DISABLE_PAYLOAD_1 */
#define VIDEOSS_MIPICSI_MIPICSI_STRUCT_MIPICSI_CORE_CFG_DISABLE_PAYLOAD_1_CFG_DISABLE_PAYLOAD_1_Pos 0UL
#define VIDEOSS_MIPICSI_MIPICSI_STRUCT_MIPICSI_CORE_CFG_DISABLE_PAYLOAD_1_CFG_DISABLE_PAYLOAD_1_Msk 0x1FFFFUL


/* VIDEOSS_INFRA_VRPU_VRPU_STRUCT.ADDR0 */
#define VIDEOSS_INFRA_VRPU_VRPU_STRUCT_ADDR0_SUBREGION_DISABLE_Pos 0UL
#define VIDEOSS_INFRA_VRPU_VRPU_STRUCT_ADDR0_SUBREGION_DISABLE_Msk 0xFFUL
#define VIDEOSS_INFRA_VRPU_VRPU_STRUCT_ADDR0_ADDR24_Pos 8UL
#define VIDEOSS_INFRA_VRPU_VRPU_STRUCT_ADDR0_ADDR24_Msk 0xFFFFFF00UL
/* VIDEOSS_INFRA_VRPU_VRPU_STRUCT.ATT0 */
#define VIDEOSS_INFRA_VRPU_VRPU_STRUCT_ATT0_UR_Pos 0UL
#define VIDEOSS_INFRA_VRPU_VRPU_STRUCT_ATT0_UR_Msk 0x1UL
#define VIDEOSS_INFRA_VRPU_VRPU_STRUCT_ATT0_UW_Pos 1UL
#define VIDEOSS_INFRA_VRPU_VRPU_STRUCT_ATT0_UW_Msk 0x2UL
#define VIDEOSS_INFRA_VRPU_VRPU_STRUCT_ATT0_UX_Pos 2UL
#define VIDEOSS_INFRA_VRPU_VRPU_STRUCT_ATT0_UX_Msk 0x4UL
#define VIDEOSS_INFRA_VRPU_VRPU_STRUCT_ATT0_PR_Pos 3UL
#define VIDEOSS_INFRA_VRPU_VRPU_STRUCT_ATT0_PR_Msk 0x8UL
#define VIDEOSS_INFRA_VRPU_VRPU_STRUCT_ATT0_PW_Pos 4UL
#define VIDEOSS_INFRA_VRPU_VRPU_STRUCT_ATT0_PW_Msk 0x10UL
#define VIDEOSS_INFRA_VRPU_VRPU_STRUCT_ATT0_PX_Pos 5UL
#define VIDEOSS_INFRA_VRPU_VRPU_STRUCT_ATT0_PX_Msk 0x20UL
#define VIDEOSS_INFRA_VRPU_VRPU_STRUCT_ATT0_NS_Pos 6UL
#define VIDEOSS_INFRA_VRPU_VRPU_STRUCT_ATT0_NS_Msk 0x40UL
#define VIDEOSS_INFRA_VRPU_VRPU_STRUCT_ATT0_PC_MASK_0_Pos 8UL
#define VIDEOSS_INFRA_VRPU_VRPU_STRUCT_ATT0_PC_MASK_0_Msk 0x100UL
#define VIDEOSS_INFRA_VRPU_VRPU_STRUCT_ATT0_PC_MASK_15_TO_1_Pos 9UL
#define VIDEOSS_INFRA_VRPU_VRPU_STRUCT_ATT0_PC_MASK_15_TO_1_Msk 0xFFFE00UL
#define VIDEOSS_INFRA_VRPU_VRPU_STRUCT_ATT0_REGION_SIZE_Pos 24UL
#define VIDEOSS_INFRA_VRPU_VRPU_STRUCT_ATT0_REGION_SIZE_Msk 0x1F000000UL
#define VIDEOSS_INFRA_VRPU_VRPU_STRUCT_ATT0_PC_MATCH_Pos 30UL
#define VIDEOSS_INFRA_VRPU_VRPU_STRUCT_ATT0_PC_MATCH_Msk 0x40000000UL
#define VIDEOSS_INFRA_VRPU_VRPU_STRUCT_ATT0_ENABLED_Pos 31UL
#define VIDEOSS_INFRA_VRPU_VRPU_STRUCT_ATT0_ENABLED_Msk 0x80000000UL
/* VIDEOSS_INFRA_VRPU_VRPU_STRUCT.ADDR1 */
#define VIDEOSS_INFRA_VRPU_VRPU_STRUCT_ADDR1_SUBREGION_DISABLE_Pos 0UL
#define VIDEOSS_INFRA_VRPU_VRPU_STRUCT_ADDR1_SUBREGION_DISABLE_Msk 0xFFUL
#define VIDEOSS_INFRA_VRPU_VRPU_STRUCT_ADDR1_ADDR24_Pos 8UL
#define VIDEOSS_INFRA_VRPU_VRPU_STRUCT_ADDR1_ADDR24_Msk 0xFFFFFF00UL
/* VIDEOSS_INFRA_VRPU_VRPU_STRUCT.ATT1 */
#define VIDEOSS_INFRA_VRPU_VRPU_STRUCT_ATT1_UR_Pos 0UL
#define VIDEOSS_INFRA_VRPU_VRPU_STRUCT_ATT1_UR_Msk 0x1UL
#define VIDEOSS_INFRA_VRPU_VRPU_STRUCT_ATT1_UW_Pos 1UL
#define VIDEOSS_INFRA_VRPU_VRPU_STRUCT_ATT1_UW_Msk 0x2UL
#define VIDEOSS_INFRA_VRPU_VRPU_STRUCT_ATT1_UX_Pos 2UL
#define VIDEOSS_INFRA_VRPU_VRPU_STRUCT_ATT1_UX_Msk 0x4UL
#define VIDEOSS_INFRA_VRPU_VRPU_STRUCT_ATT1_PR_Pos 3UL
#define VIDEOSS_INFRA_VRPU_VRPU_STRUCT_ATT1_PR_Msk 0x8UL
#define VIDEOSS_INFRA_VRPU_VRPU_STRUCT_ATT1_PW_Pos 4UL
#define VIDEOSS_INFRA_VRPU_VRPU_STRUCT_ATT1_PW_Msk 0x10UL
#define VIDEOSS_INFRA_VRPU_VRPU_STRUCT_ATT1_PX_Pos 5UL
#define VIDEOSS_INFRA_VRPU_VRPU_STRUCT_ATT1_PX_Msk 0x20UL
#define VIDEOSS_INFRA_VRPU_VRPU_STRUCT_ATT1_NS_Pos 6UL
#define VIDEOSS_INFRA_VRPU_VRPU_STRUCT_ATT1_NS_Msk 0x40UL
#define VIDEOSS_INFRA_VRPU_VRPU_STRUCT_ATT1_PC_MASK_0_Pos 8UL
#define VIDEOSS_INFRA_VRPU_VRPU_STRUCT_ATT1_PC_MASK_0_Msk 0x100UL
#define VIDEOSS_INFRA_VRPU_VRPU_STRUCT_ATT1_PC_MASK_15_TO_1_Pos 9UL
#define VIDEOSS_INFRA_VRPU_VRPU_STRUCT_ATT1_PC_MASK_15_TO_1_Msk 0xFFFE00UL
#define VIDEOSS_INFRA_VRPU_VRPU_STRUCT_ATT1_REGION_SIZE_Pos 24UL
#define VIDEOSS_INFRA_VRPU_VRPU_STRUCT_ATT1_REGION_SIZE_Msk 0x1F000000UL
#define VIDEOSS_INFRA_VRPU_VRPU_STRUCT_ATT1_PC_MATCH_Pos 30UL
#define VIDEOSS_INFRA_VRPU_VRPU_STRUCT_ATT1_PC_MATCH_Msk 0x40000000UL
#define VIDEOSS_INFRA_VRPU_VRPU_STRUCT_ATT1_ENABLED_Pos 31UL
#define VIDEOSS_INFRA_VRPU_VRPU_STRUCT_ATT1_ENABLED_Msk 0x80000000UL


/* VIDEOSS_INFRA_VRPU.RD0_CTL */
#define VIDEOSS_INFRA_VRPU_RD0_CTL_PRIO_Pos     8UL
#define VIDEOSS_INFRA_VRPU_RD0_CTL_PRIO_Msk     0x300UL
/* VIDEOSS_INFRA_VRPU.RD1_CTL */
#define VIDEOSS_INFRA_VRPU_RD1_CTL_P_Pos        0UL
#define VIDEOSS_INFRA_VRPU_RD1_CTL_P_Msk        0x1UL
#define VIDEOSS_INFRA_VRPU_RD1_CTL_NS_Pos       1UL
#define VIDEOSS_INFRA_VRPU_RD1_CTL_NS_Msk       0x2UL
#define VIDEOSS_INFRA_VRPU_RD1_CTL_PRIO_Pos     8UL
#define VIDEOSS_INFRA_VRPU_RD1_CTL_PRIO_Msk     0x300UL
#define VIDEOSS_INFRA_VRPU_RD1_CTL_PC_MASK_0_Pos 16UL
#define VIDEOSS_INFRA_VRPU_RD1_CTL_PC_MASK_0_Msk 0x10000UL
#define VIDEOSS_INFRA_VRPU_RD1_CTL_PC_MASK_15_TO_1_Pos 17UL
#define VIDEOSS_INFRA_VRPU_RD1_CTL_PC_MASK_15_TO_1_Msk 0xFFFE0000UL
/* VIDEOSS_INFRA_VRPU.RD2_CTL */
#define VIDEOSS_INFRA_VRPU_RD2_CTL_P_Pos        0UL
#define VIDEOSS_INFRA_VRPU_RD2_CTL_P_Msk        0x1UL
#define VIDEOSS_INFRA_VRPU_RD2_CTL_NS_Pos       1UL
#define VIDEOSS_INFRA_VRPU_RD2_CTL_NS_Msk       0x2UL
#define VIDEOSS_INFRA_VRPU_RD2_CTL_PRIO_Pos     8UL
#define VIDEOSS_INFRA_VRPU_RD2_CTL_PRIO_Msk     0x300UL
#define VIDEOSS_INFRA_VRPU_RD2_CTL_PC_MASK_0_Pos 16UL
#define VIDEOSS_INFRA_VRPU_RD2_CTL_PC_MASK_0_Msk 0x10000UL
#define VIDEOSS_INFRA_VRPU_RD2_CTL_PC_MASK_15_TO_1_Pos 17UL
#define VIDEOSS_INFRA_VRPU_RD2_CTL_PC_MASK_15_TO_1_Msk 0xFFFE0000UL
/* VIDEOSS_INFRA_VRPU.RD3_CTL */
#define VIDEOSS_INFRA_VRPU_RD3_CTL_P_Pos        0UL
#define VIDEOSS_INFRA_VRPU_RD3_CTL_P_Msk        0x1UL
#define VIDEOSS_INFRA_VRPU_RD3_CTL_NS_Pos       1UL
#define VIDEOSS_INFRA_VRPU_RD3_CTL_NS_Msk       0x2UL
#define VIDEOSS_INFRA_VRPU_RD3_CTL_PRIO_Pos     8UL
#define VIDEOSS_INFRA_VRPU_RD3_CTL_PRIO_Msk     0x300UL
#define VIDEOSS_INFRA_VRPU_RD3_CTL_PC_MASK_0_Pos 16UL
#define VIDEOSS_INFRA_VRPU_RD3_CTL_PC_MASK_0_Msk 0x10000UL
#define VIDEOSS_INFRA_VRPU_RD3_CTL_PC_MASK_15_TO_1_Pos 17UL
#define VIDEOSS_INFRA_VRPU_RD3_CTL_PC_MASK_15_TO_1_Msk 0xFFFE0000UL
/* VIDEOSS_INFRA_VRPU.RD4_CTL */
#define VIDEOSS_INFRA_VRPU_RD4_CTL_P_Pos        0UL
#define VIDEOSS_INFRA_VRPU_RD4_CTL_P_Msk        0x1UL
#define VIDEOSS_INFRA_VRPU_RD4_CTL_NS_Pos       1UL
#define VIDEOSS_INFRA_VRPU_RD4_CTL_NS_Msk       0x2UL
#define VIDEOSS_INFRA_VRPU_RD4_CTL_PRIO_Pos     8UL
#define VIDEOSS_INFRA_VRPU_RD4_CTL_PRIO_Msk     0x300UL
#define VIDEOSS_INFRA_VRPU_RD4_CTL_PC_MASK_0_Pos 16UL
#define VIDEOSS_INFRA_VRPU_RD4_CTL_PC_MASK_0_Msk 0x10000UL
#define VIDEOSS_INFRA_VRPU_RD4_CTL_PC_MASK_15_TO_1_Pos 17UL
#define VIDEOSS_INFRA_VRPU_RD4_CTL_PC_MASK_15_TO_1_Msk 0xFFFE0000UL
/* VIDEOSS_INFRA_VRPU.RD5_CTL */
#define VIDEOSS_INFRA_VRPU_RD5_CTL_P_Pos        0UL
#define VIDEOSS_INFRA_VRPU_RD5_CTL_P_Msk        0x1UL
#define VIDEOSS_INFRA_VRPU_RD5_CTL_NS_Pos       1UL
#define VIDEOSS_INFRA_VRPU_RD5_CTL_NS_Msk       0x2UL
#define VIDEOSS_INFRA_VRPU_RD5_CTL_PRIO_Pos     8UL
#define VIDEOSS_INFRA_VRPU_RD5_CTL_PRIO_Msk     0x300UL
#define VIDEOSS_INFRA_VRPU_RD5_CTL_PC_MASK_0_Pos 16UL
#define VIDEOSS_INFRA_VRPU_RD5_CTL_PC_MASK_0_Msk 0x10000UL
#define VIDEOSS_INFRA_VRPU_RD5_CTL_PC_MASK_15_TO_1_Pos 17UL
#define VIDEOSS_INFRA_VRPU_RD5_CTL_PC_MASK_15_TO_1_Msk 0xFFFE0000UL
/* VIDEOSS_INFRA_VRPU.RD6_CTL */
#define VIDEOSS_INFRA_VRPU_RD6_CTL_P_Pos        0UL
#define VIDEOSS_INFRA_VRPU_RD6_CTL_P_Msk        0x1UL
#define VIDEOSS_INFRA_VRPU_RD6_CTL_NS_Pos       1UL
#define VIDEOSS_INFRA_VRPU_RD6_CTL_NS_Msk       0x2UL
#define VIDEOSS_INFRA_VRPU_RD6_CTL_PRIO_Pos     8UL
#define VIDEOSS_INFRA_VRPU_RD6_CTL_PRIO_Msk     0x300UL
#define VIDEOSS_INFRA_VRPU_RD6_CTL_PC_MASK_0_Pos 16UL
#define VIDEOSS_INFRA_VRPU_RD6_CTL_PC_MASK_0_Msk 0x10000UL
#define VIDEOSS_INFRA_VRPU_RD6_CTL_PC_MASK_15_TO_1_Pos 17UL
#define VIDEOSS_INFRA_VRPU_RD6_CTL_PC_MASK_15_TO_1_Msk 0xFFFE0000UL
/* VIDEOSS_INFRA_VRPU.RD7_CTL */
#define VIDEOSS_INFRA_VRPU_RD7_CTL_P_Pos        0UL
#define VIDEOSS_INFRA_VRPU_RD7_CTL_P_Msk        0x1UL
#define VIDEOSS_INFRA_VRPU_RD7_CTL_NS_Pos       1UL
#define VIDEOSS_INFRA_VRPU_RD7_CTL_NS_Msk       0x2UL
#define VIDEOSS_INFRA_VRPU_RD7_CTL_PRIO_Pos     8UL
#define VIDEOSS_INFRA_VRPU_RD7_CTL_PRIO_Msk     0x300UL
#define VIDEOSS_INFRA_VRPU_RD7_CTL_PC_MASK_0_Pos 16UL
#define VIDEOSS_INFRA_VRPU_RD7_CTL_PC_MASK_0_Msk 0x10000UL
#define VIDEOSS_INFRA_VRPU_RD7_CTL_PC_MASK_15_TO_1_Pos 17UL
#define VIDEOSS_INFRA_VRPU_RD7_CTL_PC_MASK_15_TO_1_Msk 0xFFFE0000UL
/* VIDEOSS_INFRA_VRPU.RD8_CTL */
#define VIDEOSS_INFRA_VRPU_RD8_CTL_P_Pos        0UL
#define VIDEOSS_INFRA_VRPU_RD8_CTL_P_Msk        0x1UL
#define VIDEOSS_INFRA_VRPU_RD8_CTL_NS_Pos       1UL
#define VIDEOSS_INFRA_VRPU_RD8_CTL_NS_Msk       0x2UL
#define VIDEOSS_INFRA_VRPU_RD8_CTL_PRIO_Pos     8UL
#define VIDEOSS_INFRA_VRPU_RD8_CTL_PRIO_Msk     0x300UL
#define VIDEOSS_INFRA_VRPU_RD8_CTL_PC_MASK_0_Pos 16UL
#define VIDEOSS_INFRA_VRPU_RD8_CTL_PC_MASK_0_Msk 0x10000UL
#define VIDEOSS_INFRA_VRPU_RD8_CTL_PC_MASK_15_TO_1_Pos 17UL
#define VIDEOSS_INFRA_VRPU_RD8_CTL_PC_MASK_15_TO_1_Msk 0xFFFE0000UL
/* VIDEOSS_INFRA_VRPU.RD9_CTL */
#define VIDEOSS_INFRA_VRPU_RD9_CTL_P_Pos        0UL
#define VIDEOSS_INFRA_VRPU_RD9_CTL_P_Msk        0x1UL
#define VIDEOSS_INFRA_VRPU_RD9_CTL_NS_Pos       1UL
#define VIDEOSS_INFRA_VRPU_RD9_CTL_NS_Msk       0x2UL
#define VIDEOSS_INFRA_VRPU_RD9_CTL_PRIO_Pos     8UL
#define VIDEOSS_INFRA_VRPU_RD9_CTL_PRIO_Msk     0x300UL
#define VIDEOSS_INFRA_VRPU_RD9_CTL_PC_MASK_0_Pos 16UL
#define VIDEOSS_INFRA_VRPU_RD9_CTL_PC_MASK_0_Msk 0x10000UL
#define VIDEOSS_INFRA_VRPU_RD9_CTL_PC_MASK_15_TO_1_Pos 17UL
#define VIDEOSS_INFRA_VRPU_RD9_CTL_PC_MASK_15_TO_1_Msk 0xFFFE0000UL
/* VIDEOSS_INFRA_VRPU.RD10_CTL */
#define VIDEOSS_INFRA_VRPU_RD10_CTL_P_Pos       0UL
#define VIDEOSS_INFRA_VRPU_RD10_CTL_P_Msk       0x1UL
#define VIDEOSS_INFRA_VRPU_RD10_CTL_NS_Pos      1UL
#define VIDEOSS_INFRA_VRPU_RD10_CTL_NS_Msk      0x2UL
#define VIDEOSS_INFRA_VRPU_RD10_CTL_PRIO_Pos    8UL
#define VIDEOSS_INFRA_VRPU_RD10_CTL_PRIO_Msk    0x300UL
#define VIDEOSS_INFRA_VRPU_RD10_CTL_PC_MASK_0_Pos 16UL
#define VIDEOSS_INFRA_VRPU_RD10_CTL_PC_MASK_0_Msk 0x10000UL
#define VIDEOSS_INFRA_VRPU_RD10_CTL_PC_MASK_15_TO_1_Pos 17UL
#define VIDEOSS_INFRA_VRPU_RD10_CTL_PC_MASK_15_TO_1_Msk 0xFFFE0000UL
/* VIDEOSS_INFRA_VRPU.RD11_CTL */
#define VIDEOSS_INFRA_VRPU_RD11_CTL_P_Pos       0UL
#define VIDEOSS_INFRA_VRPU_RD11_CTL_P_Msk       0x1UL
#define VIDEOSS_INFRA_VRPU_RD11_CTL_NS_Pos      1UL
#define VIDEOSS_INFRA_VRPU_RD11_CTL_NS_Msk      0x2UL
#define VIDEOSS_INFRA_VRPU_RD11_CTL_PRIO_Pos    8UL
#define VIDEOSS_INFRA_VRPU_RD11_CTL_PRIO_Msk    0x300UL
#define VIDEOSS_INFRA_VRPU_RD11_CTL_PC_MASK_0_Pos 16UL
#define VIDEOSS_INFRA_VRPU_RD11_CTL_PC_MASK_0_Msk 0x10000UL
#define VIDEOSS_INFRA_VRPU_RD11_CTL_PC_MASK_15_TO_1_Pos 17UL
#define VIDEOSS_INFRA_VRPU_RD11_CTL_PC_MASK_15_TO_1_Msk 0xFFFE0000UL
/* VIDEOSS_INFRA_VRPU.RD12_CTL */
#define VIDEOSS_INFRA_VRPU_RD12_CTL_P_Pos       0UL
#define VIDEOSS_INFRA_VRPU_RD12_CTL_P_Msk       0x1UL
#define VIDEOSS_INFRA_VRPU_RD12_CTL_NS_Pos      1UL
#define VIDEOSS_INFRA_VRPU_RD12_CTL_NS_Msk      0x2UL
#define VIDEOSS_INFRA_VRPU_RD12_CTL_PRIO_Pos    8UL
#define VIDEOSS_INFRA_VRPU_RD12_CTL_PRIO_Msk    0x300UL
#define VIDEOSS_INFRA_VRPU_RD12_CTL_PC_MASK_0_Pos 16UL
#define VIDEOSS_INFRA_VRPU_RD12_CTL_PC_MASK_0_Msk 0x10000UL
#define VIDEOSS_INFRA_VRPU_RD12_CTL_PC_MASK_15_TO_1_Pos 17UL
#define VIDEOSS_INFRA_VRPU_RD12_CTL_PC_MASK_15_TO_1_Msk 0xFFFE0000UL
/* VIDEOSS_INFRA_VRPU.RD13_CTL */
#define VIDEOSS_INFRA_VRPU_RD13_CTL_P_Pos       0UL
#define VIDEOSS_INFRA_VRPU_RD13_CTL_P_Msk       0x1UL
#define VIDEOSS_INFRA_VRPU_RD13_CTL_NS_Pos      1UL
#define VIDEOSS_INFRA_VRPU_RD13_CTL_NS_Msk      0x2UL
#define VIDEOSS_INFRA_VRPU_RD13_CTL_PRIO_Pos    8UL
#define VIDEOSS_INFRA_VRPU_RD13_CTL_PRIO_Msk    0x300UL
#define VIDEOSS_INFRA_VRPU_RD13_CTL_PC_MASK_0_Pos 16UL
#define VIDEOSS_INFRA_VRPU_RD13_CTL_PC_MASK_0_Msk 0x10000UL
#define VIDEOSS_INFRA_VRPU_RD13_CTL_PC_MASK_15_TO_1_Pos 17UL
#define VIDEOSS_INFRA_VRPU_RD13_CTL_PC_MASK_15_TO_1_Msk 0xFFFE0000UL
/* VIDEOSS_INFRA_VRPU.RD14_CTL */
#define VIDEOSS_INFRA_VRPU_RD14_CTL_P_Pos       0UL
#define VIDEOSS_INFRA_VRPU_RD14_CTL_P_Msk       0x1UL
#define VIDEOSS_INFRA_VRPU_RD14_CTL_NS_Pos      1UL
#define VIDEOSS_INFRA_VRPU_RD14_CTL_NS_Msk      0x2UL
#define VIDEOSS_INFRA_VRPU_RD14_CTL_PRIO_Pos    8UL
#define VIDEOSS_INFRA_VRPU_RD14_CTL_PRIO_Msk    0x300UL
#define VIDEOSS_INFRA_VRPU_RD14_CTL_PC_MASK_0_Pos 16UL
#define VIDEOSS_INFRA_VRPU_RD14_CTL_PC_MASK_0_Msk 0x10000UL
#define VIDEOSS_INFRA_VRPU_RD14_CTL_PC_MASK_15_TO_1_Pos 17UL
#define VIDEOSS_INFRA_VRPU_RD14_CTL_PC_MASK_15_TO_1_Msk 0xFFFE0000UL
/* VIDEOSS_INFRA_VRPU.RD15_CTL */
#define VIDEOSS_INFRA_VRPU_RD15_CTL_P_Pos       0UL
#define VIDEOSS_INFRA_VRPU_RD15_CTL_P_Msk       0x1UL
#define VIDEOSS_INFRA_VRPU_RD15_CTL_NS_Pos      1UL
#define VIDEOSS_INFRA_VRPU_RD15_CTL_NS_Msk      0x2UL
#define VIDEOSS_INFRA_VRPU_RD15_CTL_PRIO_Pos    8UL
#define VIDEOSS_INFRA_VRPU_RD15_CTL_PRIO_Msk    0x300UL
#define VIDEOSS_INFRA_VRPU_RD15_CTL_PC_MASK_0_Pos 16UL
#define VIDEOSS_INFRA_VRPU_RD15_CTL_PC_MASK_0_Msk 0x10000UL
#define VIDEOSS_INFRA_VRPU_RD15_CTL_PC_MASK_15_TO_1_Pos 17UL
#define VIDEOSS_INFRA_VRPU_RD15_CTL_PC_MASK_15_TO_1_Msk 0xFFFE0000UL
/* VIDEOSS_INFRA_VRPU.WR0_CTL */
#define VIDEOSS_INFRA_VRPU_WR0_CTL_PRIO_Pos     8UL
#define VIDEOSS_INFRA_VRPU_WR0_CTL_PRIO_Msk     0x300UL
/* VIDEOSS_INFRA_VRPU.WR1_CTL */
#define VIDEOSS_INFRA_VRPU_WR1_CTL_P_Pos        0UL
#define VIDEOSS_INFRA_VRPU_WR1_CTL_P_Msk        0x1UL
#define VIDEOSS_INFRA_VRPU_WR1_CTL_NS_Pos       1UL
#define VIDEOSS_INFRA_VRPU_WR1_CTL_NS_Msk       0x2UL
#define VIDEOSS_INFRA_VRPU_WR1_CTL_PRIO_Pos     8UL
#define VIDEOSS_INFRA_VRPU_WR1_CTL_PRIO_Msk     0x300UL
#define VIDEOSS_INFRA_VRPU_WR1_CTL_PC_MASK_0_Pos 16UL
#define VIDEOSS_INFRA_VRPU_WR1_CTL_PC_MASK_0_Msk 0x10000UL
#define VIDEOSS_INFRA_VRPU_WR1_CTL_PC_MASK_15_TO_1_Pos 17UL
#define VIDEOSS_INFRA_VRPU_WR1_CTL_PC_MASK_15_TO_1_Msk 0xFFFE0000UL
/* VIDEOSS_INFRA_VRPU.WR2_CTL */
#define VIDEOSS_INFRA_VRPU_WR2_CTL_P_Pos        0UL
#define VIDEOSS_INFRA_VRPU_WR2_CTL_P_Msk        0x1UL
#define VIDEOSS_INFRA_VRPU_WR2_CTL_NS_Pos       1UL
#define VIDEOSS_INFRA_VRPU_WR2_CTL_NS_Msk       0x2UL
#define VIDEOSS_INFRA_VRPU_WR2_CTL_PRIO_Pos     8UL
#define VIDEOSS_INFRA_VRPU_WR2_CTL_PRIO_Msk     0x300UL
#define VIDEOSS_INFRA_VRPU_WR2_CTL_PC_MASK_0_Pos 16UL
#define VIDEOSS_INFRA_VRPU_WR2_CTL_PC_MASK_0_Msk 0x10000UL
#define VIDEOSS_INFRA_VRPU_WR2_CTL_PC_MASK_15_TO_1_Pos 17UL
#define VIDEOSS_INFRA_VRPU_WR2_CTL_PC_MASK_15_TO_1_Msk 0xFFFE0000UL
/* VIDEOSS_INFRA_VRPU.WR3_CTL */
#define VIDEOSS_INFRA_VRPU_WR3_CTL_P_Pos        0UL
#define VIDEOSS_INFRA_VRPU_WR3_CTL_P_Msk        0x1UL
#define VIDEOSS_INFRA_VRPU_WR3_CTL_NS_Pos       1UL
#define VIDEOSS_INFRA_VRPU_WR3_CTL_NS_Msk       0x2UL
#define VIDEOSS_INFRA_VRPU_WR3_CTL_PRIO_Pos     8UL
#define VIDEOSS_INFRA_VRPU_WR3_CTL_PRIO_Msk     0x300UL
#define VIDEOSS_INFRA_VRPU_WR3_CTL_PC_MASK_0_Pos 16UL
#define VIDEOSS_INFRA_VRPU_WR3_CTL_PC_MASK_0_Msk 0x10000UL
#define VIDEOSS_INFRA_VRPU_WR3_CTL_PC_MASK_15_TO_1_Pos 17UL
#define VIDEOSS_INFRA_VRPU_WR3_CTL_PC_MASK_15_TO_1_Msk 0xFFFE0000UL
/* VIDEOSS_INFRA_VRPU.WR4_CTL */
#define VIDEOSS_INFRA_VRPU_WR4_CTL_P_Pos        0UL
#define VIDEOSS_INFRA_VRPU_WR4_CTL_P_Msk        0x1UL
#define VIDEOSS_INFRA_VRPU_WR4_CTL_NS_Pos       1UL
#define VIDEOSS_INFRA_VRPU_WR4_CTL_NS_Msk       0x2UL
#define VIDEOSS_INFRA_VRPU_WR4_CTL_PRIO_Pos     8UL
#define VIDEOSS_INFRA_VRPU_WR4_CTL_PRIO_Msk     0x300UL
#define VIDEOSS_INFRA_VRPU_WR4_CTL_PC_MASK_0_Pos 16UL
#define VIDEOSS_INFRA_VRPU_WR4_CTL_PC_MASK_0_Msk 0x10000UL
#define VIDEOSS_INFRA_VRPU_WR4_CTL_PC_MASK_15_TO_1_Pos 17UL
#define VIDEOSS_INFRA_VRPU_WR4_CTL_PC_MASK_15_TO_1_Msk 0xFFFE0000UL
/* VIDEOSS_INFRA_VRPU.WR5_CTL */
#define VIDEOSS_INFRA_VRPU_WR5_CTL_P_Pos        0UL
#define VIDEOSS_INFRA_VRPU_WR5_CTL_P_Msk        0x1UL
#define VIDEOSS_INFRA_VRPU_WR5_CTL_NS_Pos       1UL
#define VIDEOSS_INFRA_VRPU_WR5_CTL_NS_Msk       0x2UL
#define VIDEOSS_INFRA_VRPU_WR5_CTL_PRIO_Pos     8UL
#define VIDEOSS_INFRA_VRPU_WR5_CTL_PRIO_Msk     0x300UL
#define VIDEOSS_INFRA_VRPU_WR5_CTL_PC_MASK_0_Pos 16UL
#define VIDEOSS_INFRA_VRPU_WR5_CTL_PC_MASK_0_Msk 0x10000UL
#define VIDEOSS_INFRA_VRPU_WR5_CTL_PC_MASK_15_TO_1_Pos 17UL
#define VIDEOSS_INFRA_VRPU_WR5_CTL_PC_MASK_15_TO_1_Msk 0xFFFE0000UL
/* VIDEOSS_INFRA_VRPU.WR6_CTL */
#define VIDEOSS_INFRA_VRPU_WR6_CTL_P_Pos        0UL
#define VIDEOSS_INFRA_VRPU_WR6_CTL_P_Msk        0x1UL
#define VIDEOSS_INFRA_VRPU_WR6_CTL_NS_Pos       1UL
#define VIDEOSS_INFRA_VRPU_WR6_CTL_NS_Msk       0x2UL
#define VIDEOSS_INFRA_VRPU_WR6_CTL_PRIO_Pos     8UL
#define VIDEOSS_INFRA_VRPU_WR6_CTL_PRIO_Msk     0x300UL
#define VIDEOSS_INFRA_VRPU_WR6_CTL_PC_MASK_0_Pos 16UL
#define VIDEOSS_INFRA_VRPU_WR6_CTL_PC_MASK_0_Msk 0x10000UL
#define VIDEOSS_INFRA_VRPU_WR6_CTL_PC_MASK_15_TO_1_Pos 17UL
#define VIDEOSS_INFRA_VRPU_WR6_CTL_PC_MASK_15_TO_1_Msk 0xFFFE0000UL
/* VIDEOSS_INFRA_VRPU.WR7_CTL */
#define VIDEOSS_INFRA_VRPU_WR7_CTL_P_Pos        0UL
#define VIDEOSS_INFRA_VRPU_WR7_CTL_P_Msk        0x1UL
#define VIDEOSS_INFRA_VRPU_WR7_CTL_NS_Pos       1UL
#define VIDEOSS_INFRA_VRPU_WR7_CTL_NS_Msk       0x2UL
#define VIDEOSS_INFRA_VRPU_WR7_CTL_PRIO_Pos     8UL
#define VIDEOSS_INFRA_VRPU_WR7_CTL_PRIO_Msk     0x300UL
#define VIDEOSS_INFRA_VRPU_WR7_CTL_PC_MASK_0_Pos 16UL
#define VIDEOSS_INFRA_VRPU_WR7_CTL_PC_MASK_0_Msk 0x10000UL
#define VIDEOSS_INFRA_VRPU_WR7_CTL_PC_MASK_15_TO_1_Pos 17UL
#define VIDEOSS_INFRA_VRPU_WR7_CTL_PC_MASK_15_TO_1_Msk 0xFFFE0000UL
/* VIDEOSS_INFRA_VRPU.WR8_CTL */
#define VIDEOSS_INFRA_VRPU_WR8_CTL_P_Pos        0UL
#define VIDEOSS_INFRA_VRPU_WR8_CTL_P_Msk        0x1UL
#define VIDEOSS_INFRA_VRPU_WR8_CTL_NS_Pos       1UL
#define VIDEOSS_INFRA_VRPU_WR8_CTL_NS_Msk       0x2UL
#define VIDEOSS_INFRA_VRPU_WR8_CTL_PRIO_Pos     8UL
#define VIDEOSS_INFRA_VRPU_WR8_CTL_PRIO_Msk     0x300UL
#define VIDEOSS_INFRA_VRPU_WR8_CTL_PC_MASK_0_Pos 16UL
#define VIDEOSS_INFRA_VRPU_WR8_CTL_PC_MASK_0_Msk 0x10000UL
#define VIDEOSS_INFRA_VRPU_WR8_CTL_PC_MASK_15_TO_1_Pos 17UL
#define VIDEOSS_INFRA_VRPU_WR8_CTL_PC_MASK_15_TO_1_Msk 0xFFFE0000UL
/* VIDEOSS_INFRA_VRPU.WR9_CTL */
#define VIDEOSS_INFRA_VRPU_WR9_CTL_P_Pos        0UL
#define VIDEOSS_INFRA_VRPU_WR9_CTL_P_Msk        0x1UL
#define VIDEOSS_INFRA_VRPU_WR9_CTL_NS_Pos       1UL
#define VIDEOSS_INFRA_VRPU_WR9_CTL_NS_Msk       0x2UL
#define VIDEOSS_INFRA_VRPU_WR9_CTL_PRIO_Pos     8UL
#define VIDEOSS_INFRA_VRPU_WR9_CTL_PRIO_Msk     0x300UL
#define VIDEOSS_INFRA_VRPU_WR9_CTL_PC_MASK_0_Pos 16UL
#define VIDEOSS_INFRA_VRPU_WR9_CTL_PC_MASK_0_Msk 0x10000UL
#define VIDEOSS_INFRA_VRPU_WR9_CTL_PC_MASK_15_TO_1_Pos 17UL
#define VIDEOSS_INFRA_VRPU_WR9_CTL_PC_MASK_15_TO_1_Msk 0xFFFE0000UL
/* VIDEOSS_INFRA_VRPU.WR10_CTL */
#define VIDEOSS_INFRA_VRPU_WR10_CTL_P_Pos       0UL
#define VIDEOSS_INFRA_VRPU_WR10_CTL_P_Msk       0x1UL
#define VIDEOSS_INFRA_VRPU_WR10_CTL_NS_Pos      1UL
#define VIDEOSS_INFRA_VRPU_WR10_CTL_NS_Msk      0x2UL
#define VIDEOSS_INFRA_VRPU_WR10_CTL_PRIO_Pos    8UL
#define VIDEOSS_INFRA_VRPU_WR10_CTL_PRIO_Msk    0x300UL
#define VIDEOSS_INFRA_VRPU_WR10_CTL_PC_MASK_0_Pos 16UL
#define VIDEOSS_INFRA_VRPU_WR10_CTL_PC_MASK_0_Msk 0x10000UL
#define VIDEOSS_INFRA_VRPU_WR10_CTL_PC_MASK_15_TO_1_Pos 17UL
#define VIDEOSS_INFRA_VRPU_WR10_CTL_PC_MASK_15_TO_1_Msk 0xFFFE0000UL
/* VIDEOSS_INFRA_VRPU.WR11_CTL */
#define VIDEOSS_INFRA_VRPU_WR11_CTL_P_Pos       0UL
#define VIDEOSS_INFRA_VRPU_WR11_CTL_P_Msk       0x1UL
#define VIDEOSS_INFRA_VRPU_WR11_CTL_NS_Pos      1UL
#define VIDEOSS_INFRA_VRPU_WR11_CTL_NS_Msk      0x2UL
#define VIDEOSS_INFRA_VRPU_WR11_CTL_PRIO_Pos    8UL
#define VIDEOSS_INFRA_VRPU_WR11_CTL_PRIO_Msk    0x300UL
#define VIDEOSS_INFRA_VRPU_WR11_CTL_PC_MASK_0_Pos 16UL
#define VIDEOSS_INFRA_VRPU_WR11_CTL_PC_MASK_0_Msk 0x10000UL
#define VIDEOSS_INFRA_VRPU_WR11_CTL_PC_MASK_15_TO_1_Pos 17UL
#define VIDEOSS_INFRA_VRPU_WR11_CTL_PC_MASK_15_TO_1_Msk 0xFFFE0000UL
/* VIDEOSS_INFRA_VRPU.WR12_CTL */
#define VIDEOSS_INFRA_VRPU_WR12_CTL_P_Pos       0UL
#define VIDEOSS_INFRA_VRPU_WR12_CTL_P_Msk       0x1UL
#define VIDEOSS_INFRA_VRPU_WR12_CTL_NS_Pos      1UL
#define VIDEOSS_INFRA_VRPU_WR12_CTL_NS_Msk      0x2UL
#define VIDEOSS_INFRA_VRPU_WR12_CTL_PRIO_Pos    8UL
#define VIDEOSS_INFRA_VRPU_WR12_CTL_PRIO_Msk    0x300UL
#define VIDEOSS_INFRA_VRPU_WR12_CTL_PC_MASK_0_Pos 16UL
#define VIDEOSS_INFRA_VRPU_WR12_CTL_PC_MASK_0_Msk 0x10000UL
#define VIDEOSS_INFRA_VRPU_WR12_CTL_PC_MASK_15_TO_1_Pos 17UL
#define VIDEOSS_INFRA_VRPU_WR12_CTL_PC_MASK_15_TO_1_Msk 0xFFFE0000UL
/* VIDEOSS_INFRA_VRPU.WR13_CTL */
#define VIDEOSS_INFRA_VRPU_WR13_CTL_P_Pos       0UL
#define VIDEOSS_INFRA_VRPU_WR13_CTL_P_Msk       0x1UL
#define VIDEOSS_INFRA_VRPU_WR13_CTL_NS_Pos      1UL
#define VIDEOSS_INFRA_VRPU_WR13_CTL_NS_Msk      0x2UL
#define VIDEOSS_INFRA_VRPU_WR13_CTL_PRIO_Pos    8UL
#define VIDEOSS_INFRA_VRPU_WR13_CTL_PRIO_Msk    0x300UL
#define VIDEOSS_INFRA_VRPU_WR13_CTL_PC_MASK_0_Pos 16UL
#define VIDEOSS_INFRA_VRPU_WR13_CTL_PC_MASK_0_Msk 0x10000UL
#define VIDEOSS_INFRA_VRPU_WR13_CTL_PC_MASK_15_TO_1_Pos 17UL
#define VIDEOSS_INFRA_VRPU_WR13_CTL_PC_MASK_15_TO_1_Msk 0xFFFE0000UL
/* VIDEOSS_INFRA_VRPU.WR14_CTL */
#define VIDEOSS_INFRA_VRPU_WR14_CTL_P_Pos       0UL
#define VIDEOSS_INFRA_VRPU_WR14_CTL_P_Msk       0x1UL
#define VIDEOSS_INFRA_VRPU_WR14_CTL_NS_Pos      1UL
#define VIDEOSS_INFRA_VRPU_WR14_CTL_NS_Msk      0x2UL
#define VIDEOSS_INFRA_VRPU_WR14_CTL_PRIO_Pos    8UL
#define VIDEOSS_INFRA_VRPU_WR14_CTL_PRIO_Msk    0x300UL
#define VIDEOSS_INFRA_VRPU_WR14_CTL_PC_MASK_0_Pos 16UL
#define VIDEOSS_INFRA_VRPU_WR14_CTL_PC_MASK_0_Msk 0x10000UL
#define VIDEOSS_INFRA_VRPU_WR14_CTL_PC_MASK_15_TO_1_Pos 17UL
#define VIDEOSS_INFRA_VRPU_WR14_CTL_PC_MASK_15_TO_1_Msk 0xFFFE0000UL
/* VIDEOSS_INFRA_VRPU.WR15_CTL */
#define VIDEOSS_INFRA_VRPU_WR15_CTL_P_Pos       0UL
#define VIDEOSS_INFRA_VRPU_WR15_CTL_P_Msk       0x1UL
#define VIDEOSS_INFRA_VRPU_WR15_CTL_NS_Pos      1UL
#define VIDEOSS_INFRA_VRPU_WR15_CTL_NS_Msk      0x2UL
#define VIDEOSS_INFRA_VRPU_WR15_CTL_PRIO_Pos    8UL
#define VIDEOSS_INFRA_VRPU_WR15_CTL_PRIO_Msk    0x300UL
#define VIDEOSS_INFRA_VRPU_WR15_CTL_PC_MASK_0_Pos 16UL
#define VIDEOSS_INFRA_VRPU_WR15_CTL_PC_MASK_0_Msk 0x10000UL
#define VIDEOSS_INFRA_VRPU_WR15_CTL_PC_MASK_15_TO_1_Pos 17UL
#define VIDEOSS_INFRA_VRPU_WR15_CTL_PC_MASK_15_TO_1_Msk 0xFFFE0000UL


/* VIDEOSS_INFRA_GFX_MPU_RD.RD_CTL */
#define VIDEOSS_INFRA_GFX_MPU_RD_RD_CTL_PC_Pos  0UL
#define VIDEOSS_INFRA_GFX_MPU_RD_RD_CTL_PC_Msk  0xFUL


/* VIDEOSS_INFRA_GFX_MPU_WR.WR_CTL */
#define VIDEOSS_INFRA_GFX_MPU_WR_WR_CTL_PC_Pos  0UL
#define VIDEOSS_INFRA_GFX_MPU_WR_WR_CTL_PC_Msk  0xFUL


#endif /* _CYIP_VIDEOSS_H_ */


/* [] END OF FILE */
